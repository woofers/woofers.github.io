{"version":3,"sources":["webpack:///./node_modules/oast-to-hast/lib/transform.js","webpack:///./node_modules/orga/src/node.js","webpack:///./node_modules/oast-to-hast/node_modules/unist-builder/index.js","webpack:///./node_modules/core-js/modules/es6.string.bold.js","webpack:///./node_modules/orga/src/inline.js","webpack:///./node_modules/hast-util-to-html/node_modules/unist-util-is/convert.js","webpack:///./node_modules/hast-util-to-html/lib/omission/util/siblings.js","webpack:///./node_modules/orga/src/defaults.js","webpack:///./node_modules/hast-util-is-element/index.js","webpack:///./node_modules/hast-util-whitespace/index.js","webpack:///./node_modules/hast-util-to-html/lib/omission/util/white-space-left.js","webpack:///./node_modules/hast-util-to-html/lib/omission/closing.js","webpack:///./node_modules/hast-util-to-html/lib/omission/omission.js","webpack:///./node_modules/hast-util-to-html/lib/one.js","webpack:///./node_modules/hast-util-to-html/lib/all.js","webpack:///./node_modules/hast-util-to-html/lib/text.js","webpack:///./node_modules/hast-util-to-html/node_modules/stringify-entities/index.js","webpack:///./node_modules/oast-to-hast/lib/index.js","webpack:///./node_modules/oast-to-hast/lib/handlers/index.js","webpack:///./node_modules/oast-to-hast/lib/handlers/root.js","webpack:///./node_modules/oast-to-hast/lib/handlers/section.js","webpack:///./node_modules/oast-to-hast/lib/handlers/headline.js","webpack:///./node_modules/oast-to-hast/lib/handlers/block.js","webpack:///./node_modules/oast-to-hast/lib/handlers/_highlight.js","webpack:///./node_modules/oast-to-hast/lib/handlers/_load-prism-language.js","webpack:///./node_modules/oast-to-hast/lib/prism-language-dependencies.js","webpack:///./node_modules/prismjs/components/prism-abap.js","webpack:///./node_modules/prismjs/components/prism-abap.min.js","webpack:///./node_modules/prismjs/components/prism-abnf.js","webpack:///./node_modules/prismjs/components/prism-abnf.min.js","webpack:///./node_modules/prismjs/components/prism-actionscript.js","webpack:///./node_modules/prismjs/components/prism-actionscript.min.js","webpack:///./node_modules/prismjs/components/prism-ada.js","webpack:///./node_modules/prismjs/components/prism-ada.min.js","webpack:///./node_modules/prismjs/components/prism-apacheconf.js","webpack:///./node_modules/prismjs/components/prism-apacheconf.min.js","webpack:///./node_modules/prismjs/components/prism-apl.js","webpack:///./node_modules/prismjs/components/prism-apl.min.js","webpack:///./node_modules/prismjs/components/prism-applescript.js","webpack:///./node_modules/prismjs/components/prism-applescript.min.js","webpack:///./node_modules/prismjs/components/prism-arduino.js","webpack:///./node_modules/prismjs/components/prism-arduino.min.js","webpack:///./node_modules/prismjs/components/prism-arff.js","webpack:///./node_modules/prismjs/components/prism-arff.min.js","webpack:///./node_modules/prismjs/components/prism-asciidoc.js","webpack:///./node_modules/prismjs/components/prism-asciidoc.min.js","webpack:///./node_modules/prismjs/components/prism-asm6502.js","webpack:///./node_modules/prismjs/components/prism-asm6502.min.js","webpack:///./node_modules/prismjs/components/prism-aspnet.js","webpack:///./node_modules/prismjs/components/prism-aspnet.min.js","webpack:///./node_modules/prismjs/components/prism-autohotkey.js","webpack:///./node_modules/prismjs/components/prism-autohotkey.min.js","webpack:///./node_modules/prismjs/components/prism-autoit.js","webpack:///./node_modules/prismjs/components/prism-autoit.min.js","webpack:///./node_modules/prismjs/components/prism-bash.js","webpack:///./node_modules/prismjs/components/prism-bash.min.js","webpack:///./node_modules/prismjs/components/prism-basic.js","webpack:///./node_modules/prismjs/components/prism-basic.min.js","webpack:///./node_modules/prismjs/components/prism-batch.js","webpack:///./node_modules/prismjs/components/prism-batch.min.js","webpack:///./node_modules/prismjs/components/prism-bison.js","webpack:///./node_modules/prismjs/components/prism-bison.min.js","webpack:///./node_modules/prismjs/components/prism-bnf.js","webpack:///./node_modules/prismjs/components/prism-bnf.min.js","webpack:///./node_modules/prismjs/components/prism-brainfuck.js","webpack:///./node_modules/prismjs/components/prism-brainfuck.min.js","webpack:///./node_modules/prismjs/components/prism-bro.js","webpack:///./node_modules/prismjs/components/prism-bro.min.js","webpack:///./node_modules/prismjs/components/prism-c.js","webpack:///./node_modules/prismjs/components/prism-c.min.js","webpack:///./node_modules/prismjs/components/prism-cil.js","webpack:///./node_modules/prismjs/components/prism-cil.min.js","webpack:///./node_modules/prismjs/components/prism-clike.js","webpack:///./node_modules/prismjs/components/prism-clike.min.js","webpack:///./node_modules/prismjs/components/prism-clojure.js","webpack:///./node_modules/prismjs/components/prism-clojure.min.js","webpack:///./node_modules/prismjs/components/prism-cmake.js","webpack:///./node_modules/prismjs/components/prism-cmake.min.js","webpack:///./node_modules/prismjs/components/prism-coffeescript.js","webpack:///./node_modules/prismjs/components/prism-coffeescript.min.js","webpack:///./node_modules/prismjs/components/prism-core.js","webpack:///./node_modules/prismjs/components/prism-core.min.js","webpack:///./node_modules/prismjs/components/prism-cpp.js","webpack:///./node_modules/prismjs/components/prism-cpp.min.js","webpack:///./node_modules/prismjs/components/prism-crystal.js","webpack:///./node_modules/prismjs/components/prism-crystal.min.js","webpack:///./node_modules/prismjs/components/prism-csharp.js","webpack:///./node_modules/prismjs/components/prism-csharp.min.js","webpack:///./node_modules/prismjs/components/prism-csp.js","webpack:///./node_modules/prismjs/components/prism-csp.min.js","webpack:///./node_modules/prismjs/components/prism-css-extras.js","webpack:///./node_modules/prismjs/components/prism-css-extras.min.js","webpack:///./node_modules/prismjs/components/prism-css.js","webpack:///./node_modules/prismjs/components/prism-css.min.js","webpack:///./node_modules/prismjs/components/prism-d.js","webpack:///./node_modules/prismjs/components/prism-d.min.js","webpack:///./node_modules/prismjs/components/prism-dart.js","webpack:///./node_modules/prismjs/components/prism-dart.min.js","webpack:///./node_modules/prismjs/components/prism-diff.js","webpack:///./node_modules/prismjs/components/prism-diff.min.js","webpack:///./node_modules/prismjs/components/prism-django.js","webpack:///./node_modules/prismjs/components/prism-django.min.js","webpack:///./node_modules/prismjs/components/prism-docker.js","webpack:///./node_modules/prismjs/components/prism-docker.min.js","webpack:///./node_modules/prismjs/components/prism-ebnf.js","webpack:///./node_modules/prismjs/components/prism-ebnf.min.js","webpack:///./node_modules/prismjs/components/prism-eiffel.js","webpack:///./node_modules/prismjs/components/prism-eiffel.min.js","webpack:///./node_modules/prismjs/components/prism-ejs.js","webpack:///./node_modules/prismjs/components/prism-ejs.min.js","webpack:///./node_modules/prismjs/components/prism-elixir.js","webpack:///./node_modules/prismjs/components/prism-elixir.min.js","webpack:///./node_modules/prismjs/components/prism-elm.js","webpack:///./node_modules/prismjs/components/prism-elm.min.js","webpack:///./node_modules/prismjs/components/prism-erb.js","webpack:///./node_modules/prismjs/components/prism-erb.min.js","webpack:///./node_modules/prismjs/components/prism-erlang.js","webpack:///./node_modules/prismjs/components/prism-erlang.min.js","webpack:///./node_modules/prismjs/components/prism-flow.js","webpack:///./node_modules/prismjs/components/prism-flow.min.js","webpack:///./node_modules/prismjs/components/prism-fortran.js","webpack:///./node_modules/prismjs/components/prism-fortran.min.js","webpack:///./node_modules/prismjs/components/prism-fsharp.js","webpack:///./node_modules/prismjs/components/prism-fsharp.min.js","webpack:///./node_modules/prismjs/components/prism-gcode.js","webpack:///./node_modules/prismjs/components/prism-gcode.min.js","webpack:///./node_modules/prismjs/components/prism-gedcom.js","webpack:///./node_modules/prismjs/components/prism-gedcom.min.js","webpack:///./node_modules/prismjs/components/prism-gherkin.js","webpack:///./node_modules/prismjs/components/prism-gherkin.min.js","webpack:///./node_modules/prismjs/components/prism-git.js","webpack:///./node_modules/prismjs/components/prism-git.min.js","webpack:///./node_modules/prismjs/components/prism-glsl.js","webpack:///./node_modules/prismjs/components/prism-glsl.min.js","webpack:///./node_modules/prismjs/components/prism-gml.js","webpack:///./node_modules/prismjs/components/prism-gml.min.js","webpack:///./node_modules/prismjs/components/prism-go.js","webpack:///./node_modules/prismjs/components/prism-go.min.js","webpack:///./node_modules/prismjs/components/prism-graphql.js","webpack:///./node_modules/prismjs/components/prism-graphql.min.js","webpack:///./node_modules/prismjs/components/prism-groovy.js","webpack:///./node_modules/prismjs/components/prism-groovy.min.js","webpack:///./node_modules/prismjs/components/prism-haml.js","webpack:///./node_modules/prismjs/components/prism-haml.min.js","webpack:///./node_modules/prismjs/components/prism-handlebars.js","webpack:///./node_modules/prismjs/components/prism-handlebars.min.js","webpack:///./node_modules/prismjs/components/prism-haskell.js","webpack:///./node_modules/prismjs/components/prism-haskell.min.js","webpack:///./node_modules/prismjs/components/prism-haxe.js","webpack:///./node_modules/prismjs/components/prism-haxe.min.js","webpack:///./node_modules/prismjs/components/prism-hcl.js","webpack:///./node_modules/prismjs/components/prism-hcl.min.js","webpack:///./node_modules/prismjs/components/prism-hpkp.js","webpack:///./node_modules/prismjs/components/prism-hpkp.min.js","webpack:///./node_modules/prismjs/components/prism-hsts.js","webpack:///./node_modules/prismjs/components/prism-hsts.min.js","webpack:///./node_modules/prismjs/components/prism-http.js","webpack:///./node_modules/prismjs/components/prism-http.min.js","webpack:///./node_modules/prismjs/components/prism-ichigojam.js","webpack:///./node_modules/prismjs/components/prism-ichigojam.min.js","webpack:///./node_modules/prismjs/components/prism-icon.js","webpack:///./node_modules/prismjs/components/prism-icon.min.js","webpack:///./node_modules/prismjs/components/prism-inform7.js","webpack:///./node_modules/prismjs/components/prism-inform7.min.js","webpack:///./node_modules/prismjs/components/prism-ini.js","webpack:///./node_modules/prismjs/components/prism-ini.min.js","webpack:///./node_modules/prismjs/components/prism-io.js","webpack:///./node_modules/prismjs/components/prism-io.min.js","webpack:///./node_modules/prismjs/components/prism-j.js","webpack:///./node_modules/prismjs/components/prism-j.min.js","webpack:///./node_modules/prismjs/components/prism-java.js","webpack:///./node_modules/prismjs/components/prism-java.min.js","webpack:///./node_modules/prismjs/components/prism-javadoc.js","webpack:///./node_modules/prismjs/components/prism-javadoc.min.js","webpack:///./node_modules/prismjs/components/prism-javadoclike.js","webpack:///./node_modules/prismjs/components/prism-javadoclike.min.js","webpack:///./node_modules/prismjs/components/prism-javascript.js","webpack:///./node_modules/prismjs/components/prism-javascript.min.js","webpack:///./node_modules/prismjs/components/prism-javastacktrace.js","webpack:///./node_modules/prismjs/components/prism-javastacktrace.min.js","webpack:///./node_modules/prismjs/components/prism-jolie.js","webpack:///./node_modules/prismjs/components/prism-jolie.min.js","webpack:///./node_modules/prismjs/components/prism-js-extras.js","webpack:///./node_modules/prismjs/components/prism-js-extras.min.js","webpack:///./node_modules/prismjs/components/prism-jsdoc.js","webpack:///./node_modules/prismjs/components/prism-jsdoc.min.js","webpack:///./node_modules/prismjs/components/prism-json.js","webpack:///./node_modules/prismjs/components/prism-json.min.js","webpack:///./node_modules/prismjs/components/prism-json5.js","webpack:///./node_modules/prismjs/components/prism-json5.min.js","webpack:///./node_modules/prismjs/components/prism-jsonp.js","webpack:///./node_modules/prismjs/components/prism-jsonp.min.js","webpack:///./node_modules/prismjs/components/prism-jsx.min.js","webpack:///./node_modules/prismjs/components/prism-julia.js","webpack:///./node_modules/prismjs/components/prism-julia.min.js","webpack:///./node_modules/prismjs/components/prism-keyman.js","webpack:///./node_modules/prismjs/components/prism-keyman.min.js","webpack:///./node_modules/prismjs/components/prism-kotlin.js","webpack:///./node_modules/prismjs/components/prism-kotlin.min.js","webpack:///./node_modules/prismjs/components/prism-latex.js","webpack:///./node_modules/prismjs/components/prism-latex.min.js","webpack:///./node_modules/prismjs/components/prism-less.js","webpack:///./node_modules/prismjs/components/prism-less.min.js","webpack:///./node_modules/prismjs/components/prism-liquid.js","webpack:///./node_modules/prismjs/components/prism-liquid.min.js","webpack:///./node_modules/prismjs/components/prism-lisp.js","webpack:///./node_modules/prismjs/components/prism-lisp.min.js","webpack:///./node_modules/prismjs/components/prism-livescript.js","webpack:///./node_modules/prismjs/components/prism-livescript.min.js","webpack:///./node_modules/prismjs/components/prism-lolcode.js","webpack:///./node_modules/prismjs/components/prism-lolcode.min.js","webpack:///./node_modules/prismjs/components/prism-lua.js","webpack:///./node_modules/prismjs/components/prism-lua.min.js","webpack:///./node_modules/prismjs/components/prism-makefile.js","webpack:///./node_modules/prismjs/components/prism-makefile.min.js","webpack:///./node_modules/prismjs/components/prism-markdown.js","webpack:///./node_modules/prismjs/components/prism-markdown.min.js","webpack:///./node_modules/prismjs/components/prism-markup-templating.js","webpack:///./node_modules/prismjs/components/prism-markup-templating.min.js","webpack:///./node_modules/prismjs/components/prism-markup.js","webpack:///./node_modules/prismjs/components/prism-markup.min.js","webpack:///./node_modules/prismjs/components/prism-matlab.js","webpack:///./node_modules/prismjs/components/prism-matlab.min.js","webpack:///./node_modules/prismjs/components/prism-mel.js","webpack:///./node_modules/prismjs/components/prism-mel.min.js","webpack:///./node_modules/prismjs/components/prism-mizar.js","webpack:///./node_modules/prismjs/components/prism-mizar.min.js","webpack:///./node_modules/prismjs/components/prism-monkey.js","webpack:///./node_modules/prismjs/components/prism-monkey.min.js","webpack:///./node_modules/prismjs/components/prism-n1ql.js","webpack:///./node_modules/prismjs/components/prism-n1ql.min.js","webpack:///./node_modules/prismjs/components/prism-n4js.js","webpack:///./node_modules/prismjs/components/prism-n4js.min.js","webpack:///./node_modules/prismjs/components/prism-nand2tetris-hdl.js","webpack:///./node_modules/prismjs/components/prism-nand2tetris-hdl.min.js","webpack:///./node_modules/prismjs/components/prism-nasm.js","webpack:///./node_modules/prismjs/components/prism-nasm.min.js","webpack:///./node_modules/prismjs/components/prism-nginx.js","webpack:///./node_modules/prismjs/components/prism-nginx.min.js","webpack:///./node_modules/prismjs/components/prism-nim.js","webpack:///./node_modules/prismjs/components/prism-nim.min.js","webpack:///./node_modules/prismjs/components/prism-nix.js","webpack:///./node_modules/prismjs/components/prism-nix.min.js","webpack:///./node_modules/prismjs/components/prism-nsis.js","webpack:///./node_modules/prismjs/components/prism-nsis.min.js","webpack:///./node_modules/prismjs/components/prism-objectivec.js","webpack:///./node_modules/prismjs/components/prism-objectivec.min.js","webpack:///./node_modules/prismjs/components/prism-ocaml.js","webpack:///./node_modules/prismjs/components/prism-ocaml.min.js","webpack:///./node_modules/prismjs/components/prism-opencl.js","webpack:///./node_modules/prismjs/components/prism-opencl.min.js","webpack:///./node_modules/prismjs/components/prism-oz.js","webpack:///./node_modules/prismjs/components/prism-oz.min.js","webpack:///./node_modules/prismjs/components/prism-parigp.js","webpack:///./node_modules/prismjs/components/prism-parigp.min.js","webpack:///./node_modules/prismjs/components/prism-parser.js","webpack:///./node_modules/prismjs/components/prism-parser.min.js","webpack:///./node_modules/prismjs/components/prism-pascal.js","webpack:///./node_modules/prismjs/components/prism-pascal.min.js","webpack:///./node_modules/prismjs/components/prism-perl.js","webpack:///./node_modules/prismjs/components/prism-perl.min.js","webpack:///./node_modules/prismjs/components/prism-php-extras.js","webpack:///./node_modules/prismjs/components/prism-php-extras.min.js","webpack:///./node_modules/prismjs/components/prism-php.js","webpack:///./node_modules/prismjs/components/prism-php.min.js","webpack:///./node_modules/prismjs/components/prism-phpdoc.js","webpack:///./node_modules/prismjs/components/prism-phpdoc.min.js","webpack:///./node_modules/prismjs/components/prism-plsql.js","webpack:///./node_modules/prismjs/components/prism-plsql.min.js","webpack:///./node_modules/prismjs/components/prism-powershell.js","webpack:///./node_modules/prismjs/components/prism-powershell.min.js","webpack:///./node_modules/prismjs/components/prism-processing.js","webpack:///./node_modules/prismjs/components/prism-processing.min.js","webpack:///./node_modules/prismjs/components/prism-prolog.js","webpack:///./node_modules/prismjs/components/prism-prolog.min.js","webpack:///./node_modules/prismjs/components/prism-properties.js","webpack:///./node_modules/prismjs/components/prism-properties.min.js","webpack:///./node_modules/prismjs/components/prism-protobuf.js","webpack:///./node_modules/prismjs/components/prism-protobuf.min.js","webpack:///./node_modules/prismjs/components/prism-pug.js","webpack:///./node_modules/prismjs/components/prism-pug.min.js","webpack:///./node_modules/prismjs/components/prism-puppet.js","webpack:///./node_modules/prismjs/components/prism-puppet.min.js","webpack:///./node_modules/prismjs/components/prism-pure.js","webpack:///./node_modules/prismjs/components/prism-pure.min.js","webpack:///./node_modules/prismjs/components/prism-python.js","webpack:///./node_modules/prismjs/components/prism-python.min.js","webpack:///./node_modules/prismjs/components/prism-q.js","webpack:///./node_modules/prismjs/components/prism-q.min.js","webpack:///./node_modules/prismjs/components/prism-qore.js","webpack:///./node_modules/prismjs/components/prism-qore.min.js","webpack:///./node_modules/prismjs/components/prism-r.js","webpack:///./node_modules/prismjs/components/prism-r.min.js","webpack:///./node_modules/prismjs/components/prism-reason.js","webpack:///./node_modules/prismjs/components/prism-reason.min.js","webpack:///./node_modules/prismjs/components/prism-regex.js","webpack:///./node_modules/prismjs/components/prism-regex.min.js","webpack:///./node_modules/prismjs/components/prism-renpy.js","webpack:///./node_modules/prismjs/components/prism-renpy.min.js","webpack:///./node_modules/prismjs/components/prism-rest.js","webpack:///./node_modules/prismjs/components/prism-rest.min.js","webpack:///./node_modules/prismjs/components/prism-rip.js","webpack:///./node_modules/prismjs/components/prism-rip.min.js","webpack:///./node_modules/prismjs/components/prism-roboconf.js","webpack:///./node_modules/prismjs/components/prism-roboconf.min.js","webpack:///./node_modules/prismjs/components/prism-ruby.js","webpack:///./node_modules/prismjs/components/prism-ruby.min.js","webpack:///./node_modules/prismjs/components/prism-rust.js","webpack:///./node_modules/prismjs/components/prism-rust.min.js","webpack:///./node_modules/prismjs/components/prism-sas.js","webpack:///./node_modules/prismjs/components/prism-sas.min.js","webpack:///./node_modules/prismjs/components/prism-sass.js","webpack:///./node_modules/prismjs/components/prism-sass.min.js","webpack:///./node_modules/prismjs/components/prism-scala.js","webpack:///./node_modules/prismjs/components/prism-scala.min.js","webpack:///./node_modules/prismjs/components/prism-scheme.js","webpack:///./node_modules/prismjs/components/prism-scheme.min.js","webpack:///./node_modules/prismjs/components/prism-scss.js","webpack:///./node_modules/prismjs/components/prism-scss.min.js","webpack:///./node_modules/prismjs/components/prism-smalltalk.js","webpack:///./node_modules/prismjs/components/prism-smalltalk.min.js","webpack:///./node_modules/prismjs/components/prism-smarty.js","webpack:///./node_modules/prismjs/components/prism-smarty.min.js","webpack:///./node_modules/prismjs/components/prism-soy.js","webpack:///./node_modules/prismjs/components/prism-soy.min.js","webpack:///./node_modules/prismjs/components/prism-sql.js","webpack:///./node_modules/prismjs/components/prism-sql.min.js","webpack:///./node_modules/prismjs/components/prism-stylus.js","webpack:///./node_modules/prismjs/components/prism-stylus.min.js","webpack:///./node_modules/prismjs/components/prism-swift.js","webpack:///./node_modules/prismjs/components/prism-swift.min.js","webpack:///./node_modules/prismjs/components/prism-t4-cs.js","webpack:///./node_modules/prismjs/components/prism-t4-cs.min.js","webpack:///./node_modules/prismjs/components/prism-t4-templating.js","webpack:///./node_modules/prismjs/components/prism-t4-templating.min.js","webpack:///./node_modules/prismjs/components/prism-t4-vb.js","webpack:///./node_modules/prismjs/components/prism-t4-vb.min.js","webpack:///./node_modules/prismjs/components/prism-tap.js","webpack:///./node_modules/prismjs/components/prism-tap.min.js","webpack:///./node_modules/prismjs/components/prism-tcl.js","webpack:///./node_modules/prismjs/components/prism-tcl.min.js","webpack:///./node_modules/prismjs/components/prism-textile.js","webpack:///./node_modules/prismjs/components/prism-textile.min.js","webpack:///./node_modules/prismjs/components/prism-toml.js","webpack:///./node_modules/prismjs/components/prism-toml.min.js","webpack:///./node_modules/prismjs/components/prism-tsx.js","webpack:///./node_modules/prismjs/components/prism-tsx.min.js","webpack:///./node_modules/prismjs/components/prism-tt2.js","webpack:///./node_modules/prismjs/components/prism-tt2.min.js","webpack:///./node_modules/prismjs/components/prism-twig.js","webpack:///./node_modules/prismjs/components/prism-twig.min.js","webpack:///./node_modules/prismjs/components/prism-typescript.js","webpack:///./node_modules/prismjs/components/prism-typescript.min.js","webpack:///./node_modules/prismjs/components/prism-vala.js","webpack:///./node_modules/prismjs/components/prism-vala.min.js","webpack:///./node_modules/prismjs/components/prism-vbnet.js","webpack:///./node_modules/prismjs/components/prism-vbnet.min.js","webpack:///./node_modules/prismjs/components/prism-velocity.js","webpack:///./node_modules/prismjs/components/prism-velocity.min.js","webpack:///./node_modules/prismjs/components/prism-verilog.js","webpack:///./node_modules/prismjs/components/prism-verilog.min.js","webpack:///./node_modules/prismjs/components/prism-vhdl.js","webpack:///./node_modules/prismjs/components/prism-vhdl.min.js","webpack:///./node_modules/prismjs/components/prism-vim.js","webpack:///./node_modules/prismjs/components/prism-vim.min.js","webpack:///./node_modules/prismjs/components/prism-visual-basic.js","webpack:///./node_modules/prismjs/components/prism-visual-basic.min.js","webpack:///./node_modules/prismjs/components/prism-wasm.js","webpack:///./node_modules/prismjs/components/prism-wasm.min.js","webpack:///./node_modules/prismjs/components/prism-wiki.js","webpack:///./node_modules/prismjs/components/prism-wiki.min.js","webpack:///./node_modules/prismjs/components/prism-xeora.js","webpack:///./node_modules/prismjs/components/prism-xeora.min.js","webpack:///./node_modules/prismjs/components/prism-xojo.js","webpack:///./node_modules/prismjs/components/prism-xojo.min.js","webpack:///./node_modules/prismjs/components/prism-xquery.js","webpack:///./node_modules/prismjs/components/prism-xquery.min.js","webpack:///./node_modules/prismjs/components/prism-yaml.js","webpack:///./node_modules/prismjs/components/prism-yaml.min.js","webpack:///./node_modules/oast-to-hast/lib/handlers/link.js","webpack:///./node_modules/oast-to-hast/node_modules/mime/index.js","webpack:///./node_modules/oast-to-hast/node_modules/mime/Mime.js","webpack:///./node_modules/oast-to-hast/lib/handlers/emphasis.js","webpack:///./node_modules/oast-to-hast/lib/handlers/list.js","webpack:///./node_modules/oast-to-hast/lib/handlers/listItem.js","webpack:///./node_modules/oast-to-hast/lib/handlers/table.js","webpack:///./node_modules/oast-to-hast/lib/handlers/horizontal-rule.js","webpack:///./node_modules/oast-to-hast/lib/handlers/html.js","webpack:///./node_modules/oast-to-hast/lib/handlers/paragraph.js","webpack:///./node_modules/oast-to-hast/lib/handlers/footnote.js","webpack:///./node_modules/hast-util-to-html/index.js","webpack:///./node_modules/hast-util-to-html/lib/index.js","webpack:///./node_modules/hast-util-to-html/lib/omission/index.js","webpack:///./node_modules/hast-util-to-html/lib/omission/opening.js","webpack:///./node_modules/hast-util-to-html/lib/omission/util/first.js","webpack:///./node_modules/hast-util-to-html/lib/omission/util/place.js","webpack:///./node_modules/hast-util-to-html/node_modules/is-decimal/index.js","webpack:///./node_modules/hast-util-to-html/lib/element.js","webpack:///./node_modules/comma-separated-tokens/index.js","webpack:///./node_modules/hast-util-to-html/lib/constants.js","webpack:///./node_modules/hast-util-to-html/lib/doctype.js","webpack:///./node_modules/hast-util-to-html/lib/comment.js","webpack:///./node_modules/hast-util-to-html/lib/raw.js","webpack:///./node_modules/orga/src/index.js","webpack:///./node_modules/orga/src/parser.js","webpack:///./node_modules/orga/src/lexer.js","webpack:///./node_modules/core-js/modules/es6.array.find-index.js","webpack:///./node_modules/orga/src/utils.js","webpack:///./node_modules/orga/src/processors/index.js","webpack:///./node_modules/orga/src/processors/keyword.js","webpack:///./node_modules/orga/src/processors/headline.js","webpack:///./node_modules/orga/src/uri.js","webpack:///./node_modules/orga/src/processors/line.js","webpack:///./node_modules/orga/src/processors/block.js","webpack:///./node_modules/orga/src/processors/list.js","webpack:///./node_modules/orga/src/processors/table.js","webpack:///./node_modules/orga/src/processors/horizontal-rule.js","webpack:///./node_modules/orga/src/processors/footnote.js","webpack:///./node_modules/orga/src/processors/blank.js"],"names":["obj","_unistBuilder","__webpack_require__","__esModule","default","transform","h","node","parent","type","fn","handlers","hasOwnProperty","Error","data","text","value","all","result","nodes","children","length","values","index","concat","module","exports","Node","this","push","prototype","with","Object","assign","Array","isArray","_iterator","_isArray","_i","Symbol","iterator","_ref","next","done","n","newNode","props","String","createHTML","uri","LINK_PATTERN","FOOTNOTE_PATTERN","PRE","POST","BORDER","_parse","pattern","post","m","exec","shift","before","after","pop","reduce","parse","captures","desc","label","_loop","_markups$_i","_markups","name","marker","RegExp","markup","convert","test","Boolean","typeFactory","ok","tests","checks","results","convertAll","apply","arguments","key","whiteSpace","siblings","increment","includeWhiteSpace","todos","tagNames","tagName","indexOf","replace","re","isText","charAt","element","whiteSpaceLeft","omission","isComment","optionGroup","options","dataListItem","listItem","menuContent","ruby","tableContainer","tableRow","tableCell","confusingParagraphParent","clearParagraphSibling","headOrColgroupOrCaption","rubyElement","cells","html","head","body","p","li","dt","dd","rt","rp","optgroup","option","menuitem","colgroup","caption","thead","tbody","tfoot","tr","td","th","own","call","ctx","root","doctype","comment","raw","one","join","xtend","entities","isLiteral","subset","legacy","hexadecimal","decimal","alphanumerical","dangerous","encode","escape","escapeOnly","useNamedReferences","characters","chars","construct","defaultEscapes","toExpression","surrogatePair","bmp","settings","set","omit","omitOptionalSemicolons","pair","pos","val","toHexReference","charCodeAt","char","named","code","numeric","shortest","useShortestReferences","attribute","toNamed","toDecimalReference","toString","toUpperCase","_handlers","_transform","_typeof","constructor","properties","tree","meta","footnoteSection","eTags","exclude_tags","excludeTags","split","sTags","select_tags","selectTags","highlight","_root","_interopRequireDefault","_section","_headline","_block","_link","_emphasis","_list","_listItem","_table","_horizontalRule","_html","_paragraph","_footnote","section","headline","paragraph","block","link","bold","italic","underline","verbatim","strikeThrough","list","list.item","table","table.row","table.cell","horizontalRule","footnote.definition","definition","footnote.reference","reference","drawer","defineProperty","match","left","right","some","e","includes","tags","shouldExclude","find","className","level","_highlight","lang","params","toLowerCase","highlighted","src","quote","center","_prismjs","_loadPrismLanguage","language","languages","_prismLanguageDependencies","_default","loadPrismLanguage","languageData","require","forEach","path","noCSS","examplesPath","addCheckAll","title","aliasTitles","xml","svg","mathml","css","clike","javascript","abap","owner","actionscript","ada","apacheconf","apl","applescript","arduino","asciidoc","asm6502","aspnet","autohotkey","autoit","bash","basic","batch","bison","brainfuck","bro","c","csharp","cpp","coffeescript","crystal","csp","css-extras","d","dart","diff","django","docker","eiffel","elixir","elm","erlang","fsharp","flow","fortran","gherkin","git","glsl","go","graphql","groovy","haml","handlebars","haskell","haxe","http","hpkp","hsts","ichigojam","icon","inform7","ini","io","j","java","jolie","json","julia","keyman","kotlin","latex","less","livescript","lolcode","lua","makefile","markdown","matlab","mel","mizar","monkey","n4js","nasm","nginx","nim","nix","nsis","objectivec","ocaml","opencl","oz","parigp","parser","pascal","perl","php","php-extras","powershell","processing","prolog","protobuf","pug","puppet","pure","python","q","qore","r","jsx","tsx","renpy","reason","rest","rip","roboconf","rust","sas","sass","scss","scala","scheme","smalltalk","smarty","sql","stylus","swift","tcl","textile","twig","typescript","vbnet","verilog","vhdl","vim","wiki","xeora","xojo","yaml","Prism","string","string-template","lookbehind","alias","eol-comment","keyword","number","operator","string-operator","token-operator","punctuation","coreRules","abnf","greedy","inside","range","terminal","repetition","core-rule","rule","i","extend","insertBefore","attr-name","boolean","variable","directive-inline","directive-block","directive-block-parameter","directive-flags","regex","statement","system-function","constant","function","monadic-operator","dyadic-operator","assignment","dfn","class","builtin","arff","attributes","quoted","interpreted","attr-value","comment-block","specifiers","passthrough-block","literal-block","other-block","list-punctuation","list-label","indented-block","attribute-entry","hr","page-break","admonition","callout","macro","inline","url","attribute-ref","replacement","entity","line-continuation","copyFromAsciiDoc","keys","o","l","hooks","add","env","content","adoc","t","a","directive","opcode","hexnumber","binarynumber","decimalnumber","register","page-directive tag","tag","directive tag","asp comment","asp script","selector","symbol","important","insideString","shebang","shell","parameter","command","delimiter","bison-variable","property","bnf","rbnf","pointer","decrement","branching","class-name","cil","clojure","cmake","interpolation","namespace","inserted","class-member","multiline-comment","block-regex","inline-javascript","multiline-string","coffee","global","_self","uniqueId","_","manual","disableWorkerMessageHandler","util","tokens","Token","map","slice","objId","clone","deepClone","visited","id","v","redef","insert","grammar","ret","token","newToken","old","DFS","callback","propertyType","plugins","highlightAll","async","highlightAllUnder","document","container","run","elements","querySelectorAll","highlightElement","parentNode","nodeName","textContent","insertHighlightedCode","highlightedCode","innerHTML","Worker","worker","filename","onmessage","evt","postMessage","JSON","stringify","immediateClose","tokenize","matchGrammar","strarr","startPos","oneshot","target","patterns","lookbehindLength","flags","source","str","lastIndex","from","to","k","len","delNum","args","wrapped","splice","callbacks","matchedStr","classes","aliases","addEventListener","message","close","script","currentScript","getElementsByTagName","hasAttribute","readyState","window","requestAnimationFrame","setTimeout","WorkerGlobalScope","self","g","C","M","__id","s","u","f","y","x","b","w","A","P","O","N","S","E","raw-string","expansion","generic-method","preprocessor","dotnet","safe","unsafe","pseudo-element","pseudo-class","case-sensitivity","n-th","hexcode","unit","atrule","addInlined","style-attr","token-string","metadata","coord","deleted","filter","markupTemplating","buildPlaceholders","tokenizePlaceholders","jinja2","dockerfile","ebnf","special","ejs","language-javascript","atom","capture","argument","import_statement","hvariable","erb","quoted-function","quoted-atom","flow-punctuation","unshift","quoted-number","computation-expression","annotation","annotation-content","gcode","checksum","gedcom","line-value","pystring","feature","scenario","table-body","outline","table-head","commit_sha1","gamemakerlanguage","gml","fragment","spock-block","expression","multiline-code","filter-name","filters","all_filters","brackets","hs","reification","hcl","heredoc","request-line","response-status","header-name","langs","httpLanguages","application/javascript","application/json","application/xml","text/xml","text/html","text/css","suffixTypes","getSuffixPattern","contentType","suffix","T","builtin-keyword","substitution","verb","position","triple-quoted-string","adverb","conjunction","keywords","generics","codeLines","javadoc","code-section","javadoclike","addSupport","javaDocLike","docLanguage","doc-comment","docCommentSupport","function-variable","template-string","interpolation-punctuation","js","javastacktrace","summary","exceptions","stack-frame","file","line-number","more","aggregates","withExtension","redirects","method-variable","method","known-class-name","spread","arrow","property-access","maybe-class-name","dom","console","maybeClassNameTokens","parameterPrefix","jsdoc","optional-parameter","example","null","json5","jsonp","script-punctuation","openedBraces","funcPattern","insideEqu","equation-command","cdata","equation","mixin-usage","liquid","simple_form","primitive","par","heading","quoted-symbol","lisp-property","declare","interactive","defvar","defun","lambda","car","arg","lisp-marker","varform","forms","arglist","rest-vars","other-marker-vars","sublist","lisp","elisp","emacs","interpolated-string","keyword-operator","identifier","blockquote","code-block","code-language","url-reference","strike","walkTokens","codeLang","codeBlock","trim","cls","md","getPlaceholder","defineProperties","placeholderPattern","replaceFilter","tokenStack","placeholder","substring","middle","includedCdataInside","included-cdata","def","flag","type-char","n1ql","n4jsd","ignore","antiquotation","function-opencl-kernel","constant-opencl-kernel","type-opencl-host","boolean-opencl-host","constant-opencl-host","function-opencl-host","parser-comment","parser-punctuation","objectpascal","filehandle","vstring","scope","shell-comment","package","string_interpolation","nowdoc-string","heredoc-string","single-quoted-string","double-quoted-string","typeExpression","phpdoc","plsql","R","stringInside","multiline-script","multiline-plain-text","flow-control","each","branch","mixin","plain-text","filter_pattern","extended-regex","double-quoted","datatype","short-variable","inline-lang","inlineLanguageRe","string-interpolation","format-spec","conversion-option","decorator","py","datetime","percent-operator","ellipsis","character","specialEscape","charClass","rangeChar","groupName","backreference","group-name","charset","charset-negation","charset-punctuation","range-punctuation","special-escape","charclass","anchor","group","quantifier","alternation","regex-flags","regex-delimiter","language-regex","substitution-def","link-target","field","command-line-option","literal-block-punctuation","quoted-literal-block","list-bullet","doctest-block","inline-literal","role","interpreted-text","date","time","component","optional","wildcard","method-definition","rb","lifetime-annotation","macro-rules","closure-params","datalines","atrule-line","variable-line","property-line","block-arguments","temporary-variables","smartyLitteralMode","stringPattern","numberPattern","soy","command-arg","soyLitteralMode","func","atrule-declaration","variable-declaration","property-declaration","t4","createT4","createBlock","prefix","contentAlias","insideLang","class-feature","standard","tap","fail","pass","pragma","bailout","version","plan","subtest","yamlish","modifierRegex","modifierTokens","class-id","phrase","block-tag","modifier","cite","span","link-ref","image","footnote","acronym","mark","phraseInside","nestedPatterns","phraseInlineInside","phraseTableInside","toml","tt2","ld","rd","other","ts","vala","velocity","unparsed","velocity-comment","vhdl-vectors","vb","wasm","block-comment","emphasis","bold italic","table-tag","table-bar","nowiki","function-inline","function-block","directive-block-open","directive-block-separator","directive-block-close","xeoracube","xquery","xquery-comment","extension","axis","xquery-element","xquery-attribute","stringifyToken","openedTags","notTagNorBrace","plainText","scalar","yml","_mime","href","undefined","getType","startsWith","alt","Mime","_types","create","_extensions","define","bind","getExtension","typeMap","force","extensions","ext","substr","last","hasPath","$1","ordered","start","checked","disabled","dataLabel","voids","quotationMark","alternative","apostrophe","smart","quoteSmart","valid","allowParseErrors","allowDangerousCharacters","schema","space","omitOptionalTags","unquoted","preferUnquoted","tight","tightAttributes","tightDoctype","tightLists","tightCommaSeparatedLists","tightClose","tightSelfClosing","collapseEmpty","collapseEmptyAttributes","allowDangerousHTML","closeSelfClosing","closeEmpty","closeEmptyElements","opening","closing","first","place","uniqueHeadMetadata","tableContainers","child","prev","spaces","commas","ccount","constants","selfClosing","attrs","parentSchema","lessThan","slash","greaterThan","equalsTo","info","overloadedBoolean","isNaN","attributeName","commaSeparated","padLeft","single","double","attributeValue","input","empty","comma","end","padRight","whitespace","unquotedSafe","singleQuoted","doubleQuoted","sep","pub","public","sys","system","Parser","Lexer","lexer","_aks","_cel","peek","getToken","cursor","hasNext","lines","consume","downgradeToLine","tryTo","process","restorePoint","processor","parseSection","unagi","Syntax","rules","update","findIndex","newRule","org","headlinePattern","priority","syntax","updateTODOs","timestamp","indent","bullet","_ref2","$export","$find","KEY","forced","F","callbackfn","matchOperatorsRe","TypeError","line","blank","block.begin","_token$data","inlineParse","parsePlanning","parseDrawer","begin","planning","newSection","URL_PATTERN","protocol","location","query","ln","parseInt","processQuery","processFilePath","_token","newNodes","parseBlock","_t$data","_t","format","parseListItem","_self$next$data","item","_self$peek","search","parseList","row","parseTable"],"mappings":"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","file":"12-50a481103e2b5ba216d6.js","sourcesContent":["\"use strict\";\n\nvar _unistBuilder = _interopRequireDefault(require(\"unist-builder\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nmodule.exports = {\n  transform: transform,\n  all: all\n};\n\nfunction unknown(h, node) {\n  if (text(node)) {\n    return (0, _unistBuilder.default)('text', node.value);\n  }\n\n  return h(node, 'div', all(h, node));\n}\n\nfunction transform(h, node, parent) {\n  var type = node && node.type;\n  var fn = h.handlers.hasOwnProperty(type) ? h.handlers[type] : null;\n  /* Fail on non-nodes. */\n\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`');\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent);\n}\n\nfunction all(h, parent) {\n  var nodes = parent.children || [];\n  var length = nodes.length;\n  var values = [];\n  var index = -1;\n  var result;\n\n  while (++index < length) {\n    result = transform(h, nodes[index], parent);\n\n    if (result) {\n      values = values.concat(result);\n    }\n  }\n\n  return values;\n}\n\nfunction text(node) {\n  var data = node.data || {};\n\n  if (data.hasOwnProperty('hName') || data.hasOwnProperty('hProperties') || data.hasOwnProperty('hChildren')) {\n    return false;\n  }\n\n  return 'value' in node;\n}","require(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nfunction Node(type, children) {\n  if (children === void 0) {\n    children = [];\n  }\n\n  this.type = type;\n  this.children = [];\n  this.push(children);\n}\n\nNode.prototype = {\n  with: function _with(data) {\n    var newNode = this;\n    newNode = Object.assign(this, data);\n    return newNode;\n  },\n  push: function push(node) {\n    if (Array.isArray(node)) {\n      for (var _iterator = node, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var n = _ref;\n        this.push(n);\n      }\n    } else if (node instanceof Node) {\n      node.parent = this;\n      this.children.push(node);\n    } else if (typeof node === \"string\") {\n      var newNode = new Node(\"text\").with({\n        value: node\n      });\n      newNode.parent = this;\n      this.children.push(newNode);\n    }\n  }\n};\nmodule.exports = Node;","'use strict';\n\nvar assign = require('object-assign');\n\nmodule.exports = u;\n\nfunction u(type, props, value) {\n  var node;\n\n  if ((value === null || value === undefined) && (typeof props !== 'object' || Array.isArray(props))) {\n    value = props;\n    props = {};\n  }\n\n  node = assign({\n    type: String(type)\n  }, props);\n\n  if (Array.isArray(value)) {\n    node.children = value;\n  } else if (value !== null && value !== undefined) {\n    node.value = String(value);\n  }\n\n  return node;\n}","'use strict';\n// B.2.3.5 String.prototype.bold()\nrequire('./_string-html')('bold', function (createHTML) {\n  return function bold() {\n    return createHTML(this, 'b', '', '');\n  };\n});\n","require(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nvar Node = require('./node');\n\nvar uri = require('./uri');\n\nvar LINK_PATTERN = /(.*?)\\[\\[([^\\]]*)\\](?:\\[([^\\]]*)\\])?\\](.*)/m; // \\1 => link, \\2 => text\n\nvar FOOTNOTE_PATTERN = /(.*?)\\[fn:(\\w+)\\](.*)/;\nvar PRE = \"(?:[\\\\s\\\\({'\\\"]|^)\";\nvar POST = \"(?:[\\\\s-\\\\.,:!?'\\\\)}]|$)\";\nvar BORDER = \"[^,'\\\"\\\\s]\";\n\nfunction markup(marker) {\n  return RegExp(\"(.*?\" + PRE + \")\" + marker + \"(\" + BORDER + \"(?:.*?(?:\" + BORDER + \"))?)\" + marker + \"(\" + POST + \".*)\", 'm');\n}\n\nfunction parse(text) {\n  text = _parse(LINK_PATTERN, text, function (captures) {\n    return new Node(\"link\").with({\n      uri: uri(captures[0]),\n      desc: captures[1]\n    });\n  });\n  text = _parse(FOOTNOTE_PATTERN, text, function (captures) {\n    return new Node(\"footnote.reference\").with({\n      label: captures[0]\n    });\n  });\n  var markups = [{\n    name: \"bold\",\n    marker: \"\\\\*\"\n  }, {\n    name: \"verbatim\",\n    marker: \"=\"\n  }, {\n    name: \"italic\",\n    marker: \"/\"\n  }, {\n    name: \"strikeThrough\",\n    marker: \"\\\\+\"\n  }, {\n    name: \"underline\",\n    marker: \"_\"\n  }, {\n    name: \"code\",\n    marker: \"~\"\n  }];\n\n  var _loop = function _loop() {\n    var _markups$_i = _markups[_i],\n        name = _markups$_i.name,\n        marker = _markups$_i.marker;\n    text = _parse(markup(marker), text, function (captures) {\n      return new Node(name, captures[0]);\n    });\n  };\n\n  for (var _i = 0, _markups = markups; _i < _markups.length; _i++) {\n    _loop();\n  }\n\n  return text;\n}\n\nfunction _parse(pattern, text, post) {\n  if (typeof text === \"string\") {\n    var m = pattern.exec(text);\n    if (!m) return [new Node(\"text\").with({\n      value: text\n    })];\n    m.shift();\n    var before = m.shift();\n    var after = m.pop();\n    var nodes = [];\n\n    if (before.length > 0) {\n      nodes.push(new Node(\"text\").with({\n        value: before\n      }));\n    }\n\n    if (m.length > 0) {\n      nodes.push(post(m)); // nodes.push(new Node(name).with({ value: match }))\n    }\n\n    if (after) {\n      nodes = nodes.concat(_parse(pattern, after, post));\n    }\n\n    return nodes;\n  }\n\n  if (Array.isArray(text)) {\n    return text.reduce(function (all, node) {\n      if (node.hasOwnProperty(\"type\") && node.type !== \"text\") {\n        return all.concat(node);\n      }\n\n      return all.concat(_parse(pattern, node, post));\n    }, []);\n  }\n\n  if (typeof text.value === \"string\") {\n    return _parse(pattern, text.value, post);\n  }\n\n  return undefined;\n}\n\nmodule.exports = {\n  parse: parse\n};","'use strict';\n\nmodule.exports = convert;\n\nfunction convert(test) {\n  if (typeof test === 'string') {\n    return typeFactory(test);\n  }\n\n  if (test === null || test === undefined) {\n    return ok;\n  }\n\n  if (typeof test === 'object') {\n    return ('length' in test ? anyFactory : matchesFactory)(test);\n  }\n\n  if (typeof test === 'function') {\n    return test;\n  }\n\n  throw new Error('Expected function, string, or object as test');\n}\n\nfunction convertAll(tests) {\n  var results = [];\n  var length = tests.length;\n  var index = -1;\n\n  while (++index < length) {\n    results[index] = convert(tests[index]);\n  }\n\n  return results;\n} // Utility assert each property in `test` is represented in `node`, and each\n// values are strictly equal.\n\n\nfunction matchesFactory(test) {\n  return matches;\n\n  function matches(node) {\n    var key;\n\n    for (key in test) {\n      if (node[key] !== test[key]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n\nfunction anyFactory(tests) {\n  var checks = convertAll(tests);\n  var length = checks.length;\n  return matches;\n\n  function matches() {\n    var index = -1;\n\n    while (++index < length) {\n      if (checks[index].apply(this, arguments)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n} // Utility to convert a string into a function which checks a given node’s type\n// for said string.\n\n\nfunction typeFactory(test) {\n  return type;\n\n  function type(node) {\n    return Boolean(node && node.type === test);\n  }\n} // Utility to return true.\n\n\nfunction ok() {\n  return true;\n}","'use strict';\n\nvar whiteSpace = require('hast-util-whitespace');\n\nexports.before = siblings(-1);\nexports.after = siblings(1); // Factory to check siblings in a direction.\n\nfunction siblings(increment) {\n  return sibling; // Find applicable siblings in a direction.\n\n  function sibling(parent, index, includeWhiteSpace) {\n    var siblings = parent && parent.children;\n    var next;\n    index += increment;\n    next = siblings && siblings[index];\n\n    if (!includeWhiteSpace) {\n      while (next && whiteSpace(next)) {\n        index += increment;\n        next = siblings[index];\n      }\n    }\n\n    return next;\n  }\n}","exports = {\n  todos: [\"TODO\", \"DONE\"]\n};","'use strict';\n\nmodule.exports = isElement;\n/* Check if, whether `tagNames` is given, a node is an element\n * or an element matching `tagNames`. */\n\nfunction isElement(node, tagNames) {\n  var name;\n\n  if (!(tagNames === null || tagNames === undefined || typeof tagNames === 'string' || typeof tagNames === 'object' && tagNames.length !== 0)) {\n    throw new Error('Expected `string` or `Array.<string>` for `tagNames`, not `' + tagNames + '`');\n  }\n\n  if (!node || typeof node !== 'object' || node.type !== 'element' || typeof node.tagName !== 'string') {\n    return false;\n  }\n\n  if (tagNames === null || tagNames === undefined) {\n    return true;\n  }\n\n  name = node.tagName;\n\n  if (typeof tagNames === 'string') {\n    return name === tagNames;\n  }\n\n  return tagNames.indexOf(name) !== -1;\n}","'use strict';\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nmodule.exports = interElementWhiteSpace;\n/* HTML white-space expression.\n * See <https://html.spec.whatwg.org/#space-character>. */\n\nvar re = /[ \\t\\n\\f\\r]/g;\n/* Check if `node` is a inter-element white-space. */\n\nfunction interElementWhiteSpace(node) {\n  var value;\n\n  if (node && typeof node === 'object' && node.type === 'text') {\n    value = node.value || '';\n  } else if (typeof node === 'string') {\n    value = node;\n  } else {\n    return false;\n  }\n\n  return value.replace(re, '') === '';\n}","'use strict';\n\nvar convert = require('unist-util-is/convert');\n\nvar whiteSpace = require('hast-util-whitespace');\n\nmodule.exports = whiteSpaceLeft;\nvar isText = convert('text'); // Check if `node` starts with white-space.\n\nfunction whiteSpaceLeft(node) {\n  return isText(node) && whiteSpace(node.value.charAt(0));\n}","'use strict';\n\nvar convert = require('unist-util-is/convert');\n\nvar element = require('hast-util-is-element');\n\nvar whiteSpaceLeft = require('./util/white-space-left');\n\nvar after = require('./util/siblings').after;\n\nvar omission = require('./omission');\n\nvar isComment = convert('comment');\nvar optionGroup = 'optgroup';\nvar options = ['option'].concat(optionGroup);\nvar dataListItem = ['dt', 'dd'];\nvar listItem = 'li';\nvar menuContent = ['menuitem', 'hr', 'menu'];\nvar ruby = ['rp', 'rt'];\nvar tableContainer = ['tbody', 'tfoot'];\nvar tableRow = 'tr';\nvar tableCell = ['td', 'th'];\nvar confusingParagraphParent = ['a', 'audio', 'del', 'ins', 'map', 'noscript', 'video'];\nvar clearParagraphSibling = ['address', 'article', 'aside', 'blockquote', 'details', 'div', 'dl', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr', 'main', 'menu', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'];\nmodule.exports = omission({\n  html: html,\n  head: headOrColgroupOrCaption,\n  body: body,\n  p: p,\n  li: li,\n  dt: dt,\n  dd: dd,\n  rt: rubyElement,\n  rp: rubyElement,\n  optgroup: optgroup,\n  option: option,\n  menuitem: menuitem,\n  colgroup: headOrColgroupOrCaption,\n  caption: headOrColgroupOrCaption,\n  thead: thead,\n  tbody: tbody,\n  tfoot: tfoot,\n  tr: tr,\n  td: cells,\n  th: cells\n}); // Macro for `</head>`, `</colgroup>`, and `</caption>`.\n\nfunction headOrColgroupOrCaption(node, index, parent) {\n  var next = after(parent, index, true);\n  return !next || !isComment(next) && !whiteSpaceLeft(next);\n} // Whether to omit `</html>`.\n\n\nfunction html(node, index, parent) {\n  var next = after(parent, index);\n  return !next || !isComment(next);\n} // Whether to omit `</body>`.\n\n\nfunction body(node, index, parent) {\n  var next = after(parent, index);\n  return !next || !isComment(next);\n} // Whether to omit `</p>`.\n\n\nfunction p(node, index, parent) {\n  var next = after(parent, index);\n  return next ? element(next, clearParagraphSibling) : !parent || !element(parent, confusingParagraphParent);\n} // Whether to omit `</li>`.\n\n\nfunction li(node, index, parent) {\n  var next = after(parent, index);\n  return !next || element(next, listItem);\n} // Whether to omit `</dt>`.\n\n\nfunction dt(node, index, parent) {\n  var next = after(parent, index);\n  return next && element(next, dataListItem);\n} // Whether to omit `</dd>`.\n\n\nfunction dd(node, index, parent) {\n  var next = after(parent, index);\n  return !next || element(next, dataListItem);\n} // Whether to omit `</rt>` or `</rp>`.\n\n\nfunction rubyElement(node, index, parent) {\n  var next = after(parent, index);\n  return !next || element(next, ruby);\n} // Whether to omit `</optgroup>`.\n\n\nfunction optgroup(node, index, parent) {\n  var next = after(parent, index);\n  return !next || element(next, optionGroup);\n} // Whether to omit `</option>`.\n\n\nfunction option(node, index, parent) {\n  var next = after(parent, index);\n  return !next || element(next, options);\n} // Whether to omit `</menuitem>`.\n\n\nfunction menuitem(node, index, parent) {\n  var next = after(parent, index);\n  return !next || element(next, menuContent);\n} // Whether to omit `</thead>`.\n\n\nfunction thead(node, index, parent) {\n  var next = after(parent, index);\n  return next && element(next, tableContainer);\n} // Whether to omit `</tbody>`.\n\n\nfunction tbody(node, index, parent) {\n  var next = after(parent, index);\n  return !next || element(next, tableContainer);\n} // Whether to omit `</tfoot>`.\n\n\nfunction tfoot(node, index, parent) {\n  return !after(parent, index);\n} // Whether to omit `</tr>`.\n\n\nfunction tr(node, index, parent) {\n  var next = after(parent, index);\n  return !next || element(next, tableRow);\n} // Whether to omit `</td>` or `</th>`.\n\n\nfunction cells(node, index, parent) {\n  var next = after(parent, index);\n  return !next || element(next, tableCell);\n}","'use strict';\n\nrequire(\"core-js/modules/es6.function.name\");\n\nmodule.exports = omission;\nvar own = {}.hasOwnProperty; // Factory to check if a given node can have a tag omitted.\n\nfunction omission(handlers) {\n  return omit; // Check if a given node can have a tag omitted.\n\n  function omit(node, index, parent) {\n    var name = node.tagName;\n    var fn = own.call(handlers, name) ? handlers[name] : false;\n    return fn ? fn(node, index, parent) : false;\n  }\n}","'use strict';\n\nmodule.exports = one;\nvar own = {}.hasOwnProperty;\nvar handlers = {};\nhandlers.root = require('./all');\nhandlers.text = require('./text');\nhandlers.element = require('./element');\nhandlers.doctype = require('./doctype');\nhandlers.comment = require('./comment');\nhandlers.raw = require('./raw'); // Stringify `node`.\n\nfunction one(ctx, node, index, parent) {\n  var type = node && node.type;\n\n  if (!type) {\n    throw new Error('Expected node, not `' + node + '`');\n  }\n\n  if (!own.call(handlers, type)) {\n    throw new Error('Cannot compile unknown node `' + type + '`');\n  }\n\n  return handlers[type](ctx, node, index, parent);\n}","'use strict';\n\nvar one = require('./one');\n\nmodule.exports = all; // Stringify all children of `parent`.\n\nfunction all(ctx, parent) {\n  var children = parent && parent.children;\n  var length = children && children.length;\n  var index = -1;\n  var results = [];\n\n  while (++index < length) {\n    results[index] = one(ctx, children[index], index, parent);\n  }\n\n  return results.join('');\n}","'use strict';\n\nvar xtend = require('xtend');\n\nvar entities = require('stringify-entities');\n\nmodule.exports = text; // Stringify `text`.\n\nfunction text(ctx, node, index, parent) {\n  var value = node.value;\n  return isLiteral(parent) ? value : entities(value, xtend(ctx.entities, {\n    subset: ['<', '&']\n  }));\n} // Check if content of `node` should be escaped.\n\n\nfunction isLiteral(node) {\n  return node && (node.tagName === 'script' || node.tagName === 'style');\n}","'use strict';\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nvar entities = require('character-entities-html4');\n\nvar legacy = require('character-entities-legacy');\n\nvar hexadecimal = require('is-hexadecimal');\n\nvar decimal = require('is-decimal');\n\nvar alphanumerical = require('is-alphanumerical');\n\nvar dangerous = require('./dangerous.json');\n\nmodule.exports = encode;\nencode.escape = escape;\nvar own = {}.hasOwnProperty; // List of enforced escapes.\n\nvar escapes = ['\"', \"'\", '<', '>', '&', '`']; // Map of characters to names.\n\nvar characters = construct(); // Default escapes.\n\nvar defaultEscapes = toExpression(escapes); // Surrogate pairs.\n\nvar surrogatePair = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g; // Non-ASCII characters.\n// eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n\nvar bmp = /[\\x01-\\t\\x0B\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g; // Encode special characters in `value`.\n\nfunction encode(value, options) {\n  var settings = options || {};\n  var subset = settings.subset;\n  var set = subset ? toExpression(subset) : defaultEscapes;\n  var escapeOnly = settings.escapeOnly;\n  var omit = settings.omitOptionalSemicolons;\n  value = value.replace(set, replace);\n\n  if (subset || escapeOnly) {\n    return value;\n  }\n\n  return value.replace(surrogatePair, replaceSurrogatePair).replace(bmp, replace);\n\n  function replaceSurrogatePair(pair, pos, val) {\n    return toHexReference((pair.charCodeAt(0) - 0xd800) * 0x400 + pair.charCodeAt(1) - 0xdc00 + 0x10000, val.charAt(pos + 2), omit);\n  }\n\n  function replace(char, pos, val) {\n    return one(char, val.charAt(pos + 1), settings);\n  }\n} // Shortcut to escape special characters in HTML.\n\n\nfunction escape(value) {\n  return encode(value, {\n    escapeOnly: true,\n    useNamedReferences: true\n  });\n} // Encode `char` according to `options`.\n\n\nfunction one(char, next, options) {\n  var shortest = options.useShortestReferences;\n  var omit = options.omitOptionalSemicolons;\n  var named;\n  var code;\n  var numeric;\n  var decimal;\n\n  if ((shortest || options.useNamedReferences) && own.call(characters, char)) {\n    named = toNamed(characters[char], next, omit, options.attribute);\n  }\n\n  if (shortest || !named) {\n    code = char.charCodeAt(0);\n    numeric = toHexReference(code, next, omit); // Use the shortest numeric reference when requested.\n    // A simple algorithm would use decimal for all code points under 100, as\n    // those are shorter than hexadecimal:\n    //\n    // * `&#99;` vs `&#x63;` (decimal shorter)\n    // * `&#100;` vs `&#x64;` (equal)\n    //\n    // However, because we take `next` into consideration when `omit` is used,\n    // And it would be possible that decimals are shorter on bigger values as\n    // well if `next` is hexadecimal but not decimal, we instead compare both.\n\n    if (shortest) {\n      decimal = toDecimalReference(code, next, omit);\n\n      if (decimal.length < numeric.length) {\n        numeric = decimal;\n      }\n    }\n  }\n\n  if (named && (!shortest || named.length < numeric.length)) {\n    return named;\n  }\n\n  return numeric;\n} // Transform `code` into an entity.\n\n\nfunction toNamed(name, next, omit, attribute) {\n  var value = '&' + name;\n\n  if (omit && own.call(legacy, name) && dangerous.indexOf(name) === -1 && (!attribute || next && next !== '=' && !alphanumerical(next))) {\n    return value;\n  }\n\n  return value + ';';\n} // Transform `code` into a hexadecimal character reference.\n\n\nfunction toHexReference(code, next, omit) {\n  var value = '&#x' + code.toString(16).toUpperCase();\n  return omit && next && !hexadecimal(next) ? value : value + ';';\n} // Transform `code` into a decimal character reference.\n\n\nfunction toDecimalReference(code, next, omit) {\n  var value = '&#' + String(code);\n  return omit && next && !decimal(next) ? value : value + ';';\n} // Create an expression for `characters`.\n\n\nfunction toExpression(characters) {\n  return new RegExp('[' + characters.join('') + ']', 'g');\n} // Construct the map.\n\n\nfunction construct() {\n  var chars = {};\n  var name;\n\n  for (name in entities) {\n    chars[entities[name]] = name;\n  }\n\n  return chars;\n}","\"use strict\";\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nvar _handlers = _interopRequireDefault(require(\"./handlers\"));\n\nvar _transform = require(\"./transform\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = toHAST;\n\nfunction h(node, tagName, props, children) {\n  if ((children === undefined || children === null) && _typeof(props) === 'object' && 'length' in props) {\n    children = props;\n    props = {};\n  }\n\n  return {\n    type: 'element',\n    tagName: tagName,\n    properties: props || {},\n    children: children || []\n  };\n}\n\nfunction toHAST(tree, options) {\n  var settings = options || {};\n  var meta = tree.meta || {};\n  h.handlers = Object.assign(_handlers.default, settings.handlers || {});\n  h.footnoteSection = settings.footnoteSection || \"footnotes\";\n  var eTags = meta.exclude_tags;\n\n  if (eTags) {\n    h.excludeTags = eTags.split(/\\s+/);\n  } else {\n    h.excludeTags = settings.excludeTags || [\"noexport\"];\n  }\n\n  var sTags = meta.select_tags;\n\n  if (sTags) {\n    h.selectTags = sTags.split(/\\s+/);\n  } else {\n    h.selectTags = settings.selectTags || [];\n  }\n\n  h.highlight = settings.highlight || false;\n  return (0, _transform.transform)(h, tree);\n}","\"use strict\";\n\nrequire(\"core-js/modules/es6.string.bold\");\n\nvar _root = _interopRequireDefault(require(\"./root\"));\n\nvar _section = _interopRequireDefault(require(\"./section\"));\n\nvar _headline = _interopRequireDefault(require(\"./headline\"));\n\nvar _block = _interopRequireDefault(require(\"./block\"));\n\nvar _link = _interopRequireDefault(require(\"./link\"));\n\nvar _emphasis = require(\"./emphasis\");\n\nvar _list = _interopRequireDefault(require(\"./list\"));\n\nvar _listItem = _interopRequireDefault(require(\"./listItem\"));\n\nvar _table = require(\"./table\");\n\nvar _horizontalRule = _interopRequireDefault(require(\"./horizontal-rule\"));\n\nvar _html = _interopRequireDefault(require(\"./html\"));\n\nvar _paragraph = _interopRequireDefault(require(\"./paragraph\"));\n\nvar _footnote = require(\"./footnote\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nmodule.exports = {\n  root: _root.default,\n  section: _section.default,\n  headline: _headline.default,\n  paragraph: _paragraph.default,\n  block: _block.default,\n  link: _link.default,\n  bold: _emphasis.bold,\n  italic: _emphasis.italic,\n  code: _emphasis.code,\n  underline: _emphasis.underline,\n  verbatim: _emphasis.verbatim,\n  strikeThrough: _emphasis.strikeThrough,\n  list: _list.default,\n  \"list.item\": _listItem.default,\n  table: _table.table,\n  \"table.row\": _table.tableRow,\n  \"table.cell\": _table.tableCell,\n  horizontalRule: _horizontalRule.default,\n  html: _html.default,\n  \"footnote.definition\": _footnote.definition,\n  \"footnote.reference\": _footnote.reference,\n  drawer: function drawer() {\n    return undefined;\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _unistBuilder = _interopRequireDefault(require(\"unist-builder\"));\n\nvar _transform = require(\"../transform\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _default = function _default(h, node) {\n  return (0, _unistBuilder.default)('root', (0, _transform.all)(h, node));\n};\n\nexports.default = _default;","\"use strict\";\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _transform = require(\"../transform\");\n\nvar match = function match(left, right) {\n  return left.some(function (e) {\n    return right.includes(e);\n  });\n};\n\nvar _default = function _default(h, node) {\n  var props = {\n    className: \"section\"\n  };\n  var headline = node.children.find(function (n) {\n    return n.type === \"headline\";\n  });\n\n  function shouldExclude(headline) {\n    if (!headline) return false;\n\n    if (h.selectTags.length > 0) {\n      return !match(headline.tags, h.selectTags);\n    }\n\n    return match(headline.tags, h.excludeTags);\n  }\n\n  if (shouldExclude(headline)) return undefined;\n  return h(node, \"div\", props, (0, _transform.all)(h, node));\n};\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _transform = require(\"../transform\");\n\nvar _default = function _default(h, node) {\n  var level = node.level;\n  return h(node, \"h\".concat(level), (0, _transform.all)(h, node));\n};\n\nexports.default = _default;","\"use strict\";\n\nrequire(\"core-js/modules/es6.function.name\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _unistBuilder = _interopRequireDefault(require(\"unist-builder\"));\n\nvar _highlight = _interopRequireDefault(require(\"./_highlight\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _default = function _default(h, node) {\n  var name = node.name.toUpperCase();\n\n  switch (name) {\n    case \"SRC\":\n      return src(h, node);\n\n    case \"QUOTE\":\n      return quote(h, node);\n\n    case \"COMMENT\":\n      return undefined;\n\n    case \"CENTER\":\n      return center(h, node);\n\n    default:\n      var props = {\n        className: name.toLowerCase()\n      };\n      return h(node, \"pre\", props, [(0, _unistBuilder.default)('text', node.value || '')]);\n  }\n};\n\nexports.default = _default;\n\nfunction quote(h, node) {\n  return h(node, \"blockquote\", [(0, _unistBuilder.default)(\"text\", node.value)]);\n}\n\nfunction center(h, node) {\n  return h(node, \"center\", [(0, _unistBuilder.default)(\"text\", node.value)]);\n}\n\nfunction src(h, node) {\n  var lang = node.params[0].toLowerCase();\n  var props = {};\n\n  if (lang) {\n    props.className = ['language-' + lang];\n  }\n\n  var code = node.value;\n  var body = (0, _unistBuilder.default)(\"text\", code);\n\n  if (h.highlight) {\n    var highlighted = (0, _highlight.default)(lang, code);\n    body = (0, _unistBuilder.default)(\"raw\", highlighted);\n  }\n\n  return h(node, \"pre\", [h(node, \"code\", props, [body])]);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _prismjs = _interopRequireDefault(require(\"prismjs\"));\n\nvar _loadPrismLanguage = _interopRequireDefault(require(\"./_load-prism-language\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _default = function _default(language, code) {\n  if (!_prismjs.default.languages[language]) {\n    try {\n      (0, _loadPrismLanguage.default)(language);\n    } catch (e) {\n      // Language wasn't loaded so let's bail.\n      return code;\n    }\n  }\n\n  var lang = _prismjs.default.languages[language];\n\n  var highlighted = _prismjs.default.highlight(code, lang);\n\n  return highlighted;\n};\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _prismjs = _interopRequireDefault(require(\"prismjs\"));\n\nvar _prismLanguageDependencies = _interopRequireDefault(require(\"../prism-language-dependencies\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction loadPrismLanguage(language) {\n  if (_prismjs.default.languages[language]) {\n    // Don't load already loaded language\n    return;\n  }\n\n  var languageData = _prismLanguageDependencies.default[language];\n\n  if (!languageData) {\n    throw new Error(\"Prism doesn't support language '\".concat(language, \"'.\"));\n  }\n\n  if (languageData.option === \"default\") {\n    // Default language has already been loaded by Prism\n    return;\n  }\n\n  if (languageData.require) {\n    // Load the required language first\n    if (Array.isArray(languageData.require)) {\n      languageData.require.forEach(loadPrismLanguage);\n    } else {\n      loadPrismLanguage(languageData.require);\n    }\n  }\n\n  require(\"prismjs/components/prism-\".concat(language, \".js\"));\n}\n\nvar _default = loadPrismLanguage;\nexports.default = _default;","\"use strict\"; // From \"https://raw.githubusercontent.com/PrismJS/prism/v1.11.0/components.js\"\n\nmodule.exports = {\n  \"meta\": {\n    \"path\": \"components/prism-{id}\",\n    \"noCSS\": true,\n    \"examplesPath\": \"examples/prism-{id}\",\n    \"addCheckAll\": true\n  },\n  \"markup\": {\n    \"title\": \"Markup\",\n    \"aliasTitles\": {\n      \"html\": \"HTML\",\n      \"xml\": \"XML\",\n      \"svg\": \"SVG\",\n      \"mathml\": \"MathML\"\n    },\n    \"option\": \"default\"\n  },\n  \"css\": {\n    \"title\": \"CSS\",\n    \"option\": \"default\"\n  },\n  \"clike\": {\n    \"title\": \"C-like\",\n    \"option\": \"default\"\n  },\n  \"javascript\": {\n    \"title\": \"JavaScript\",\n    \"option\": \"default\",\n    \"require\": \"clike\"\n  },\n  \"abap\": {\n    \"title\": \"ABAP\",\n    \"owner\": \"dellagustin\"\n  },\n  \"actionscript\": {\n    \"title\": \"ActionScript\",\n    \"require\": \"javascript\",\n    \"owner\": \"Golmote\"\n  },\n  \"ada\": {\n    \"title\": \"Ada\",\n    \"owner\": \"Lucretia\"\n  },\n  \"apacheconf\": {\n    \"title\": \"Apache Configuration\",\n    \"owner\": \"GuiTeK\"\n  },\n  \"apl\": {\n    \"title\": \"APL\",\n    \"owner\": \"ngn\"\n  },\n  \"applescript\": {\n    \"title\": \"AppleScript\",\n    \"owner\": \"Golmote\"\n  },\n  \"arduino\": {\n    \"title\": \"Arduino\",\n    \"require\": \"cpp\",\n    \"owner\": \"eisbehr-\"\n  },\n  \"asciidoc\": {\n    \"title\": \"AsciiDoc\",\n    \"owner\": \"Golmote\"\n  },\n  \"asm6502\": {\n    \"title\": \"6502 Assembly\",\n    \"owner\": \"kzurawel\"\n  },\n  \"aspnet\": {\n    \"title\": \"ASP.NET (C#)\",\n    \"require\": \"markup\",\n    \"owner\": \"nauzilus\"\n  },\n  \"autohotkey\": {\n    \"title\": \"AutoHotkey\",\n    \"owner\": \"aviaryan\"\n  },\n  \"autoit\": {\n    \"title\": \"AutoIt\",\n    \"owner\": \"Golmote\"\n  },\n  \"bash\": {\n    \"title\": \"Bash\",\n    \"owner\": \"zeitgeist87\"\n  },\n  \"basic\": {\n    \"title\": \"BASIC\",\n    \"owner\": \"Golmote\"\n  },\n  \"batch\": {\n    \"title\": \"Batch\",\n    \"owner\": \"Golmote\"\n  },\n  \"bison\": {\n    \"title\": \"Bison\",\n    \"require\": \"c\",\n    \"owner\": \"Golmote\"\n  },\n  \"brainfuck\": {\n    \"title\": \"Brainfuck\",\n    \"owner\": \"Golmote\"\n  },\n  \"bro\": {\n    \"title\": \"Bro\",\n    \"owner\": \"wayward710\"\n  },\n  \"c\": {\n    \"title\": \"C\",\n    \"require\": \"clike\",\n    \"owner\": \"zeitgeist87\"\n  },\n  \"csharp\": {\n    \"title\": \"C#\",\n    \"require\": \"clike\",\n    \"owner\": \"mvalipour\"\n  },\n  \"cpp\": {\n    \"title\": \"C++\",\n    \"require\": \"c\",\n    \"owner\": \"zeitgeist87\"\n  },\n  \"coffeescript\": {\n    \"title\": \"CoffeeScript\",\n    \"require\": \"javascript\",\n    \"owner\": \"R-osey\"\n  },\n  \"crystal\": {\n    \"title\": \"Crystal\",\n    \"require\": \"ruby\",\n    \"owner\": \"MakeNowJust\"\n  },\n  \"csp\": {\n    \"title\": \"Content-Security-Policy\",\n    \"owner\": \"ScottHelme\"\n  },\n  \"css-extras\": {\n    \"title\": \"CSS Extras\",\n    \"require\": \"css\",\n    \"owner\": \"milesj\"\n  },\n  \"d\": {\n    \"title\": \"D\",\n    \"require\": \"clike\",\n    \"owner\": \"Golmote\"\n  },\n  \"dart\": {\n    \"title\": \"Dart\",\n    \"require\": \"clike\",\n    \"owner\": \"Golmote\"\n  },\n  \"diff\": {\n    \"title\": \"Diff\",\n    \"owner\": \"uranusjr\"\n  },\n  \"django\": {\n    \"title\": \"Django/Jinja2\",\n    \"require\": \"markup\",\n    \"owner\": \"romanvm\"\n  },\n  \"docker\": {\n    \"title\": \"Docker\",\n    \"owner\": \"JustinBeckwith\"\n  },\n  \"eiffel\": {\n    \"title\": \"Eiffel\",\n    \"owner\": \"Conaclos\"\n  },\n  \"elixir\": {\n    \"title\": \"Elixir\",\n    \"owner\": \"Golmote\"\n  },\n  \"elm\": {\n    \"title\": \"Elm\",\n    \"owner\": \"zwilias\"\n  },\n  \"erlang\": {\n    \"title\": \"Erlang\",\n    \"owner\": \"Golmote\"\n  },\n  \"fsharp\": {\n    \"title\": \"F#\",\n    \"require\": \"clike\",\n    \"owner\": \"simonreynolds7\"\n  },\n  \"flow\": {\n    \"title\": \"Flow\",\n    \"require\": \"javascript\",\n    \"owner\": \"Golmote\"\n  },\n  \"fortran\": {\n    \"title\": \"Fortran\",\n    \"owner\": \"Golmote\"\n  },\n  \"gherkin\": {\n    \"title\": \"Gherkin\",\n    \"owner\": \"hason\"\n  },\n  \"git\": {\n    \"title\": \"Git\",\n    \"owner\": \"lgiraudel\"\n  },\n  \"glsl\": {\n    \"title\": \"GLSL\",\n    \"require\": \"clike\",\n    \"owner\": \"Golmote\"\n  },\n  \"go\": {\n    \"title\": \"Go\",\n    \"require\": \"clike\",\n    \"owner\": \"arnehormann\"\n  },\n  \"graphql\": {\n    \"title\": \"GraphQL\",\n    \"owner\": \"Golmote\"\n  },\n  \"groovy\": {\n    \"title\": \"Groovy\",\n    \"require\": \"clike\",\n    \"owner\": \"robfletcher\"\n  },\n  \"haml\": {\n    \"title\": \"Haml\",\n    \"require\": \"ruby\",\n    \"owner\": \"Golmote\"\n  },\n  \"handlebars\": {\n    \"title\": \"Handlebars\",\n    \"require\": \"markup\",\n    \"owner\": \"Golmote\"\n  },\n  \"haskell\": {\n    \"title\": \"Haskell\",\n    \"owner\": \"bholst\"\n  },\n  \"haxe\": {\n    \"title\": \"Haxe\",\n    \"require\": \"clike\",\n    \"owner\": \"Golmote\"\n  },\n  \"http\": {\n    \"title\": \"HTTP\",\n    \"owner\": \"danielgtaylor\"\n  },\n  \"hpkp\": {\n    \"title\": \"HTTP Public-Key-Pins\",\n    \"owner\": \"ScottHelme\"\n  },\n  \"hsts\": {\n    \"title\": \"HTTP Strict-Transport-Security\",\n    \"owner\": \"ScottHelme\"\n  },\n  \"ichigojam\": {\n    \"title\": \"IchigoJam\",\n    \"owner\": \"BlueCocoa\"\n  },\n  \"icon\": {\n    \"title\": \"Icon\",\n    \"owner\": \"Golmote\"\n  },\n  \"inform7\": {\n    \"title\": \"Inform 7\",\n    \"owner\": \"Golmote\"\n  },\n  \"ini\": {\n    \"title\": \"Ini\",\n    \"owner\": \"aviaryan\"\n  },\n  \"io\": {\n    \"title\": \"Io\",\n    \"owner\": \"AlesTsurko\"\n  },\n  \"j\": {\n    \"title\": \"J\",\n    \"owner\": \"Golmote\"\n  },\n  \"java\": {\n    \"title\": \"Java\",\n    \"require\": \"clike\",\n    \"owner\": \"sherblot\"\n  },\n  \"jolie\": {\n    \"title\": \"Jolie\",\n    \"require\": \"clike\",\n    \"owner\": \"thesave\"\n  },\n  \"json\": {\n    \"title\": \"JSON\",\n    \"owner\": \"CupOfTea696\"\n  },\n  \"julia\": {\n    \"title\": \"Julia\",\n    \"owner\": \"cdagnino\"\n  },\n  \"keyman\": {\n    \"title\": \"Keyman\",\n    \"owner\": \"mcdurdin\"\n  },\n  \"kotlin\": {\n    \"title\": \"Kotlin\",\n    \"require\": \"clike\",\n    \"owner\": \"Golmote\"\n  },\n  \"latex\": {\n    \"title\": \"LaTeX\",\n    \"owner\": \"japborst\"\n  },\n  \"less\": {\n    \"title\": \"Less\",\n    \"require\": \"css\",\n    \"owner\": \"Golmote\"\n  },\n  \"livescript\": {\n    \"title\": \"LiveScript\",\n    \"owner\": \"Golmote\"\n  },\n  \"lolcode\": {\n    \"title\": \"LOLCODE\",\n    \"owner\": \"Golmote\"\n  },\n  \"lua\": {\n    \"title\": \"Lua\",\n    \"owner\": \"Golmote\"\n  },\n  \"makefile\": {\n    \"title\": \"Makefile\",\n    \"owner\": \"Golmote\"\n  },\n  \"markdown\": {\n    \"title\": \"Markdown\",\n    \"require\": \"markup\",\n    \"owner\": \"Golmote\"\n  },\n  \"matlab\": {\n    \"title\": \"MATLAB\",\n    \"owner\": \"Golmote\"\n  },\n  \"mel\": {\n    \"title\": \"MEL\",\n    \"owner\": \"Golmote\"\n  },\n  \"mizar\": {\n    \"title\": \"Mizar\",\n    \"owner\": \"Golmote\"\n  },\n  \"monkey\": {\n    \"title\": \"Monkey\",\n    \"owner\": \"Golmote\"\n  },\n  \"n4js\": {\n    \"title\": \"N4JS\",\n    \"require\": \"javascript\",\n    \"owner\": \"bsmith-n4\"\n  },\n  \"nasm\": {\n    \"title\": \"NASM\",\n    \"owner\": \"rbmj\"\n  },\n  \"nginx\": {\n    \"title\": \"nginx\",\n    \"owner\": \"westonganger\",\n    \"require\": \"clike\"\n  },\n  \"nim\": {\n    \"title\": \"Nim\",\n    \"owner\": \"Golmote\"\n  },\n  \"nix\": {\n    \"title\": \"Nix\",\n    \"owner\": \"Golmote\"\n  },\n  \"nsis\": {\n    \"title\": \"NSIS\",\n    \"owner\": \"idleberg\"\n  },\n  \"objectivec\": {\n    \"title\": \"Objective-C\",\n    \"require\": \"c\",\n    \"owner\": \"uranusjr\"\n  },\n  \"ocaml\": {\n    \"title\": \"OCaml\",\n    \"owner\": \"Golmote\"\n  },\n  \"opencl\": {\n    \"title\": \"OpenCL\",\n    \"require\": \"cpp\",\n    \"owner\": \"Milania1\"\n  },\n  \"oz\": {\n    \"title\": \"Oz\",\n    \"owner\": \"Golmote\"\n  },\n  \"parigp\": {\n    \"title\": \"PARI/GP\",\n    \"owner\": \"Golmote\"\n  },\n  \"parser\": {\n    \"title\": \"Parser\",\n    \"require\": \"markup\",\n    \"owner\": \"Golmote\"\n  },\n  \"pascal\": {\n    \"title\": \"Pascal\",\n    \"owner\": \"Golmote\"\n  },\n  \"perl\": {\n    \"title\": \"Perl\",\n    \"owner\": \"Golmote\"\n  },\n  \"php\": {\n    \"title\": \"PHP\",\n    \"require\": \"clike\",\n    \"owner\": \"milesj\"\n  },\n  \"php-extras\": {\n    \"title\": \"PHP Extras\",\n    \"require\": \"php\",\n    \"owner\": \"milesj\"\n  },\n  \"powershell\": {\n    \"title\": \"PowerShell\",\n    \"owner\": \"nauzilus\"\n  },\n  \"processing\": {\n    \"title\": \"Processing\",\n    \"require\": \"clike\",\n    \"owner\": \"Golmote\"\n  },\n  \"prolog\": {\n    \"title\": \"Prolog\",\n    \"owner\": \"Golmote\"\n  },\n  \"properties\": {\n    \"title\": \".properties\",\n    \"owner\": \"Golmote\"\n  },\n  \"protobuf\": {\n    \"title\": \"Protocol Buffers\",\n    \"require\": \"clike\",\n    \"owner\": \"just-boris\"\n  },\n  \"pug\": {\n    \"title\": \"Pug\",\n    \"require\": \"javascript\",\n    \"owner\": \"Golmote\"\n  },\n  \"puppet\": {\n    \"title\": \"Puppet\",\n    \"owner\": \"Golmote\"\n  },\n  \"pure\": {\n    \"title\": \"Pure\",\n    \"owner\": \"Golmote\"\n  },\n  \"python\": {\n    \"title\": \"Python\",\n    \"owner\": \"multipetros\"\n  },\n  \"q\": {\n    \"title\": \"Q\",\n    \"owner\": \"Golmote\"\n  },\n  \"qore\": {\n    \"title\": \"Qore\",\n    \"require\": \"clike\",\n    \"owner\": \"temnroegg\"\n  },\n  \"r\": {\n    \"title\": \"R\",\n    \"owner\": \"Golmote\"\n  },\n  \"jsx\": {\n    \"title\": \"React JSX\",\n    \"require\": [\"markup\", \"javascript\"],\n    \"owner\": \"vkbansal\"\n  },\n  \"tsx\": {\n    \"title\": \"React TSX\",\n    \"require\": [\"jsx\", \"typescript\"]\n  },\n  \"renpy\": {\n    \"title\": \"Ren'py\",\n    \"owner\": \"HyuchiaDiego\"\n  },\n  \"reason\": {\n    \"title\": \"Reason\",\n    \"require\": \"clike\",\n    \"owner\": \"Golmote\"\n  },\n  \"rest\": {\n    \"title\": \"reST (reStructuredText)\",\n    \"owner\": \"Golmote\"\n  },\n  \"rip\": {\n    \"title\": \"Rip\",\n    \"owner\": \"ravinggenius\"\n  },\n  \"roboconf\": {\n    \"title\": \"Roboconf\",\n    \"owner\": \"Golmote\"\n  },\n  \"ruby\": {\n    \"title\": \"Ruby\",\n    \"require\": \"clike\",\n    \"owner\": \"samflores\"\n  },\n  \"rust\": {\n    \"title\": \"Rust\",\n    \"owner\": \"Golmote\"\n  },\n  \"sas\": {\n    \"title\": \"SAS\",\n    \"owner\": \"Golmote\"\n  },\n  \"sass\": {\n    \"title\": \"Sass (Sass)\",\n    \"require\": \"css\",\n    \"owner\": \"Golmote\"\n  },\n  \"scss\": {\n    \"title\": \"Sass (Scss)\",\n    \"require\": \"css\",\n    \"owner\": \"MoOx\"\n  },\n  \"scala\": {\n    \"title\": \"Scala\",\n    \"require\": \"java\",\n    \"owner\": \"jozic\"\n  },\n  \"scheme\": {\n    \"title\": \"Scheme\",\n    \"owner\": \"bacchus123\"\n  },\n  \"smalltalk\": {\n    \"title\": \"Smalltalk\",\n    \"owner\": \"Golmote\"\n  },\n  \"smarty\": {\n    \"title\": \"Smarty\",\n    \"require\": \"markup\",\n    \"owner\": \"Golmote\"\n  },\n  \"sql\": {\n    \"title\": \"SQL\",\n    \"owner\": \"multipetros\"\n  },\n  \"stylus\": {\n    \"title\": \"Stylus\",\n    \"owner\": \"vkbansal\"\n  },\n  \"swift\": {\n    \"title\": \"Swift\",\n    \"require\": \"clike\",\n    \"owner\": \"chrischares\"\n  },\n  \"tcl\": {\n    \"title\": \"Tcl\",\n    \"owner\": \"PeterChaplin\"\n  },\n  \"textile\": {\n    \"title\": \"Textile\",\n    \"require\": \"markup\",\n    \"owner\": \"Golmote\"\n  },\n  \"twig\": {\n    \"title\": \"Twig\",\n    \"require\": \"markup\",\n    \"owner\": \"brandonkelly\"\n  },\n  \"typescript\": {\n    \"title\": \"TypeScript\",\n    \"require\": \"javascript\",\n    \"owner\": \"vkbansal\"\n  },\n  \"vbnet\": {\n    \"title\": \"VB.Net\",\n    \"require\": \"basic\",\n    \"owner\": \"Bigsby\"\n  },\n  \"verilog\": {\n    \"title\": \"Verilog\",\n    \"owner\": \"a-rey\"\n  },\n  \"vhdl\": {\n    \"title\": \"VHDL\",\n    \"owner\": \"a-rey\"\n  },\n  \"vim\": {\n    \"title\": \"vim\",\n    \"owner\": \"westonganger\"\n  },\n  \"wiki\": {\n    \"title\": \"Wiki markup\",\n    \"require\": \"markup\",\n    \"owner\": \"Golmote\"\n  },\n  \"xeora\": {\n    \"title\": \"Xeora\",\n    \"require\": \"markup\",\n    \"owner\": \"freakmaxi\"\n  },\n  \"xojo\": {\n    \"title\": \"Xojo (REALbasic)\",\n    \"owner\": \"Golmote\"\n  },\n  \"yaml\": {\n    \"title\": \"YAML\",\n    \"owner\": \"hason\"\n  }\n};","Prism.languages.abap = {\n  'comment': /^\\*.*/m,\n  'string': /(`|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n  'string-template': {\n    pattern: /([|}])(?:\\\\.|[^\\\\|{\\r\\n])*(?=[|{])/,\n    lookbehind: true,\n    alias: 'string'\n  },\n\n  /* End Of Line comments should not interfere with strings when the  \n  quote character occurs within them. We assume a string being highlighted\n  inside an EOL comment is more acceptable than the opposite.\n  */\n  'eol-comment': {\n    pattern: /(^|\\s)\".*/m,\n    lookbehind: true,\n    alias: 'comment'\n  },\n  'keyword': {\n    pattern: /(\\s|\\.|^)(?:SCIENTIFIC_WITH_LEADING_ZERO|SCALE_PRESERVING_SCIENTIFIC|RMC_COMMUNICATION_FAILURE|END-ENHANCEMENT-SECTION|MULTIPLY-CORRESPONDING|SUBTRACT-CORRESPONDING|VERIFICATION-MESSAGE|DIVIDE-CORRESPONDING|ENHANCEMENT-SECTION|CURRENCY_CONVERSION|RMC_SYSTEM_FAILURE|START-OF-SELECTION|MOVE-CORRESPONDING|RMC_INVALID_STATUS|CUSTOMER-FUNCTION|END-OF-DEFINITION|ENHANCEMENT-POINT|SYSTEM-EXCEPTIONS|ADD-CORRESPONDING|SCALE_PRESERVING|SELECTION-SCREEN|CURSOR-SELECTION|END-OF-SELECTION|LOAD-OF-PROGRAM|SCROLL-BOUNDARY|SELECTION-TABLE|EXCEPTION-TABLE|IMPLEMENTATIONS|PARAMETER-TABLE|RIGHT-JUSTIFIED|UNIT_CONVERSION|AUTHORITY-CHECK|LIST-PROCESSING|SIGN_AS_POSTFIX|COL_BACKGROUND|IMPLEMENTATION|INTERFACE-POOL|TRANSFORMATION|IDENTIFICATION|ENDENHANCEMENT|LINE-SELECTION|INITIALIZATION|LEFT-JUSTIFIED|SELECT-OPTIONS|SELECTION-SETS|COMMUNICATION|CORRESPONDING|DECIMAL_SHIFT|PRINT-CONTROL|VALUE-REQUEST|CHAIN-REQUEST|FUNCTION-POOL|FIELD-SYMBOLS|FUNCTIONALITY|INVERTED-DATE|SELECTION-SET|CLASS-METHODS|OUTPUT-LENGTH|CLASS-CODING|COL_NEGATIVE|ERRORMESSAGE|FIELD-GROUPS|HELP-REQUEST|NO-EXTENSION|NO-TOPOFPAGE|REDEFINITION|DISPLAY-MODE|ENDINTERFACE|EXIT-COMMAND|FIELD-SYMBOL|NO-SCROLLING|SHORTDUMP-ID|ACCESSPOLICY|CLASS-EVENTS|COL_POSITIVE|DECLARATIONS|ENHANCEMENTS|FILTER-TABLE|SWITCHSTATES|SYNTAX-CHECK|TRANSPORTING|ASYNCHRONOUS|SYNTAX-TRACE|TOKENIZATION|USER-COMMAND|WITH-HEADING|ABAP-SOURCE|BREAK-POINT|CHAIN-INPUT|COMPRESSION|FIXED-POINT|NEW-SECTION|NON-UNICODE|OCCURRENCES|RESPONSIBLE|SYSTEM-CALL|TRACE-TABLE|ABBREVIATED|CHAR-TO-HEX|END-OF-FILE|ENDFUNCTION|ENVIRONMENT|ASSOCIATION|COL_HEADING|EDITOR-CALL|END-OF-PAGE|ENGINEERING|IMPLEMENTED|INTENSIFIED|RADIOBUTTON|SYSTEM-EXIT|TOP-OF-PAGE|TRANSACTION|APPLICATION|CONCATENATE|DESTINATION|ENHANCEMENT|IMMEDIATELY|NO-GROUPING|PRECOMPILED|REPLACEMENT|TITLE-LINES|ACTIVATION|BYTE-ORDER|CLASS-POOL|CONNECTION|CONVERSION|DEFINITION|DEPARTMENT|EXPIRATION|INHERITING|MESSAGE-ID|NO-HEADING|PERFORMING|QUEUE-ONLY|RIGHTSPACE|SCIENTIFIC|STATUSINFO|STRUCTURES|SYNCPOINTS|WITH-TITLE|ATTRIBUTES|BOUNDARIES|CLASS-DATA|COL_NORMAL|DD\\/MM\\/YYYY|DESCENDING|INTERFACES|LINE-COUNT|MM\\/DD\\/YYYY|NON-UNIQUE|PRESERVING|SELECTIONS|STATEMENTS|SUBROUTINE|TRUNCATION|TYPE-POOLS|ARITHMETIC|BACKGROUND|ENDPROVIDE|EXCEPTIONS|IDENTIFIER|INDEX-LINE|OBLIGATORY|PARAMETERS|PERCENTAGE|PUSHBUTTON|RESOLUTION|COMPONENTS|DEALLOCATE|DISCONNECT|DUPLICATES|FIRST-LINE|HEAD-LINES|NO-DISPLAY|OCCURRENCE|RESPECTING|RETURNCODE|SUBMATCHES|TRACE-FILE|ASCENDING|BYPASSING|ENDMODULE|EXCEPTION|EXCLUDING|EXPORTING|INCREMENT|MATCHCODE|PARAMETER|PARTIALLY|PREFERRED|REFERENCE|REPLACING|RETURNING|SELECTION|SEPARATED|SPECIFIED|STATEMENT|TIMESTAMP|TYPE-POOL|ACCEPTING|APPENDAGE|ASSIGNING|COL_GROUP|COMPARING|CONSTANTS|DANGEROUS|IMPORTING|INSTANCES|LEFTSPACE|LOG-POINT|QUICKINFO|READ-ONLY|SCROLLING|SQLSCRIPT|STEP-LOOP|TOP-LINES|TRANSLATE|APPENDING|AUTHORITY|CHARACTER|COMPONENT|CONDITION|DIRECTORY|DUPLICATE|MESSAGING|RECEIVING|SUBSCREEN|ACCORDING|COL_TOTAL|END-LINES|ENDMETHOD|ENDSELECT|EXPANDING|EXTENSION|INCLUDING|INFOTYPES|INTERFACE|INTERVALS|LINE-SIZE|PF-STATUS|PROCEDURE|PROTECTED|REQUESTED|RESUMABLE|RIGHTPLUS|SAP-SPOOL|SECONDARY|STRUCTURE|SUBSTRING|TABLEVIEW|NUMOFCHAR|ADJACENT|ANALYSIS|ASSIGNED|BACKWARD|CHANNELS|CHECKBOX|CONTINUE|CRITICAL|DATAINFO|DD\\/MM\\/YY|DURATION|ENCODING|ENDCLASS|FUNCTION|LEFTPLUS|LINEFEED|MM\\/DD\\/YY|OVERFLOW|RECEIVED|SKIPPING|SORTABLE|STANDARD|SUBTRACT|SUPPRESS|TABSTRIP|TITLEBAR|TRUNCATE|UNASSIGN|WHENEVER|ANALYZER|COALESCE|COMMENTS|CONDENSE|DECIMALS|DEFERRED|ENDWHILE|EXPLICIT|KEYWORDS|MESSAGES|POSITION|PRIORITY|RECEIVER|RENAMING|TIMEZONE|TRAILING|ALLOCATE|CENTERED|CIRCULAR|CONTROLS|CURRENCY|DELETING|DESCRIBE|DISTANCE|ENDCATCH|EXPONENT|EXTENDED|GENERATE|IGNORING|INCLUDES|INTERNAL|MAJOR-ID|MODIFIER|NEW-LINE|OPTIONAL|PROPERTY|ROLLBACK|STARTING|SUPPLIED|ABSTRACT|CHANGING|CONTEXTS|CREATING|CUSTOMER|DATABASE|DAYLIGHT|DEFINING|DISTINCT|DIVISION|ENABLING|ENDCHAIN|ESCAPING|HARMLESS|IMPLICIT|INACTIVE|LANGUAGE|MINOR-ID|MULTIPLY|NEW-PAGE|NO-TITLE|POS_HIGH|SEPARATE|TEXTPOOL|TRANSFER|SELECTOR|DBMAXLEN|ITERATOR|SELECTOR|ARCHIVE|BIT-XOR|BYTE-CO|COLLECT|COMMENT|CURRENT|DEFAULT|DISPLAY|ENDFORM|EXTRACT|LEADING|LISTBOX|LOCATOR|MEMBERS|METHODS|NESTING|POS_LOW|PROCESS|PROVIDE|RAISING|RESERVE|SECONDS|SUMMARY|VISIBLE|BETWEEN|BIT-AND|BYTE-CS|CLEANUP|COMPUTE|CONTROL|CONVERT|DATASET|ENDCASE|FORWARD|HEADERS|HOTSPOT|INCLUDE|INVERSE|KEEPING|NO-ZERO|OBJECTS|OVERLAY|PADDING|PATTERN|PROGRAM|REFRESH|SECTION|SUMMING|TESTING|VERSION|WINDOWS|WITHOUT|BIT-NOT|BYTE-CA|BYTE-NA|CASTING|CONTEXT|COUNTRY|DYNAMIC|ENABLED|ENDLOOP|EXECUTE|FRIENDS|HANDLER|HEADING|INITIAL|\\*-INPUT|LOGFILE|MAXIMUM|MINIMUM|NO-GAPS|NO-SIGN|PRAGMAS|PRIMARY|PRIVATE|REDUCED|REPLACE|REQUEST|RESULTS|UNICODE|WARNING|ALIASES|BYTE-CN|BYTE-NS|CALLING|COL_KEY|COLUMNS|CONNECT|ENDEXEC|ENTRIES|EXCLUDE|FILTERS|FURTHER|HELP-ID|LOGICAL|MAPPING|MESSAGE|NAMETAB|OPTIONS|PACKAGE|PERFORM|RECEIVE|STATICS|VARYING|BINDING|CHARLEN|GREATER|XSTRLEN|ACCEPT|APPEND|DETAIL|ELSEIF|ENDING|ENDTRY|FORMAT|FRAMES|GIVING|HASHED|HEADER|IMPORT|INSERT|MARGIN|MODULE|NATIVE|OBJECT|OFFSET|REMOTE|RESUME|SAVING|SIMPLE|SUBMIT|TABBED|TOKENS|UNIQUE|UNPACK|UPDATE|WINDOW|YELLOW|ACTUAL|ASPECT|CENTER|CURSOR|DELETE|DIALOG|DIVIDE|DURING|ERRORS|EVENTS|EXTEND|FILTER|HANDLE|HAVING|IGNORE|LITTLE|MEMORY|NO-GAP|OCCURS|OPTION|PERSON|PLACES|PUBLIC|REDUCE|REPORT|RESULT|SINGLE|SORTED|SWITCH|SYNTAX|TARGET|VALUES|WRITER|ASSERT|BLOCKS|BOUNDS|BUFFER|CHANGE|COLUMN|COMMIT|CONCAT|COPIES|CREATE|DDMMYY|DEFINE|ENDIAN|ESCAPE|EXPAND|KERNEL|LAYOUT|LEGACY|LEVELS|MMDDYY|NUMBER|OUTPUT|RANGES|READER|RETURN|SCREEN|SEARCH|SELECT|SHARED|SOURCE|STABLE|STATIC|SUBKEY|SUFFIX|TABLES|UNWIND|YYMMDD|ASSIGN|BACKUP|BEFORE|BINARY|BIT-OR|BLANKS|CLIENT|CODING|COMMON|DEMAND|DYNPRO|EXCEPT|EXISTS|EXPORT|FIELDS|GLOBAL|GROUPS|LENGTH|LOCALE|MEDIUM|METHOD|MODIFY|NESTED|OTHERS|REJECT|SCROLL|SUPPLY|SYMBOL|ENDFOR|STRLEN|ALIGN|BEGIN|BOUND|ENDAT|ENTRY|EVENT|FINAL|FLUSH|GRANT|INNER|SHORT|USING|WRITE|AFTER|BLACK|BLOCK|CLOCK|COLOR|COUNT|DUMMY|EMPTY|ENDDO|ENDON|GREEN|INDEX|INOUT|LEAVE|LEVEL|LINES|MODIF|ORDER|OUTER|RANGE|RESET|RETRY|RIGHT|SMART|SPLIT|STYLE|TABLE|THROW|UNDER|UNTIL|UPPER|UTF-8|WHERE|ALIAS|BLANK|CLEAR|CLOSE|EXACT|FETCH|FIRST|FOUND|GROUP|LLANG|LOCAL|OTHER|REGEX|SPOOL|TITLE|TYPES|VALID|WHILE|ALPHA|BOXED|CATCH|CHAIN|CHECK|CLASS|COVER|ENDIF|EQUIV|FIELD|FLOOR|FRAME|INPUT|LOWER|MATCH|NODES|PAGES|PRINT|RAISE|ROUND|SHIFT|SPACE|SPOTS|STAMP|STATE|TASKS|TIMES|TRMAC|ULINE|UNION|VALUE|WIDTH|EQUAL|LOG10|TRUNC|BLOB|CASE|CEIL|CLOB|COND|EXIT|FILE|GAPS|HOLD|INCL|INTO|KEEP|KEYS|LAST|LINE|LONG|LPAD|MAIL|MODE|OPEN|PINK|READ|ROWS|TEST|THEN|ZERO|AREA|BACK|BADI|BYTE|CAST|EDIT|EXEC|FAIL|FIND|FKEQ|FONT|FREE|GKEQ|HIDE|INIT|ITNO|LATE|LOOP|MAIN|MARK|MOVE|NEXT|NULL|RISK|ROLE|UNIT|WAIT|ZONE|BASE|CALL|CODE|DATA|DATE|FKGE|GKGE|HIGH|KIND|LEFT|LIST|MASK|MESH|NAME|NODE|PACK|PAGE|POOL|SEND|SIGN|SIZE|SOME|STOP|TASK|TEXT|TIME|USER|VARY|WITH|WORD|BLUE|CONV|COPY|DEEP|ELSE|FORM|FROM|HINT|ICON|JOIN|LIKE|LOAD|ONLY|PART|SCAN|SKIP|SORT|TYPE|UNIX|VIEW|WHEN|WORK|ACOS|ASIN|ATAN|COSH|EACH|FRAC|LESS|RTTI|SINH|SQRT|TANH|AVG|BIT|DIV|ISO|LET|OUT|PAD|SQL|ALL|CI_|CPI|END|LOB|LPI|MAX|MIN|NEW|OLE|RUN|SET|\\?TO|YES|ABS|ADD|AND|BIG|FOR|HDB|JOB|LOW|NOT|SAP|TRY|VIA|XML|ANY|GET|IDS|KEY|MOD|OFF|PUT|RAW|RED|REF|SUM|TAB|XSD|CNT|COS|EXP|LOG|SIN|TAN|XOR|AT|CO|CP|DO|GT|ID|IF|NS|OR|BT|CA|CS|GE|NA|NB|EQ|IN|LT|NE|NO|OF|ON|PF|TO|AS|BY|CN|IS|LE|NP|UP|E|I|M|O|Z|C|X)\\b/i,\n    lookbehind: true\n  },\n\n  /* Numbers can be only integers. Decimal or Hex appear only as strings */\n  'number': /\\b\\d+\\b/,\n\n  /* Operators must always be surrounded by whitespace, they cannot be put \n  adjacent to operands. \n  */\n  'operator': {\n    pattern: /(\\s)(?:\\*\\*?|<[=>]?|>=?|\\?=|[-+\\/=])(?=\\s)/,\n    lookbehind: true\n  },\n  'string-operator': {\n    pattern: /(\\s)&&?(?=\\s)/,\n    lookbehind: true,\n\n    /* The official editor highlights */\n    alias: \"keyword\"\n  },\n  'token-operator': [{\n    /* Special operators used to access structure components, class methods/attributes, etc. */\n    pattern: /(\\w)(?:->?|=>|[~|{}])(?=\\w)/,\n    lookbehind: true,\n    alias: \"punctuation\"\n  }, {\n    /* Special tokens used do delimit string templates */\n    pattern: /[|{}]/,\n    alias: \"punctuation\"\n  }],\n  'punctuation': /[,.:()]/\n};","Prism.languages.abap = {\n  comment: /^\\*.*/m,\n  string: /(`|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n  \"string-template\": {\n    pattern: /([|}])(?:\\\\.|[^\\\\|{\\r\\n])*(?=[|{])/,\n    lookbehind: !0,\n    alias: \"string\"\n  },\n  \"eol-comment\": {\n    pattern: /(^|\\s)\".*/m,\n    lookbehind: !0,\n    alias: \"comment\"\n  },\n  keyword: {\n    pattern: /(\\s|\\.|^)(?:SCIENTIFIC_WITH_LEADING_ZERO|SCALE_PRESERVING_SCIENTIFIC|RMC_COMMUNICATION_FAILURE|END-ENHANCEMENT-SECTION|MULTIPLY-CORRESPONDING|SUBTRACT-CORRESPONDING|VERIFICATION-MESSAGE|DIVIDE-CORRESPONDING|ENHANCEMENT-SECTION|CURRENCY_CONVERSION|RMC_SYSTEM_FAILURE|START-OF-SELECTION|MOVE-CORRESPONDING|RMC_INVALID_STATUS|CUSTOMER-FUNCTION|END-OF-DEFINITION|ENHANCEMENT-POINT|SYSTEM-EXCEPTIONS|ADD-CORRESPONDING|SCALE_PRESERVING|SELECTION-SCREEN|CURSOR-SELECTION|END-OF-SELECTION|LOAD-OF-PROGRAM|SCROLL-BOUNDARY|SELECTION-TABLE|EXCEPTION-TABLE|IMPLEMENTATIONS|PARAMETER-TABLE|RIGHT-JUSTIFIED|UNIT_CONVERSION|AUTHORITY-CHECK|LIST-PROCESSING|SIGN_AS_POSTFIX|COL_BACKGROUND|IMPLEMENTATION|INTERFACE-POOL|TRANSFORMATION|IDENTIFICATION|ENDENHANCEMENT|LINE-SELECTION|INITIALIZATION|LEFT-JUSTIFIED|SELECT-OPTIONS|SELECTION-SETS|COMMUNICATION|CORRESPONDING|DECIMAL_SHIFT|PRINT-CONTROL|VALUE-REQUEST|CHAIN-REQUEST|FUNCTION-POOL|FIELD-SYMBOLS|FUNCTIONALITY|INVERTED-DATE|SELECTION-SET|CLASS-METHODS|OUTPUT-LENGTH|CLASS-CODING|COL_NEGATIVE|ERRORMESSAGE|FIELD-GROUPS|HELP-REQUEST|NO-EXTENSION|NO-TOPOFPAGE|REDEFINITION|DISPLAY-MODE|ENDINTERFACE|EXIT-COMMAND|FIELD-SYMBOL|NO-SCROLLING|SHORTDUMP-ID|ACCESSPOLICY|CLASS-EVENTS|COL_POSITIVE|DECLARATIONS|ENHANCEMENTS|FILTER-TABLE|SWITCHSTATES|SYNTAX-CHECK|TRANSPORTING|ASYNCHRONOUS|SYNTAX-TRACE|TOKENIZATION|USER-COMMAND|WITH-HEADING|ABAP-SOURCE|BREAK-POINT|CHAIN-INPUT|COMPRESSION|FIXED-POINT|NEW-SECTION|NON-UNICODE|OCCURRENCES|RESPONSIBLE|SYSTEM-CALL|TRACE-TABLE|ABBREVIATED|CHAR-TO-HEX|END-OF-FILE|ENDFUNCTION|ENVIRONMENT|ASSOCIATION|COL_HEADING|EDITOR-CALL|END-OF-PAGE|ENGINEERING|IMPLEMENTED|INTENSIFIED|RADIOBUTTON|SYSTEM-EXIT|TOP-OF-PAGE|TRANSACTION|APPLICATION|CONCATENATE|DESTINATION|ENHANCEMENT|IMMEDIATELY|NO-GROUPING|PRECOMPILED|REPLACEMENT|TITLE-LINES|ACTIVATION|BYTE-ORDER|CLASS-POOL|CONNECTION|CONVERSION|DEFINITION|DEPARTMENT|EXPIRATION|INHERITING|MESSAGE-ID|NO-HEADING|PERFORMING|QUEUE-ONLY|RIGHTSPACE|SCIENTIFIC|STATUSINFO|STRUCTURES|SYNCPOINTS|WITH-TITLE|ATTRIBUTES|BOUNDARIES|CLASS-DATA|COL_NORMAL|DD\\/MM\\/YYYY|DESCENDING|INTERFACES|LINE-COUNT|MM\\/DD\\/YYYY|NON-UNIQUE|PRESERVING|SELECTIONS|STATEMENTS|SUBROUTINE|TRUNCATION|TYPE-POOLS|ARITHMETIC|BACKGROUND|ENDPROVIDE|EXCEPTIONS|IDENTIFIER|INDEX-LINE|OBLIGATORY|PARAMETERS|PERCENTAGE|PUSHBUTTON|RESOLUTION|COMPONENTS|DEALLOCATE|DISCONNECT|DUPLICATES|FIRST-LINE|HEAD-LINES|NO-DISPLAY|OCCURRENCE|RESPECTING|RETURNCODE|SUBMATCHES|TRACE-FILE|ASCENDING|BYPASSING|ENDMODULE|EXCEPTION|EXCLUDING|EXPORTING|INCREMENT|MATCHCODE|PARAMETER|PARTIALLY|PREFERRED|REFERENCE|REPLACING|RETURNING|SELECTION|SEPARATED|SPECIFIED|STATEMENT|TIMESTAMP|TYPE-POOL|ACCEPTING|APPENDAGE|ASSIGNING|COL_GROUP|COMPARING|CONSTANTS|DANGEROUS|IMPORTING|INSTANCES|LEFTSPACE|LOG-POINT|QUICKINFO|READ-ONLY|SCROLLING|SQLSCRIPT|STEP-LOOP|TOP-LINES|TRANSLATE|APPENDING|AUTHORITY|CHARACTER|COMPONENT|CONDITION|DIRECTORY|DUPLICATE|MESSAGING|RECEIVING|SUBSCREEN|ACCORDING|COL_TOTAL|END-LINES|ENDMETHOD|ENDSELECT|EXPANDING|EXTENSION|INCLUDING|INFOTYPES|INTERFACE|INTERVALS|LINE-SIZE|PF-STATUS|PROCEDURE|PROTECTED|REQUESTED|RESUMABLE|RIGHTPLUS|SAP-SPOOL|SECONDARY|STRUCTURE|SUBSTRING|TABLEVIEW|NUMOFCHAR|ADJACENT|ANALYSIS|ASSIGNED|BACKWARD|CHANNELS|CHECKBOX|CONTINUE|CRITICAL|DATAINFO|DD\\/MM\\/YY|DURATION|ENCODING|ENDCLASS|FUNCTION|LEFTPLUS|LINEFEED|MM\\/DD\\/YY|OVERFLOW|RECEIVED|SKIPPING|SORTABLE|STANDARD|SUBTRACT|SUPPRESS|TABSTRIP|TITLEBAR|TRUNCATE|UNASSIGN|WHENEVER|ANALYZER|COALESCE|COMMENTS|CONDENSE|DECIMALS|DEFERRED|ENDWHILE|EXPLICIT|KEYWORDS|MESSAGES|POSITION|PRIORITY|RECEIVER|RENAMING|TIMEZONE|TRAILING|ALLOCATE|CENTERED|CIRCULAR|CONTROLS|CURRENCY|DELETING|DESCRIBE|DISTANCE|ENDCATCH|EXPONENT|EXTENDED|GENERATE|IGNORING|INCLUDES|INTERNAL|MAJOR-ID|MODIFIER|NEW-LINE|OPTIONAL|PROPERTY|ROLLBACK|STARTING|SUPPLIED|ABSTRACT|CHANGING|CONTEXTS|CREATING|CUSTOMER|DATABASE|DAYLIGHT|DEFINING|DISTINCT|DIVISION|ENABLING|ENDCHAIN|ESCAPING|HARMLESS|IMPLICIT|INACTIVE|LANGUAGE|MINOR-ID|MULTIPLY|NEW-PAGE|NO-TITLE|POS_HIGH|SEPARATE|TEXTPOOL|TRANSFER|SELECTOR|DBMAXLEN|ITERATOR|SELECTOR|ARCHIVE|BIT-XOR|BYTE-CO|COLLECT|COMMENT|CURRENT|DEFAULT|DISPLAY|ENDFORM|EXTRACT|LEADING|LISTBOX|LOCATOR|MEMBERS|METHODS|NESTING|POS_LOW|PROCESS|PROVIDE|RAISING|RESERVE|SECONDS|SUMMARY|VISIBLE|BETWEEN|BIT-AND|BYTE-CS|CLEANUP|COMPUTE|CONTROL|CONVERT|DATASET|ENDCASE|FORWARD|HEADERS|HOTSPOT|INCLUDE|INVERSE|KEEPING|NO-ZERO|OBJECTS|OVERLAY|PADDING|PATTERN|PROGRAM|REFRESH|SECTION|SUMMING|TESTING|VERSION|WINDOWS|WITHOUT|BIT-NOT|BYTE-CA|BYTE-NA|CASTING|CONTEXT|COUNTRY|DYNAMIC|ENABLED|ENDLOOP|EXECUTE|FRIENDS|HANDLER|HEADING|INITIAL|\\*-INPUT|LOGFILE|MAXIMUM|MINIMUM|NO-GAPS|NO-SIGN|PRAGMAS|PRIMARY|PRIVATE|REDUCED|REPLACE|REQUEST|RESULTS|UNICODE|WARNING|ALIASES|BYTE-CN|BYTE-NS|CALLING|COL_KEY|COLUMNS|CONNECT|ENDEXEC|ENTRIES|EXCLUDE|FILTERS|FURTHER|HELP-ID|LOGICAL|MAPPING|MESSAGE|NAMETAB|OPTIONS|PACKAGE|PERFORM|RECEIVE|STATICS|VARYING|BINDING|CHARLEN|GREATER|XSTRLEN|ACCEPT|APPEND|DETAIL|ELSEIF|ENDING|ENDTRY|FORMAT|FRAMES|GIVING|HASHED|HEADER|IMPORT|INSERT|MARGIN|MODULE|NATIVE|OBJECT|OFFSET|REMOTE|RESUME|SAVING|SIMPLE|SUBMIT|TABBED|TOKENS|UNIQUE|UNPACK|UPDATE|WINDOW|YELLOW|ACTUAL|ASPECT|CENTER|CURSOR|DELETE|DIALOG|DIVIDE|DURING|ERRORS|EVENTS|EXTEND|FILTER|HANDLE|HAVING|IGNORE|LITTLE|MEMORY|NO-GAP|OCCURS|OPTION|PERSON|PLACES|PUBLIC|REDUCE|REPORT|RESULT|SINGLE|SORTED|SWITCH|SYNTAX|TARGET|VALUES|WRITER|ASSERT|BLOCKS|BOUNDS|BUFFER|CHANGE|COLUMN|COMMIT|CONCAT|COPIES|CREATE|DDMMYY|DEFINE|ENDIAN|ESCAPE|EXPAND|KERNEL|LAYOUT|LEGACY|LEVELS|MMDDYY|NUMBER|OUTPUT|RANGES|READER|RETURN|SCREEN|SEARCH|SELECT|SHARED|SOURCE|STABLE|STATIC|SUBKEY|SUFFIX|TABLES|UNWIND|YYMMDD|ASSIGN|BACKUP|BEFORE|BINARY|BIT-OR|BLANKS|CLIENT|CODING|COMMON|DEMAND|DYNPRO|EXCEPT|EXISTS|EXPORT|FIELDS|GLOBAL|GROUPS|LENGTH|LOCALE|MEDIUM|METHOD|MODIFY|NESTED|OTHERS|REJECT|SCROLL|SUPPLY|SYMBOL|ENDFOR|STRLEN|ALIGN|BEGIN|BOUND|ENDAT|ENTRY|EVENT|FINAL|FLUSH|GRANT|INNER|SHORT|USING|WRITE|AFTER|BLACK|BLOCK|CLOCK|COLOR|COUNT|DUMMY|EMPTY|ENDDO|ENDON|GREEN|INDEX|INOUT|LEAVE|LEVEL|LINES|MODIF|ORDER|OUTER|RANGE|RESET|RETRY|RIGHT|SMART|SPLIT|STYLE|TABLE|THROW|UNDER|UNTIL|UPPER|UTF-8|WHERE|ALIAS|BLANK|CLEAR|CLOSE|EXACT|FETCH|FIRST|FOUND|GROUP|LLANG|LOCAL|OTHER|REGEX|SPOOL|TITLE|TYPES|VALID|WHILE|ALPHA|BOXED|CATCH|CHAIN|CHECK|CLASS|COVER|ENDIF|EQUIV|FIELD|FLOOR|FRAME|INPUT|LOWER|MATCH|NODES|PAGES|PRINT|RAISE|ROUND|SHIFT|SPACE|SPOTS|STAMP|STATE|TASKS|TIMES|TRMAC|ULINE|UNION|VALUE|WIDTH|EQUAL|LOG10|TRUNC|BLOB|CASE|CEIL|CLOB|COND|EXIT|FILE|GAPS|HOLD|INCL|INTO|KEEP|KEYS|LAST|LINE|LONG|LPAD|MAIL|MODE|OPEN|PINK|READ|ROWS|TEST|THEN|ZERO|AREA|BACK|BADI|BYTE|CAST|EDIT|EXEC|FAIL|FIND|FKEQ|FONT|FREE|GKEQ|HIDE|INIT|ITNO|LATE|LOOP|MAIN|MARK|MOVE|NEXT|NULL|RISK|ROLE|UNIT|WAIT|ZONE|BASE|CALL|CODE|DATA|DATE|FKGE|GKGE|HIGH|KIND|LEFT|LIST|MASK|MESH|NAME|NODE|PACK|PAGE|POOL|SEND|SIGN|SIZE|SOME|STOP|TASK|TEXT|TIME|USER|VARY|WITH|WORD|BLUE|CONV|COPY|DEEP|ELSE|FORM|FROM|HINT|ICON|JOIN|LIKE|LOAD|ONLY|PART|SCAN|SKIP|SORT|TYPE|UNIX|VIEW|WHEN|WORK|ACOS|ASIN|ATAN|COSH|EACH|FRAC|LESS|RTTI|SINH|SQRT|TANH|AVG|BIT|DIV|ISO|LET|OUT|PAD|SQL|ALL|CI_|CPI|END|LOB|LPI|MAX|MIN|NEW|OLE|RUN|SET|\\?TO|YES|ABS|ADD|AND|BIG|FOR|HDB|JOB|LOW|NOT|SAP|TRY|VIA|XML|ANY|GET|IDS|KEY|MOD|OFF|PUT|RAW|RED|REF|SUM|TAB|XSD|CNT|COS|EXP|LOG|SIN|TAN|XOR|AT|CO|CP|DO|GT|ID|IF|NS|OR|BT|CA|CS|GE|NA|NB|EQ|IN|LT|NE|NO|OF|ON|PF|TO|AS|BY|CN|IS|LE|NP|UP|E|I|M|O|Z|C|X)\\b/i,\n    lookbehind: !0\n  },\n  number: /\\b\\d+\\b/,\n  operator: {\n    pattern: /(\\s)(?:\\*\\*?|<[=>]?|>=?|\\?=|[-+\\/=])(?=\\s)/,\n    lookbehind: !0\n  },\n  \"string-operator\": {\n    pattern: /(\\s)&&?(?=\\s)/,\n    lookbehind: !0,\n    alias: \"keyword\"\n  },\n  \"token-operator\": [{\n    pattern: /(\\w)(?:->?|=>|[~|{}])(?=\\w)/,\n    lookbehind: !0,\n    alias: \"punctuation\"\n  }, {\n    pattern: /[|{}]/,\n    alias: \"punctuation\"\n  }],\n  punctuation: /[,.:()]/\n};","require(\"core-js/modules/es6.regexp.constructor\");\n\n(function (Prism) {\n  var coreRules = '(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)';\n  Prism.languages.abnf = {\n    'comment': /;.*/,\n    'string': {\n      pattern: /(?:%[is])?\"[^\"\\n\\r]*\"/,\n      greedy: true,\n      inside: {\n        'punctuation': /^%[is]/\n      }\n    },\n    'range': {\n      pattern: /%(?:b[01]+-[01]+|d\\d+-\\d+|x[A-F\\d]+-[A-F\\d]+)/i,\n      alias: 'number'\n    },\n    'terminal': {\n      pattern: /%(?:b[01]+(?:\\.[01]+)*|d\\d+(?:\\.\\d+)*|x[A-F\\d]+(?:\\.[A-F\\d]+)*)/i,\n      alias: 'number'\n    },\n    'repetition': {\n      pattern: /(^|[^\\w-])(?:\\d*\\*\\d*|\\d+)/,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    'definition': {\n      pattern: /(^[ \\t]*)(?:[a-z][\\w-]*|<[^>\\r\\n]*>)(?=\\s*=)/m,\n      lookbehind: true,\n      alias: 'keyword',\n      inside: {\n        'punctuation': /<|>/\n      }\n    },\n    'core-rule': {\n      pattern: RegExp('(?:(^|[^<\\\\w-])' + coreRules + '|<' + coreRules + '>)(?![\\\\w-])', 'i'),\n      lookbehind: true,\n      alias: ['rule', 'constant'],\n      inside: {\n        'punctuation': /<|>/\n      }\n    },\n    'rule': {\n      pattern: /(^|[^<\\w-])[a-z][\\w-]*|<[^>\\r\\n]*>/i,\n      lookbehind: true,\n      inside: {\n        'punctuation': /<|>/\n      }\n    },\n    'operator': /=\\/?|\\//,\n    'punctuation': /[()\\[\\]]/\n  };\n})(Prism);","require(\"core-js/modules/es6.regexp.constructor\");\n\n!function (n) {\n  var i = \"(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)\";\n  Prism.languages.abnf = {\n    comment: /;.*/,\n    string: {\n      pattern: /(?:%[is])?\"[^\"\\n\\r]*\"/,\n      greedy: !0,\n      inside: {\n        punctuation: /^%[is]/\n      }\n    },\n    range: {\n      pattern: /%(?:b[01]+-[01]+|d\\d+-\\d+|x[A-F\\d]+-[A-F\\d]+)/i,\n      alias: \"number\"\n    },\n    terminal: {\n      pattern: /%(?:b[01]+(?:\\.[01]+)*|d\\d+(?:\\.\\d+)*|x[A-F\\d]+(?:\\.[A-F\\d]+)*)/i,\n      alias: \"number\"\n    },\n    repetition: {\n      pattern: /(^|[^\\w-])(?:\\d*\\*\\d*|\\d+)/,\n      lookbehind: !0,\n      alias: \"operator\"\n    },\n    definition: {\n      pattern: /(^[ \\t]*)(?:[a-z][\\w-]*|<[^>\\r\\n]*>)(?=\\s*=)/m,\n      lookbehind: !0,\n      alias: \"keyword\",\n      inside: {\n        punctuation: /<|>/\n      }\n    },\n    \"core-rule\": {\n      pattern: RegExp(\"(?:(^|[^<\\\\w-])\" + i + \"|<\" + i + \">)(?![\\\\w-])\", \"i\"),\n      lookbehind: !0,\n      alias: [\"rule\", \"constant\"],\n      inside: {\n        punctuation: /<|>/\n      }\n    },\n    rule: {\n      pattern: /(^|[^<\\w-])[a-z][\\w-]*|<[^>\\r\\n]*>/i,\n      lookbehind: !0,\n      inside: {\n        punctuation: /<|>/\n      }\n    },\n    operator: /=\\/?|\\//,\n    punctuation: /[()\\[\\]]/\n  };\n}();","Prism.languages.actionscript = Prism.languages.extend('javascript', {\n  'keyword': /\\b(?:as|break|case|catch|class|const|default|delete|do|else|extends|finally|for|function|if|implements|import|in|instanceof|interface|internal|is|native|new|null|package|private|protected|public|return|super|switch|this|throw|try|typeof|use|var|void|while|with|dynamic|each|final|get|include|namespace|native|override|set|static)\\b/,\n  'operator': /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n});\nPrism.languages.actionscript['class-name'].alias = 'function';\n\nif (Prism.languages.markup) {\n  Prism.languages.insertBefore('actionscript', 'string', {\n    'xml': {\n      pattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n      lookbehind: true,\n      inside: {\n        rest: Prism.languages.markup\n      }\n    }\n  });\n}","Prism.languages.actionscript = Prism.languages.extend(\"javascript\", {\n  keyword: /\\b(?:as|break|case|catch|class|const|default|delete|do|else|extends|finally|for|function|if|implements|import|in|instanceof|interface|internal|is|native|new|null|package|private|protected|public|return|super|switch|this|throw|try|typeof|use|var|void|while|with|dynamic|each|final|get|include|namespace|native|override|set|static)\\b/,\n  operator: /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n}), Prism.languages.actionscript[\"class-name\"].alias = \"function\", Prism.languages.markup && Prism.languages.insertBefore(\"actionscript\", \"string\", {\n  xml: {\n    pattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n    lookbehind: !0,\n    inside: {\n      rest: Prism.languages.markup\n    }\n  }\n});","Prism.languages.ada = {\n  'comment': /--.*/,\n  'string': /\"(?:\"\"|[^\"\\r\\f\\n])*\"/i,\n  'number': [{\n    pattern: /\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i\n  }, {\n    pattern: /\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i\n  }],\n  'attr-name': /\\b'\\w+/i,\n  'keyword': /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|new|return|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\n  'boolean': /\\b(?:true|false)\\b/i,\n  'operator': /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,\n  'punctuation': /\\.\\.?|[,;():]/,\n  'char': /'.'/,\n  'variable': /\\b[a-z](?:[_a-z\\d])*\\b/i\n};","Prism.languages.ada = {\n  comment: /--.*/,\n  string: /\"(?:\"\"|[^\"\\r\\f\\n])*\"/i,\n  number: [{\n    pattern: /\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i\n  }, {\n    pattern: /\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i\n  }],\n  \"attr-name\": /\\b'\\w+/i,\n  keyword: /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|new|return|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\n  boolean: /\\b(?:true|false)\\b/i,\n  operator: /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,\n  punctuation: /\\.\\.?|[,;():]/,\n  char: /'.'/,\n  variable: /\\b[a-z](?:[_a-z\\d])*\\b/i\n};","Prism.languages.apacheconf = {\n  'comment': /#.*/,\n  'directive-inline': {\n    pattern: /(^\\s*)\\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|Add(?:Alt|AltByEncoding|AltByType|Charset|DefaultCharset|Description|Encoding|Handler|Icon|IconByEncoding|IconByType|InputFilter|Language|ModuleInfo|OutputFilter|OutputFilterByType|Type)|Alias|AliasMatch|Allow(?:CONNECT|EncodedSlashes|Methods|Override|OverrideList)?|Anonymous(?:_LogEmail|_MustGiveEmail|_NoUserID|_VerifyEmail)?|AsyncRequestWorkerFactor|Auth(?:BasicAuthoritative|BasicFake|BasicProvider|BasicUseDigestAlgorithm|DBDUserPWQuery|DBDUserRealmQuery|DBMGroupFile|DBMType|DBMUserFile|Digest(?:Algorithm|Domain|NonceLifetime|Provider|Qop|ShmemSize)|Form(?:Authoritative|Body|DisableNoStore|FakeBasicAuth|Location|LoginRequiredLocation|LoginSuccessLocation|LogoutLocation|Method|Mimetype|Password|Provider|SitePassphrase|Size|Username)|GroupFile|LDAP(?:AuthorizePrefix|BindAuthoritative|BindDN|BindPassword|CharsetConfig|CompareAsUser|CompareDNOnServer|DereferenceAliases|GroupAttribute|GroupAttributeIsDN|InitialBindAsUser|InitialBindPattern|MaxSubGroupDepth|RemoteUserAttribute|RemoteUserIsDN|SearchAsUser|SubGroupAttribute|SubGroupClass|Url)|Merging|Name|Type|UserFile|nCache(?:Context|Enable|ProvideFor|SOCache|Timeout)|nzFcgiCheckAuthnProvider|nzFcgiDefineProvider|zDBDLoginToReferer|zDBDQuery|zDBDRedirectQuery|zDBMType|zSendForbiddenOnFailure)|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferSize|BufferedLogs|CGIDScriptTimeout|CGIMapExtension|Cache(?:DefaultExpire|DetailHeader|DirLength|DirLevels|Disable|Enable|File|Header|IgnoreCacheControl|IgnoreHeaders|IgnoreNoLastMod|IgnoreQueryString|IgnoreURLSessionIdentifiers|KeyBaseURL|LastModifiedFactor|Lock|LockMaxAge|LockPath|MaxExpire|MaxFileSize|MinExpire|MinFileSize|NegotiatedDocs|QuickHandler|ReadSize|ReadTime|Root|Socache(?:MaxSize|MaxTime|MinTime|ReadSize|ReadTime)?|StaleOnError|StoreExpired|StoreNoStore|StorePrivate)|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DTracePrivileges|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|Deflate(?:BufferSize|CompressionLevel|FilterNote|InflateLimitRequestBody|InflateRatio(?:Burst|Limit)|MemLevel|WindowSize)|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtFilterDefine|ExtFilterOptions|ExtendedStatus|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|Heartbeat(?:Address|Listen|MaxServers|Storage)|HostnameLookups|ISAPI(?:AppendLogToErrors|AppendLogToQuery|CacheFile|FakeAsync|LogNotSupported|ReadAheadBuffer)|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|Index(?:HeadInsert|Ignore|IgnoreReset|Options|OrderDefault|StyleSheet)|InputSed|KeepAlive|KeepAliveTimeout|KeptBodySize|LDAP(?:CacheEntries|CacheTTL|ConnectionPoolTTL|ConnectionTimeout|LibraryDebug|OpCacheEntries|OpCacheTTL|ReferralHopLimit|Referrals|Retries|RetryDelay|SharedCacheFile|SharedCacheSize|Timeout|TrustedClientCert|TrustedGlobalCert|TrustedMode|VerifyServerCert)|LanguagePriority|Limit(?:InternalRecursion|Request(?:Body|FieldSize|Fields|Line)|XMLRequestBody)|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|Lua(?:Hook(?:AccessChecker|AuthChecker|CheckUserID|Fixups|InsertFilter|Log|MapToStorage|TranslateName|TypeChecker)|Inherit|InputFilter|MapHandler|OutputFilter|PackageCPath|PackagePath|QuickHandler|Root|Scope)|MMapFile|Max(?:ConnectionsPerChild|KeepAliveRequests|MemFree|RangeOverlaps|RangeReversals|Ranges|RequestWorkers|SpareServers|SpareThreads|Threads)|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|ModMimeUsePathInfo|ModemStandard|MultiviewsMatch|Mutex|NWSSLTrustedCerts|NWSSLUpgradeable|NameVirtualHost|NoProxy|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|Proxy(?:AddHeaders|BadHeader|Block|Domain|ErrorOverride|ExpressDBMFile|ExpressDBMType|ExpressEnable|FtpDirCharset|FtpEscapeWildcards|FtpListOnWildcard|HTML(?:BufSize|CharsetOut|DocType|Enable|Events|Extended|Fixups|Interp|Links|Meta|StripComments|URLMap)|IOBufferSize|MaxForwards|Pass(?:Inherit|InterpolateEnv|Match|Reverse|ReverseCookieDomain|ReverseCookiePath)?|PreserveHost|ReceiveBufferSize|Remote|RemoteMatch|Requests|SCGIInternalRedirect|SCGISendfile|Set|SourceAddress|Status|Timeout|Via)|RLimitCPU|RLimitMEM|RLimitNPROC|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIP(?:Header|InternalProxy|InternalProxyList|ProxiesHeader|TrustedProxy|TrustedProxyList)|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|Rewrite(?:Base|Cond|Engine|Map|Options|Rule)|SSIETag|SSIEndTag|SSIErrorMsg|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSL(?:CACertificateFile|CACertificatePath|CADNRequestFile|CADNRequestPath|CARevocationCheck|CARevocationFile|CARevocationPath|CertificateChainFile|CertificateFile|CertificateKeyFile|CipherSuite|Compression|CryptoDevice|Engine|FIPS|HonorCipherOrder|InsecureRenegotiation|OCSP(?:DefaultResponder|Enable|OverrideResponder|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|UseRequestNonce)|OpenSSLConfCmd|Options|PassPhraseDialog|Protocol|Proxy(?:CACertificateFile|CACertificatePath|CARevocation(?:Check|File|Path)|CheckPeer(?:CN|Expire|Name)|CipherSuite|Engine|MachineCertificate(?:ChainFile|File|Path)|Protocol|Verify|VerifyDepth)|RandomSeed|RenegBufferSize|Require|RequireSSL|SRPUnknownUserSeed|SRPVerifierFile|Session(?:Cache|CacheTimeout|TicketKeyFile|Tickets)|Stapling(?:Cache|ErrorCacheTimeout|FakeTryLater|ForceURL|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|ReturnResponderErrors|StandardCacheTimeout)|StrictSNIVHostCheck|UseStapling|UserName|VerifyClient|VerifyDepth)|Satisfy|ScoreBoardFile|Script(?:Alias|AliasMatch|InterpreterSource|Log|LogBuffer|LogLength|Sock)?|SecureListen|SeeRequestTail|SendBufferSize|Server(?:Admin|Alias|Limit|Name|Path|Root|Signature|Tokens)|Session(?:Cookie(?:Name|Name2|Remove)|Crypto(?:Cipher|Driver|Passphrase|PassphraseFile)|DBD(?:CookieName|CookieName2|CookieRemove|DeleteLabel|InsertLabel|PerUser|SelectLabel|UpdateLabel)|Env|Exclude|Header|Include|MaxAge)?|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadStackSize|ThreadsPerChild|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|Virtual(?:DocumentRoot|ScriptAlias)(?:IP)?|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\\b/im,\n    lookbehind: true,\n    alias: 'property'\n  },\n  'directive-block': {\n    pattern: /<\\/?\\b(?:Auth[nz]ProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|Require(?:All|Any|None)|VirtualHost)\\b *.*>/i,\n    inside: {\n      'directive-block': {\n        pattern: /^<\\/?\\w+/,\n        inside: {\n          'punctuation': /^<\\/?/\n        },\n        alias: 'tag'\n      },\n      'directive-block-parameter': {\n        pattern: /.*[^>]/,\n        inside: {\n          'punctuation': /:/,\n          'string': {\n            pattern: /(\"|').*\\1/,\n            inside: {\n              'variable': /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n            }\n          }\n        },\n        alias: 'attr-value'\n      },\n      'punctuation': />/\n    },\n    alias: 'tag'\n  },\n  'directive-flags': {\n    pattern: /\\[(?:\\w,?)+\\]/,\n    alias: 'keyword'\n  },\n  'string': {\n    pattern: /(\"|').*\\1/,\n    inside: {\n      'variable': /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n    }\n  },\n  'variable': /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/,\n  'regex': /\\^?.*\\$|\\^.*\\$?/\n};","Prism.languages.apacheconf = {\n  comment: /#.*/,\n  \"directive-inline\": {\n    pattern: /(^\\s*)\\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|Add(?:Alt|AltByEncoding|AltByType|Charset|DefaultCharset|Description|Encoding|Handler|Icon|IconByEncoding|IconByType|InputFilter|Language|ModuleInfo|OutputFilter|OutputFilterByType|Type)|Alias|AliasMatch|Allow(?:CONNECT|EncodedSlashes|Methods|Override|OverrideList)?|Anonymous(?:_LogEmail|_MustGiveEmail|_NoUserID|_VerifyEmail)?|AsyncRequestWorkerFactor|Auth(?:BasicAuthoritative|BasicFake|BasicProvider|BasicUseDigestAlgorithm|DBDUserPWQuery|DBDUserRealmQuery|DBMGroupFile|DBMType|DBMUserFile|Digest(?:Algorithm|Domain|NonceLifetime|Provider|Qop|ShmemSize)|Form(?:Authoritative|Body|DisableNoStore|FakeBasicAuth|Location|LoginRequiredLocation|LoginSuccessLocation|LogoutLocation|Method|Mimetype|Password|Provider|SitePassphrase|Size|Username)|GroupFile|LDAP(?:AuthorizePrefix|BindAuthoritative|BindDN|BindPassword|CharsetConfig|CompareAsUser|CompareDNOnServer|DereferenceAliases|GroupAttribute|GroupAttributeIsDN|InitialBindAsUser|InitialBindPattern|MaxSubGroupDepth|RemoteUserAttribute|RemoteUserIsDN|SearchAsUser|SubGroupAttribute|SubGroupClass|Url)|Merging|Name|Type|UserFile|nCache(?:Context|Enable|ProvideFor|SOCache|Timeout)|nzFcgiCheckAuthnProvider|nzFcgiDefineProvider|zDBDLoginToReferer|zDBDQuery|zDBDRedirectQuery|zDBMType|zSendForbiddenOnFailure)|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferSize|BufferedLogs|CGIDScriptTimeout|CGIMapExtension|Cache(?:DefaultExpire|DetailHeader|DirLength|DirLevels|Disable|Enable|File|Header|IgnoreCacheControl|IgnoreHeaders|IgnoreNoLastMod|IgnoreQueryString|IgnoreURLSessionIdentifiers|KeyBaseURL|LastModifiedFactor|Lock|LockMaxAge|LockPath|MaxExpire|MaxFileSize|MinExpire|MinFileSize|NegotiatedDocs|QuickHandler|ReadSize|ReadTime|Root|Socache(?:MaxSize|MaxTime|MinTime|ReadSize|ReadTime)?|StaleOnError|StoreExpired|StoreNoStore|StorePrivate)|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DTracePrivileges|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|Deflate(?:BufferSize|CompressionLevel|FilterNote|InflateLimitRequestBody|InflateRatio(?:Burst|Limit)|MemLevel|WindowSize)|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtFilterDefine|ExtFilterOptions|ExtendedStatus|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|Heartbeat(?:Address|Listen|MaxServers|Storage)|HostnameLookups|ISAPI(?:AppendLogToErrors|AppendLogToQuery|CacheFile|FakeAsync|LogNotSupported|ReadAheadBuffer)|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|Index(?:HeadInsert|Ignore|IgnoreReset|Options|OrderDefault|StyleSheet)|InputSed|KeepAlive|KeepAliveTimeout|KeptBodySize|LDAP(?:CacheEntries|CacheTTL|ConnectionPoolTTL|ConnectionTimeout|LibraryDebug|OpCacheEntries|OpCacheTTL|ReferralHopLimit|Referrals|Retries|RetryDelay|SharedCacheFile|SharedCacheSize|Timeout|TrustedClientCert|TrustedGlobalCert|TrustedMode|VerifyServerCert)|LanguagePriority|Limit(?:InternalRecursion|Request(?:Body|FieldSize|Fields|Line)|XMLRequestBody)|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|Lua(?:Hook(?:AccessChecker|AuthChecker|CheckUserID|Fixups|InsertFilter|Log|MapToStorage|TranslateName|TypeChecker)|Inherit|InputFilter|MapHandler|OutputFilter|PackageCPath|PackagePath|QuickHandler|Root|Scope)|MMapFile|Max(?:ConnectionsPerChild|KeepAliveRequests|MemFree|RangeOverlaps|RangeReversals|Ranges|RequestWorkers|SpareServers|SpareThreads|Threads)|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|ModMimeUsePathInfo|ModemStandard|MultiviewsMatch|Mutex|NWSSLTrustedCerts|NWSSLUpgradeable|NameVirtualHost|NoProxy|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|Proxy(?:AddHeaders|BadHeader|Block|Domain|ErrorOverride|ExpressDBMFile|ExpressDBMType|ExpressEnable|FtpDirCharset|FtpEscapeWildcards|FtpListOnWildcard|HTML(?:BufSize|CharsetOut|DocType|Enable|Events|Extended|Fixups|Interp|Links|Meta|StripComments|URLMap)|IOBufferSize|MaxForwards|Pass(?:Inherit|InterpolateEnv|Match|Reverse|ReverseCookieDomain|ReverseCookiePath)?|PreserveHost|ReceiveBufferSize|Remote|RemoteMatch|Requests|SCGIInternalRedirect|SCGISendfile|Set|SourceAddress|Status|Timeout|Via)|RLimitCPU|RLimitMEM|RLimitNPROC|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIP(?:Header|InternalProxy|InternalProxyList|ProxiesHeader|TrustedProxy|TrustedProxyList)|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|Rewrite(?:Base|Cond|Engine|Map|Options|Rule)|SSIETag|SSIEndTag|SSIErrorMsg|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSL(?:CACertificateFile|CACertificatePath|CADNRequestFile|CADNRequestPath|CARevocationCheck|CARevocationFile|CARevocationPath|CertificateChainFile|CertificateFile|CertificateKeyFile|CipherSuite|Compression|CryptoDevice|Engine|FIPS|HonorCipherOrder|InsecureRenegotiation|OCSP(?:DefaultResponder|Enable|OverrideResponder|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|UseRequestNonce)|OpenSSLConfCmd|Options|PassPhraseDialog|Protocol|Proxy(?:CACertificateFile|CACertificatePath|CARevocation(?:Check|File|Path)|CheckPeer(?:CN|Expire|Name)|CipherSuite|Engine|MachineCertificate(?:ChainFile|File|Path)|Protocol|Verify|VerifyDepth)|RandomSeed|RenegBufferSize|Require|RequireSSL|SRPUnknownUserSeed|SRPVerifierFile|Session(?:Cache|CacheTimeout|TicketKeyFile|Tickets)|Stapling(?:Cache|ErrorCacheTimeout|FakeTryLater|ForceURL|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|ReturnResponderErrors|StandardCacheTimeout)|StrictSNIVHostCheck|UseStapling|UserName|VerifyClient|VerifyDepth)|Satisfy|ScoreBoardFile|Script(?:Alias|AliasMatch|InterpreterSource|Log|LogBuffer|LogLength|Sock)?|SecureListen|SeeRequestTail|SendBufferSize|Server(?:Admin|Alias|Limit|Name|Path|Root|Signature|Tokens)|Session(?:Cookie(?:Name|Name2|Remove)|Crypto(?:Cipher|Driver|Passphrase|PassphraseFile)|DBD(?:CookieName|CookieName2|CookieRemove|DeleteLabel|InsertLabel|PerUser|SelectLabel|UpdateLabel)|Env|Exclude|Header|Include|MaxAge)?|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadStackSize|ThreadsPerChild|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|Virtual(?:DocumentRoot|ScriptAlias)(?:IP)?|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\\b/im,\n    lookbehind: !0,\n    alias: \"property\"\n  },\n  \"directive-block\": {\n    pattern: /<\\/?\\b(?:Auth[nz]ProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|Require(?:All|Any|None)|VirtualHost)\\b *.*>/i,\n    inside: {\n      \"directive-block\": {\n        pattern: /^<\\/?\\w+/,\n        inside: {\n          punctuation: /^<\\/?/\n        },\n        alias: \"tag\"\n      },\n      \"directive-block-parameter\": {\n        pattern: /.*[^>]/,\n        inside: {\n          punctuation: /:/,\n          string: {\n            pattern: /(\"|').*\\1/,\n            inside: {\n              variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n            }\n          }\n        },\n        alias: \"attr-value\"\n      },\n      punctuation: />/\n    },\n    alias: \"tag\"\n  },\n  \"directive-flags\": {\n    pattern: /\\[(?:\\w,?)+\\]/,\n    alias: \"keyword\"\n  },\n  string: {\n    pattern: /(\"|').*\\1/,\n    inside: {\n      variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n    }\n  },\n  variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/,\n  regex: /\\^?.*\\$|\\^.*\\$?/\n};","Prism.languages.apl = {\n  'comment': /(?:⍝|#[! ]).*$/m,\n  'string': {\n    pattern: /'(?:[^'\\r\\n]|'')*'/,\n    greedy: true\n  },\n  'number': /¯?(?:\\d*\\.?\\d+(?:e[+¯]?\\d+)?|¯|∞)(?:j¯?(?:\\d*\\.?\\d+(?:e[+¯]?\\d+)?|¯|∞))?/i,\n  'statement': /:[A-Z][a-z][A-Za-z]*\\b/,\n  'system-function': {\n    pattern: /⎕[A-Z]+/i,\n    alias: 'function'\n  },\n  'constant': /[⍬⌾#⎕⍞]/,\n  'function': /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,\n  'monadic-operator': {\n    pattern: /[\\\\\\/⌿⍀¨⍨⌶&∥]/,\n    alias: 'operator'\n  },\n  'dyadic-operator': {\n    pattern: /[.⍣⍠⍤∘⌸@⌺]/,\n    alias: 'operator'\n  },\n  'assignment': {\n    pattern: /←/,\n    alias: 'keyword'\n  },\n  'punctuation': /[\\[;\\]()◇⋄]/,\n  'dfn': {\n    pattern: /[{}⍺⍵⍶⍹∇⍫:]/,\n    alias: 'builtin'\n  }\n};","Prism.languages.apl = {\n  comment: /(?:⍝|#[! ]).*$/m,\n  string: {\n    pattern: /'(?:[^'\\r\\n]|'')*'/,\n    greedy: !0\n  },\n  number: /¯?(?:\\d*\\.?\\d+(?:e[+¯]?\\d+)?|¯|∞)(?:j¯?(?:\\d*\\.?\\d+(?:e[+¯]?\\d+)?|¯|∞))?/i,\n  statement: /:[A-Z][a-z][A-Za-z]*\\b/,\n  \"system-function\": {\n    pattern: /⎕[A-Z]+/i,\n    alias: \"function\"\n  },\n  constant: /[⍬⌾#⎕⍞]/,\n  function: /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,\n  \"monadic-operator\": {\n    pattern: /[\\\\\\/⌿⍀¨⍨⌶&∥]/,\n    alias: \"operator\"\n  },\n  \"dyadic-operator\": {\n    pattern: /[.⍣⍠⍤∘⌸@⌺]/,\n    alias: \"operator\"\n  },\n  assignment: {\n    pattern: /←/,\n    alias: \"keyword\"\n  },\n  punctuation: /[\\[;\\]()◇⋄]/,\n  dfn: {\n    pattern: /[{}⍺⍵⍶⍹∇⍫:]/,\n    alias: \"builtin\"\n  }\n};","Prism.languages.applescript = {\n  'comment': [// Allow one level of nesting\n  /\\(\\*(?:\\(\\*[\\s\\S]*?\\*\\)|[\\s\\S])*?\\*\\)/, /--.+/, /#.+/],\n  'string': /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n  'number': /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e-?\\d+)?\\b/i,\n  'operator': [/[&=≠≤≥*+\\-\\/÷^]|[<>]=?/, /\\b(?:(?:start|begin|end)s? with|(?:(?:does not|doesn't) contain|contains?)|(?:is|isn't|is not) (?:in|contained by)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:(?:does not|doesn't) come|comes) (?:before|after)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equals|equal to|isn't|is not)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|or|div|mod|as|not))\\b/],\n  'keyword': /\\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\\b/,\n  'class': {\n    pattern: /\\b(?:alias|application|boolean|class|constant|date|file|integer|list|number|POSIX file|real|record|reference|RGB color|script|text|centimetres|centimeters|feet|inches|kilometres|kilometers|metres|meters|miles|yards|square feet|square kilometres|square kilometers|square metres|square meters|square miles|square yards|cubic centimetres|cubic centimeters|cubic feet|cubic inches|cubic metres|cubic meters|cubic yards|gallons|litres|liters|quarts|grams|kilograms|ounces|pounds|degrees Celsius|degrees Fahrenheit|degrees Kelvin)\\b/,\n    alias: 'builtin'\n  },\n  'punctuation': /[{}():,¬«»《》]/\n};","Prism.languages.applescript = {\n  comment: [/\\(\\*(?:\\(\\*[\\s\\S]*?\\*\\)|[\\s\\S])*?\\*\\)/, /--.+/, /#.+/],\n  string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n  number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e-?\\d+)?\\b/i,\n  operator: [/[&=≠≤≥*+\\-\\/÷^]|[<>]=?/, /\\b(?:(?:start|begin|end)s? with|(?:(?:does not|doesn't) contain|contains?)|(?:is|isn't|is not) (?:in|contained by)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:(?:does not|doesn't) come|comes) (?:before|after)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equals|equal to|isn't|is not)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|or|div|mod|as|not))\\b/],\n  keyword: /\\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\\b/,\n  class: {\n    pattern: /\\b(?:alias|application|boolean|class|constant|date|file|integer|list|number|POSIX file|real|record|reference|RGB color|script|text|centimetres|centimeters|feet|inches|kilometres|kilometers|metres|meters|miles|yards|square feet|square kilometres|square kilometers|square metres|square meters|square miles|square yards|cubic centimetres|cubic centimeters|cubic feet|cubic inches|cubic metres|cubic meters|cubic yards|gallons|litres|liters|quarts|grams|kilograms|ounces|pounds|degrees Celsius|degrees Fahrenheit|degrees Kelvin)\\b/,\n    alias: \"builtin\"\n  },\n  punctuation: /[{}():,¬«»《》]/\n};","Prism.languages.arduino = Prism.languages.extend('cpp', {\n  'keyword': /\\b(?:setup|if|else|while|do|for|return|in|instanceof|default|function|loop|goto|switch|case|new|try|throw|catch|finally|null|break|continue|boolean|bool|void|byte|word|string|String|array|int|long|integer|double)\\b/,\n  'builtin': /\\b(?:KeyboardController|MouseController|SoftwareSerial|EthernetServer|EthernetClient|LiquidCrystal|LiquidCrystal_I2C|RobotControl|GSMVoiceCall|EthernetUDP|EsploraTFT|HttpClient|RobotMotor|WiFiClient|GSMScanner|FileSystem|Scheduler|GSMServer|YunClient|YunServer|IPAddress|GSMClient|GSMModem|Keyboard|Ethernet|Console|GSMBand|Esplora|Stepper|Process|WiFiUDP|GSM_SMS|Mailbox|USBHost|Firmata|PImage|Client|Server|GSMPIN|FileIO|Bridge|Serial|EEPROM|Stream|Mouse|Audio|Servo|File|Task|GPRS|WiFi|Wire|TFT|GSM|SPI|SD|runShellCommandAsynchronously|analogWriteResolution|retrieveCallingNumber|printFirmwareVersion|analogReadResolution|sendDigitalPortPair|noListenOnLocalhost|readJoystickButton|setFirmwareVersion|readJoystickSwitch|scrollDisplayRight|getVoiceCallStatus|scrollDisplayLeft|writeMicroseconds|delayMicroseconds|beginTransmission|getSignalStrength|runAsynchronously|getAsynchronously|listenOnLocalhost|getCurrentCarrier|readAccelerometer|messageAvailable|sendDigitalPorts|lineFollowConfig|countryNameWrite|runShellCommand|readStringUntil|rewindDirectory|readTemperature|setClockDivider|readLightSensor|endTransmission|analogReference|detachInterrupt|countryNameRead|attachInterrupt|encryptionType|readBytesUntil|robotNameWrite|readMicrophone|robotNameRead|cityNameWrite|userNameWrite|readJoystickY|readJoystickX|mouseReleased|openNextFile|scanNetworks|noInterrupts|digitalWrite|beginSpeaker|mousePressed|isActionDone|mouseDragged|displayLogos|noAutoscroll|addParameter|remoteNumber|getModifiers|keyboardRead|userNameRead|waitContinue|processInput|parseCommand|printVersion|readNetworks|writeMessage|blinkVersion|cityNameRead|readMessage|setDataMode|parsePacket|isListening|setBitOrder|beginPacket|isDirectory|motorsWrite|drawCompass|digitalRead|clearScreen|serialEvent|rightToLeft|setTextSize|leftToRight|requestFrom|keyReleased|compassRead|analogWrite|interrupts|WiFiServer|disconnect|playMelody|parseFloat|autoscroll|getPINUsed|setPINUsed|setTimeout|sendAnalog|readSlider|analogRead|beginWrite|createChar|motorsStop|keyPressed|tempoWrite|readButton|subnetMask|debugPrint|macAddress|writeGreen|randomSeed|attachGPRS|readString|sendString|remotePort|releaseAll|mouseMoved|background|getXChange|getYChange|answerCall|getResult|voiceCall|endPacket|constrain|getSocket|writeJSON|getButton|available|connected|findUntil|readBytes|exitValue|readGreen|writeBlue|startLoop|IPAddress|isPressed|sendSysex|pauseMode|gatewayIP|setCursor|getOemKey|tuneWrite|noDisplay|loadImage|switchPIN|onRequest|onReceive|changePIN|playFile|noBuffer|parseInt|overflow|checkPIN|knobRead|beginTFT|bitClear|updateIR|bitWrite|position|writeRGB|highByte|writeRed|setSpeed|readBlue|noStroke|remoteIP|transfer|shutdown|hangCall|beginSMS|endWrite|attached|maintain|noCursor|checkReg|checkPUK|shiftOut|isValid|shiftIn|pulseIn|connect|println|localIP|pinMode|getIMEI|display|noBlink|process|getBand|running|beginSD|drawBMP|lowByte|setBand|release|bitRead|prepare|pointTo|readRed|setMode|noFill|remove|listen|stroke|detach|attach|noTone|exists|buffer|height|bitSet|circle|config|cursor|random|IRread|setDNS|endSMS|getKey|micros|millis|begin|print|write|ready|flush|width|isPIN|blink|clear|press|mkdir|rmdir|close|point|yield|image|BSSID|click|delay|read|text|move|peek|beep|rect|line|open|seek|fill|size|turn|stop|home|find|step|tone|sqrt|RSSI|SSID|end|bit|tan|cos|sin|pow|map|abs|max|min|get|run|put)\\b/,\n  'constant': /\\b(?:DIGITAL_MESSAGE|FIRMATA_STRING|ANALOG_MESSAGE|REPORT_DIGITAL|REPORT_ANALOG|INPUT_PULLUP|SET_PIN_MODE|INTERNAL2V56|SYSTEM_RESET|LED_BUILTIN|INTERNAL1V1|SYSEX_START|INTERNAL|EXTERNAL|DEFAULT|OUTPUT|INPUT|HIGH|LOW)\\b/\n});","Prism.languages.arduino = Prism.languages.extend(\"cpp\", {\n  keyword: /\\b(?:setup|if|else|while|do|for|return|in|instanceof|default|function|loop|goto|switch|case|new|try|throw|catch|finally|null|break|continue|boolean|bool|void|byte|word|string|String|array|int|long|integer|double)\\b/,\n  builtin: /\\b(?:KeyboardController|MouseController|SoftwareSerial|EthernetServer|EthernetClient|LiquidCrystal|LiquidCrystal_I2C|RobotControl|GSMVoiceCall|EthernetUDP|EsploraTFT|HttpClient|RobotMotor|WiFiClient|GSMScanner|FileSystem|Scheduler|GSMServer|YunClient|YunServer|IPAddress|GSMClient|GSMModem|Keyboard|Ethernet|Console|GSMBand|Esplora|Stepper|Process|WiFiUDP|GSM_SMS|Mailbox|USBHost|Firmata|PImage|Client|Server|GSMPIN|FileIO|Bridge|Serial|EEPROM|Stream|Mouse|Audio|Servo|File|Task|GPRS|WiFi|Wire|TFT|GSM|SPI|SD|runShellCommandAsynchronously|analogWriteResolution|retrieveCallingNumber|printFirmwareVersion|analogReadResolution|sendDigitalPortPair|noListenOnLocalhost|readJoystickButton|setFirmwareVersion|readJoystickSwitch|scrollDisplayRight|getVoiceCallStatus|scrollDisplayLeft|writeMicroseconds|delayMicroseconds|beginTransmission|getSignalStrength|runAsynchronously|getAsynchronously|listenOnLocalhost|getCurrentCarrier|readAccelerometer|messageAvailable|sendDigitalPorts|lineFollowConfig|countryNameWrite|runShellCommand|readStringUntil|rewindDirectory|readTemperature|setClockDivider|readLightSensor|endTransmission|analogReference|detachInterrupt|countryNameRead|attachInterrupt|encryptionType|readBytesUntil|robotNameWrite|readMicrophone|robotNameRead|cityNameWrite|userNameWrite|readJoystickY|readJoystickX|mouseReleased|openNextFile|scanNetworks|noInterrupts|digitalWrite|beginSpeaker|mousePressed|isActionDone|mouseDragged|displayLogos|noAutoscroll|addParameter|remoteNumber|getModifiers|keyboardRead|userNameRead|waitContinue|processInput|parseCommand|printVersion|readNetworks|writeMessage|blinkVersion|cityNameRead|readMessage|setDataMode|parsePacket|isListening|setBitOrder|beginPacket|isDirectory|motorsWrite|drawCompass|digitalRead|clearScreen|serialEvent|rightToLeft|setTextSize|leftToRight|requestFrom|keyReleased|compassRead|analogWrite|interrupts|WiFiServer|disconnect|playMelody|parseFloat|autoscroll|getPINUsed|setPINUsed|setTimeout|sendAnalog|readSlider|analogRead|beginWrite|createChar|motorsStop|keyPressed|tempoWrite|readButton|subnetMask|debugPrint|macAddress|writeGreen|randomSeed|attachGPRS|readString|sendString|remotePort|releaseAll|mouseMoved|background|getXChange|getYChange|answerCall|getResult|voiceCall|endPacket|constrain|getSocket|writeJSON|getButton|available|connected|findUntil|readBytes|exitValue|readGreen|writeBlue|startLoop|IPAddress|isPressed|sendSysex|pauseMode|gatewayIP|setCursor|getOemKey|tuneWrite|noDisplay|loadImage|switchPIN|onRequest|onReceive|changePIN|playFile|noBuffer|parseInt|overflow|checkPIN|knobRead|beginTFT|bitClear|updateIR|bitWrite|position|writeRGB|highByte|writeRed|setSpeed|readBlue|noStroke|remoteIP|transfer|shutdown|hangCall|beginSMS|endWrite|attached|maintain|noCursor|checkReg|checkPUK|shiftOut|isValid|shiftIn|pulseIn|connect|println|localIP|pinMode|getIMEI|display|noBlink|process|getBand|running|beginSD|drawBMP|lowByte|setBand|release|bitRead|prepare|pointTo|readRed|setMode|noFill|remove|listen|stroke|detach|attach|noTone|exists|buffer|height|bitSet|circle|config|cursor|random|IRread|setDNS|endSMS|getKey|micros|millis|begin|print|write|ready|flush|width|isPIN|blink|clear|press|mkdir|rmdir|close|point|yield|image|BSSID|click|delay|read|text|move|peek|beep|rect|line|open|seek|fill|size|turn|stop|home|find|step|tone|sqrt|RSSI|SSID|end|bit|tan|cos|sin|pow|map|abs|max|min|get|run|put)\\b/,\n  constant: /\\b(?:DIGITAL_MESSAGE|FIRMATA_STRING|ANALOG_MESSAGE|REPORT_DIGITAL|REPORT_ANALOG|INPUT_PULLUP|SET_PIN_MODE|INTERNAL2V56|SYSTEM_RESET|LED_BUILTIN|INTERNAL1V1|SYSEX_START|INTERNAL|EXTERNAL|DEFAULT|OUTPUT|INPUT|HIGH|LOW)\\b/\n});","Prism.languages.arff = {\n  'comment': /%.*/,\n  'string': {\n    pattern: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'keyword': /@(?:attribute|data|end|relation)\\b/i,\n  'number': /\\b\\d+(?:\\.\\d+)?\\b/,\n  'punctuation': /[{},]/\n};","Prism.languages.arff = {\n  comment: /%.*/,\n  string: {\n    pattern: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  },\n  keyword: /@(?:attribute|data|end|relation)\\b/i,\n  number: /\\b\\d+(?:\\.\\d+)?\\b/,\n  punctuation: /[{},]/\n};","require(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\n(function (Prism) {\n  var attributes = {\n    pattern: /(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\]\\\\]|\\\\.)*\\]|[^\\]\\\\]|\\\\.)*\\]/m,\n    lookbehind: true,\n    inside: {\n      'quoted': {\n        pattern: /([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n        inside: {\n          'punctuation': /^[$`]|[$`]$/\n        }\n      },\n      'interpreted': {\n        pattern: /'(?:[^'\\\\]|\\\\.)*'/,\n        inside: {\n          'punctuation': /^'|'$/ // See rest below\n\n        }\n      },\n      'string': /\"(?:[^\"\\\\]|\\\\.)*\"/,\n      'variable': /\\w+(?==)/,\n      'punctuation': /^\\[|\\]$|,/,\n      'operator': /=/,\n      // The negative look-ahead prevents blank matches\n      'attr-value': /(?!^\\s+$).+/\n    }\n  };\n  var asciidoc = Prism.languages.asciidoc = {\n    'comment-block': {\n      pattern: /^(\\/{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1/m,\n      alias: 'comment'\n    },\n    'table': {\n      pattern: /^\\|={3,}(?:(?:\\r?\\n|\\r).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,\n      inside: {\n        'specifiers': {\n          pattern: /(?!\\|)(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*])?(?:[<^>](?:\\.[<^>])?|\\.[<^>])?[a-z]*)(?=\\|)/,\n          alias: 'attr-value'\n        },\n        'punctuation': {\n          pattern: /(^|[^\\\\])[|!]=*/,\n          lookbehind: true // See rest below\n\n        }\n      }\n    },\n    'passthrough-block': {\n      pattern: /^(\\+{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n      inside: {\n        'punctuation': /^\\++|\\++$/ // See rest below\n\n      }\n    },\n    // Literal blocks and listing blocks\n    'literal-block': {\n      pattern: /^(-{4,}|\\.{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n      inside: {\n        'punctuation': /^(?:-+|\\.+)|(?:-+|\\.+)$/ // See rest below\n\n      }\n    },\n    // Sidebar blocks, quote blocks, example blocks and open blocks\n    'other-block': {\n      pattern: /^(--|\\*{4,}|_{4,}|={4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n      inside: {\n        'punctuation': /^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/ // See rest below\n\n      }\n    },\n    // list-punctuation and list-label must appear before indented-block\n    'list-punctuation': {\n      pattern: /(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'list-label': {\n      pattern: /(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    'indented-block': {\n      pattern: /((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,\n      lookbehind: true\n    },\n    'comment': /^\\/\\/.*/m,\n    'title': {\n      pattern: /^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} +.+|^\\.(?![\\s.]).*/m,\n      alias: 'important',\n      inside: {\n        'punctuation': /^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/ // See rest below\n\n      }\n    },\n    'attribute-entry': {\n      pattern: /^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,\n      alias: 'tag'\n    },\n    'attributes': attributes,\n    'hr': {\n      pattern: /^'{3,}$/m,\n      alias: 'punctuation'\n    },\n    'page-break': {\n      pattern: /^<{3,}$/m,\n      alias: 'punctuation'\n    },\n    'admonition': {\n      pattern: /^(?:TIP|NOTE|IMPORTANT|WARNING|CAUTION):/m,\n      alias: 'keyword'\n    },\n    'callout': [{\n      pattern: /(^[ \\t]*)<?\\d*>/m,\n      lookbehind: true,\n      alias: 'symbol'\n    }, {\n      pattern: /<\\d+>/,\n      alias: 'symbol'\n    }],\n    'macro': {\n      pattern: /\\b[a-z\\d][a-z\\d-]*::?(?:(?:\\S+)??\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n      inside: {\n        'function': /^[a-z\\d-]+(?=:)/,\n        'punctuation': /^::?/,\n        'attributes': {\n          pattern: /(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n          inside: attributes.inside\n        }\n      }\n    },\n    'inline': {\n      /*\n      The initial look-behind prevents the highlighting of escaped quoted text.\n      \tQuoted text can be multi-line but cannot span an empty line.\n      All quoted text can have attributes before [foobar, 'foobar', baz=\"bar\"].\n      \tFirst, we handle the constrained quotes.\n      Those must be bounded by non-word chars and cannot have spaces between the delimiter and the first char.\n      They are, in order: _emphasis_, ``double quotes'', `single quotes', `monospace`, 'emphasis', *strong*, +monospace+ and #unquoted#\n      \tThen we handle the unconstrained quotes.\n      Those do not have the restrictions of the constrained quotes.\n      They are, in order: __emphasis__, **strong**, ++monospace++, +++passthrough+++, ##unquoted##, $$passthrough$$, ~subscript~, ^superscript^, {attribute-reference}, [[anchor]], [[[bibliography anchor]]], <<xref>>, (((indexes))) and ((indexes))\n       */\n      pattern: /(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?: ['`]|.)+?(?:(?:\\r?\\n|\\r)(?: ['`]|.)+?)*['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,\n      lookbehind: true,\n      inside: {\n        'attributes': attributes,\n        'url': {\n          pattern: /^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,\n          inside: {\n            'punctuation': /^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/\n          }\n        },\n        'attribute-ref': {\n          pattern: /^\\{.+\\}$/,\n          inside: {\n            'variable': {\n              pattern: /(^\\{)[a-z\\d,+_-]+/,\n              lookbehind: true\n            },\n            'operator': /^[=?!#%@$]|!(?=[:}])/,\n            'punctuation': /^\\{|\\}$|::?/\n          }\n        },\n        'italic': {\n          pattern: /^(['_])[\\s\\S]+\\1$/,\n          inside: {\n            'punctuation': /^(?:''?|__?)|(?:''?|__?)$/\n          }\n        },\n        'bold': {\n          pattern: /^\\*[\\s\\S]+\\*$/,\n          inside: {\n            punctuation: /^\\*\\*?|\\*\\*?$/\n          }\n        },\n        'punctuation': /^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/\n      }\n    },\n    'replacement': {\n      pattern: /\\((?:C|TM|R)\\)/,\n      alias: 'builtin'\n    },\n    'entity': /&#?[\\da-z]{1,8};/i,\n    'line-continuation': {\n      pattern: /(^| )\\+$/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    }\n  }; // Allow some nesting. There is no recursion though, so cloning should not be needed.\n\n  function copyFromAsciiDoc(keys) {\n    keys = keys.split(' ');\n    var o = {};\n\n    for (var i = 0, l = keys.length; i < l; i++) {\n      o[keys[i]] = asciidoc[keys[i]];\n    }\n\n    return o;\n  }\n\n  attributes.inside['interpreted'].inside.rest = copyFromAsciiDoc('macro inline replacement entity');\n  asciidoc['passthrough-block'].inside.rest = copyFromAsciiDoc('macro');\n  asciidoc['literal-block'].inside.rest = copyFromAsciiDoc('callout');\n  asciidoc['table'].inside.rest = copyFromAsciiDoc('comment-block passthrough-block literal-block other-block list-punctuation indented-block comment title attribute-entry attributes hr page-break admonition list-label callout macro inline replacement entity line-continuation');\n  asciidoc['other-block'].inside.rest = copyFromAsciiDoc('table list-punctuation indented-block comment attribute-entry attributes hr page-break admonition list-label macro inline replacement entity line-continuation');\n  asciidoc['title'].inside.rest = copyFromAsciiDoc('macro inline replacement entity'); // Plugin to make entity title show the real entity, idea by Roman Komarov\n\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type === 'entity') {\n      env.attributes['title'] = env.content.replace(/&amp;/, '&');\n    }\n  });\n  Prism.languages.adoc = Prism.languages.asciidoc;\n})(Prism);","require(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\n!function (t) {\n  var n = {\n    pattern: /(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\]\\\\]|\\\\.)*\\]|[^\\]\\\\]|\\\\.)*\\]/m,\n    lookbehind: !0,\n    inside: {\n      quoted: {\n        pattern: /([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n        inside: {\n          punctuation: /^[$`]|[$`]$/\n        }\n      },\n      interpreted: {\n        pattern: /'(?:[^'\\\\]|\\\\.)*'/,\n        inside: {\n          punctuation: /^'|'$/\n        }\n      },\n      string: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n      variable: /\\w+(?==)/,\n      punctuation: /^\\[|\\]$|,/,\n      operator: /=/,\n      \"attr-value\": /(?!^\\s+$).+/\n    }\n  },\n      a = t.languages.asciidoc = {\n    \"comment-block\": {\n      pattern: /^(\\/{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1/m,\n      alias: \"comment\"\n    },\n    table: {\n      pattern: /^\\|={3,}(?:(?:\\r?\\n|\\r).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,\n      inside: {\n        specifiers: {\n          pattern: /(?!\\|)(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*])?(?:[<^>](?:\\.[<^>])?|\\.[<^>])?[a-z]*)(?=\\|)/,\n          alias: \"attr-value\"\n        },\n        punctuation: {\n          pattern: /(^|[^\\\\])[|!]=*/,\n          lookbehind: !0\n        }\n      }\n    },\n    \"passthrough-block\": {\n      pattern: /^(\\+{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n      inside: {\n        punctuation: /^\\++|\\++$/\n      }\n    },\n    \"literal-block\": {\n      pattern: /^(-{4,}|\\.{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n      inside: {\n        punctuation: /^(?:-+|\\.+)|(?:-+|\\.+)$/\n      }\n    },\n    \"other-block\": {\n      pattern: /^(--|\\*{4,}|_{4,}|={4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n      inside: {\n        punctuation: /^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/\n      }\n    },\n    \"list-punctuation\": {\n      pattern: /(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,\n      lookbehind: !0,\n      alias: \"punctuation\"\n    },\n    \"list-label\": {\n      pattern: /(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,\n      lookbehind: !0,\n      alias: \"symbol\"\n    },\n    \"indented-block\": {\n      pattern: /((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,\n      lookbehind: !0\n    },\n    comment: /^\\/\\/.*/m,\n    title: {\n      pattern: /^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} +.+|^\\.(?![\\s.]).*/m,\n      alias: \"important\",\n      inside: {\n        punctuation: /^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/\n      }\n    },\n    \"attribute-entry\": {\n      pattern: /^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,\n      alias: \"tag\"\n    },\n    attributes: n,\n    hr: {\n      pattern: /^'{3,}$/m,\n      alias: \"punctuation\"\n    },\n    \"page-break\": {\n      pattern: /^<{3,}$/m,\n      alias: \"punctuation\"\n    },\n    admonition: {\n      pattern: /^(?:TIP|NOTE|IMPORTANT|WARNING|CAUTION):/m,\n      alias: \"keyword\"\n    },\n    callout: [{\n      pattern: /(^[ \\t]*)<?\\d*>/m,\n      lookbehind: !0,\n      alias: \"symbol\"\n    }, {\n      pattern: /<\\d+>/,\n      alias: \"symbol\"\n    }],\n    macro: {\n      pattern: /\\b[a-z\\d][a-z\\d-]*::?(?:(?:\\S+)??\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n      inside: {\n        function: /^[a-z\\d-]+(?=:)/,\n        punctuation: /^::?/,\n        attributes: {\n          pattern: /(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n          inside: n.inside\n        }\n      }\n    },\n    inline: {\n      pattern: /(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?: ['`]|.)+?(?:(?:\\r?\\n|\\r)(?: ['`]|.)+?)*['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,\n      lookbehind: !0,\n      inside: {\n        attributes: n,\n        url: {\n          pattern: /^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,\n          inside: {\n            punctuation: /^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/\n          }\n        },\n        \"attribute-ref\": {\n          pattern: /^\\{.+\\}$/,\n          inside: {\n            variable: {\n              pattern: /(^\\{)[a-z\\d,+_-]+/,\n              lookbehind: !0\n            },\n            operator: /^[=?!#%@$]|!(?=[:}])/,\n            punctuation: /^\\{|\\}$|::?/\n          }\n        },\n        italic: {\n          pattern: /^(['_])[\\s\\S]+\\1$/,\n          inside: {\n            punctuation: /^(?:''?|__?)|(?:''?|__?)$/\n          }\n        },\n        bold: {\n          pattern: /^\\*[\\s\\S]+\\*$/,\n          inside: {\n            punctuation: /^\\*\\*?|\\*\\*?$/\n          }\n        },\n        punctuation: /^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/\n      }\n    },\n    replacement: {\n      pattern: /\\((?:C|TM|R)\\)/,\n      alias: \"builtin\"\n    },\n    entity: /&#?[\\da-z]{1,8};/i,\n    \"line-continuation\": {\n      pattern: /(^| )\\+$/m,\n      lookbehind: !0,\n      alias: \"punctuation\"\n    }\n  };\n\n  function i(t) {\n    for (var n = {}, i = 0, e = (t = t.split(\" \")).length; i < e; i++) {\n      n[t[i]] = a[t[i]];\n    }\n\n    return n;\n  }\n\n  n.inside.interpreted.inside.rest = i(\"macro inline replacement entity\"), a[\"passthrough-block\"].inside.rest = i(\"macro\"), a[\"literal-block\"].inside.rest = i(\"callout\"), a.table.inside.rest = i(\"comment-block passthrough-block literal-block other-block list-punctuation indented-block comment title attribute-entry attributes hr page-break admonition list-label callout macro inline replacement entity line-continuation\"), a[\"other-block\"].inside.rest = i(\"table list-punctuation indented-block comment attribute-entry attributes hr page-break admonition list-label macro inline replacement entity line-continuation\"), a.title.inside.rest = i(\"macro inline replacement entity\"), t.hooks.add(\"wrap\", function (t) {\n    \"entity\" === t.type && (t.attributes.title = t.content.replace(/&amp;/, \"&\"));\n  }), t.languages.adoc = t.languages.asciidoc;\n}(Prism);","Prism.languages.asm6502 = {\n  'comment': /;.*/,\n  'directive': {\n    pattern: /\\.\\w+(?= )/,\n    alias: 'keyword'\n  },\n  'string': /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n  'opcode': {\n    pattern: /\\b(?:adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya|ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA)\\b/,\n    alias: 'property'\n  },\n  'hexnumber': {\n    pattern: /#?\\$[\\da-f]{2,4}/i,\n    alias: 'string'\n  },\n  'binarynumber': {\n    pattern: /#?%[01]+/,\n    alias: 'string'\n  },\n  'decimalnumber': {\n    pattern: /#?\\d+/,\n    alias: 'string'\n  },\n  'register': {\n    pattern: /\\b[xya]\\b/i,\n    alias: 'variable'\n  }\n};","Prism.languages.asm6502 = {\n  comment: /;.*/,\n  directive: {\n    pattern: /\\.\\w+(?= )/,\n    alias: \"keyword\"\n  },\n  string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n  opcode: {\n    pattern: /\\b(?:adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya|ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA)\\b/,\n    alias: \"property\"\n  },\n  hexnumber: {\n    pattern: /#?\\$[\\da-f]{2,4}/i,\n    alias: \"string\"\n  },\n  binarynumber: {\n    pattern: /#?%[01]+/,\n    alias: \"string\"\n  },\n  decimalnumber: {\n    pattern: /#?\\d+/,\n    alias: \"string\"\n  },\n  register: {\n    pattern: /\\b[xya]\\b/i,\n    alias: \"variable\"\n  }\n};","Prism.languages.aspnet = Prism.languages.extend('markup', {\n  'page-directive tag': {\n    pattern: /<%\\s*@.*%>/i,\n    inside: {\n      'page-directive tag': /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n      rest: Prism.languages.markup.tag.inside\n    }\n  },\n  'directive tag': {\n    pattern: /<%.*%>/i,\n    inside: {\n      'directive tag': /<%\\s*?[$=%#:]{0,2}|%>/i,\n      rest: Prism.languages.csharp\n    }\n  }\n}); // Regexp copied from prism-markup, with a negative look-ahead added\n\nPrism.languages.aspnet.tag.pattern = /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i; // match directives of attribute value foo=\"<% Bar %>\"\n\nPrism.languages.insertBefore('inside', 'punctuation', {\n  'directive tag': Prism.languages.aspnet['directive tag']\n}, Prism.languages.aspnet.tag.inside[\"attr-value\"]);\nPrism.languages.insertBefore('aspnet', 'comment', {\n  'asp comment': /<%--[\\s\\S]*?--%>/\n}); // script runat=\"server\" contains csharp, not javascript\n\nPrism.languages.insertBefore('aspnet', Prism.languages.javascript ? 'script' : 'tag', {\n  'asp script': {\n    pattern: /(<script(?=.*runat=['\"]?server['\"]?)[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n    lookbehind: true,\n    inside: Prism.languages.csharp || {}\n  }\n});","Prism.languages.aspnet = Prism.languages.extend(\"markup\", {\n  \"page-directive tag\": {\n    pattern: /<%\\s*@.*%>/i,\n    inside: {\n      \"page-directive tag\": /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n      rest: Prism.languages.markup.tag.inside\n    }\n  },\n  \"directive tag\": {\n    pattern: /<%.*%>/i,\n    inside: {\n      \"directive tag\": /<%\\s*?[$=%#:]{0,2}|%>/i,\n      rest: Prism.languages.csharp\n    }\n  }\n}), Prism.languages.aspnet.tag.pattern = /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i, Prism.languages.insertBefore(\"inside\", \"punctuation\", {\n  \"directive tag\": Prism.languages.aspnet[\"directive tag\"]\n}, Prism.languages.aspnet.tag.inside[\"attr-value\"]), Prism.languages.insertBefore(\"aspnet\", \"comment\", {\n  \"asp comment\": /<%--[\\s\\S]*?--%>/\n}), Prism.languages.insertBefore(\"aspnet\", Prism.languages.javascript ? \"script\" : \"tag\", {\n  \"asp script\": {\n    pattern: /(<script(?=.*runat=['\"]?server['\"]?)[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n    lookbehind: !0,\n    inside: Prism.languages.csharp || {}\n  }\n});","// NOTES - follows first-first highlight method, block is locked after highlight, different from SyntaxHl\nPrism.languages.autohotkey = {\n  'comment': {\n    pattern: /(^[^\";\\n]*(\"[^\"\\n]*?\"[^\"\\n]*?)*)(?:;.*$|^\\s*\\/\\*[\\s\\S]*\\n\\*\\/)/m,\n    lookbehind: true\n  },\n  'string': /\"(?:[^\"\\n\\r]|\"\")*\"/m,\n  'function': /[^(); \\t,\\n+*\\-=?>:\\\\\\/<&%\\[\\]]+?(?=\\()/m,\n  //function - don't use .*\\) in the end bcoz string locks it\n  'tag': /^[ \\t]*[^\\s:]+?(?=:(?:[^:]|$))/m,\n  //labels\n  'variable': /%\\w+%/,\n  'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n  'operator': /\\?|\\/\\/?=?|:=|\\|[=|]?|&[=&]?|\\+[=+]?|-[=-]?|\\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\\b(?:AND|NOT|OR)\\b/,\n  'punctuation': /[{}[\\]():,]/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'selector': /\\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\\b/i,\n  'constant': /\\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_formatfloat|a_formatinteger|a_gui|a_guievent|a_guicontrol|a_guicontrolevent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|programfiles|a_programfiles|a_programs|a_programscommon|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel)\\b/i,\n  'builtin': /\\b(?:abs|acos|asc|asin|atan|ceil|chr|class|cos|dllcall|exp|fileexist|Fileopen|floor|il_add|il_create|il_destroy|instr|substr|isfunc|islabel|IsObject|ln|log|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|onmessage|numget|numput|registercallback|regexmatch|regexreplace|round|sin|tan|sqrt|strlen|sb_seticon|sb_setparts|sb_settext|strsplit|tv_add|tv_delete|tv_getchild|tv_getcount|tv_getnext|tv_get|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__New|__Call|__Get|__Set)\\b/i,\n  'symbol': /\\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\\b/i,\n  'important': /#\\b(?:AllowSameLineComments|ClipboardTimeout|CommentFlag|ErrorStdOut|EscapeChar|HotkeyInterval|HotkeyModifierTimeout|Hotstring|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Include|IncludeAgain|InstallKeybdHook|InstallMouseHook|KeyHistory|LTrim|MaxHotkeysPerInterval|MaxMem|MaxThreads|MaxThreadsBuffer|MaxThreadsPerHotkey|NoEnv|NoTrayIcon|Persistent|SingleInstance|UseHook|WinActivateForce)\\b/i,\n  'keyword': /\\b(?:Abort|AboveNormal|Add|ahk_class|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Region|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|TryAgain|Type|UnCheck|underline|Unicode|Unlock|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\\b/i\n};","Prism.languages.autohotkey = {\n  comment: {\n    pattern: /(^[^\";\\n]*(\"[^\"\\n]*?\"[^\"\\n]*?)*)(?:;.*$|^\\s*\\/\\*[\\s\\S]*\\n\\*\\/)/m,\n    lookbehind: !0\n  },\n  string: /\"(?:[^\"\\n\\r]|\"\")*\"/m,\n  function: /[^(); \\t,\\n+*\\-=?>:\\\\\\/<&%\\[\\]]+?(?=\\()/m,\n  tag: /^[ \\t]*[^\\s:]+?(?=:(?:[^:]|$))/m,\n  variable: /%\\w+%/,\n  number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n  operator: /\\?|\\/\\/?=?|:=|\\|[=|]?|&[=&]?|\\+[=+]?|-[=-]?|\\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\\b(?:AND|NOT|OR)\\b/,\n  punctuation: /[{}[\\]():,]/,\n  boolean: /\\b(?:true|false)\\b/,\n  selector: /\\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\\b/i,\n  constant: /\\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_formatfloat|a_formatinteger|a_gui|a_guievent|a_guicontrol|a_guicontrolevent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|programfiles|a_programfiles|a_programs|a_programscommon|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel)\\b/i,\n  builtin: /\\b(?:abs|acos|asc|asin|atan|ceil|chr|class|cos|dllcall|exp|fileexist|Fileopen|floor|il_add|il_create|il_destroy|instr|substr|isfunc|islabel|IsObject|ln|log|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|onmessage|numget|numput|registercallback|regexmatch|regexreplace|round|sin|tan|sqrt|strlen|sb_seticon|sb_setparts|sb_settext|strsplit|tv_add|tv_delete|tv_getchild|tv_getcount|tv_getnext|tv_get|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__New|__Call|__Get|__Set)\\b/i,\n  symbol: /\\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\\b/i,\n  important: /#\\b(?:AllowSameLineComments|ClipboardTimeout|CommentFlag|ErrorStdOut|EscapeChar|HotkeyInterval|HotkeyModifierTimeout|Hotstring|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Include|IncludeAgain|InstallKeybdHook|InstallMouseHook|KeyHistory|LTrim|MaxHotkeysPerInterval|MaxMem|MaxThreads|MaxThreadsBuffer|MaxThreadsPerHotkey|NoEnv|NoTrayIcon|Persistent|SingleInstance|UseHook|WinActivateForce)\\b/i,\n  keyword: /\\b(?:Abort|AboveNormal|Add|ahk_class|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Region|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|TryAgain|Type|UnCheck|underline|Unicode|Unlock|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\\b/i\n};","Prism.languages.autoit = {\n  \"comment\": [/;.*/, {\n    // The multi-line comments delimiters can actually be commented out with \";\"\n    pattern: /(^\\s*)#(?:comments-start|cs)[\\s\\S]*?^\\s*#(?:comments-end|ce)/m,\n    lookbehind: true\n  }],\n  \"url\": {\n    pattern: /(^\\s*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,\n    lookbehind: true\n  },\n  \"string\": {\n    pattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,\n    greedy: true,\n    inside: {\n      \"variable\": /([%$@])\\w+\\1/\n    }\n  },\n  \"directive\": {\n    pattern: /(^\\s*)#\\w+/m,\n    lookbehind: true,\n    alias: 'keyword'\n  },\n  \"function\": /\\b\\w+(?=\\()/,\n  // Variables and macros\n  \"variable\": /[$@]\\w+/,\n  \"keyword\": /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,\n  \"number\": /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n  \"boolean\": /\\b(?:True|False)\\b/i,\n  \"operator\": /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Or|Not)\\b/i,\n  \"punctuation\": /[\\[\\]().,:]/\n};","Prism.languages.autoit = {\n  comment: [/;.*/, {\n    pattern: /(^\\s*)#(?:comments-start|cs)[\\s\\S]*?^\\s*#(?:comments-end|ce)/m,\n    lookbehind: !0\n  }],\n  url: {\n    pattern: /(^\\s*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,\n    lookbehind: !0\n  },\n  string: {\n    pattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,\n    greedy: !0,\n    inside: {\n      variable: /([%$@])\\w+\\1/\n    }\n  },\n  directive: {\n    pattern: /(^\\s*)#\\w+/m,\n    lookbehind: !0,\n    alias: \"keyword\"\n  },\n  function: /\\b\\w+(?=\\()/,\n  variable: /[$@]\\w+/,\n  keyword: /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,\n  number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n  boolean: /\\b(?:True|False)\\b/i,\n  operator: /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Or|Not)\\b/i,\n  punctuation: /[\\[\\]().,:]/\n};","(function (Prism) {\n  var insideString = {\n    variable: [// Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        variable: [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        operator: /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        punctuation: /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // Command Substitution\n    {\n      pattern: /\\$\\([^)]+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        variable: /^\\$\\(|^`|\\)$|`$/\n      }\n    }, /\\$(?:[\\w#?*!@]+|\\{[^}]+\\})/i]\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/bin\\/bash|^#!\\s*\\/bin\\/sh/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\])#.*/,\n      lookbehind: true\n    },\n    'string': [//Support for Here-Documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<\\s*)[\"']?(\\w+?)[\"']?\\s*\\r?\\n(?:[\\s\\S])*?\\r?\\n\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, {\n      pattern: /([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/,\n      greedy: true,\n      inside: insideString\n    }],\n    'variable': insideString.variable,\n    // Originally based on http://ss64.com/bash/\n    'function': {\n      pattern: /(^|[\\s;|&])(?:add|alias|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|builtin|bzip2|cal|cat|cd|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|comm|command|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|enable|env|ethtool|eval|exec|expand|expect|export|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|getopts|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|hash|head|help|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logout|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|printf|ps|pushd|pv|pwd|quota|quotacheck|quotactl|ram|rar|rcp|read|readarray|readonly|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|shift|shopt|shutdown|sleep|slocate|sort|source|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tail|tar|tee|test|time|timeout|times|top|touch|tr|traceroute|trap|tsort|tty|type|ulimit|umask|umount|unalias|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zip|zypper)(?=$|[\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&])(?:let|:|\\.|if|then|else|elif|fi|for|break|continue|while|in|case|function|select|do|done|until|echo|exit|return|set|declare)(?=$|[\\s;|&])/,\n      lookbehind: true\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&])(?:true|false)(?=$|[\\s;|&])/,\n      lookbehind: true\n    },\n    'operator': /&&?|\\|\\|?|==?|!=?|<<<?|>>|<=?|>=?|=~/,\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];]/\n  };\n  var inside = insideString.variable[1].inside;\n  inside.string = Prism.languages.bash.string;\n  inside['function'] = Prism.languages.bash['function'];\n  inside.keyword = Prism.languages.bash.keyword;\n  inside['boolean'] = Prism.languages.bash['boolean'];\n  inside.operator = Prism.languages.bash.operator;\n  inside.punctuation = Prism.languages.bash.punctuation;\n  Prism.languages.shell = Prism.languages.bash;\n})(Prism);","!function (e) {\n  var a = {\n    variable: [{\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      inside: {\n        variable: [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: !0\n        }, /^\\$\\(\\(/],\n        number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        operator: /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n        punctuation: /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, {\n      pattern: /\\$\\([^)]+\\)|`[^`]+`/,\n      greedy: !0,\n      inside: {\n        variable: /^\\$\\(|^`|\\)$|`$/\n      }\n    }, /\\$(?:[\\w#?*!@]+|\\{[^}]+\\})/i]\n  };\n  e.languages.bash = {\n    shebang: {\n      pattern: /^#!\\s*\\/bin\\/bash|^#!\\s*\\/bin\\/sh/,\n      alias: \"important\"\n    },\n    comment: {\n      pattern: /(^|[^\"{\\\\])#.*/,\n      lookbehind: !0\n    },\n    string: [{\n      pattern: /((?:^|[^<])<<\\s*)[\"']?(\\w+?)[\"']?\\s*\\r?\\n(?:[\\s\\S])*?\\r?\\n\\2/,\n      lookbehind: !0,\n      greedy: !0,\n      inside: a\n    }, {\n      pattern: /([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/,\n      greedy: !0,\n      inside: a\n    }],\n    variable: a.variable,\n    function: {\n      pattern: /(^|[\\s;|&])(?:add|alias|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|builtin|bzip2|cal|cat|cd|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|comm|command|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|enable|env|ethtool|eval|exec|expand|expect|export|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|getopts|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|hash|head|help|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logout|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|printf|ps|pushd|pv|pwd|quota|quotacheck|quotactl|ram|rar|rcp|read|readarray|readonly|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|shift|shopt|shutdown|sleep|slocate|sort|source|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tail|tar|tee|test|time|timeout|times|top|touch|tr|traceroute|trap|tsort|tty|type|ulimit|umask|umount|unalias|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zip|zypper)(?=$|[\\s;|&])/,\n      lookbehind: !0\n    },\n    keyword: {\n      pattern: /(^|[\\s;|&])(?:let|:|\\.|if|then|else|elif|fi|for|break|continue|while|in|case|function|select|do|done|until|echo|exit|return|set|declare)(?=$|[\\s;|&])/,\n      lookbehind: !0\n    },\n    boolean: {\n      pattern: /(^|[\\s;|&])(?:true|false)(?=$|[\\s;|&])/,\n      lookbehind: !0\n    },\n    operator: /&&?|\\|\\|?|==?|!=?|<<<?|>>|<=?|>=?|=~/,\n    punctuation: /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];]/\n  };\n  var t = a.variable[1].inside;\n  t.string = e.languages.bash.string, t.function = e.languages.bash.function, t.keyword = e.languages.bash.keyword, t.boolean = e.languages.bash.boolean, t.operator = e.languages.bash.operator, t.punctuation = e.languages.bash.punctuation, e.languages.shell = e.languages.bash;\n}(Prism);","Prism.languages.basic = {\n  'comment': {\n    pattern: /(?:!|REM\\b).+/i,\n    inside: {\n      'keyword': /^REM/i\n    }\n  },\n  'string': {\n    pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^_ +\\-.A-Z\\d])*\"/i,\n    greedy: true\n  },\n  'number': /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n  'keyword': /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SHARED|SINGLE|SELECT CASE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,\n  'function': /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,\n  'operator': /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,\n  'punctuation': /[,;:()]/\n};","Prism.languages.basic = {\n  comment: {\n    pattern: /(?:!|REM\\b).+/i,\n    inside: {\n      keyword: /^REM/i\n    }\n  },\n  string: {\n    pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^_ +\\-.A-Z\\d])*\"/i,\n    greedy: !0\n  },\n  number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n  keyword: /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SHARED|SINGLE|SELECT CASE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,\n  function: /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,\n  operator: /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,\n  punctuation: /[,;:()]/\n};","(function (Prism) {\n  var variable = /%%?[~:\\w]+%?|!\\S+!/;\n  var parameter = {\n    pattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n    alias: 'attr-name',\n    inside: {\n      'punctuation': /:/\n    }\n  };\n  var string = /\"[^\"]*\"/;\n  var number = /(?:\\b|-)\\d+\\b/;\n  Prism.languages.batch = {\n    'comment': [/^::.*/m, {\n      pattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true\n    }],\n    'label': {\n      pattern: /^:.*/m,\n      alias: 'property'\n    },\n    'command': [{\n      // FOR command\n      pattern: /((?:^|[&(])[ \\t]*)for(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* \\S+ in \\([^)]+\\) do/im,\n      lookbehind: true,\n      inside: {\n        'keyword': /^for\\b|\\b(?:in|do)\\b/i,\n        'string': string,\n        'parameter': parameter,\n        'variable': variable,\n        'number': number,\n        'punctuation': /[()',]/\n      }\n    }, {\n      // IF command\n      pattern: /((?:^|[&(])[ \\t]*)if(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|\\S+)?(?:==| (?:equ|neq|lss|leq|gtr|geq) )(?:\"[^\"]*\"|\\S+))/im,\n      lookbehind: true,\n      inside: {\n        'keyword': /^if\\b|\\b(?:not|cmdextversion|defined|errorlevel|exist)\\b/i,\n        'string': string,\n        'parameter': parameter,\n        'variable': variable,\n        'number': number,\n        'operator': /\\^|==|\\b(?:equ|neq|lss|leq|gtr|geq)\\b/i\n      }\n    }, {\n      // ELSE command\n      pattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n      lookbehind: true,\n      inside: {\n        'keyword': /^else\\b/i\n      }\n    }, {\n      // SET command\n      pattern: /((?:^|[&(])[ \\t]*)set(?: ?\\/[a-z](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      inside: {\n        'keyword': /^set\\b/i,\n        'string': string,\n        'parameter': parameter,\n        'variable': [variable, /\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],\n        'number': number,\n        'operator': /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n        'punctuation': /[()',]/\n      }\n    }, {\n      // Other commands\n      pattern: /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      inside: {\n        'keyword': /^\\w+\\b/i,\n        'string': string,\n        'parameter': parameter,\n        'label': {\n          pattern: /(^\\s*):\\S+/m,\n          lookbehind: true,\n          alias: 'property'\n        },\n        'variable': variable,\n        'number': number,\n        'operator': /\\^/\n      }\n    }],\n    'operator': /[&@]/,\n    'punctuation': /[()']/\n  };\n})(Prism);","!function (e) {\n  var r = /%%?[~:\\w]+%?|!\\S+!/,\n      t = {\n    pattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n    alias: \"attr-name\",\n    inside: {\n      punctuation: /:/\n    }\n  },\n      n = /\"[^\"]*\"/,\n      i = /(?:\\b|-)\\d+\\b/;\n  Prism.languages.batch = {\n    comment: [/^::.*/m, {\n      pattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: !0\n    }],\n    label: {\n      pattern: /^:.*/m,\n      alias: \"property\"\n    },\n    command: [{\n      pattern: /((?:^|[&(])[ \\t]*)for(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* \\S+ in \\([^)]+\\) do/im,\n      lookbehind: !0,\n      inside: {\n        keyword: /^for\\b|\\b(?:in|do)\\b/i,\n        string: n,\n        parameter: t,\n        variable: r,\n        number: i,\n        punctuation: /[()',]/\n      }\n    }, {\n      pattern: /((?:^|[&(])[ \\t]*)if(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|\\S+)?(?:==| (?:equ|neq|lss|leq|gtr|geq) )(?:\"[^\"]*\"|\\S+))/im,\n      lookbehind: !0,\n      inside: {\n        keyword: /^if\\b|\\b(?:not|cmdextversion|defined|errorlevel|exist)\\b/i,\n        string: n,\n        parameter: t,\n        variable: r,\n        number: i,\n        operator: /\\^|==|\\b(?:equ|neq|lss|leq|gtr|geq)\\b/i\n      }\n    }, {\n      pattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n      lookbehind: !0,\n      inside: {\n        keyword: /^else\\b/i\n      }\n    }, {\n      pattern: /((?:^|[&(])[ \\t]*)set(?: ?\\/[a-z](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: !0,\n      inside: {\n        keyword: /^set\\b/i,\n        string: n,\n        parameter: t,\n        variable: [r, /\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],\n        number: i,\n        operator: /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n        punctuation: /[()',]/\n      }\n    }, {\n      pattern: /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: !0,\n      inside: {\n        keyword: /^\\w+\\b/i,\n        string: n,\n        parameter: t,\n        label: {\n          pattern: /(^\\s*):\\S+/m,\n          lookbehind: !0,\n          alias: \"property\"\n        },\n        variable: r,\n        number: i,\n        operator: /\\^/\n      }\n    }],\n    operator: /[&@]/,\n    punctuation: /[()']/\n  };\n}();","Prism.languages.bison = Prism.languages.extend('c', {});\nPrism.languages.insertBefore('bison', 'comment', {\n  'bison': {\n    // This should match all the beginning of the file\n    // including the prologue(s), the bison declarations and\n    // the grammar rules.\n    pattern: /^[\\s\\S]*?%%[\\s\\S]*?%%/,\n    inside: {\n      'c': {\n        // Allow for one level of nested braces\n        pattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,\n        inside: {\n          'delimiter': {\n            pattern: /^%?\\{|%?\\}$/,\n            alias: 'punctuation'\n          },\n          'bison-variable': {\n            pattern: /[$@](?:<[^\\s>]+>)?[\\w$]+/,\n            alias: 'variable',\n            inside: {\n              'punctuation': /<|>/\n            }\n          },\n          rest: Prism.languages.c\n        }\n      },\n      'comment': Prism.languages.c.comment,\n      'string': Prism.languages.c.string,\n      'property': /\\S+(?=:)/,\n      'keyword': /%\\w+/,\n      'number': {\n        pattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,\n        lookbehind: true\n      },\n      'punctuation': /%[%?]|[|:;\\[\\]<>]/\n    }\n  }\n});","Prism.languages.bison = Prism.languages.extend(\"c\", {}), Prism.languages.insertBefore(\"bison\", \"comment\", {\n  bison: {\n    pattern: /^[\\s\\S]*?%%[\\s\\S]*?%%/,\n    inside: {\n      c: {\n        pattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^%?\\{|%?\\}$/,\n            alias: \"punctuation\"\n          },\n          \"bison-variable\": {\n            pattern: /[$@](?:<[^\\s>]+>)?[\\w$]+/,\n            alias: \"variable\",\n            inside: {\n              punctuation: /<|>/\n            }\n          },\n          rest: Prism.languages.c\n        }\n      },\n      comment: Prism.languages.c.comment,\n      string: Prism.languages.c.string,\n      property: /\\S+(?=:)/,\n      keyword: /%\\w+/,\n      number: {\n        pattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,\n        lookbehind: !0\n      },\n      punctuation: /%[%?]|[|:;\\[\\]<>]/\n    }\n  }\n});","Prism.languages.bnf = {\n  'string': {\n    pattern: /\"[^\\r\\n\"]*\"|'[^\\r\\n']*'/\n  },\n  'definition': {\n    pattern: /<[^<>\\r\\n\\t]+>(?=\\s*::=)/,\n    alias: ['rule', 'keyword'],\n    inside: {\n      'punctuation': /^<|>$/\n    }\n  },\n  'rule': {\n    pattern: /<[^<>\\r\\n\\t]+>/,\n    inside: {\n      'punctuation': /^<|>$/\n    }\n  },\n  'operator': /::=|[|()[\\]{}*+?]|\\.{3}/\n};\nPrism.languages.rbnf = Prism.languages.bnf;","Prism.languages.bnf = {\n  string: {\n    pattern: /\"[^\\r\\n\"]*\"|'[^\\r\\n']*'/\n  },\n  definition: {\n    pattern: /<[^<>\\r\\n\\t]+>(?=\\s*::=)/,\n    alias: [\"rule\", \"keyword\"],\n    inside: {\n      punctuation: /^<|>$/\n    }\n  },\n  rule: {\n    pattern: /<[^<>\\r\\n\\t]+>/,\n    inside: {\n      punctuation: /^<|>$/\n    }\n  },\n  operator: /::=|[|()[\\]{}*+?]|\\.{3}/\n}, Prism.languages.rbnf = Prism.languages.bnf;","Prism.languages.brainfuck = {\n  'pointer': {\n    pattern: /<|>/,\n    alias: 'keyword'\n  },\n  'increment': {\n    pattern: /\\+/,\n    alias: 'inserted'\n  },\n  'decrement': {\n    pattern: /-/,\n    alias: 'deleted'\n  },\n  'branching': {\n    pattern: /\\[|\\]/,\n    alias: 'important'\n  },\n  'operator': /[.,]/,\n  'comment': /\\S+/\n};","Prism.languages.brainfuck = {\n  pointer: {\n    pattern: /<|>/,\n    alias: \"keyword\"\n  },\n  increment: {\n    pattern: /\\+/,\n    alias: \"inserted\"\n  },\n  decrement: {\n    pattern: /-/,\n    alias: \"deleted\"\n  },\n  branching: {\n    pattern: /\\[|\\]/,\n    alias: \"important\"\n  },\n  operator: /[.,]/,\n  comment: /\\S+/\n};","Prism.languages.bro = {\n  'comment': {\n    pattern: /(^|[^\\\\$])#.*/,\n    lookbehind: true,\n    inside: {\n      'italic': /\\b(?:TODO|FIXME|XXX)\\b/\n    }\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'boolean': /\\b[TF]\\b/,\n  'function': {\n    pattern: /(?:function|hook|event) \\w+(?:::\\w+)?/,\n    inside: {\n      keyword: /^(?:function|hook|event)/\n    }\n  },\n  'variable': {\n    pattern: /(?:global|local) \\w+/i,\n    inside: {\n      keyword: /(?:global|local)/\n    }\n  },\n  'builtin': /(?:@(?:load(?:-(?:sigs|plugin))?|unload|prefixes|ifn?def|else|(?:end)?if|DIR|FILENAME))|(?:&?(?:redef|priority|log|optional|default|add_func|delete_func|expire_func|read_expire|write_expire|create_expire|synchronized|persistent|rotate_interval|rotate_size|encrypt|raw_output|mergeable|group|error_handler|type_column))/,\n  'constant': {\n    pattern: /const \\w+/i,\n    inside: {\n      keyword: /const/\n    }\n  },\n  'keyword': /\\b(?:break|next|continue|alarm|using|of|add|delete|export|print|return|schedule|when|timeout|addr|any|bool|count|double|enum|file|int|interval|pattern|opaque|port|record|set|string|subnet|table|time|vector|for|if|else|in|module|function)\\b/,\n  'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'punctuation': /[{}[\\];(),.:]/\n};","Prism.languages.bro = {\n  comment: {\n    pattern: /(^|[^\\\\$])#.*/,\n    lookbehind: !0,\n    inside: {\n      italic: /\\b(?:TODO|FIXME|XXX)\\b/\n    }\n  },\n  string: {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  },\n  boolean: /\\b[TF]\\b/,\n  function: {\n    pattern: /(?:function|hook|event) \\w+(?:::\\w+)?/,\n    inside: {\n      keyword: /^(?:function|hook|event)/\n    }\n  },\n  variable: {\n    pattern: /(?:global|local) \\w+/i,\n    inside: {\n      keyword: /(?:global|local)/\n    }\n  },\n  builtin: /(?:@(?:load(?:-(?:sigs|plugin))?|unload|prefixes|ifn?def|else|(?:end)?if|DIR|FILENAME))|(?:&?(?:redef|priority|log|optional|default|add_func|delete_func|expire_func|read_expire|write_expire|create_expire|synchronized|persistent|rotate_interval|rotate_size|encrypt|raw_output|mergeable|group|error_handler|type_column))/,\n  constant: {\n    pattern: /const \\w+/i,\n    inside: {\n      keyword: /const/\n    }\n  },\n  keyword: /\\b(?:break|next|continue|alarm|using|of|add|delete|export|print|return|schedule|when|timeout|addr|any|bool|count|double|enum|file|int|interval|pattern|opaque|port|record|set|string|subnet|table|time|vector|for|if|else|in|module|function)\\b/,\n  operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n  number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  punctuation: /[{}[\\];(),.:]/\n};","Prism.languages.c = Prism.languages.extend('clike', {\n  'class-name': {\n    pattern: /(\\b(?:enum|struct)\\s+)\\w+/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/,\n  'number': /(?:\\b0x(?:[\\da-f]+\\.?[\\da-f]*|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i\n});\nPrism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    alias: 'property',\n    inside: {\n      // highlight the path of the include statement as a string\n      'string': {\n        pattern: /(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,\n        lookbehind: true\n      },\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,\n        lookbehind: true,\n        alias: 'keyword'\n      }\n    }\n  },\n  // highlight predefined macros as constants\n  'constant': /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n});\ndelete Prism.languages.c['boolean'];","Prism.languages.c = Prism.languages.extend(\"clike\", {\n  \"class-name\": {\n    pattern: /(\\b(?:enum|struct)\\s+)\\w+/,\n    lookbehind: !0\n  },\n  keyword: /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n  operator: />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/,\n  number: /(?:\\b0x(?:[\\da-f]+\\.?[\\da-f]*|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i\n}), Prism.languages.insertBefore(\"c\", \"string\", {\n  macro: {\n    pattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: !0,\n    alias: \"property\",\n    inside: {\n      string: {\n        pattern: /(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,\n        lookbehind: !0\n      },\n      directive: {\n        pattern: /(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,\n        lookbehind: !0,\n        alias: \"keyword\"\n      }\n    }\n  },\n  constant: /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n}), delete Prism.languages.c.boolean;","Prism.languages.cil = {\n  'comment': /\\/\\/.*/,\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'directive': {\n    pattern: /(^|\\W)\\.[a-z]+(?=\\s)/,\n    lookbehind: true,\n    alias: 'class-name'\n  },\n  // Actually an assembly reference\n  'variable': /\\[[\\w\\.]+\\]/,\n  'keyword': /\\b(?:abstract|ansi|assembly|auto|autochar|beforefieldinit|bool|bstr|byvalstr|catch|char|cil|class|currency|date|decimal|default|enum|error|explicit|extends|extern|famandassem|family|famorassem|final(?:ly)?|float32|float64|hidebysig|iant|idispatch|implements|import|initonly|instance|u?int(?:8|16|32|64)?|interface|iunknown|literal|lpstr|lpstruct|lptstr|lpwstr|managed|method|native(?:Type)?|nested|newslot|object(?:ref)?|pinvokeimpl|private|privatescope|public|reqsecobj|rtspecialname|runtime|sealed|sequential|serializable|specialname|static|string|struct|syschar|tbstr|unicode|unmanagedexp|unsigned|value(?:type)?|variant|virtual|void)\\b/,\n  'function': /\\b(?:(?:constrained|unaligned|volatile|readonly|tail|no)\\.)?(?:conv\\.(?:[iu][1248]?|ovf\\.[iu][1248]?(?:\\.un)?|r\\.un|r4|r8)|ldc\\.(?:i4(?:\\.[0-9]+|\\.[mM]1|\\.s)?|i8|r4|r8)|ldelem(?:\\.[iu][1248]?|\\.r[48]|\\.ref|a)?|ldind\\.(?:[iu][1248]?|r[48]|ref)|stelem\\.?(?:i[1248]?|r[48]|ref)?|stind\\.(i[1248]?|r[48]|ref)?|end(?:fault|filter|finally)|ldarg(?:\\.[0-3s]|a(?:\\.s)?)?|ldloc(?:\\.[0-9]+|\\.s)?|sub(?:\\.ovf(?:\\.un)?)?|mul(?:\\.ovf(?:\\.un)?)?|add(?:\\.ovf(?:\\.un)?)?|stloc(?:\\.[0-3s])?|refany(?:type|val)|blt(?:\\.un)?(?:\\.s)?|ble(?:\\.un)?(?:\\.s)?|bgt(?:\\.un)?(?:\\.s)?|bge(?:\\.un)?(?:\\.s)?|unbox(?:\\.any)?|init(?:blk|obj)|call(?:i|virt)?|brfalse(?:\\.s)?|bne\\.un(?:\\.s)?|ldloca(?:\\.s)?|brzero(?:\\.s)?|brtrue(?:\\.s)?|brnull(?:\\.s)?|brinst(?:\\.s)?|starg(?:\\.s)?|leave(?:\\.s)?|shr(?:\\.un)?|rem(?:\\.un)?|div(?:\\.un)?|clt(?:\\.un)?|alignment|ldvirtftn|castclass|beq(?:\\.s)?|mkrefany|localloc|ckfinite|rethrow|ldtoken|ldsflda|cgt\\.un|arglist|switch|stsfld|sizeof|newobj|newarr|ldsfld|ldnull|ldflda|isinst|throw|stobj|stloc|stfld|ldstr|ldobj|ldlen|ldftn|ldfld|cpobj|cpblk|break|br\\.s|xor|shl|ret|pop|not|nop|neg|jmp|dup|clt|cgt|ceq|box|and|or|br)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'number': /\\b-?(?:0x[0-9a-fA-F]+|[0-9]+)(?:\\.[0-9a-fA-F]+)?\\b/i,\n  'punctuation': /[{}[\\];(),:=]|IL_[0-9A-Za-z]+/\n};","Prism.languages.cil = {\n  comment: /\\/\\/.*/,\n  string: {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  },\n  directive: {\n    pattern: /(^|\\W)\\.[a-z]+(?=\\s)/,\n    lookbehind: !0,\n    alias: \"class-name\"\n  },\n  variable: /\\[[\\w\\.]+\\]/,\n  keyword: /\\b(?:abstract|ansi|assembly|auto|autochar|beforefieldinit|bool|bstr|byvalstr|catch|char|cil|class|currency|date|decimal|default|enum|error|explicit|extends|extern|famandassem|family|famorassem|final(?:ly)?|float32|float64|hidebysig|iant|idispatch|implements|import|initonly|instance|u?int(?:8|16|32|64)?|interface|iunknown|literal|lpstr|lpstruct|lptstr|lpwstr|managed|method|native(?:Type)?|nested|newslot|object(?:ref)?|pinvokeimpl|private|privatescope|public|reqsecobj|rtspecialname|runtime|sealed|sequential|serializable|specialname|static|string|struct|syschar|tbstr|unicode|unmanagedexp|unsigned|value(?:type)?|variant|virtual|void)\\b/,\n  function: /\\b(?:(?:constrained|unaligned|volatile|readonly|tail|no)\\.)?(?:conv\\.(?:[iu][1248]?|ovf\\.[iu][1248]?(?:\\.un)?|r\\.un|r4|r8)|ldc\\.(?:i4(?:\\.[0-9]+|\\.[mM]1|\\.s)?|i8|r4|r8)|ldelem(?:\\.[iu][1248]?|\\.r[48]|\\.ref|a)?|ldind\\.(?:[iu][1248]?|r[48]|ref)|stelem\\.?(?:i[1248]?|r[48]|ref)?|stind\\.(i[1248]?|r[48]|ref)?|end(?:fault|filter|finally)|ldarg(?:\\.[0-3s]|a(?:\\.s)?)?|ldloc(?:\\.[0-9]+|\\.s)?|sub(?:\\.ovf(?:\\.un)?)?|mul(?:\\.ovf(?:\\.un)?)?|add(?:\\.ovf(?:\\.un)?)?|stloc(?:\\.[0-3s])?|refany(?:type|val)|blt(?:\\.un)?(?:\\.s)?|ble(?:\\.un)?(?:\\.s)?|bgt(?:\\.un)?(?:\\.s)?|bge(?:\\.un)?(?:\\.s)?|unbox(?:\\.any)?|init(?:blk|obj)|call(?:i|virt)?|brfalse(?:\\.s)?|bne\\.un(?:\\.s)?|ldloca(?:\\.s)?|brzero(?:\\.s)?|brtrue(?:\\.s)?|brnull(?:\\.s)?|brinst(?:\\.s)?|starg(?:\\.s)?|leave(?:\\.s)?|shr(?:\\.un)?|rem(?:\\.un)?|div(?:\\.un)?|clt(?:\\.un)?|alignment|ldvirtftn|castclass|beq(?:\\.s)?|mkrefany|localloc|ckfinite|rethrow|ldtoken|ldsflda|cgt\\.un|arglist|switch|stsfld|sizeof|newobj|newarr|ldsfld|ldnull|ldflda|isinst|throw|stobj|stloc|stfld|ldstr|ldobj|ldlen|ldftn|ldfld|cpobj|cpblk|break|br\\.s|xor|shl|ret|pop|not|nop|neg|jmp|dup|clt|cgt|ceq|box|and|or|br)\\b/,\n  boolean: /\\b(?:true|false)\\b/,\n  number: /\\b-?(?:0x[0-9a-fA-F]+|[0-9]+)(?:\\.[0-9a-fA-F]+)?\\b/i,\n  punctuation: /[{}[\\];(),:=]|IL_[0-9A-Za-z]+/\n};","Prism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      punctuation: /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'function': /\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n  'punctuation': /[{}[\\];(),.:]/\n};","Prism.languages.clike = {\n  comment: [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: !0,\n    greedy: !0\n  }],\n  string: {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  },\n  \"class-name\": {\n    pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n    lookbehind: !0,\n    inside: {\n      punctuation: /[.\\\\]/\n    }\n  },\n  keyword: /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n  boolean: /\\b(?:true|false)\\b/,\n  function: /\\w+(?=\\()/,\n  number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n  punctuation: /[{}[\\];(),.:]/\n};","// Copied from https://github.com/jeluard/prism-clojure\nPrism.languages.clojure = {\n  comment: /;+.*/,\n  string: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n  operator: /(?:::|[:|'])\\b[a-z][\\w*+!?-]*\\b/i,\n  //used for symbols and keywords\n  keyword: {\n    pattern: /([^\\w+*'?-])(?:def|if|do|let|\\.\\.|quote|var|->>|->|fn|loop|recur|throw|try|monitor-enter|\\.|new|set!|def\\-|defn|defn\\-|defmacro|defmulti|defmethod|defstruct|defonce|declare|definline|definterface|defprotocol|==|defrecord|>=|deftype|<=|defproject|ns|\\*|\\+|\\-|\\/|<|=|>|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|conj|cons|constantly|cond|if-not|construct-proxy|contains\\?|count|create-ns|create-struct|cycle|dec|deref|difference|disj|dissoc|distinct|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\\?|ensure|eval|every\\?|false\\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|for|fnseq|frest|gensym|get-proxy-class|get|hash-map|hash-set|identical\\?|identity|if-let|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\\?|last|lazy-cat|lazy-cons|left|lefts|line-seq|list\\*|list|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|name|namespace|neg\\?|new|newline|next|nil\\?|node|not|not-any\\?|not-every\\?|not=|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\\?|set|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\\?|split-at|split-with|str|string\\?|struct|struct-map|subs|subvec|symbol|symbol\\?|sync|take|take-nth|take-while|test|time|to-array|to-array-2d|tree-seq|true\\?|union|up|update-proxy|val|vals|var-get|var-set|var\\?|vector|vector-zip|vector\\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\\?|zipmap|zipper)(?=[^\\w+*'?-])/,\n    lookbehind: true\n  },\n  boolean: /\\b(?:true|false|nil)\\b/,\n  number: /\\b[0-9A-Fa-f]+\\b/,\n  punctuation: /[{}\\[\\](),]/\n};","Prism.languages.clojure = {\n  comment: /;+.*/,\n  string: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n  operator: /(?:::|[:|'])\\b[a-z][\\w*+!?-]*\\b/i,\n  keyword: {\n    pattern: /([^\\w+*'?-])(?:def|if|do|let|\\.\\.|quote|var|->>|->|fn|loop|recur|throw|try|monitor-enter|\\.|new|set!|def\\-|defn|defn\\-|defmacro|defmulti|defmethod|defstruct|defonce|declare|definline|definterface|defprotocol|==|defrecord|>=|deftype|<=|defproject|ns|\\*|\\+|\\-|\\/|<|=|>|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|conj|cons|constantly|cond|if-not|construct-proxy|contains\\?|count|create-ns|create-struct|cycle|dec|deref|difference|disj|dissoc|distinct|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\\?|ensure|eval|every\\?|false\\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|for|fnseq|frest|gensym|get-proxy-class|get|hash-map|hash-set|identical\\?|identity|if-let|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\\?|last|lazy-cat|lazy-cons|left|lefts|line-seq|list\\*|list|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|name|namespace|neg\\?|new|newline|next|nil\\?|node|not|not-any\\?|not-every\\?|not=|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\\?|set|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\\?|split-at|split-with|str|string\\?|struct|struct-map|subs|subvec|symbol|symbol\\?|sync|take|take-nth|take-while|test|time|to-array|to-array-2d|tree-seq|true\\?|union|up|update-proxy|val|vals|var-get|var-set|var\\?|vector|vector-zip|vector\\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\\?|zipmap|zipper)(?=[^\\w+*'?-])/,\n    lookbehind: !0\n  },\n  boolean: /\\b(?:true|false|nil)\\b/,\n  number: /\\b[0-9A-Fa-f]+\\b/,\n  punctuation: /[{}\\[\\](),]/\n};","Prism.languages.cmake = {\n  'comment': /#.*/,\n  'string': {\n    pattern: /\"(?:[^\\\\\"]|\\\\.)*\"/,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        pattern: /\\${(?:[^{}$]|\\${[^{}$]*})*}/,\n        inside: {\n          'punctuation': /\\${|}/,\n          'variable': /\\w+/\n        }\n      }\n    }\n  },\n  'variable': /\\b(?:CMAKE_\\w+|\\w+_(?:VERSION(?:_MAJOR|_MINOR|_PATCH|_TWEAK)?|(?:BINARY|SOURCE)_DIR|DESCRIPTION|HOMEPAGE_URL|ROOT)|(?:CTEST_CUSTOM_(?:MAXIMUM_(?:(?:FAIL|PASS)ED_TEST_OUTPUT_SIZE|NUMBER_OF_(?:ERROR|WARNING)S)|ERROR_(?:P(?:OST|RE)_CONTEXT|EXCEPTION|MATCH)|P(?:OST|RE)_MEMCHECK|WARNING_(?:EXCEPTION|MATCH)|(?:MEMCHECK|TESTS)_IGNORE|P(?:OST|RE)_TEST|COVERAGE_EXCLUDE)|ANDROID|APPLE|BORLAND|BUILD_SHARED_LIBS|CACHE|CPACK_(?:ABSOLUTE_DESTINATION_FILES|COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY|ERROR_ON_ABSOLUTE_INSTALL_DESTINATION|INCLUDE_TOPLEVEL_DIRECTORY|INSTALL_DEFAULT_DIRECTORY_PERMISSIONS|INSTALL_SCRIPT|PACKAGING_INSTALL_PREFIX|SET_DESTDIR|WARN_ON_ABSOLUTE_INSTALL_DESTINATION)|CTEST_(?:BINARY_DIRECTORY|BUILD_COMMAND|BUILD_NAME|BZR_COMMAND|BZR_UPDATE_OPTIONS|CHANGE_ID|CHECKOUT_COMMAND|CONFIGURATION_TYPE|CONFIGURE_COMMAND|COVERAGE_COMMAND|COVERAGE_EXTRA_FLAGS|CURL_OPTIONS|CUSTOM_(?:COVERAGE_EXCLUDE|ERROR_EXCEPTION|ERROR_MATCH|ERROR_POST_CONTEXT|ERROR_PRE_CONTEXT|MAXIMUM_FAILED_TEST_OUTPUT_SIZE|MAXIMUM_NUMBER_OF_(?:ERRORS|WARNINGS)|MAXIMUM_PASSED_TEST_OUTPUT_SIZE|MEMCHECK_IGNORE|POST_MEMCHECK|POST_TEST|PRE_MEMCHECK|PRE_TEST|TESTS_IGNORE|WARNING_EXCEPTION|WARNING_MATCH)|CVS_CHECKOUT|CVS_COMMAND|CVS_UPDATE_OPTIONS|DROP_LOCATION|DROP_METHOD|DROP_SITE|DROP_SITE_CDASH|DROP_SITE_PASSWORD|DROP_SITE_USER|EXTRA_COVERAGE_GLOB|GIT_COMMAND|GIT_INIT_SUBMODULES|GIT_UPDATE_CUSTOM|GIT_UPDATE_OPTIONS|HG_COMMAND|HG_UPDATE_OPTIONS|LABELS_FOR_SUBPROJECTS|MEMORYCHECK_(?:COMMAND|COMMAND_OPTIONS|SANITIZER_OPTIONS|SUPPRESSIONS_FILE|TYPE)|NIGHTLY_START_TIME|P4_CLIENT|P4_COMMAND|P4_OPTIONS|P4_UPDATE_OPTIONS|RUN_CURRENT_SCRIPT|SCP_COMMAND|SITE|SOURCE_DIRECTORY|SUBMIT_URL|SVN_COMMAND|SVN_OPTIONS|SVN_UPDATE_OPTIONS|TEST_LOAD|TEST_TIMEOUT|TRIGGER_SITE|UPDATE_COMMAND|UPDATE_OPTIONS|UPDATE_VERSION_ONLY|USE_LAUNCHERS)|CYGWIN|ENV|EXECUTABLE_OUTPUT_PATH|GHS-MULTI|IOS|LIBRARY_OUTPUT_PATH|MINGW|MSVC(?:10|11|12|14|60|70|71|80|90|_IDE|_TOOLSET_VERSION|_VERSION)?|MSYS|PROJECT_(?:BINARY_DIR|DESCRIPTION|HOMEPAGE_URL|NAME|SOURCE_DIR|VERSION|VERSION_(?:MAJOR|MINOR|PATCH|TWEAK))|UNIX|WIN32|WINCE|WINDOWS_PHONE|WINDOWS_STORE|XCODE|XCODE_VERSION))\\b/,\n  'property': /\\b(?:cxx_\\w+|(?:ARCHIVE_OUTPUT_(?:DIRECTORY|NAME)|COMPILE_DEFINITIONS|COMPILE_PDB_NAME|COMPILE_PDB_OUTPUT_DIRECTORY|EXCLUDE_FROM_DEFAULT_BUILD|IMPORTED_(?:IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_LANGUAGES|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|NO_SONAME|OBJECTS|SONAME)|INTERPROCEDURAL_OPTIMIZATION|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINK_FLAGS|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|MAP_IMPORTED_CONFIG|OSX_ARCHITECTURES|OUTPUT_NAME|PDB_NAME|PDB_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|STATIC_LIBRARY_FLAGS|VS_CSHARP|VS_DOTNET_REFERENCEPROP|VS_DOTNET_REFERENCE|VS_GLOBAL_SECTION_POST|VS_GLOBAL_SECTION_PRE|VS_GLOBAL|XCODE_ATTRIBUTE)_\\w+|\\w+_(?:CLANG_TIDY|COMPILER_LAUNCHER|CPPCHECK|CPPLINT|INCLUDE_WHAT_YOU_USE|OUTPUT_NAME|POSTFIX|VISIBILITY_PRESET)|ABSTRACT|ADDITIONAL_MAKE_CLEAN_FILES|ADVANCED|ALIASED_TARGET|ALLOW_DUPLICATE_CUSTOM_TARGETS|ANDROID_(?:ANT_ADDITIONAL_OPTIONS|API|API_MIN|ARCH|ASSETS_DIRECTORIES|GUI|JAR_DEPENDENCIES|NATIVE_LIB_DEPENDENCIES|NATIVE_LIB_DIRECTORIES|PROCESS_MAX|PROGUARD|PROGUARD_CONFIG_PATH|SECURE_PROPS_PATH|SKIP_ANT_STEP|STL_TYPE)|ARCHIVE_OUTPUT_DIRECTORY|ARCHIVE_OUTPUT_NAME|ATTACHED_FILES|ATTACHED_FILES_ON_FAIL|AUTOGEN_(?:BUILD_DIR|ORIGIN_DEPENDS|PARALLEL|SOURCE_GROUP|TARGETS_FOLDER|TARGET_DEPENDS)|AUTOMOC|AUTOMOC_(?:COMPILER_PREDEFINES|DEPEND_FILTERS|EXECUTABLE|MACRO_NAMES|MOC_OPTIONS|SOURCE_GROUP|TARGETS_FOLDER)|AUTORCC|AUTORCC_EXECUTABLE|AUTORCC_OPTIONS|AUTORCC_SOURCE_GROUP|AUTOUIC|AUTOUIC_EXECUTABLE|AUTOUIC_OPTIONS|AUTOUIC_SEARCH_PATHS|BINARY_DIR|BUILDSYSTEM_TARGETS|BUILD_RPATH|BUILD_RPATH_USE_ORIGIN|BUILD_WITH_INSTALL_NAME_DIR|BUILD_WITH_INSTALL_RPATH|BUNDLE|BUNDLE_EXTENSION|CACHE_VARIABLES|CLEAN_NO_CUSTOM|COMMON_LANGUAGE_RUNTIME|COMPATIBLE_INTERFACE_(?:BOOL|NUMBER_MAX|NUMBER_MIN|STRING)|COMPILE_(?:DEFINITIONS|FEATURES|FLAGS|OPTIONS|PDB_NAME|PDB_OUTPUT_DIRECTORY)|COST|CPACK_DESKTOP_SHORTCUTS|CPACK_NEVER_OVERWRITE|CPACK_PERMANENT|CPACK_STARTUP_SHORTCUTS|CPACK_START_MENU_SHORTCUTS|CPACK_WIX_ACL|CROSSCOMPILING_EMULATOR|CUDA_EXTENSIONS|CUDA_PTX_COMPILATION|CUDA_RESOLVE_DEVICE_SYMBOLS|CUDA_SEPARABLE_COMPILATION|CUDA_STANDARD|CUDA_STANDARD_REQUIRED|CXX_EXTENSIONS|CXX_STANDARD|CXX_STANDARD_REQUIRED|C_EXTENSIONS|C_STANDARD|C_STANDARD_REQUIRED|DEBUG_CONFIGURATIONS|DEBUG_POSTFIX|DEFINE_SYMBOL|DEFINITIONS|DEPENDS|DEPLOYMENT_ADDITIONAL_FILES|DEPLOYMENT_REMOTE_DIRECTORY|DISABLED|DISABLED_FEATURES|ECLIPSE_EXTRA_CPROJECT_CONTENTS|ECLIPSE_EXTRA_NATURES|ENABLED_FEATURES|ENABLED_LANGUAGES|ENABLE_EXPORTS|ENVIRONMENT|EXCLUDE_FROM_ALL|EXCLUDE_FROM_DEFAULT_BUILD|EXPORT_NAME|EXPORT_PROPERTIES|EXTERNAL_OBJECT|EchoString|FAIL_REGULAR_EXPRESSION|FIND_LIBRARY_USE_LIB32_PATHS|FIND_LIBRARY_USE_LIB64_PATHS|FIND_LIBRARY_USE_LIBX32_PATHS|FIND_LIBRARY_USE_OPENBSD_VERSIONING|FIXTURES_CLEANUP|FIXTURES_REQUIRED|FIXTURES_SETUP|FOLDER|FRAMEWORK|Fortran_FORMAT|Fortran_MODULE_DIRECTORY|GENERATED|GENERATOR_FILE_NAME|GENERATOR_IS_MULTI_CONFIG|GHS_INTEGRITY_APP|GHS_NO_SOURCE_GROUP_FILE|GLOBAL_DEPENDS_DEBUG_MODE|GLOBAL_DEPENDS_NO_CYCLES|GNUtoMS|HAS_CXX|HEADER_FILE_ONLY|HELPSTRING|IMPLICIT_DEPENDS_INCLUDE_TRANSFORM|IMPORTED|IMPORTED_(?:COMMON_LANGUAGE_RUNTIME|CONFIGURATIONS|GLOBAL|IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_(?:LANGUAGES|LIBRARIES|MULTIPLICITY)|LOCATION|NO_SONAME|OBJECTS|SONAME)|IMPORT_PREFIX|IMPORT_SUFFIX|INCLUDE_DIRECTORIES|INCLUDE_REGULAR_EXPRESSION|INSTALL_NAME_DIR|INSTALL_RPATH|INSTALL_RPATH_USE_LINK_PATH|INTERFACE_(?:AUTOUIC_OPTIONS|COMPILE_DEFINITIONS|COMPILE_FEATURES|COMPILE_OPTIONS|INCLUDE_DIRECTORIES|LINK_DEPENDS|LINK_DIRECTORIES|LINK_LIBRARIES|LINK_OPTIONS|POSITION_INDEPENDENT_CODE|SOURCES|SYSTEM_INCLUDE_DIRECTORIES)|INTERPROCEDURAL_OPTIMIZATION|IN_TRY_COMPILE|IOS_INSTALL_COMBINED|JOB_POOLS|JOB_POOL_COMPILE|JOB_POOL_LINK|KEEP_EXTENSION|LABELS|LANGUAGE|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINKER_LANGUAGE|LINK_(?:DEPENDS|DEPENDS_NO_SHARED|DIRECTORIES|FLAGS|INTERFACE_LIBRARIES|INTERFACE_MULTIPLICITY|LIBRARIES|OPTIONS|SEARCH_END_STATIC|SEARCH_START_STATIC|WHAT_YOU_USE)|LISTFILE_STACK|LOCATION|MACOSX_BUNDLE|MACOSX_BUNDLE_INFO_PLIST|MACOSX_FRAMEWORK_INFO_PLIST|MACOSX_PACKAGE_LOCATION|MACOSX_RPATH|MACROS|MANUALLY_ADDED_DEPENDENCIES|MEASUREMENT|MODIFIED|NAME|NO_SONAME|NO_SYSTEM_FROM_IMPORTED|OBJECT_DEPENDS|OBJECT_OUTPUTS|OSX_ARCHITECTURES|OUTPUT_NAME|PACKAGES_FOUND|PACKAGES_NOT_FOUND|PARENT_DIRECTORY|PASS_REGULAR_EXPRESSION|PDB_NAME|PDB_OUTPUT_DIRECTORY|POSITION_INDEPENDENT_CODE|POST_INSTALL_SCRIPT|PREDEFINED_TARGETS_FOLDER|PREFIX|PRE_INSTALL_SCRIPT|PRIVATE_HEADER|PROCESSORS|PROCESSOR_AFFINITY|PROJECT_LABEL|PUBLIC_HEADER|REPORT_UNDEFINED_PROPERTIES|REQUIRED_FILES|RESOURCE|RESOURCE_LOCK|RULE_LAUNCH_COMPILE|RULE_LAUNCH_CUSTOM|RULE_LAUNCH_LINK|RULE_MESSAGES|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|RUN_SERIAL|SKIP_AUTOGEN|SKIP_AUTOMOC|SKIP_AUTORCC|SKIP_AUTOUIC|SKIP_BUILD_RPATH|SKIP_RETURN_CODE|SOURCES|SOURCE_DIR|SOVERSION|STATIC_LIBRARY_FLAGS|STATIC_LIBRARY_OPTIONS|STRINGS|SUBDIRECTORIES|SUFFIX|SYMBOLIC|TARGET_ARCHIVES_MAY_BE_SHARED_LIBS|TARGET_MESSAGES|TARGET_SUPPORTS_SHARED_LIBS|TESTS|TEST_INCLUDE_FILE|TEST_INCLUDE_FILES|TIMEOUT|TIMEOUT_AFTER_MATCH|TYPE|USE_FOLDERS|VALUE|VARIABLES|VERSION|VISIBILITY_INLINES_HIDDEN|VS_(?:CONFIGURATION_TYPE|COPY_TO_OUT_DIR|DEBUGGER_(?:COMMAND|COMMAND_ARGUMENTS|ENVIRONMENT|WORKING_DIRECTORY)|DEPLOYMENT_CONTENT|DEPLOYMENT_LOCATION|DOTNET_REFERENCES|DOTNET_REFERENCES_COPY_LOCAL|GLOBAL_KEYWORD|GLOBAL_PROJECT_TYPES|GLOBAL_ROOTNAMESPACE|INCLUDE_IN_VSIX|IOT_STARTUP_TASK|KEYWORD|RESOURCE_GENERATOR|SCC_AUXPATH|SCC_LOCALPATH|SCC_PROJECTNAME|SCC_PROVIDER|SDK_REFERENCES|SHADER_(?:DISABLE_OPTIMIZATIONS|ENABLE_DEBUG|ENTRYPOINT|FLAGS|MODEL|OBJECT_FILE_NAME|OUTPUT_HEADER_FILE|TYPE|VARIABLE_NAME)|STARTUP_PROJECT|TOOL_OVERRIDE|USER_PROPS|WINRT_COMPONENT|WINRT_EXTENSIONS|WINRT_REFERENCES|XAML_TYPE)|WILL_FAIL|WIN32_EXECUTABLE|WINDOWS_EXPORT_ALL_SYMBOLS|WORKING_DIRECTORY|WRAP_EXCLUDE|XCODE_(?:EMIT_EFFECTIVE_PLATFORM_NAME|EXPLICIT_FILE_TYPE|FILE_ATTRIBUTES|LAST_KNOWN_FILE_TYPE|PRODUCT_TYPE|SCHEME_(?:ADDRESS_SANITIZER|ADDRESS_SANITIZER_USE_AFTER_RETURN|ARGUMENTS|DISABLE_MAIN_THREAD_CHECKER|DYNAMIC_LIBRARY_LOADS|DYNAMIC_LINKER_API_USAGE|ENVIRONMENT|EXECUTABLE|GUARD_MALLOC|MAIN_THREAD_CHECKER_STOP|MALLOC_GUARD_EDGES|MALLOC_SCRIBBLE|MALLOC_STACK|THREAD_SANITIZER(?:_STOP)?|UNDEFINED_BEHAVIOUR_SANITIZER(?:_STOP)?|ZOMBIE_OBJECTS))|XCTEST)\\b/,\n  'keyword': /\\b(?:add_compile_definitions|add_compile_options|add_custom_command|add_custom_target|add_definitions|add_dependencies|add_executable|add_library|add_link_options|add_subdirectory|add_test|aux_source_directory|break|build_command|build_name|cmake_host_system_information|cmake_minimum_required|cmake_parse_arguments|cmake_policy|configure_file|continue|create_test_sourcelist|ctest_build|ctest_configure|ctest_coverage|ctest_empty_binary_directory|ctest_memcheck|ctest_read_custom_files|ctest_run_script|ctest_sleep|ctest_start|ctest_submit|ctest_test|ctest_update|ctest_upload|define_property|else|elseif|enable_language|enable_testing|endforeach|endfunction|endif|endmacro|endwhile|exec_program|execute_process|export|export_library_dependencies|file|find_file|find_library|find_package|find_path|find_program|fltk_wrap_ui|foreach|function|get_cmake_property|get_directory_property|get_filename_component|get_property|get_source_file_property|get_target_property|get_test_property|if|include|include_directories|include_external_msproject|include_guard|include_regular_expression|install|install_files|install_programs|install_targets|link_directories|link_libraries|list|load_cache|load_command|macro|make_directory|mark_as_advanced|math|message|option|output_required_files|project|qt_wrap_cpp|qt_wrap_ui|remove|remove_definitions|return|separate_arguments|set|set_directory_properties|set_property|set_source_files_properties|set_target_properties|set_tests_properties|site_name|source_group|string|subdir_depends|subdirs|target_compile_definitions|target_compile_features|target_compile_options|target_include_directories|target_link_directories|target_link_libraries|target_link_options|target_sources|try_compile|try_run|unset|use_mangled_mesa|utility_source|variable_requires|variable_watch|while|write_file)(?=\\s*\\()\\b/,\n  'boolean': /\\b(?:ON|OFF|TRUE|FALSE)\\b/,\n  'namespace': /\\b(?:PROPERTIES|SHARED|PRIVATE|STATIC|PUBLIC|INTERFACE|TARGET_OBJECTS)\\b/,\n  'operator': /\\b(?:NOT|AND|OR|MATCHES|LESS|GREATER|EQUAL|STRLESS|STRGREATER|STREQUAL|VERSION_LESS|VERSION_EQUAL|VERSION_GREATER|DEFINED)\\b/,\n  'inserted': {\n    pattern: /\\b\\w+::\\w+\\b/,\n    alias: 'class-name'\n  },\n  'number': /\\b\\d+(?:\\.\\d+)*\\b/,\n  'function': /\\b[a-z_]\\w*(?=\\s*\\()\\b/i,\n  'punctuation': /[()>}]|\\$[<{]/\n};","Prism.languages.cmake = {\n  comment: /#.*/,\n  string: {\n    pattern: /\"(?:[^\\\\\"]|\\\\.)*\"/,\n    greedy: !0,\n    inside: {\n      interpolation: {\n        pattern: /\\${(?:[^{}$]|\\${[^{}$]*})*}/,\n        inside: {\n          punctuation: /\\${|}/,\n          variable: /\\w+/\n        }\n      }\n    }\n  },\n  variable: /\\b(?:CMAKE_\\w+|\\w+_(?:VERSION(?:_MAJOR|_MINOR|_PATCH|_TWEAK)?|(?:BINARY|SOURCE)_DIR|DESCRIPTION|HOMEPAGE_URL|ROOT)|(?:CTEST_CUSTOM_(?:MAXIMUM_(?:(?:FAIL|PASS)ED_TEST_OUTPUT_SIZE|NUMBER_OF_(?:ERROR|WARNING)S)|ERROR_(?:P(?:OST|RE)_CONTEXT|EXCEPTION|MATCH)|P(?:OST|RE)_MEMCHECK|WARNING_(?:EXCEPTION|MATCH)|(?:MEMCHECK|TESTS)_IGNORE|P(?:OST|RE)_TEST|COVERAGE_EXCLUDE)|ANDROID|APPLE|BORLAND|BUILD_SHARED_LIBS|CACHE|CPACK_(?:ABSOLUTE_DESTINATION_FILES|COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY|ERROR_ON_ABSOLUTE_INSTALL_DESTINATION|INCLUDE_TOPLEVEL_DIRECTORY|INSTALL_DEFAULT_DIRECTORY_PERMISSIONS|INSTALL_SCRIPT|PACKAGING_INSTALL_PREFIX|SET_DESTDIR|WARN_ON_ABSOLUTE_INSTALL_DESTINATION)|CTEST_(?:BINARY_DIRECTORY|BUILD_COMMAND|BUILD_NAME|BZR_COMMAND|BZR_UPDATE_OPTIONS|CHANGE_ID|CHECKOUT_COMMAND|CONFIGURATION_TYPE|CONFIGURE_COMMAND|COVERAGE_COMMAND|COVERAGE_EXTRA_FLAGS|CURL_OPTIONS|CUSTOM_(?:COVERAGE_EXCLUDE|ERROR_EXCEPTION|ERROR_MATCH|ERROR_POST_CONTEXT|ERROR_PRE_CONTEXT|MAXIMUM_FAILED_TEST_OUTPUT_SIZE|MAXIMUM_NUMBER_OF_(?:ERRORS|WARNINGS)|MAXIMUM_PASSED_TEST_OUTPUT_SIZE|MEMCHECK_IGNORE|POST_MEMCHECK|POST_TEST|PRE_MEMCHECK|PRE_TEST|TESTS_IGNORE|WARNING_EXCEPTION|WARNING_MATCH)|CVS_CHECKOUT|CVS_COMMAND|CVS_UPDATE_OPTIONS|DROP_LOCATION|DROP_METHOD|DROP_SITE|DROP_SITE_CDASH|DROP_SITE_PASSWORD|DROP_SITE_USER|EXTRA_COVERAGE_GLOB|GIT_COMMAND|GIT_INIT_SUBMODULES|GIT_UPDATE_CUSTOM|GIT_UPDATE_OPTIONS|HG_COMMAND|HG_UPDATE_OPTIONS|LABELS_FOR_SUBPROJECTS|MEMORYCHECK_(?:COMMAND|COMMAND_OPTIONS|SANITIZER_OPTIONS|SUPPRESSIONS_FILE|TYPE)|NIGHTLY_START_TIME|P4_CLIENT|P4_COMMAND|P4_OPTIONS|P4_UPDATE_OPTIONS|RUN_CURRENT_SCRIPT|SCP_COMMAND|SITE|SOURCE_DIRECTORY|SUBMIT_URL|SVN_COMMAND|SVN_OPTIONS|SVN_UPDATE_OPTIONS|TEST_LOAD|TEST_TIMEOUT|TRIGGER_SITE|UPDATE_COMMAND|UPDATE_OPTIONS|UPDATE_VERSION_ONLY|USE_LAUNCHERS)|CYGWIN|ENV|EXECUTABLE_OUTPUT_PATH|GHS-MULTI|IOS|LIBRARY_OUTPUT_PATH|MINGW|MSVC(?:10|11|12|14|60|70|71|80|90|_IDE|_TOOLSET_VERSION|_VERSION)?|MSYS|PROJECT_(?:BINARY_DIR|DESCRIPTION|HOMEPAGE_URL|NAME|SOURCE_DIR|VERSION|VERSION_(?:MAJOR|MINOR|PATCH|TWEAK))|UNIX|WIN32|WINCE|WINDOWS_PHONE|WINDOWS_STORE|XCODE|XCODE_VERSION))\\b/,\n  property: /\\b(?:cxx_\\w+|(?:ARCHIVE_OUTPUT_(?:DIRECTORY|NAME)|COMPILE_DEFINITIONS|COMPILE_PDB_NAME|COMPILE_PDB_OUTPUT_DIRECTORY|EXCLUDE_FROM_DEFAULT_BUILD|IMPORTED_(?:IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_LANGUAGES|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|NO_SONAME|OBJECTS|SONAME)|INTERPROCEDURAL_OPTIMIZATION|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINK_FLAGS|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|MAP_IMPORTED_CONFIG|OSX_ARCHITECTURES|OUTPUT_NAME|PDB_NAME|PDB_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|STATIC_LIBRARY_FLAGS|VS_CSHARP|VS_DOTNET_REFERENCEPROP|VS_DOTNET_REFERENCE|VS_GLOBAL_SECTION_POST|VS_GLOBAL_SECTION_PRE|VS_GLOBAL|XCODE_ATTRIBUTE)_\\w+|\\w+_(?:CLANG_TIDY|COMPILER_LAUNCHER|CPPCHECK|CPPLINT|INCLUDE_WHAT_YOU_USE|OUTPUT_NAME|POSTFIX|VISIBILITY_PRESET)|ABSTRACT|ADDITIONAL_MAKE_CLEAN_FILES|ADVANCED|ALIASED_TARGET|ALLOW_DUPLICATE_CUSTOM_TARGETS|ANDROID_(?:ANT_ADDITIONAL_OPTIONS|API|API_MIN|ARCH|ASSETS_DIRECTORIES|GUI|JAR_DEPENDENCIES|NATIVE_LIB_DEPENDENCIES|NATIVE_LIB_DIRECTORIES|PROCESS_MAX|PROGUARD|PROGUARD_CONFIG_PATH|SECURE_PROPS_PATH|SKIP_ANT_STEP|STL_TYPE)|ARCHIVE_OUTPUT_DIRECTORY|ARCHIVE_OUTPUT_NAME|ATTACHED_FILES|ATTACHED_FILES_ON_FAIL|AUTOGEN_(?:BUILD_DIR|ORIGIN_DEPENDS|PARALLEL|SOURCE_GROUP|TARGETS_FOLDER|TARGET_DEPENDS)|AUTOMOC|AUTOMOC_(?:COMPILER_PREDEFINES|DEPEND_FILTERS|EXECUTABLE|MACRO_NAMES|MOC_OPTIONS|SOURCE_GROUP|TARGETS_FOLDER)|AUTORCC|AUTORCC_EXECUTABLE|AUTORCC_OPTIONS|AUTORCC_SOURCE_GROUP|AUTOUIC|AUTOUIC_EXECUTABLE|AUTOUIC_OPTIONS|AUTOUIC_SEARCH_PATHS|BINARY_DIR|BUILDSYSTEM_TARGETS|BUILD_RPATH|BUILD_RPATH_USE_ORIGIN|BUILD_WITH_INSTALL_NAME_DIR|BUILD_WITH_INSTALL_RPATH|BUNDLE|BUNDLE_EXTENSION|CACHE_VARIABLES|CLEAN_NO_CUSTOM|COMMON_LANGUAGE_RUNTIME|COMPATIBLE_INTERFACE_(?:BOOL|NUMBER_MAX|NUMBER_MIN|STRING)|COMPILE_(?:DEFINITIONS|FEATURES|FLAGS|OPTIONS|PDB_NAME|PDB_OUTPUT_DIRECTORY)|COST|CPACK_DESKTOP_SHORTCUTS|CPACK_NEVER_OVERWRITE|CPACK_PERMANENT|CPACK_STARTUP_SHORTCUTS|CPACK_START_MENU_SHORTCUTS|CPACK_WIX_ACL|CROSSCOMPILING_EMULATOR|CUDA_EXTENSIONS|CUDA_PTX_COMPILATION|CUDA_RESOLVE_DEVICE_SYMBOLS|CUDA_SEPARABLE_COMPILATION|CUDA_STANDARD|CUDA_STANDARD_REQUIRED|CXX_EXTENSIONS|CXX_STANDARD|CXX_STANDARD_REQUIRED|C_EXTENSIONS|C_STANDARD|C_STANDARD_REQUIRED|DEBUG_CONFIGURATIONS|DEBUG_POSTFIX|DEFINE_SYMBOL|DEFINITIONS|DEPENDS|DEPLOYMENT_ADDITIONAL_FILES|DEPLOYMENT_REMOTE_DIRECTORY|DISABLED|DISABLED_FEATURES|ECLIPSE_EXTRA_CPROJECT_CONTENTS|ECLIPSE_EXTRA_NATURES|ENABLED_FEATURES|ENABLED_LANGUAGES|ENABLE_EXPORTS|ENVIRONMENT|EXCLUDE_FROM_ALL|EXCLUDE_FROM_DEFAULT_BUILD|EXPORT_NAME|EXPORT_PROPERTIES|EXTERNAL_OBJECT|EchoString|FAIL_REGULAR_EXPRESSION|FIND_LIBRARY_USE_LIB32_PATHS|FIND_LIBRARY_USE_LIB64_PATHS|FIND_LIBRARY_USE_LIBX32_PATHS|FIND_LIBRARY_USE_OPENBSD_VERSIONING|FIXTURES_CLEANUP|FIXTURES_REQUIRED|FIXTURES_SETUP|FOLDER|FRAMEWORK|Fortran_FORMAT|Fortran_MODULE_DIRECTORY|GENERATED|GENERATOR_FILE_NAME|GENERATOR_IS_MULTI_CONFIG|GHS_INTEGRITY_APP|GHS_NO_SOURCE_GROUP_FILE|GLOBAL_DEPENDS_DEBUG_MODE|GLOBAL_DEPENDS_NO_CYCLES|GNUtoMS|HAS_CXX|HEADER_FILE_ONLY|HELPSTRING|IMPLICIT_DEPENDS_INCLUDE_TRANSFORM|IMPORTED|IMPORTED_(?:COMMON_LANGUAGE_RUNTIME|CONFIGURATIONS|GLOBAL|IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_(?:LANGUAGES|LIBRARIES|MULTIPLICITY)|LOCATION|NO_SONAME|OBJECTS|SONAME)|IMPORT_PREFIX|IMPORT_SUFFIX|INCLUDE_DIRECTORIES|INCLUDE_REGULAR_EXPRESSION|INSTALL_NAME_DIR|INSTALL_RPATH|INSTALL_RPATH_USE_LINK_PATH|INTERFACE_(?:AUTOUIC_OPTIONS|COMPILE_DEFINITIONS|COMPILE_FEATURES|COMPILE_OPTIONS|INCLUDE_DIRECTORIES|LINK_DEPENDS|LINK_DIRECTORIES|LINK_LIBRARIES|LINK_OPTIONS|POSITION_INDEPENDENT_CODE|SOURCES|SYSTEM_INCLUDE_DIRECTORIES)|INTERPROCEDURAL_OPTIMIZATION|IN_TRY_COMPILE|IOS_INSTALL_COMBINED|JOB_POOLS|JOB_POOL_COMPILE|JOB_POOL_LINK|KEEP_EXTENSION|LABELS|LANGUAGE|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINKER_LANGUAGE|LINK_(?:DEPENDS|DEPENDS_NO_SHARED|DIRECTORIES|FLAGS|INTERFACE_LIBRARIES|INTERFACE_MULTIPLICITY|LIBRARIES|OPTIONS|SEARCH_END_STATIC|SEARCH_START_STATIC|WHAT_YOU_USE)|LISTFILE_STACK|LOCATION|MACOSX_BUNDLE|MACOSX_BUNDLE_INFO_PLIST|MACOSX_FRAMEWORK_INFO_PLIST|MACOSX_PACKAGE_LOCATION|MACOSX_RPATH|MACROS|MANUALLY_ADDED_DEPENDENCIES|MEASUREMENT|MODIFIED|NAME|NO_SONAME|NO_SYSTEM_FROM_IMPORTED|OBJECT_DEPENDS|OBJECT_OUTPUTS|OSX_ARCHITECTURES|OUTPUT_NAME|PACKAGES_FOUND|PACKAGES_NOT_FOUND|PARENT_DIRECTORY|PASS_REGULAR_EXPRESSION|PDB_NAME|PDB_OUTPUT_DIRECTORY|POSITION_INDEPENDENT_CODE|POST_INSTALL_SCRIPT|PREDEFINED_TARGETS_FOLDER|PREFIX|PRE_INSTALL_SCRIPT|PRIVATE_HEADER|PROCESSORS|PROCESSOR_AFFINITY|PROJECT_LABEL|PUBLIC_HEADER|REPORT_UNDEFINED_PROPERTIES|REQUIRED_FILES|RESOURCE|RESOURCE_LOCK|RULE_LAUNCH_COMPILE|RULE_LAUNCH_CUSTOM|RULE_LAUNCH_LINK|RULE_MESSAGES|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|RUN_SERIAL|SKIP_AUTOGEN|SKIP_AUTOMOC|SKIP_AUTORCC|SKIP_AUTOUIC|SKIP_BUILD_RPATH|SKIP_RETURN_CODE|SOURCES|SOURCE_DIR|SOVERSION|STATIC_LIBRARY_FLAGS|STATIC_LIBRARY_OPTIONS|STRINGS|SUBDIRECTORIES|SUFFIX|SYMBOLIC|TARGET_ARCHIVES_MAY_BE_SHARED_LIBS|TARGET_MESSAGES|TARGET_SUPPORTS_SHARED_LIBS|TESTS|TEST_INCLUDE_FILE|TEST_INCLUDE_FILES|TIMEOUT|TIMEOUT_AFTER_MATCH|TYPE|USE_FOLDERS|VALUE|VARIABLES|VERSION|VISIBILITY_INLINES_HIDDEN|VS_(?:CONFIGURATION_TYPE|COPY_TO_OUT_DIR|DEBUGGER_(?:COMMAND|COMMAND_ARGUMENTS|ENVIRONMENT|WORKING_DIRECTORY)|DEPLOYMENT_CONTENT|DEPLOYMENT_LOCATION|DOTNET_REFERENCES|DOTNET_REFERENCES_COPY_LOCAL|GLOBAL_KEYWORD|GLOBAL_PROJECT_TYPES|GLOBAL_ROOTNAMESPACE|INCLUDE_IN_VSIX|IOT_STARTUP_TASK|KEYWORD|RESOURCE_GENERATOR|SCC_AUXPATH|SCC_LOCALPATH|SCC_PROJECTNAME|SCC_PROVIDER|SDK_REFERENCES|SHADER_(?:DISABLE_OPTIMIZATIONS|ENABLE_DEBUG|ENTRYPOINT|FLAGS|MODEL|OBJECT_FILE_NAME|OUTPUT_HEADER_FILE|TYPE|VARIABLE_NAME)|STARTUP_PROJECT|TOOL_OVERRIDE|USER_PROPS|WINRT_COMPONENT|WINRT_EXTENSIONS|WINRT_REFERENCES|XAML_TYPE)|WILL_FAIL|WIN32_EXECUTABLE|WINDOWS_EXPORT_ALL_SYMBOLS|WORKING_DIRECTORY|WRAP_EXCLUDE|XCODE_(?:EMIT_EFFECTIVE_PLATFORM_NAME|EXPLICIT_FILE_TYPE|FILE_ATTRIBUTES|LAST_KNOWN_FILE_TYPE|PRODUCT_TYPE|SCHEME_(?:ADDRESS_SANITIZER|ADDRESS_SANITIZER_USE_AFTER_RETURN|ARGUMENTS|DISABLE_MAIN_THREAD_CHECKER|DYNAMIC_LIBRARY_LOADS|DYNAMIC_LINKER_API_USAGE|ENVIRONMENT|EXECUTABLE|GUARD_MALLOC|MAIN_THREAD_CHECKER_STOP|MALLOC_GUARD_EDGES|MALLOC_SCRIBBLE|MALLOC_STACK|THREAD_SANITIZER(?:_STOP)?|UNDEFINED_BEHAVIOUR_SANITIZER(?:_STOP)?|ZOMBIE_OBJECTS))|XCTEST)\\b/,\n  keyword: /\\b(?:add_compile_definitions|add_compile_options|add_custom_command|add_custom_target|add_definitions|add_dependencies|add_executable|add_library|add_link_options|add_subdirectory|add_test|aux_source_directory|break|build_command|build_name|cmake_host_system_information|cmake_minimum_required|cmake_parse_arguments|cmake_policy|configure_file|continue|create_test_sourcelist|ctest_build|ctest_configure|ctest_coverage|ctest_empty_binary_directory|ctest_memcheck|ctest_read_custom_files|ctest_run_script|ctest_sleep|ctest_start|ctest_submit|ctest_test|ctest_update|ctest_upload|define_property|else|elseif|enable_language|enable_testing|endforeach|endfunction|endif|endmacro|endwhile|exec_program|execute_process|export|export_library_dependencies|file|find_file|find_library|find_package|find_path|find_program|fltk_wrap_ui|foreach|function|get_cmake_property|get_directory_property|get_filename_component|get_property|get_source_file_property|get_target_property|get_test_property|if|include|include_directories|include_external_msproject|include_guard|include_regular_expression|install|install_files|install_programs|install_targets|link_directories|link_libraries|list|load_cache|load_command|macro|make_directory|mark_as_advanced|math|message|option|output_required_files|project|qt_wrap_cpp|qt_wrap_ui|remove|remove_definitions|return|separate_arguments|set|set_directory_properties|set_property|set_source_files_properties|set_target_properties|set_tests_properties|site_name|source_group|string|subdir_depends|subdirs|target_compile_definitions|target_compile_features|target_compile_options|target_include_directories|target_link_directories|target_link_libraries|target_link_options|target_sources|try_compile|try_run|unset|use_mangled_mesa|utility_source|variable_requires|variable_watch|while|write_file)(?=\\s*\\()\\b/,\n  boolean: /\\b(?:ON|OFF|TRUE|FALSE)\\b/,\n  namespace: /\\b(?:PROPERTIES|SHARED|PRIVATE|STATIC|PUBLIC|INTERFACE|TARGET_OBJECTS)\\b/,\n  operator: /\\b(?:NOT|AND|OR|MATCHES|LESS|GREATER|EQUAL|STRLESS|STRGREATER|STREQUAL|VERSION_LESS|VERSION_EQUAL|VERSION_GREATER|DEFINED)\\b/,\n  inserted: {\n    pattern: /\\b\\w+::\\w+\\b/,\n    alias: \"class-name\"\n  },\n  number: /\\b\\d+(?:\\.\\d+)*\\b/,\n  function: /\\b[a-z_]\\w*(?=\\s*\\()\\b/i,\n  punctuation: /[()>}]|\\$[<{]/\n};","(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/,\n      interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [// Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.javascript\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n  Prism.languages.coffee = Prism.languages.coffeescript;\n})(Prism);","!function (e) {\n  var t = /#(?!\\{).+/,\n      n = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: \"variable\"\n  };\n  e.languages.coffeescript = e.languages.extend(\"javascript\", {\n    comment: t,\n    string: [{\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: !0\n    }, {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: !0,\n      inside: {\n        interpolation: n\n      }\n    }],\n    keyword: /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    \"class-member\": {\n      pattern: /@(?!\\d)\\w+/,\n      alias: \"variable\"\n    }\n  }), e.languages.insertBefore(\"coffeescript\", \"comment\", {\n    \"multiline-comment\": {\n      pattern: /###[\\s\\S]+?###/,\n      alias: \"comment\"\n    },\n    \"block-regex\": {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: \"regex\",\n      inside: {\n        comment: t,\n        interpolation: n\n      }\n    }\n  }), e.languages.insertBefore(\"coffeescript\", \"string\", {\n    \"inline-javascript\": {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        delimiter: {\n          pattern: /^`|`$/,\n          alias: \"punctuation\"\n        },\n        rest: e.languages.javascript\n      }\n    },\n    \"multiline-string\": [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: !0,\n      alias: \"string\"\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: !0,\n      alias: \"string\",\n      inside: {\n        interpolation: n\n      }\n    }]\n  }), e.languages.insertBefore(\"coffeescript\", \"keyword\", {\n    property: /(?!\\d)\\w+(?=\\s*:(?!:))/\n  }), delete e.languages.coffeescript[\"template-string\"], e.languages.coffee = e.languages.coffeescript;\n}(Prism);","require(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nvar _self = typeof window !== 'undefined' ? window // if in browser\n: typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope ? self // if in worker\n: {} // if in node js\n;\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\n\nvar Prism = function (_self) {\n  // Private helper vars\n  var lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n  var uniqueId = 0;\n  var _ = {\n    manual: _self.Prism && _self.Prism.manual,\n    disableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n        } else if (Array.isArray(tokens)) {\n          return tokens.map(_.util.encode);\n        } else {\n          return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n        }\n      },\n      type: function type(o) {\n        return Object.prototype.toString.call(o).slice(8, -1);\n      },\n      objId: function objId(obj) {\n        if (!obj['__id']) {\n          Object.defineProperty(obj, '__id', {\n            value: ++uniqueId\n          });\n        }\n\n        return obj['__id'];\n      },\n      // Deep clone a language definition (e.g. to extend it)\n      clone: function deepClone(o, visited) {\n        var clone,\n            id,\n            type = _.util.type(o);\n\n        visited = visited || {};\n\n        switch (type) {\n          case 'Object':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone = {};\n            visited[id] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = deepClone(o[key], visited);\n              }\n            }\n\n            return clone;\n\n          case 'Array':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone = [];\n            visited[id] = clone;\n            o.forEach(function (v, i) {\n              clone[i] = deepClone(v, visited);\n            });\n            return clone;\n\n          default:\n            return o;\n        }\n      }\n    },\n    languages: {\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\n       * Insert a token before another token in a language literal\n       * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n       * we cannot just provide an object, we need an object and a key.\n       * @param inside The key (or language id) of the parent\n       * @param before The key to insert before.\n       * @param insert Object with the key/value pairs to insert\n       * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root || _.languages;\n        var grammar = root[inside];\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            } // Do not insert token which also occur in insert. See #1525\n\n\n            if (!insert.hasOwnProperty(token)) {\n              ret[token] = grammar[token];\n            }\n          }\n        }\n\n        var old = root[inside];\n        root[inside] = ret; // Update references in other language definitions\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === old && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n        var objId = _.util.objId;\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n\n            var property = o[i],\n                propertyType = _.util.type(property);\n\n            if (propertyType === 'Object' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, null, visited);\n            } else if (propertyType === 'Array' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n    highlightAll: function highlightAll(async, callback) {\n      _.highlightAllUnder(document, async, callback);\n    },\n    highlightAllUnder: function highlightAllUnder(container, async, callback) {\n      var env = {\n        callback: callback,\n        selector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n      };\n\n      _.hooks.run(\"before-highlightall\", env);\n\n      var elements = env.elements || container.querySelectorAll(env.selector);\n\n      for (var i = 0, element; element = elements[i++];) {\n        _.highlightElement(element, async === true, env.callback);\n      }\n    },\n    highlightElement: function highlightElement(element, async, callback) {\n      // Find language\n      var language,\n          grammar,\n          parent = element;\n\n      while (parent && !lang.test(parent.className)) {\n        parent = parent.parentNode;\n      }\n\n      if (parent) {\n        language = (parent.className.match(lang) || [, ''])[1].toLowerCase();\n        grammar = _.languages[language];\n      } // Set language on the element, if not present\n\n\n      element.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n      if (element.parentNode) {\n        // Set language on the parent, for styling\n        parent = element.parentNode;\n\n        if (/pre/i.test(parent.nodeName)) {\n          parent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n        }\n      }\n\n      var code = element.textContent;\n      var env = {\n        element: element,\n        language: language,\n        grammar: grammar,\n        code: code\n      };\n\n      var insertHighlightedCode = function insertHighlightedCode(highlightedCode) {\n        env.highlightedCode = highlightedCode;\n\n        _.hooks.run('before-insert', env);\n\n        env.element.innerHTML = env.highlightedCode;\n\n        _.hooks.run('after-highlight', env);\n\n        _.hooks.run('complete', env);\n\n        callback && callback.call(env.element);\n      };\n\n      _.hooks.run('before-sanity-check', env);\n\n      if (!env.code) {\n        _.hooks.run('complete', env);\n\n        return;\n      }\n\n      _.hooks.run('before-highlight', env);\n\n      if (!env.grammar) {\n        insertHighlightedCode(_.util.encode(env.code));\n        return;\n      }\n\n      if (async && _self.Worker) {\n        var worker = new Worker(_.filename);\n\n        worker.onmessage = function (evt) {\n          insertHighlightedCode(evt.data);\n        };\n\n        worker.postMessage(JSON.stringify({\n          language: env.language,\n          code: env.code,\n          immediateClose: true\n        }));\n      } else {\n        insertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n      }\n    },\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n\n      _.hooks.run('before-tokenize', env);\n\n      env.tokens = _.tokenize(env.code, env.grammar);\n\n      _.hooks.run('after-tokenize', env);\n\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    matchGrammar: function matchGrammar(text, strarr, grammar, index, startPos, oneshot, target) {\n      for (var token in grammar) {\n        if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n          continue;\n        }\n\n        if (token == target) {\n          return;\n        }\n\n        var patterns = grammar[token];\n        patterns = _.util.type(patterns) === \"Array\" ? patterns : [patterns];\n\n        for (var j = 0; j < patterns.length; ++j) {\n          var pattern = patterns[j],\n              inside = pattern.inside,\n              lookbehind = !!pattern.lookbehind,\n              greedy = !!pattern.greedy,\n              lookbehindLength = 0,\n              alias = pattern.alias;\n\n          if (greedy && !pattern.pattern.global) {\n            // Without the global flag, lastIndex won't work\n            var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n            pattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n          }\n\n          pattern = pattern.pattern || pattern; // Don’t cache length as it changes during the loop\n\n          for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n            var str = strarr[i];\n\n            if (strarr.length > text.length) {\n              // Something went terribly wrong, ABORT, ABORT!\n              return;\n            }\n\n            if (str instanceof Token) {\n              continue;\n            }\n\n            if (greedy && i != strarr.length - 1) {\n              pattern.lastIndex = pos;\n              var match = pattern.exec(text);\n\n              if (!match) {\n                break;\n              }\n\n              var from = match.index + (lookbehind ? match[1].length : 0),\n                  to = match.index + match[0].length,\n                  k = i,\n                  p = pos;\n\n              for (var len = strarr.length; k < len && (p < to || !strarr[k].type && !strarr[k - 1].greedy); ++k) {\n                p += strarr[k].length; // Move the index i to the element in strarr that is closest to from\n\n                if (from >= p) {\n                  ++i;\n                  pos = p;\n                }\n              } // If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\n\n              if (strarr[i] instanceof Token) {\n                continue;\n              } // Number of tokens to delete and replace with the new match\n\n\n              delNum = k - i;\n              str = text.slice(pos, p);\n              match.index -= pos;\n            } else {\n              pattern.lastIndex = 0;\n              var match = pattern.exec(str),\n                  delNum = 1;\n            }\n\n            if (!match) {\n              if (oneshot) {\n                break;\n              }\n\n              continue;\n            }\n\n            if (lookbehind) {\n              lookbehindLength = match[1] ? match[1].length : 0;\n            }\n\n            var from = match.index + lookbehindLength,\n                match = match[0].slice(lookbehindLength),\n                to = from + match.length,\n                before = str.slice(0, from),\n                after = str.slice(to);\n            var args = [i, delNum];\n\n            if (before) {\n              ++i;\n              pos += before.length;\n              args.push(before);\n            }\n\n            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\n            args.push(wrapped);\n\n            if (after) {\n              args.push(after);\n            }\n\n            Array.prototype.splice.apply(strarr, args);\n            if (delNum != 1) _.matchGrammar(text, strarr, grammar, i, pos, true, token);\n            if (oneshot) break;\n          }\n        }\n      }\n    },\n    tokenize: function tokenize(text, grammar) {\n      var strarr = [text];\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      _.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n      return strarr;\n    },\n    hooks: {\n      all: {},\n      add: function add(name, callback) {\n        var hooks = _.hooks.all;\n        hooks[name] = hooks[name] || [];\n        hooks[name].push(callback);\n      },\n      run: function run(name, env) {\n        var callbacks = _.hooks.all[name];\n\n        if (!callbacks || !callbacks.length) {\n          return;\n        }\n\n        for (var i = 0, callback; callback = callbacks[i++];) {\n          callback(env);\n        }\n      }\n    },\n    Token: Token\n  };\n  _self.Prism = _;\n\n  function Token(type, content, alias, matchedStr, greedy) {\n    this.type = type;\n    this.content = content;\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || \"\").length | 0;\n    this.greedy = !!greedy;\n  }\n\n  Token.stringify = function (o, language, parent) {\n    if (typeof o == 'string') {\n      return o;\n    }\n\n    if (Array.isArray(o)) {\n      return o.map(function (element) {\n        return Token.stringify(element, language, o);\n      }).join('');\n    }\n\n    var env = {\n      type: o.type,\n      content: Token.stringify(o.content, language, parent),\n      tag: 'span',\n      classes: ['token', o.type],\n      attributes: {},\n      language: language,\n      parent: parent\n    };\n\n    if (o.alias) {\n      var aliases = Array.isArray(o.alias) ? o.alias : [o.alias];\n      Array.prototype.push.apply(env.classes, aliases);\n    }\n\n    _.hooks.run('wrap', env);\n\n    var attributes = Object.keys(env.attributes).map(function (name) {\n      return name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n    }).join(' ');\n    return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n  };\n\n  if (!_self.document) {\n    if (!_self.addEventListener) {\n      // in Node.js\n      return _;\n    }\n\n    if (!_.disableWorkerMessageHandler) {\n      // In worker\n      _self.addEventListener('message', function (evt) {\n        var message = JSON.parse(evt.data),\n            lang = message.language,\n            code = message.code,\n            immediateClose = message.immediateClose;\n\n        _self.postMessage(_.highlight(code, _.languages[lang], lang));\n\n        if (immediateClose) {\n          _self.close();\n        }\n      }, false);\n    }\n\n    return _;\n  } //Get current script and highlight\n\n\n  var script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n\n  if (script) {\n    _.filename = script.src;\n\n    if (!_.manual && !script.hasAttribute('data-manual')) {\n      if (document.readyState !== \"loading\") {\n        if (window.requestAnimationFrame) {\n          window.requestAnimationFrame(_.highlightAll);\n        } else {\n          window.setTimeout(_.highlightAll, 16);\n        }\n      } else {\n        document.addEventListener('DOMContentLoaded', _.highlightAll);\n      }\n    }\n  }\n\n  return _;\n}(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = Prism;\n} // hack for components to work correctly in node.js\n\n\nif (typeof global !== 'undefined') {\n  global.Prism = Prism;\n}","require(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nvar _self = \"undefined\" != typeof window ? window : \"undefined\" != typeof WorkerGlobalScope && self instanceof WorkerGlobalScope ? self : {},\n    Prism = function (g) {\n  var c = /\\blang(?:uage)?-([\\w-]+)\\b/i,\n      a = 0,\n      C = {\n    manual: g.Prism && g.Prism.manual,\n    disableWorkerMessageHandler: g.Prism && g.Prism.disableWorkerMessageHandler,\n    util: {\n      encode: function encode(e) {\n        return e instanceof M ? new M(e.type, C.util.encode(e.content), e.alias) : Array.isArray(e) ? e.map(C.util.encode) : e.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/\\u00a0/g, \" \");\n      },\n      type: function type(e) {\n        return Object.prototype.toString.call(e).slice(8, -1);\n      },\n      objId: function objId(e) {\n        return e.__id || Object.defineProperty(e, \"__id\", {\n          value: ++a\n        }), e.__id;\n      },\n      clone: function t(e, n) {\n        var r,\n            a,\n            i = C.util.type(e);\n\n        switch (n = n || {}, i) {\n          case \"Object\":\n            if (a = C.util.objId(e), n[a]) return n[a];\n\n            for (var l in r = {}, n[a] = r, e) {\n              e.hasOwnProperty(l) && (r[l] = t(e[l], n));\n            }\n\n            return r;\n\n          case \"Array\":\n            return a = C.util.objId(e), n[a] ? n[a] : (r = [], n[a] = r, e.forEach(function (e, a) {\n              r[a] = t(e, n);\n            }), r);\n\n          default:\n            return e;\n        }\n      }\n    },\n    languages: {\n      extend: function extend(e, a) {\n        var t = C.util.clone(C.languages[e]);\n\n        for (var n in a) {\n          t[n] = a[n];\n        }\n\n        return t;\n      },\n      insertBefore: function insertBefore(t, e, a, n) {\n        var r = (n = n || C.languages)[t],\n            i = {};\n\n        for (var l in r) {\n          if (r.hasOwnProperty(l)) {\n            if (l == e) for (var o in a) {\n              a.hasOwnProperty(o) && (i[o] = a[o]);\n            }\n            a.hasOwnProperty(l) || (i[l] = r[l]);\n          }\n        }\n\n        var s = n[t];\n        return n[t] = i, C.languages.DFS(C.languages, function (e, a) {\n          a === s && e != t && (this[e] = i);\n        }), i;\n      },\n      DFS: function e(a, t, n, r) {\n        r = r || {};\n        var i = C.util.objId;\n\n        for (var l in a) {\n          if (a.hasOwnProperty(l)) {\n            t.call(a, l, a[l], n || l);\n            var o = a[l],\n                s = C.util.type(o);\n            \"Object\" !== s || r[i(o)] ? \"Array\" !== s || r[i(o)] || (r[i(o)] = !0, e(o, t, l, r)) : (r[i(o)] = !0, e(o, t, null, r));\n          }\n        }\n      }\n    },\n    plugins: {},\n    highlightAll: function highlightAll(e, a) {\n      C.highlightAllUnder(document, e, a);\n    },\n    highlightAllUnder: function highlightAllUnder(e, a, t) {\n      var n = {\n        callback: t,\n        selector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n      };\n      C.hooks.run(\"before-highlightall\", n);\n\n      for (var r, i = n.elements || e.querySelectorAll(n.selector), l = 0; r = i[l++];) {\n        C.highlightElement(r, !0 === a, n.callback);\n      }\n    },\n    highlightElement: function highlightElement(e, a, t) {\n      for (var n, r, i = e; i && !c.test(i.className);) {\n        i = i.parentNode;\n      }\n\n      i && (n = (i.className.match(c) || [, \"\"])[1].toLowerCase(), r = C.languages[n]), e.className = e.className.replace(c, \"\").replace(/\\s+/g, \" \") + \" language-\" + n, e.parentNode && (i = e.parentNode, /pre/i.test(i.nodeName) && (i.className = i.className.replace(c, \"\").replace(/\\s+/g, \" \") + \" language-\" + n));\n\n      var l = {\n        element: e,\n        language: n,\n        grammar: r,\n        code: e.textContent\n      },\n          o = function o(e) {\n        l.highlightedCode = e, C.hooks.run(\"before-insert\", l), l.element.innerHTML = l.highlightedCode, C.hooks.run(\"after-highlight\", l), C.hooks.run(\"complete\", l), t && t.call(l.element);\n      };\n\n      if (C.hooks.run(\"before-sanity-check\", l), l.code) {\n        if (C.hooks.run(\"before-highlight\", l), l.grammar) {\n          if (a && g.Worker) {\n            var s = new Worker(C.filename);\n            s.onmessage = function (e) {\n              o(e.data);\n            }, s.postMessage(JSON.stringify({\n              language: l.language,\n              code: l.code,\n              immediateClose: !0\n            }));\n          } else o(C.highlight(l.code, l.grammar, l.language));\n        } else o(C.util.encode(l.code));\n      } else C.hooks.run(\"complete\", l);\n    },\n    highlight: function highlight(e, a, t) {\n      var n = {\n        code: e,\n        grammar: a,\n        language: t\n      };\n      return C.hooks.run(\"before-tokenize\", n), n.tokens = C.tokenize(n.code, n.grammar), C.hooks.run(\"after-tokenize\", n), M.stringify(C.util.encode(n.tokens), n.language);\n    },\n    matchGrammar: function matchGrammar(e, a, t, n, r, i, l) {\n      for (var o in t) {\n        if (t.hasOwnProperty(o) && t[o]) {\n          if (o == l) return;\n          var s = t[o];\n          s = \"Array\" === C.util.type(s) ? s : [s];\n\n          for (var g = 0; g < s.length; ++g) {\n            var c = s[g],\n                u = c.inside,\n                h = !!c.lookbehind,\n                f = !!c.greedy,\n                d = 0,\n                m = c.alias;\n\n            if (f && !c.pattern.global) {\n              var p = c.pattern.toString().match(/[imuy]*$/)[0];\n              c.pattern = RegExp(c.pattern.source, p + \"g\");\n            }\n\n            c = c.pattern || c;\n\n            for (var y = n, v = r; y < a.length; v += a[y].length, ++y) {\n              var k = a[y];\n              if (a.length > e.length) return;\n\n              if (!(k instanceof M)) {\n                if (f && y != a.length - 1) {\n                  if (c.lastIndex = v, !(x = c.exec(e))) break;\n\n                  for (var b = x.index + (h ? x[1].length : 0), w = x.index + x[0].length, A = y, P = v, O = a.length; A < O && (P < w || !a[A].type && !a[A - 1].greedy); ++A) {\n                    (P += a[A].length) <= b && (++y, v = P);\n                  }\n\n                  if (a[y] instanceof M) continue;\n                  N = A - y, k = e.slice(v, P), x.index -= v;\n                } else {\n                  c.lastIndex = 0;\n                  var x = c.exec(k),\n                      N = 1;\n                }\n\n                if (x) {\n                  h && (d = x[1] ? x[1].length : 0);\n                  w = (b = x.index + d) + (x = x[0].slice(d)).length;\n                  var j = k.slice(0, b),\n                      S = k.slice(w),\n                      E = [y, N];\n                  j && (++y, v += j.length, E.push(j));\n\n                  var _ = new M(o, u ? C.tokenize(x, u) : x, m, x, f);\n\n                  if (E.push(_), S && E.push(S), Array.prototype.splice.apply(a, E), 1 != N && C.matchGrammar(e, a, t, y, v, !0, o), i) break;\n                } else if (i) break;\n              }\n            }\n          }\n        }\n      }\n    },\n    tokenize: function tokenize(e, a) {\n      var t = [e],\n          n = a.rest;\n\n      if (n) {\n        for (var r in n) {\n          a[r] = n[r];\n        }\n\n        delete a.rest;\n      }\n\n      return C.matchGrammar(e, t, a, 0, 0, !1), t;\n    },\n    hooks: {\n      all: {},\n      add: function add(e, a) {\n        var t = C.hooks.all;\n        t[e] = t[e] || [], t[e].push(a);\n      },\n      run: function run(e, a) {\n        var t = C.hooks.all[e];\n        if (t && t.length) for (var n, r = 0; n = t[r++];) {\n          n(a);\n        }\n      }\n    },\n    Token: M\n  };\n\n  function M(e, a, t, n, r) {\n    this.type = e, this.content = a, this.alias = t, this.length = 0 | (n || \"\").length, this.greedy = !!r;\n  }\n\n  if (g.Prism = C, M.stringify = function (a, t, e) {\n    if (\"string\" == typeof a) return a;\n    if (Array.isArray(a)) return a.map(function (e) {\n      return M.stringify(e, t, a);\n    }).join(\"\");\n    var n = {\n      type: a.type,\n      content: M.stringify(a.content, t, e),\n      tag: \"span\",\n      classes: [\"token\", a.type],\n      attributes: {},\n      language: t,\n      parent: e\n    };\n\n    if (a.alias) {\n      var r = Array.isArray(a.alias) ? a.alias : [a.alias];\n      Array.prototype.push.apply(n.classes, r);\n    }\n\n    C.hooks.run(\"wrap\", n);\n    var i = Object.keys(n.attributes).map(function (e) {\n      return e + '=\"' + (n.attributes[e] || \"\").replace(/\"/g, \"&quot;\") + '\"';\n    }).join(\" \");\n    return \"<\" + n.tag + ' class=\"' + n.classes.join(\" \") + '\"' + (i ? \" \" + i : \"\") + \">\" + n.content + \"</\" + n.tag + \">\";\n  }, !g.document) return g.addEventListener && (C.disableWorkerMessageHandler || g.addEventListener(\"message\", function (e) {\n    var a = JSON.parse(e.data),\n        t = a.language,\n        n = a.code,\n        r = a.immediateClose;\n    g.postMessage(C.highlight(n, C.languages[t], t)), r && g.close();\n  }, !1)), C;\n  var e = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n  return e && (C.filename = e.src, C.manual || e.hasAttribute(\"data-manual\") || (\"loading\" !== document.readyState ? window.requestAnimationFrame ? window.requestAnimationFrame(C.highlightAll) : window.setTimeout(C.highlightAll, 16) : document.addEventListener(\"DOMContentLoaded\", C.highlightAll))), C;\n}(_self);\n\n\"undefined\" != typeof module && module.exports && (module.exports = Prism), \"undefined\" != typeof global && (global.Prism = Prism);","Prism.languages.cpp = Prism.languages.extend('c', {\n  'class-name': {\n    pattern: /(\\b(?:class|enum|struct)\\s+)\\w+/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/\n});\nPrism.languages.insertBefore('cpp', 'string', {\n  'raw-string': {\n    pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n    alias: 'string',\n    greedy: true\n  }\n});","Prism.languages.cpp = Prism.languages.extend(\"c\", {\n  \"class-name\": {\n    pattern: /(\\b(?:class|enum|struct)\\s+)\\w+/,\n    lookbehind: !0\n  },\n  keyword: /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\n  boolean: /\\b(?:true|false)\\b/,\n  operator: />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/\n}), Prism.languages.insertBefore(\"cpp\", \"string\", {\n  \"raw-string\": {\n    pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n    alias: \"string\",\n    greedy: !0\n  }\n});","(function (Prism) {\n  Prism.languages.crystal = Prism.languages.extend('ruby', {\n    keyword: [/\\b(?:abstract|alias|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|rescue|return|require|select|self|sizeof|struct|super|then|type|typeof|uninitialized|union|unless|until|when|while|with|yield|__DIR__|__END_LINE__|__FILE__|__LINE__)\\b/, {\n      pattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\n      lookbehind: true\n    }],\n    number: /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/\n  });\n  Prism.languages.insertBefore('crystal', 'string', {\n    attribute: {\n      pattern: /@\\[.+?\\]/,\n      alias: 'attr-name',\n      inside: {\n        delimiter: {\n          pattern: /^@\\[|\\]$/,\n          alias: 'tag'\n        },\n        rest: Prism.languages.crystal\n      }\n    },\n    expansion: [{\n      pattern: /\\{\\{.+?\\}\\}/,\n      inside: {\n        delimiter: {\n          pattern: /^\\{\\{|\\}\\}$/,\n          alias: 'tag'\n        },\n        rest: Prism.languages.crystal\n      }\n    }, {\n      pattern: /\\{%.+?%\\}/,\n      inside: {\n        delimiter: {\n          pattern: /^\\{%|%\\}$/,\n          alias: 'tag'\n        },\n        rest: Prism.languages.crystal\n      }\n    }]\n  });\n})(Prism);","!function (e) {\n  e.languages.crystal = e.languages.extend(\"ruby\", {\n    keyword: [/\\b(?:abstract|alias|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|rescue|return|require|select|self|sizeof|struct|super|then|type|typeof|uninitialized|union|unless|until|when|while|with|yield|__DIR__|__END_LINE__|__FILE__|__LINE__)\\b/, {\n      pattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\n      lookbehind: !0\n    }],\n    number: /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/\n  }), e.languages.insertBefore(\"crystal\", \"string\", {\n    attribute: {\n      pattern: /@\\[.+?\\]/,\n      alias: \"attr-name\",\n      inside: {\n        delimiter: {\n          pattern: /^@\\[|\\]$/,\n          alias: \"tag\"\n        },\n        rest: e.languages.crystal\n      }\n    },\n    expansion: [{\n      pattern: /\\{\\{.+?\\}\\}/,\n      inside: {\n        delimiter: {\n          pattern: /^\\{\\{|\\}\\}$/,\n          alias: \"tag\"\n        },\n        rest: e.languages.crystal\n      }\n    }, {\n      pattern: /\\{%.+?%\\}/,\n      inside: {\n        delimiter: {\n          pattern: /^\\{%|%\\}$/,\n          alias: \"tag\"\n        },\n        rest: e.languages.crystal\n      }\n    }]\n  });\n}(Prism);","Prism.languages.csharp = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:abstract|add|alias|as|ascending|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|descending|do|double|dynamic|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|from|get|global|goto|group|if|implicit|in|int|interface|internal|into|is|join|let|lock|long|namespace|new|null|object|operator|orderby|out|override|params|partial|private|protected|public|readonly|ref|remove|return|sbyte|sealed|select|set|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|value|var|virtual|void|volatile|where|while|yield)\\b/,\n  'string': [{\n    pattern: /@(\"|')(?:\\1\\1|\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: true\n  }, {\n    pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*?\\1/,\n    greedy: true\n  }],\n  'class-name': [{\n    // (Foo bar, Bar baz)\n    pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=\\s+\\w+)/,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    // [Foo]\n    pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: true,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    // class Foo : Bar\n    pattern: /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: true,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    // class Foo\n    pattern: /((?:\\b(?:class|interface|new)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: true,\n    inside: {\n      punctuation: /\\./\n    }\n  }],\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)f?/i,\n  'operator': />>=?|<<=?|[-=]>|([-+&|?])\\1|~|[-+*/%&|^!=<>]=?/,\n  'punctuation': /\\?\\.?|::|[{}[\\];(),.:]/\n});\nPrism.languages.insertBefore('csharp', 'class-name', {\n  'generic-method': {\n    pattern: /\\w+\\s*<[^>\\r\\n]+?>\\s*(?=\\()/,\n    inside: {\n      function: /^\\w+/,\n      'class-name': {\n        pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      keyword: Prism.languages.csharp.keyword,\n      punctuation: /[<>(),.:]/\n    }\n  },\n  'preprocessor': {\n    pattern: /(^\\s*)#.*/m,\n    lookbehind: true,\n    alias: 'property',\n    inside: {\n      // highlight preprocessor directives as keywords\n      'directive': {\n        pattern: /(\\s*#)\\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,\n        lookbehind: true,\n        alias: 'keyword'\n      }\n    }\n  }\n});\nPrism.languages.dotnet = Prism.languages.csharp;","Prism.languages.csharp = Prism.languages.extend(\"clike\", {\n  keyword: /\\b(?:abstract|add|alias|as|ascending|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|descending|do|double|dynamic|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|from|get|global|goto|group|if|implicit|in|int|interface|internal|into|is|join|let|lock|long|namespace|new|null|object|operator|orderby|out|override|params|partial|private|protected|public|readonly|ref|remove|return|sbyte|sealed|select|set|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|value|var|virtual|void|volatile|where|while|yield)\\b/,\n  string: [{\n    pattern: /@(\"|')(?:\\1\\1|\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: !0\n  }, {\n    pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*?\\1/,\n    greedy: !0\n  }],\n  \"class-name\": [{\n    pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=\\s+\\w+)/,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    pattern: /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    pattern: /((?:\\b(?:class|interface|new)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /\\./\n    }\n  }],\n  number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)f?/i,\n  operator: />>=?|<<=?|[-=]>|([-+&|?])\\1|~|[-+*/%&|^!=<>]=?/,\n  punctuation: /\\?\\.?|::|[{}[\\];(),.:]/\n}), Prism.languages.insertBefore(\"csharp\", \"class-name\", {\n  \"generic-method\": {\n    pattern: /\\w+\\s*<[^>\\r\\n]+?>\\s*(?=\\()/,\n    inside: {\n      function: /^\\w+/,\n      \"class-name\": {\n        pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      keyword: Prism.languages.csharp.keyword,\n      punctuation: /[<>(),.:]/\n    }\n  },\n  preprocessor: {\n    pattern: /(^\\s*)#.*/m,\n    lookbehind: !0,\n    alias: \"property\",\n    inside: {\n      directive: {\n        pattern: /(\\s*#)\\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,\n        lookbehind: !0,\n        alias: \"keyword\"\n      }\n    }\n  }\n}), Prism.languages.dotnet = Prism.languages.csharp;","/**\n * Original by Scott Helme.\n *\n * Reference: https://scotthelme.co.uk/csp-cheat-sheet/\n *\n * Supports the following:\n *  - CSP Level 1\n *  - CSP Level 2\n *  - CSP Level 3\n */\nPrism.languages.csp = {\n  'directive': {\n    pattern: /\\b(?:(?:base-uri|form-action|frame-ancestors|plugin-types|referrer|reflected-xss|report-to|report-uri|require-sri-for|sandbox) |(?:block-all-mixed-content|disown-opener|upgrade-insecure-requests)(?: |;)|(?:child|connect|default|font|frame|img|manifest|media|object|script|style|worker)-src )/i,\n    alias: 'keyword'\n  },\n  'safe': {\n    pattern: /'(?:self|none|strict-dynamic|(?:nonce-|sha(?:256|384|512)-)[a-zA-Z\\d+=/]+)'/,\n    alias: 'selector'\n  },\n  'unsafe': {\n    pattern: /(?:'unsafe-inline'|'unsafe-eval'|'unsafe-hashed-attributes'|\\*)/,\n    alias: 'function'\n  }\n};","Prism.languages.csp = {\n  directive: {\n    pattern: /\\b(?:(?:base-uri|form-action|frame-ancestors|plugin-types|referrer|reflected-xss|report-to|report-uri|require-sri-for|sandbox) |(?:block-all-mixed-content|disown-opener|upgrade-insecure-requests)(?: |;)|(?:child|connect|default|font|frame|img|manifest|media|object|script|style|worker)-src )/i,\n    alias: \"keyword\"\n  },\n  safe: {\n    pattern: /'(?:self|none|strict-dynamic|(?:nonce-|sha(?:256|384|512)-)[a-zA-Z\\d+=/]+)'/,\n    alias: \"selector\"\n  },\n  unsafe: {\n    pattern: /(?:'unsafe-inline'|'unsafe-eval'|'unsafe-hashed-attributes'|\\*)/,\n    alias: \"function\"\n  }\n};","Prism.languages.css.selector = {\n  pattern: Prism.languages.css.selector,\n  inside: {\n    'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n    'pseudo-class': /:[-\\w]+/,\n    'class': /\\.[-:.\\w]+/,\n    'id': /#[-:.\\w]+/,\n    'attribute': {\n      pattern: /\\[(?:[^[\\]\"']|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1)*\\]/,\n      greedy: true,\n      inside: {\n        'punctuation': /^\\[|\\]$/,\n        'case-sensitivity': {\n          pattern: /(\\s)[si]$/i,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        'namespace': {\n          pattern: /^(\\s*)[-*\\w\\xA0-\\uFFFF]*\\|(?!=)/,\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\|$/\n          }\n        },\n        'attribute': {\n          pattern: /^(\\s*)[-\\w\\xA0-\\uFFFF]+/,\n          lookbehind: true\n        },\n        'value': [/(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/, {\n          pattern: /(=\\s*)[-\\w\\xA0-\\uFFFF]+(?=\\s*$)/,\n          lookbehind: true\n        }],\n        'operator': /[|~*^$]?=/\n      }\n    },\n    'n-th': {\n      pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n      lookbehind: true,\n      inside: {\n        'number': /[\\dn]+/,\n        'operator': /[+-]/\n      }\n    },\n    'punctuation': /[()]/\n  }\n};\nPrism.languages.insertBefore('css', 'property', {\n  'variable': {\n    pattern: /(^|[^-\\w\\xA0-\\uFFFF])--[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*/i,\n    lookbehind: true\n  }\n});\nPrism.languages.insertBefore('css', 'function', {\n  'operator': {\n    pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n    lookbehind: true\n  },\n  'hexcode': /#[\\da-f]{3,8}/i,\n  'entity': /\\\\[\\da-f]{1,8}/i,\n  'unit': {\n    pattern: /(\\d)(?:%|[a-z]+)/,\n    lookbehind: true\n  },\n  'number': /-?[\\d.]+/\n});","Prism.languages.css.selector = {\n  pattern: Prism.languages.css.selector,\n  inside: {\n    \"pseudo-element\": /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n    \"pseudo-class\": /:[-\\w]+/,\n    class: /\\.[-:.\\w]+/,\n    id: /#[-:.\\w]+/,\n    attribute: {\n      pattern: /\\[(?:[^[\\]\"']|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1)*\\]/,\n      greedy: !0,\n      inside: {\n        punctuation: /^\\[|\\]$/,\n        \"case-sensitivity\": {\n          pattern: /(\\s)[si]$/i,\n          lookbehind: !0,\n          alias: \"keyword\"\n        },\n        namespace: {\n          pattern: /^(\\s*)[-*\\w\\xA0-\\uFFFF]*\\|(?!=)/,\n          lookbehind: !0,\n          inside: {\n            punctuation: /\\|$/\n          }\n        },\n        attribute: {\n          pattern: /^(\\s*)[-\\w\\xA0-\\uFFFF]+/,\n          lookbehind: !0\n        },\n        value: [/(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/, {\n          pattern: /(=\\s*)[-\\w\\xA0-\\uFFFF]+(?=\\s*$)/,\n          lookbehind: !0\n        }],\n        operator: /[|~*^$]?=/\n      }\n    },\n    \"n-th\": {\n      pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n      lookbehind: !0,\n      inside: {\n        number: /[\\dn]+/,\n        operator: /[+-]/\n      }\n    },\n    punctuation: /[()]/\n  }\n}, Prism.languages.insertBefore(\"css\", \"property\", {\n  variable: {\n    pattern: /(^|[^-\\w\\xA0-\\uFFFF])--[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*/i,\n    lookbehind: !0\n  }\n}), Prism.languages.insertBefore(\"css\", \"function\", {\n  operator: {\n    pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n    lookbehind: !0\n  },\n  hexcode: /#[\\da-f]{3,8}/i,\n  entity: /\\\\[\\da-f]{1,8}/i,\n  unit: {\n    pattern: /(\\d)(?:%|[a-z]+)/,\n    lookbehind: !0\n  },\n  number: /-?[\\d.]+/\n});","require(\"core-js/modules/es6.regexp.constructor\");\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-]+?[\\s\\S]*?(?:;|(?=\\s*\\{))/i,\n      inside: {\n        'rule': /@[\\w-]+/ // See rest below\n\n      }\n    },\n    'url': RegExp('url\\\\((?:' + string.source + '|.*?)\\\\)', 'i'),\n    'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n    'important': /!important\\b/i,\n    'function': /[-a-z0-9]+(?=\\()/i,\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    Prism.languages.insertBefore('inside', 'attr-value', {\n      'style-attr': {\n        pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n        inside: {\n          'attr-name': {\n            pattern: /^\\s*style/i,\n            inside: markup.tag.inside\n          },\n          'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n          'attr-value': {\n            pattern: /.+/i,\n            inside: Prism.languages.css\n          }\n        },\n        alias: 'language-css'\n      }\n    }, markup.tag);\n  }\n})(Prism);","require(\"core-js/modules/es6.regexp.constructor\");\n\n!function (s) {\n  var e = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  s.languages.css = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\//,\n    atrule: {\n      pattern: /@[\\w-]+?[\\s\\S]*?(?:;|(?=\\s*\\{))/i,\n      inside: {\n        rule: /@[\\w-]+/\n      }\n    },\n    url: RegExp(\"url\\\\((?:\" + e.source + \"|.*?)\\\\)\", \"i\"),\n    selector: RegExp(\"[^{}\\\\s](?:[^{};\\\"']|\" + e.source + \")*?(?=\\\\s*\\\\{)\"),\n    string: {\n      pattern: e,\n      greedy: !0\n    },\n    property: /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n    important: /!important\\b/i,\n    function: /[-a-z0-9]+(?=\\()/i,\n    punctuation: /[(){};:,]/\n  }, s.languages.css.atrule.inside.rest = s.languages.css;\n  var a = s.languages.markup;\n  a && (a.tag.addInlined(\"style\", \"css\"), s.languages.insertBefore(\"inside\", \"attr-value\", {\n    \"style-attr\": {\n      pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n      inside: {\n        \"attr-name\": {\n          pattern: /^\\s*style/i,\n          inside: a.tag.inside\n        },\n        punctuation: /^\\s*=\\s*['\"]|['\"]\\s*$/,\n        \"attr-value\": {\n          pattern: /.+/i,\n          inside: s.languages.css\n        }\n      },\n      alias: \"language-css\"\n    }\n  }, a.tag));\n}(Prism);","Prism.languages.d = Prism.languages.extend('clike', {\n  'string': [// r\"\", x\"\"\n  /\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/, // q\"[]\", q\"()\", q\"<>\", q\"{}\"\n  /\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/, // q\"IDENT\n  // ...\n  // IDENT\"\n  /\\bq\"([_a-zA-Z][_a-zA-Z\\d]*)(?:\\r?\\n|\\r)[\\s\\S]*?(?:\\r?\\n|\\r)\\1\"/, // q\"//\", q\"||\", etc.\n  /\\bq\"(.)[\\s\\S]*?\\1\"/, // Characters\n  /'(?:\\\\'|\\\\?[^']+)'/, /([\"`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1[cwd]?/],\n  'number': [// The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator\n  // Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"\n  /\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]*/i, {\n    pattern: /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]*/i,\n    lookbehind: true\n  }],\n  // In order: $, keywords and special tokens, globally defined symbols\n  'keyword': /\\$|\\b(?:abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|public|pure|real|ref|return|scope|shared|short|static|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|__(?:(?:FILE|MODULE|LINE|FUNCTION|PRETTY_FUNCTION|DATE|EOF|TIME|TIMESTAMP|VENDOR|VERSION)__|gshared|traits|vector|parameters)|string|wstring|dstring|size_t|ptrdiff_t)\\b/,\n  'operator': /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/\n});\nPrism.languages.d.comment = [// Shebang\n/^\\s*#!.+/, // /+ +/\n{\n  // Allow one level of nesting\n  pattern: /(^|[^\\\\])\\/\\+(?:\\/\\+[\\s\\S]*?\\+\\/|[\\s\\S])*?\\+\\//,\n  lookbehind: true\n}].concat(Prism.languages.d.comment);\nPrism.languages.insertBefore('d', 'comment', {\n  'token-string': {\n    // Allow one level of nesting\n    pattern: /\\bq\\{(?:\\{[^}]*\\}|[^}])*\\}/,\n    alias: 'string'\n  }\n});\nPrism.languages.insertBefore('d', 'keyword', {\n  'property': /\\B@\\w*/\n});\nPrism.languages.insertBefore('d', 'function', {\n  'register': {\n    // Iasm registers\n    pattern: /\\b(?:[ABCD][LHX]|E[ABCD]X|E?(?:BP|SP|DI|SI)|[ECSDGF]S|CR[0234]|DR[012367]|TR[3-7]|X?MM[0-7]|R[ABCD]X|[BS]PL|R[BS]P|[DS]IL|R[DS]I|R(?:[89]|1[0-5])[BWD]?|XMM(?:[89]|1[0-5])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,\n    alias: 'variable'\n  }\n});","Prism.languages.d = Prism.languages.extend(\"clike\", {\n  string: [/\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/, /\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/, /\\bq\"([_a-zA-Z][_a-zA-Z\\d]*)(?:\\r?\\n|\\r)[\\s\\S]*?(?:\\r?\\n|\\r)\\1\"/, /\\bq\"(.)[\\s\\S]*?\\1\"/, /'(?:\\\\'|\\\\?[^']+)'/, /([\"`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1[cwd]?/],\n  number: [/\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]*/i, {\n    pattern: /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]*/i,\n    lookbehind: !0\n  }],\n  keyword: /\\$|\\b(?:abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|public|pure|real|ref|return|scope|shared|short|static|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|__(?:(?:FILE|MODULE|LINE|FUNCTION|PRETTY_FUNCTION|DATE|EOF|TIME|TIMESTAMP|VENDOR|VERSION)__|gshared|traits|vector|parameters)|string|wstring|dstring|size_t|ptrdiff_t)\\b/,\n  operator: /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/\n}), Prism.languages.d.comment = [/^\\s*#!.+/, {\n  pattern: /(^|[^\\\\])\\/\\+(?:\\/\\+[\\s\\S]*?\\+\\/|[\\s\\S])*?\\+\\//,\n  lookbehind: !0\n}].concat(Prism.languages.d.comment), Prism.languages.insertBefore(\"d\", \"comment\", {\n  \"token-string\": {\n    pattern: /\\bq\\{(?:\\{[^}]*\\}|[^}])*\\}/,\n    alias: \"string\"\n  }\n}), Prism.languages.insertBefore(\"d\", \"keyword\", {\n  property: /\\B@\\w*/\n}), Prism.languages.insertBefore(\"d\", \"function\", {\n  register: {\n    pattern: /\\b(?:[ABCD][LHX]|E[ABCD]X|E?(?:BP|SP|DI|SI)|[ECSDGF]S|CR[0234]|DR[012367]|TR[3-7]|X?MM[0-7]|R[ABCD]X|[BS]PL|R[BS]P|[DS]IL|R[DS]I|R(?:[89]|1[0-5])[BWD]?|XMM(?:[89]|1[0-5])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,\n    alias: \"variable\"\n  }\n});","Prism.languages.dart = Prism.languages.extend('clike', {\n  'string': [{\n    pattern: /r?(\"\"\"|''')[\\s\\S]*?\\1/,\n    greedy: true\n  }, {\n    pattern: /r?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  }],\n  'keyword': [/\\b(?:async|sync|yield)\\*/, /\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|default|deferred|do|dynamic|else|enum|export|external|extends|factory|final|finally|for|get|if|implements|import|in|library|new|null|operator|part|rethrow|return|set|static|super|switch|this|throw|try|typedef|var|void|while|with|yield)\\b/],\n  'operator': /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\n});\nPrism.languages.insertBefore('dart', 'function', {\n  'metadata': {\n    pattern: /@\\w+/,\n    alias: 'symbol'\n  }\n});","Prism.languages.dart = Prism.languages.extend(\"clike\", {\n  string: [{\n    pattern: /r?(\"\"\"|''')[\\s\\S]*?\\1/,\n    greedy: !0\n  }, {\n    pattern: /r?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  }],\n  keyword: [/\\b(?:async|sync|yield)\\*/, /\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|default|deferred|do|dynamic|else|enum|export|external|extends|factory|final|finally|for|get|if|implements|import|in|library|new|null|operator|part|rethrow|return|set|static|super|switch|this|throw|try|typedef|var|void|while|with|yield)\\b/],\n  operator: /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\n}), Prism.languages.insertBefore(\"dart\", \"function\", {\n  metadata: {\n    pattern: /@\\w+/,\n    alias: \"symbol\"\n  }\n});","Prism.languages.diff = {\n  'coord': [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n  /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n  /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n  /^\\d+.*$/m],\n  // Match inserted and deleted lines. Support both +/- and >/< styles.\n  'deleted': /^[-<].*$/m,\n  'inserted': /^[+>].*$/m,\n  // Match \"different\" lines (prefixed with \"!\") in context diff.\n  'diff': {\n    'pattern': /^!(?!!).+$/m,\n    'alias': 'important'\n  }\n};","Prism.languages.diff = {\n  coord: [/^(?:\\*{3}|-{3}|\\+{3}).*$/m, /^@@.*@@$/m, /^\\d+.*$/m],\n  deleted: /^[-<].*$/m,\n  inserted: /^[+>].*$/m,\n  diff: {\n    pattern: /^!(?!!).+$/m,\n    alias: \"important\"\n  }\n};","// Django/Jinja2 syntax definition for Prism.js <http://prismjs.com> syntax highlighter.\n// Mostly it works OK but can paint code incorrectly on complex html/template tag combinations.\n(function (Prism) {\n  Prism.languages.django = {\n    'comment': /^{#[\\s\\S]*?#}$/,\n    'tag': {\n      pattern: /(^{%[+-]?\\s*)\\w+/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'delimiter': {\n      pattern: /^{[{%][+-]?|[+-]?[}%]}$/,\n      alias: 'punctuation'\n    },\n    'string': {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'filter': {\n      pattern: /(\\|)\\w+/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'test': {\n      pattern: /(\\bis\\s+(?:not\\s+)?)(?!not\\b)\\w+/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'function': /\\b[a-z_]\\w+(?=\\s*\\()/i,\n    'keyword': /\\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\\b/,\n    'operator': /[-+*/%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n    'number': /\\b\\d+(?:\\.\\d+)?\\b/,\n    'boolean': /[Tt]rue|[Ff]alse|[Nn]one/,\n    'variable': /\\b\\w+?\\b/,\n    'punctuation': /[{}[\\](),.:;]/\n  };\n  var pattern = /{{[\\s\\S]*?}}|{%[\\s\\S]*?%}|{#[\\s\\S]*?#}/g;\n  var markupTemplating = Prism.languages['markup-templating'];\n  Prism.hooks.add('before-tokenize', function (env) {\n    markupTemplating.buildPlaceholders(env, 'django', pattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    markupTemplating.tokenizePlaceholders(env, 'django');\n  }); // Add an Jinja2 alias\n\n  Prism.languages.jinja2 = Prism.languages.django;\n  Prism.hooks.add('before-tokenize', function (env) {\n    markupTemplating.buildPlaceholders(env, 'jinja2', pattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    markupTemplating.tokenizePlaceholders(env, 'jinja2');\n  });\n})(Prism);","!function (e) {\n  e.languages.django = {\n    comment: /^{#[\\s\\S]*?#}$/,\n    tag: {\n      pattern: /(^{%[+-]?\\s*)\\w+/,\n      lookbehind: !0,\n      alias: \"keyword\"\n    },\n    delimiter: {\n      pattern: /^{[{%][+-]?|[+-]?[}%]}$/,\n      alias: \"punctuation\"\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: !0\n    },\n    filter: {\n      pattern: /(\\|)\\w+/,\n      lookbehind: !0,\n      alias: \"function\"\n    },\n    test: {\n      pattern: /(\\bis\\s+(?:not\\s+)?)(?!not\\b)\\w+/,\n      lookbehind: !0,\n      alias: \"function\"\n    },\n    function: /\\b[a-z_]\\w+(?=\\s*\\()/i,\n    keyword: /\\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\\b/,\n    operator: /[-+*/%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    boolean: /[Tt]rue|[Ff]alse|[Nn]one/,\n    variable: /\\b\\w+?\\b/,\n    punctuation: /[{}[\\](),.:;]/\n  };\n  var n = /{{[\\s\\S]*?}}|{%[\\s\\S]*?%}|{#[\\s\\S]*?#}/g,\n      o = e.languages[\"markup-templating\"];\n  e.hooks.add(\"before-tokenize\", function (e) {\n    o.buildPlaceholders(e, \"django\", n);\n  }), e.hooks.add(\"after-tokenize\", function (e) {\n    o.tokenizePlaceholders(e, \"django\");\n  }), e.languages.jinja2 = e.languages.django, e.hooks.add(\"before-tokenize\", function (e) {\n    o.buildPlaceholders(e, \"jinja2\", n);\n  }), e.hooks.add(\"after-tokenize\", function (e) {\n    o.tokenizePlaceholders(e, \"jinja2\");\n  });\n}(Prism);","Prism.languages.docker = {\n  'keyword': {\n    pattern: /(^\\s*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)/mi,\n    lookbehind: true\n  },\n  'string': /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n  'comment': /#.*/,\n  'punctuation': /---|\\.\\.\\.|[:[\\]{}\\-,|>?]/\n};\nPrism.languages.dockerfile = Prism.languages.docker;","Prism.languages.docker = {\n  keyword: {\n    pattern: /(^\\s*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)/im,\n    lookbehind: !0\n  },\n  string: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n  comment: /#.*/,\n  punctuation: /---|\\.\\.\\.|[:[\\]{}\\-,|>?]/\n}, Prism.languages.dockerfile = Prism.languages.docker;","Prism.languages.ebnf = {\n  'comment': /\\(\\*[\\s\\S]*?\\*\\)/,\n  'string': {\n    pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n    greedy: true\n  },\n  'special': {\n    pattern: /\\?[^?\\r\\n]*\\?/,\n    greedy: true,\n    alias: 'class-name'\n  },\n  'definition': {\n    pattern: /^(\\s*)[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*(?=\\s*=)/im,\n    lookbehind: true,\n    alias: ['rule', 'keyword']\n  },\n  'rule': /[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*/i,\n  'punctuation': /\\([:/]|[:/]\\)|[.,;()[\\]{}]/,\n  'operator': /[-=|*/!]/\n};","Prism.languages.ebnf = {\n  comment: /\\(\\*[\\s\\S]*?\\*\\)/,\n  string: {\n    pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n    greedy: !0\n  },\n  special: {\n    pattern: /\\?[^?\\r\\n]*\\?/,\n    greedy: !0,\n    alias: \"class-name\"\n  },\n  definition: {\n    pattern: /^(\\s*)[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*(?=\\s*=)/im,\n    lookbehind: !0,\n    alias: [\"rule\", \"keyword\"]\n  },\n  rule: /[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*/i,\n  punctuation: /\\([:/]|[:/]\\)|[.,;()[\\]{}]/,\n  operator: /[-=|*/!]/\n};","Prism.languages.eiffel = {\n  'comment': /--.*/,\n  'string': [// Aligned-verbatim-strings\n  {\n    pattern: /\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,\n    greedy: true\n  }, // Non-aligned-verbatim-strings\n  {\n    pattern: /\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,\n    greedy: true\n  }, // Single-line string\n  {\n    pattern: /\"(?:%\\s+%|%.|[^%\"\\r\\n])*\"/,\n    greedy: true\n  }],\n  // normal char | special char | char code\n  'char': /'(?:%.|[^%'\\r\\n])+'/,\n  'keyword': /\\b(?:across|agent|alias|all|and|attached|as|assign|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\n  'boolean': /\\b(?:True|False)\\b/i,\n  // Convention: class-names are always all upper-case characters\n  'class-name': {\n    'pattern': /\\b[A-Z][\\dA-Z_]*\\b/,\n    'alias': 'builtin'\n  },\n  'number': [// hexa | octal | bin\n  /\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i, // Decimal\n  /(?:\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*|\\d(?:_*\\d)*\\.?/i],\n  'punctuation': /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n  'operator': /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\n};","Prism.languages.eiffel = {\n  comment: /--.*/,\n  string: [{\n    pattern: /\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,\n    greedy: !0\n  }, {\n    pattern: /\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,\n    greedy: !0\n  }, {\n    pattern: /\"(?:%\\s+%|%.|[^%\"\\r\\n])*\"/,\n    greedy: !0\n  }],\n  char: /'(?:%.|[^%'\\r\\n])+'/,\n  keyword: /\\b(?:across|agent|alias|all|and|attached|as|assign|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\n  boolean: /\\b(?:True|False)\\b/i,\n  \"class-name\": {\n    pattern: /\\b[A-Z][\\dA-Z_]*\\b/,\n    alias: \"builtin\"\n  },\n  number: [/\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i, /(?:\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*|\\d(?:_*\\d)*\\.?/i],\n  punctuation: /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n  operator: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\n};","(function (Prism) {\n  Prism.languages.ejs = {\n    'delimiter': {\n      pattern: /^<%[-_=]?|[-_]?%>$/,\n      alias: 'punctuation'\n    },\n    'comment': /^#[\\s\\S]*/,\n    'language-javascript': {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages.javascript\n    }\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var ejsPattern = /<%(?!%)[\\s\\S]+?%>/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'ejs', ejsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ejs');\n  });\n})(Prism);","!function (a) {\n  a.languages.ejs = {\n    delimiter: {\n      pattern: /^<%[-_=]?|[-_]?%>$/,\n      alias: \"punctuation\"\n    },\n    comment: /^#[\\s\\S]*/,\n    \"language-javascript\": {\n      pattern: /[\\s\\S]+/,\n      inside: a.languages.javascript\n    }\n  }, a.hooks.add(\"before-tokenize\", function (e) {\n    a.languages[\"markup-templating\"].buildPlaceholders(e, \"ejs\", /<%(?!%)[\\s\\S]+?%>/g);\n  }), a.hooks.add(\"after-tokenize\", function (e) {\n    a.languages[\"markup-templating\"].tokenizePlaceholders(e, \"ejs\");\n  });\n}(Prism);","Prism.languages.elixir = {\n  'comment': {\n    pattern: /#.*/m,\n    lookbehind: true\n  },\n  // ~r\"\"\"foo\"\"\" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r\"foo\", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>\n  'regex': {\n    pattern: /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\n    greedy: true\n  },\n  'string': [{\n    // ~s\"\"\"foo\"\"\" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s\"foo\", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>\n    pattern: /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\n    greedy: true,\n    inside: {// See interpolation below\n    }\n  }, {\n    pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n    greedy: true,\n    inside: {// See interpolation below\n    }\n  }, {\n    // Multi-line strings are allowed\n    pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true,\n    inside: {// See interpolation below\n    }\n  }],\n  'atom': {\n    // Look-behind prevents bad highlighting of the :: operator\n    pattern: /(^|[^:]):\\w+/,\n    lookbehind: true,\n    alias: 'symbol'\n  },\n  // Look-ahead prevents bad highlighting of the :: operator\n  'attr-name': /\\w+:(?!:)/,\n  'capture': {\n    // Look-behind prevents bad highlighting of the && operator\n    pattern: /(^|[^&])&(?:[^&\\s\\d()][^\\s()]*|(?=\\())/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'argument': {\n    // Look-behind prevents bad highlighting of the && operator\n    pattern: /(^|[^&])&\\d+/,\n    lookbehind: true,\n    alias: 'variable'\n  },\n  'attribute': {\n    pattern: /@\\w+/,\n    alias: 'variable'\n  },\n  'number': /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\n  'keyword': /\\b(?:after|alias|and|case|catch|cond|def(?:callback|exception|impl|module|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|require|rescue|try|unless|use|when)\\b/,\n  'boolean': /\\b(?:true|false|nil)\\b/,\n  'operator': [/\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/, {\n    // We don't want to match <<\n    pattern: /([^<])<(?!<)/,\n    lookbehind: true\n  }, {\n    // We don't want to match >>\n    pattern: /([^>])>(?!>)/,\n    lookbehind: true\n  }],\n  'punctuation': /<<|>>|[.,%\\[\\]{}()]/\n};\nPrism.languages.elixir.string.forEach(function (o) {\n  o.inside = {\n    'interpolation': {\n      pattern: /#\\{[^}]+\\}/,\n      inside: {\n        'delimiter': {\n          pattern: /^#\\{|\\}$/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.elixir\n      }\n    }\n  };\n});","Prism.languages.elixir = {\n  comment: {\n    pattern: /#.*/m,\n    lookbehind: !0\n  },\n  regex: {\n    pattern: /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\n    greedy: !0\n  },\n  string: [{\n    pattern: /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\n    greedy: !0,\n    inside: {}\n  }, {\n    pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n    greedy: !0,\n    inside: {}\n  }, {\n    pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0,\n    inside: {}\n  }],\n  atom: {\n    pattern: /(^|[^:]):\\w+/,\n    lookbehind: !0,\n    alias: \"symbol\"\n  },\n  \"attr-name\": /\\w+:(?!:)/,\n  capture: {\n    pattern: /(^|[^&])&(?:[^&\\s\\d()][^\\s()]*|(?=\\())/,\n    lookbehind: !0,\n    alias: \"function\"\n  },\n  argument: {\n    pattern: /(^|[^&])&\\d+/,\n    lookbehind: !0,\n    alias: \"variable\"\n  },\n  attribute: {\n    pattern: /@\\w+/,\n    alias: \"variable\"\n  },\n  number: /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\n  keyword: /\\b(?:after|alias|and|case|catch|cond|def(?:callback|exception|impl|module|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|require|rescue|try|unless|use|when)\\b/,\n  boolean: /\\b(?:true|false|nil)\\b/,\n  operator: [/\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/, {\n    pattern: /([^<])<(?!<)/,\n    lookbehind: !0\n  }, {\n    pattern: /([^>])>(?!>)/,\n    lookbehind: !0\n  }],\n  punctuation: /<<|>>|[.,%\\[\\]{}()]/\n}, Prism.languages.elixir.string.forEach(function (e) {\n  e.inside = {\n    interpolation: {\n      pattern: /#\\{[^}]+\\}/,\n      inside: {\n        delimiter: {\n          pattern: /^#\\{|\\}$/,\n          alias: \"punctuation\"\n        },\n        rest: Prism.languages.elixir\n      }\n    }\n  };\n});","Prism.languages.elm = {\n  comment: /--.*|{-[\\s\\S]*?-}/,\n  char: {\n    pattern: /'(?:[^\\\\'\\r\\n]|\\\\(?:[abfnrtv\\\\']|\\d+|x[0-9a-fA-F]+))'/,\n    greedy: true\n  },\n  string: [{\n    // Multiline strings are wrapped in triple \". Quotes may appear unescaped.\n    pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n    greedy: true\n  }, {\n    pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\(?:[abfnrtv\\\\\"]|\\d+|x[0-9a-fA-F]+))*\"/,\n    greedy: true\n  }],\n  import_statement: {\n    // The imported or hidden names are not included in this import\n    // statement. This is because we want to highlight those exactly like\n    // we do for the names in the program.\n    pattern: /^\\s*import\\s+[A-Z]\\w*(?:\\.[A-Z]\\w*)*(?:\\s+as\\s+([A-Z]\\w*)(?:\\.[A-Z]\\w*)*)?(?:\\s+exposing\\s+)?/m,\n    inside: {\n      keyword: /\\b(?:import|as|exposing)\\b/\n    }\n  },\n  keyword: /\\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\\b/,\n  // These are builtin variables only. Constructors are highlighted later as a constant.\n  builtin: /\\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\\b/,\n  // decimal integers and floating point numbers | hexadecimal integers\n  number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[0-9a-f]+)\\b/i,\n  // Most of this is needed because of the meaning of a single '.'.\n  // If it stands alone freely, it is the function composition.\n  // It may also be a separator between a module name and an identifier => no\n  // operator. If it comes together with other special characters it is an\n  // operator too.\n  // Valid operator characters in 0.18: +-/*=.$<>:&|^?%#@~!\n  // Ref: https://groups.google.com/forum/#!msg/elm-dev/0AHSnDdkSkQ/E0SVU70JEQAJ\n  operator: /\\s\\.\\s|[+\\-/*=.$<>:&|^?%#@~!]{2,}|[+\\-/*=$<>:&|^?%#@~!]/,\n  // In Elm, nearly everything is a variable, do not highlight these.\n  hvariable: /\\b(?:[A-Z]\\w*\\.)*[a-z]\\w*\\b/,\n  constant: /\\b(?:[A-Z]\\w*\\.)*[A-Z]\\w*\\b/,\n  punctuation: /[{}[\\]|(),.:]/\n};","Prism.languages.elm = {\n  comment: /--.*|{-[\\s\\S]*?-}/,\n  char: {\n    pattern: /'(?:[^\\\\'\\r\\n]|\\\\(?:[abfnrtv\\\\']|\\d+|x[0-9a-fA-F]+))'/,\n    greedy: !0\n  },\n  string: [{\n    pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n    greedy: !0\n  }, {\n    pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\(?:[abfnrtv\\\\\"]|\\d+|x[0-9a-fA-F]+))*\"/,\n    greedy: !0\n  }],\n  import_statement: {\n    pattern: /^\\s*import\\s+[A-Z]\\w*(?:\\.[A-Z]\\w*)*(?:\\s+as\\s+([A-Z]\\w*)(?:\\.[A-Z]\\w*)*)?(?:\\s+exposing\\s+)?/m,\n    inside: {\n      keyword: /\\b(?:import|as|exposing)\\b/\n    }\n  },\n  keyword: /\\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\\b/,\n  builtin: /\\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\\b/,\n  number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[0-9a-f]+)\\b/i,\n  operator: /\\s\\.\\s|[+\\-/*=.$<>:&|^?%#@~!]{2,}|[+\\-/*=$<>:&|^?%#@~!]/,\n  hvariable: /\\b(?:[A-Z]\\w*\\.)*[a-z]\\w*\\b/,\n  constant: /\\b(?:[A-Z]\\w*\\.)*[A-Z]\\w*\\b/,\n  punctuation: /[{}[\\]|(),.:]/\n};","(function (Prism) {\n  Prism.languages.erb = Prism.languages.extend('ruby', {});\n  Prism.languages.insertBefore('erb', 'comment', {\n    'delimiter': {\n      pattern: /^<%=?|%>$/,\n      alias: 'punctuation'\n    }\n  });\n  Prism.hooks.add('before-tokenize', function (env) {\n    var erbPattern = /<%=?(?:[^\\r\\n]|[\\r\\n](?!=begin)|[\\r\\n]=begin\\s[\\s\\S]*?^=end)+?%>/gm;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'erb', erbPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'erb');\n  });\n})(Prism);","!function (n) {\n  n.languages.erb = n.languages.extend(\"ruby\", {}), n.languages.insertBefore(\"erb\", \"comment\", {\n    delimiter: {\n      pattern: /^<%=?|%>$/,\n      alias: \"punctuation\"\n    }\n  }), n.hooks.add(\"before-tokenize\", function (e) {\n    n.languages[\"markup-templating\"].buildPlaceholders(e, \"erb\", /<%=?(?:[^\\r\\n]|[\\r\\n](?!=begin)|[\\r\\n]=begin\\s[\\s\\S]*?^=end)+?%>/gm);\n  }), n.hooks.add(\"after-tokenize\", function (e) {\n    n.languages[\"markup-templating\"].tokenizePlaceholders(e, \"erb\");\n  });\n}(Prism);","Prism.languages.erlang = {\n  'comment': /%.+/,\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'quoted-function': {\n    pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n    alias: 'function'\n  },\n  'quoted-atom': {\n    pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n    alias: 'atom'\n  },\n  'boolean': /\\b(?:true|false)\\b/,\n  'keyword': /\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,\n  'number': [/\\$\\\\?./, /\\d+#[a-z0-9]+/i, /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i],\n  'function': /\\b[a-z][\\w@]*(?=\\()/,\n  'variable': {\n    // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n    pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n    lookbehind: true\n  },\n  'operator': [/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/, {\n    // We don't want to match <<\n    pattern: /(^|[^<])<(?!<)/,\n    lookbehind: true\n  }, {\n    // We don't want to match >>\n    pattern: /(^|[^>])>(?!>)/,\n    lookbehind: true\n  }],\n  'atom': /\\b[a-z][\\w@]*/,\n  'punctuation': /[()[\\]{}:;,.#|]|<<|>>/\n};","Prism.languages.erlang = {\n  comment: /%.+/,\n  string: {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: !0\n  },\n  \"quoted-function\": {\n    pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n    alias: \"function\"\n  },\n  \"quoted-atom\": {\n    pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n    alias: \"atom\"\n  },\n  boolean: /\\b(?:true|false)\\b/,\n  keyword: /\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,\n  number: [/\\$\\\\?./, /\\d+#[a-z0-9]+/i, /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i],\n  function: /\\b[a-z][\\w@]*(?=\\()/,\n  variable: {\n    pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n    lookbehind: !0\n  },\n  operator: [/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/, {\n    pattern: /(^|[^<])<(?!<)/,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^>])>(?!>)/,\n    lookbehind: !0\n  }],\n  atom: /\\b[a-z][\\w@]*/,\n  punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n};","(function (Prism) {\n  Prism.languages.flow = Prism.languages.extend('javascript', {});\n  Prism.languages.insertBefore('flow', 'keyword', {\n    'type': [{\n      pattern: /\\b(?:[Nn]umber|[Ss]tring|[Bb]oolean|Function|any|mixed|null|void)\\b/,\n      alias: 'tag'\n    }]\n  });\n  Prism.languages.flow['function-variable'].pattern = /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i;\n  delete Prism.languages.flow['parameter'];\n  Prism.languages.insertBefore('flow', 'operator', {\n    'flow-punctuation': {\n      pattern: /\\{\\||\\|\\}/,\n      alias: 'punctuation'\n    }\n  });\n\n  if (!Array.isArray(Prism.languages.flow.keyword)) {\n    Prism.languages.flow.keyword = [Prism.languages.flow.keyword];\n  }\n\n  Prism.languages.flow.keyword.unshift({\n    pattern: /(^|[^$]\\b)(?:type|opaque|declare|Class)\\b(?!\\$)/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^$]\\B)\\$(?:await|Diff|Exact|Keys|ObjMap|PropertyType|Shape|Record|Supertype|Subtype|Enum)\\b(?!\\$)/,\n    lookbehind: true\n  });\n})(Prism);","!function (a) {\n  a.languages.flow = a.languages.extend(\"javascript\", {}), a.languages.insertBefore(\"flow\", \"keyword\", {\n    type: [{\n      pattern: /\\b(?:[Nn]umber|[Ss]tring|[Bb]oolean|Function|any|mixed|null|void)\\b/,\n      alias: \"tag\"\n    }]\n  }), a.languages.flow[\"function-variable\"].pattern = /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i, delete a.languages.flow.parameter, a.languages.insertBefore(\"flow\", \"operator\", {\n    \"flow-punctuation\": {\n      pattern: /\\{\\||\\|\\}/,\n      alias: \"punctuation\"\n    }\n  }), Array.isArray(a.languages.flow.keyword) || (a.languages.flow.keyword = [a.languages.flow.keyword]), a.languages.flow.keyword.unshift({\n    pattern: /(^|[^$]\\b)(?:type|opaque|declare|Class)\\b(?!\\$)/,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^$]\\B)\\$(?:await|Diff|Exact|Keys|ObjMap|PropertyType|Shape|Record|Supertype|Subtype|Enum)\\b(?!\\$)/,\n    lookbehind: !0\n  });\n}(Prism);","Prism.languages.fortran = {\n  'quoted-number': {\n    pattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\n    alias: 'number'\n  },\n  'string': {\n    pattern: /(?:\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:\\s*!.+(?:\\r\\n?|\\n))?|(?!\\1).)*(?:\\1|&)/,\n    inside: {\n      'comment': {\n        pattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\n        lookbehind: true\n      }\n    }\n  },\n  'comment': {\n    pattern: /!.*/,\n    greedy: true\n  },\n  'boolean': /\\.(?:TRUE|FALSE)\\.(?:_\\w+)?/i,\n  'number': /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\n  'keyword': [// Types\n  /\\b(?:INTEGER|REAL|DOUBLE ?PRECISION|COMPLEX|CHARACTER|LOGICAL)\\b/i, // END statements\n  /\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i, // Statements\n  /\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i, // Others\n  /\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEWHERE|ELSEIF|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i],\n  'operator': [/\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.(?:EQ|NE|LT|LE|GT|GE|NOT|AND|OR|EQV|NEQV)\\.|\\.[A-Z]+\\./i, {\n    // Use lookbehind to prevent confusion with (/ /)\n    pattern: /(^|(?!\\().)\\/(?!\\))/,\n    lookbehind: true\n  }],\n  'punctuation': /\\(\\/|\\/\\)|[(),;:&]/\n};","Prism.languages.fortran = {\n  \"quoted-number\": {\n    pattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\n    alias: \"number\"\n  },\n  string: {\n    pattern: /(?:\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:\\s*!.+(?:\\r\\n?|\\n))?|(?!\\1).)*(?:\\1|&)/,\n    inside: {\n      comment: {\n        pattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\n        lookbehind: !0\n      }\n    }\n  },\n  comment: {\n    pattern: /!.*/,\n    greedy: !0\n  },\n  boolean: /\\.(?:TRUE|FALSE)\\.(?:_\\w+)?/i,\n  number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\n  keyword: [/\\b(?:INTEGER|REAL|DOUBLE ?PRECISION|COMPLEX|CHARACTER|LOGICAL)\\b/i, /\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i, /\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i, /\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEWHERE|ELSEIF|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i],\n  operator: [/\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.(?:EQ|NE|LT|LE|GT|GE|NOT|AND|OR|EQV|NEQV)\\.|\\.[A-Z]+\\./i, {\n    pattern: /(^|(?!\\().)\\/(?!\\))/,\n    lookbehind: !0\n  }],\n  punctuation: /\\(\\/|\\/\\)|[(),;:&]/\n};","Prism.languages.fsharp = Prism.languages.extend('clike', {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\(\\*[\\s\\S]*?\\*\\)/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'string': {\n    pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?|'(?:[^\\\\']|\\\\.)'B?/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,\n    lookbehind: true,\n    inside: {\n      'operator': /->|\\*/,\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(abstract|and|as|assert|base|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|global|if|in|inherit|inline|interface|internal|lazy|match|member|module|mutable|namespace|new|not|null|of|open|or|override|private|public|rec|select|static|struct|then|to|true|try|type|upcast|val|void|when|while|with|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b/,\n  'number': [/\\b0x[\\da-fA-F]+(?:un|lf|LF)?\\b/, /\\b0b[01]+(?:y|uy)?\\b/, /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i, /\\b\\d+(?:[IlLsy]|u[lsy]?|UL)?\\b/],\n  'operator': /([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/\n});\nPrism.languages.insertBefore('fsharp', 'keyword', {\n  'preprocessor': {\n    pattern: /^[^\\r\\n\\S]*#.*/m,\n    alias: 'property',\n    inside: {\n      'directive': {\n        pattern: /(\\s*#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n        lookbehind: true,\n        alias: 'keyword'\n      }\n    }\n  }\n});\nPrism.languages.insertBefore('fsharp', 'punctuation', {\n  'computation-expression': {\n    pattern: /[_a-z]\\w*(?=\\s*\\{)/i,\n    alias: 'keyword'\n  }\n});\nPrism.languages.insertBefore('fsharp', 'string', {\n  'annotation': {\n    pattern: /\\[<.+?>\\]/,\n    inside: {\n      'punctuation': /^\\[<|>\\]$/,\n      'class-name': {\n        pattern: /^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,\n        lookbehind: true\n      },\n      'annotation-content': {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.fsharp\n      }\n    }\n  }\n});","Prism.languages.fsharp = Prism.languages.extend(\"clike\", {\n  comment: [{\n    pattern: /(^|[^\\\\])\\(\\*[\\s\\S]*?\\*\\)/,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: !0\n  }],\n  string: {\n    pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?|'(?:[^\\\\']|\\\\.)'B?/,\n    greedy: !0\n  },\n  \"class-name\": {\n    pattern: /(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,\n    lookbehind: !0,\n    inside: {\n      operator: /->|\\*/,\n      punctuation: /\\./\n    }\n  },\n  keyword: /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(abstract|and|as|assert|base|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|global|if|in|inherit|inline|interface|internal|lazy|match|member|module|mutable|namespace|new|not|null|of|open|or|override|private|public|rec|select|static|struct|then|to|true|try|type|upcast|val|void|when|while|with|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b/,\n  number: [/\\b0x[\\da-fA-F]+(?:un|lf|LF)?\\b/, /\\b0b[01]+(?:y|uy)?\\b/, /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i, /\\b\\d+(?:[IlLsy]|u[lsy]?|UL)?\\b/],\n  operator: /([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/\n}), Prism.languages.insertBefore(\"fsharp\", \"keyword\", {\n  preprocessor: {\n    pattern: /^[^\\r\\n\\S]*#.*/m,\n    alias: \"property\",\n    inside: {\n      directive: {\n        pattern: /(\\s*#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n        lookbehind: !0,\n        alias: \"keyword\"\n      }\n    }\n  }\n}), Prism.languages.insertBefore(\"fsharp\", \"punctuation\", {\n  \"computation-expression\": {\n    pattern: /[_a-z]\\w*(?=\\s*\\{)/i,\n    alias: \"keyword\"\n  }\n}), Prism.languages.insertBefore(\"fsharp\", \"string\", {\n  annotation: {\n    pattern: /\\[<.+?>\\]/,\n    inside: {\n      punctuation: /^\\[<|>\\]$/,\n      \"class-name\": {\n        pattern: /^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,\n        lookbehind: !0\n      },\n      \"annotation-content\": {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.fsharp\n      }\n    }\n  }\n});","Prism.languages.gcode = {\n  'comment': /;.*|\\B\\(.*?\\)\\B/,\n  'string': {\n    pattern: /\"(?:\"\"|[^\"])*\"/,\n    greedy: true\n  },\n  'keyword': /\\b[GM]\\d+(?:\\.\\d+)?\\b/,\n  'property': /\\b[A-Z]/,\n  'checksum': {\n    pattern: /\\*\\d+/,\n    alias: 'punctuation'\n  },\n  // T0:0:0\n  'punctuation': /:/\n};","Prism.languages.gcode = {\n  comment: /;.*|\\B\\(.*?\\)\\B/,\n  string: {\n    pattern: /\"(?:\"\"|[^\"])*\"/,\n    greedy: !0\n  },\n  keyword: /\\b[GM]\\d+(?:\\.\\d+)?\\b/,\n  property: /\\b[A-Z]/,\n  checksum: {\n    pattern: /\\*\\d+/,\n    alias: \"punctuation\"\n  },\n  punctuation: /:/\n};","Prism.languages.gedcom = {\n  'line-value': {\n    // Preceded by level, optional pointer, and tag\n    pattern: /(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ +).+/m,\n    lookbehind: true,\n    inside: {\n      'pointer': {\n        pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n        alias: 'variable'\n      }\n    }\n  },\n  'tag': {\n    // Preceded by level and optional pointer\n    pattern: /(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n    lookbehind: true,\n    alias: 'string'\n  },\n  'level': {\n    pattern: /(^\\s*)\\d+/m,\n    lookbehind: true,\n    alias: 'number'\n  },\n  'pointer': {\n    pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n    alias: 'variable'\n  }\n};","Prism.languages.gedcom = {\n  \"line-value\": {\n    pattern: /(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ +).+/m,\n    lookbehind: !0,\n    inside: {\n      pointer: {\n        pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n        alias: \"variable\"\n      }\n    }\n  },\n  tag: {\n    pattern: /(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n    lookbehind: !0,\n    alias: \"string\"\n  },\n  level: {\n    pattern: /(^\\s*)\\d+/m,\n    lookbehind: !0,\n    alias: \"number\"\n  },\n  pointer: {\n    pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n    alias: \"variable\"\n  }\n};","Prism.languages.gherkin = {\n  'pystring': {\n    pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n    alias: 'string'\n  },\n  'comment': {\n    pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)#.*/,\n    lookbehind: true\n  },\n  'tag': {\n    pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)@\\S*/,\n    lookbehind: true\n  },\n  'feature': {\n    pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|laH|Lastnost|Mak|Mogucnost|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|perbogh|poQbogh malja'|Potrzeba biznesowa|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):(?:[^:]+(?:\\r?\\n|\\r|$))*/,\n    lookbehind: true,\n    inside: {\n      'important': {\n        pattern: /(:)[^\\r\\n]+/,\n        lookbehind: true\n      },\n      keyword: /[^:\\r\\n]+:/\n    }\n  },\n  'scenario': {\n    pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram senaryo|Dyagram Senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|Examples|EXAMPLZ|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|ghantoH|Grundlage|Hannergrond|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut|lut chovnatlh|lutmey|Lýsing Atburðarásar|Lýsing Dæma|Menggariskan Senario|MISHUN|MISHUN SRSLY|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan senaryo|Plan Senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo|Senaryo deskripsyon|Senaryo Deskripsyon|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie|Situasie Uiteensetting|Skenario|Skenario konsep|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa|Swa hwaer swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo\\-ho\\-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\\r\\n]*/,\n    lookbehind: true,\n    inside: {\n      'important': {\n        pattern: /(:)[^\\r\\n]*/,\n        lookbehind: true\n      },\n      keyword: /[^:\\r\\n]+:/\n    }\n  },\n  'table-body': {\n    // Look-behind is used to skip the table head, which has the same format as any table row\n    pattern: /((?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*)+/,\n    lookbehind: true,\n    inside: {\n      'outline': {\n        pattern: /<[^>]+?>/,\n        alias: 'variable'\n      },\n      'td': {\n        pattern: /\\s*[^\\s|][^|]*/,\n        alias: 'string'\n      },\n      'punctuation': /\\|/\n    }\n  },\n  'table-head': {\n    pattern: /(?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*/,\n    inside: {\n      'th': {\n        pattern: /\\s*[^\\s|][^|]*/,\n        alias: 'variable'\n      },\n      'punctuation': /\\|/\n    }\n  },\n  'atrule': {\n    pattern: /((?:\\r?\\n|\\r)[ \\t]+)(?:'ach|'a|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cando|Cand|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|Dato|DEN|Den youse gotta|Dengan|De|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|Entonces|En|Epi|E|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kadar|Kada|Kad|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Majd|Maka|Manawa|Mas|Ma|Menawa|Men|Mutta|Nalikaning|Nalika|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Og|Och|Oletetaan|Onda|Ond|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|qaSDI'|Quando|Quand|Quan|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|ugeholl|Und|Un|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadani|Zadano|Zadan|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \\t]+)/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n    inside: {\n      'outline': {\n        pattern: /<[^>]+?>/,\n        alias: 'variable'\n      }\n    }\n  },\n  'outline': {\n    pattern: /<[^>]+?>/,\n    alias: 'variable'\n  }\n};","Prism.languages.gherkin = {\n  pystring: {\n    pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n    alias: \"string\"\n  },\n  comment: {\n    pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)#.*/,\n    lookbehind: !0\n  },\n  tag: {\n    pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)@\\S*/,\n    lookbehind: !0\n  },\n  feature: {\n    pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|laH|Lastnost|Mak|Mogucnost|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|perbogh|poQbogh malja'|Potrzeba biznesowa|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):(?:[^:]+(?:\\r?\\n|\\r|$))*/,\n    lookbehind: !0,\n    inside: {\n      important: {\n        pattern: /(:)[^\\r\\n]+/,\n        lookbehind: !0\n      },\n      keyword: /[^:\\r\\n]+:/\n    }\n  },\n  scenario: {\n    pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram senaryo|Dyagram Senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|Examples|EXAMPLZ|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|ghantoH|Grundlage|Hannergrond|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut|lut chovnatlh|lutmey|Lýsing Atburðarásar|Lýsing Dæma|Menggariskan Senario|MISHUN|MISHUN SRSLY|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan senaryo|Plan Senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo|Senaryo deskripsyon|Senaryo Deskripsyon|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie|Situasie Uiteensetting|Skenario|Skenario konsep|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa|Swa hwaer swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo\\-ho\\-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\\r\\n]*/,\n    lookbehind: !0,\n    inside: {\n      important: {\n        pattern: /(:)[^\\r\\n]*/,\n        lookbehind: !0\n      },\n      keyword: /[^:\\r\\n]+:/\n    }\n  },\n  \"table-body\": {\n    pattern: /((?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*)+/,\n    lookbehind: !0,\n    inside: {\n      outline: {\n        pattern: /<[^>]+?>/,\n        alias: \"variable\"\n      },\n      td: {\n        pattern: /\\s*[^\\s|][^|]*/,\n        alias: \"string\"\n      },\n      punctuation: /\\|/\n    }\n  },\n  \"table-head\": {\n    pattern: /(?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*/,\n    inside: {\n      th: {\n        pattern: /\\s*[^\\s|][^|]*/,\n        alias: \"variable\"\n      },\n      punctuation: /\\|/\n    }\n  },\n  atrule: {\n    pattern: /((?:\\r?\\n|\\r)[ \\t]+)(?:'ach|'a|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cando|Cand|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|Dato|DEN|Den youse gotta|Dengan|De|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|Entonces|En|Epi|E|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kadar|Kada|Kad|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Majd|Maka|Manawa|Mas|Ma|Menawa|Men|Mutta|Nalikaning|Nalika|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Og|Och|Oletetaan|Onda|Ond|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|qaSDI'|Quando|Quand|Quan|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|ugeholl|Und|Un|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadani|Zadano|Zadan|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \\t]+)/,\n    lookbehind: !0\n  },\n  string: {\n    pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n    inside: {\n      outline: {\n        pattern: /<[^>]+?>/,\n        alias: \"variable\"\n      }\n    }\n  },\n  outline: {\n    pattern: /<[^>]+?>/,\n    alias: \"variable\"\n  }\n};","Prism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-–].*/m,\n  'inserted': /^\\+.*/m,\n\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/m\n    }\n  },\n\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit_sha1': /^commit \\w{40}$/m\n};","Prism.languages.git = {\n  comment: /^#.*/m,\n  deleted: /^[-–].*/m,\n  inserted: /^\\+.*/m,\n  string: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n  command: {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      parameter: /\\s--?\\w+/m\n    }\n  },\n  coord: /^@@.*@@$/m,\n  commit_sha1: /^commit \\w{40}$/m\n};","Prism.languages.glsl = Prism.languages.extend('clike', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, /\\/\\/(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/],\n  'number': /(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ulf]*/i,\n  'keyword': /\\b(?:attribute|const|uniform|varying|buffer|shared|coherent|volatile|restrict|readonly|writeonly|atomic_uint|layout|centroid|flat|smooth|noperspective|patch|sample|break|continue|do|for|while|switch|case|default|if|else|subroutine|in|out|inout|float|double|int|void|bool|true|false|invariant|precise|discard|return|d?mat[234](?:x[234])?|[ibdu]?vec[234]|uint|lowp|mediump|highp|precision|[iu]?sampler[123]D|[iu]?samplerCube|sampler[12]DShadow|samplerCubeShadow|[iu]?sampler[12]DArray|sampler[12]DArrayShadow|[iu]?sampler2DRect|sampler2DRectShadow|[iu]?samplerBuffer|[iu]?sampler2DMS(?:Array)?|[iu]?samplerCubeArray|samplerCubeArrayShadow|[iu]?image[123]D|[iu]?image2DRect|[iu]?imageCube|[iu]?imageBuffer|[iu]?image[12]DArray|[iu]?imageCubeArray|[iu]?image2DMS(?:Array)?|struct|common|partition|active|asm|class|union|enum|typedef|template|this|resource|goto|inline|noinline|public|static|extern|external|interface|long|short|half|fixed|unsigned|superp|input|output|hvec[234]|fvec[234]|sampler3DRect|filter|sizeof|cast|namespace|using)\\b/\n});\nPrism.languages.insertBefore('glsl', 'comment', {\n  'preprocessor': {\n    pattern: /(^[ \\t]*)#(?:(?:define|undef|if|ifdef|ifndef|else|elif|endif|error|pragma|extension|version|line)\\b)?/m,\n    lookbehind: true,\n    alias: 'builtin'\n  }\n});","Prism.languages.glsl = Prism.languages.extend(\"clike\", {\n  comment: [/\\/\\*[\\s\\S]*?\\*\\//, /\\/\\/(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/],\n  number: /(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ulf]*/i,\n  keyword: /\\b(?:attribute|const|uniform|varying|buffer|shared|coherent|volatile|restrict|readonly|writeonly|atomic_uint|layout|centroid|flat|smooth|noperspective|patch|sample|break|continue|do|for|while|switch|case|default|if|else|subroutine|in|out|inout|float|double|int|void|bool|true|false|invariant|precise|discard|return|d?mat[234](?:x[234])?|[ibdu]?vec[234]|uint|lowp|mediump|highp|precision|[iu]?sampler[123]D|[iu]?samplerCube|sampler[12]DShadow|samplerCubeShadow|[iu]?sampler[12]DArray|sampler[12]DArrayShadow|[iu]?sampler2DRect|sampler2DRectShadow|[iu]?samplerBuffer|[iu]?sampler2DMS(?:Array)?|[iu]?samplerCubeArray|samplerCubeArrayShadow|[iu]?image[123]D|[iu]?image2DRect|[iu]?imageCube|[iu]?imageBuffer|[iu]?image[12]DArray|[iu]?imageCubeArray|[iu]?image2DMS(?:Array)?|struct|common|partition|active|asm|class|union|enum|typedef|template|this|resource|goto|inline|noinline|public|static|extern|external|interface|long|short|half|fixed|unsigned|superp|input|output|hvec[234]|fvec[234]|sampler3DRect|filter|sizeof|cast|namespace|using)\\b/\n}), Prism.languages.insertBefore(\"glsl\", \"comment\", {\n  preprocessor: {\n    pattern: /(^[ \\t]*)#(?:(?:define|undef|if|ifdef|ifndef|else|elif|endif|error|pragma|extension|version|line)\\b)?/m,\n    lookbehind: !0,\n    alias: \"builtin\"\n  }\n});","Prism.languages.gamemakerlanguage = Prism.languages.gml = Prism.languages.extend('clike', {\n  'number': /(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ulf]*/i,\n  'keyword': /\\b(?:if|else|switch|case|default|break|for|repeat|while|do|until|continue|exit|return|globalvar|var|enum)\\b/,\n  'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not|with|at|xor|not)\\b/,\n  'constant': /\\b(self|other|all|noone|global|local|undefined|pointer_(?:invalid|null)|action_(?:stop|restart|continue|reverse)|pi|GM_build_date|GM_version|timezone_(?:local|utc)|gamespeed_(?:fps|microseconds)|ev_(?:create|destroy|step|alarm|keyboard|mouse|collision|other|draw|draw_(?:begin|end|pre|post)|keypress|keyrelease|trigger|(?:left|right|middle|no)_button|(?:left|right|middle)_press|(?:left|right|middle)_release|mouse_(?:enter|leave|wheel_up|wheel_down)|global_(?:left|right|middle)_button|global_(?:left|right|middle)_press|global_(?:left|right|middle)_release|joystick(?:1|2)_(?:left|right|up|down|button1|button2|button3|button4|button5|button6|button7|button8)|outside|boundary|game_start|game_end|room_start|room_end|no_more_lives|animation_end|end_of_path|no_more_health|user\\d|step_(?:normal|begin|end)|gui|gui_begin|gui_end)|vk_(?:nokey|anykey|enter|return|shift|control|alt|escape|space|backspace|tab|pause|printscreen|left|right|up|down|home|end|delete|insert|pageup|pagedown|f\\d|numpad\\d|divide|multiply|subtract|add|decimal|lshift|lcontrol|lalt|rshift|rcontrol|ralt)|mb_(?:any|none|left|right|middle)|c_(?:aqua|black|blue|dkgray|fuchsia|gray|green|lime|ltgray|maroon|navy|olive|purple|red|silver|teal|white|yellow|orange)|fa_(?:left|center|right|top|middle|bottom|readonly|hidden|sysfile|volumeid|directory|archive)|pr_(?:pointlist|linelist|linestrip|trianglelist|trianglestrip|trianglefan)|bm_(?:complex|normal|add|max|subtract|zero|one|src_colour|inv_src_colour|src_color|inv_src_color|src_alpha|inv_src_alpha|dest_alpha|inv_dest_alpha|dest_colour|inv_dest_colour|dest_color|inv_dest_color|src_alpha_sat)|audio_(?:falloff_(?:none|inverse_distance|inverse_distance_clamped|linear_distance|linear_distance_clamped|exponent_distance|exponent_distance_clamped)|old_system|new_system|mono|stereo|3d)|cr_(?:default|none|arrow|cross|beam|size_nesw|size_ns|size_nwse|size_we|uparrow|hourglass|drag|appstart|handpoint|size_all)|spritespeed_framesper(?:second|gameframe)|asset_(?:object|unknown|sprite|sound|room|path|script|font|timeline|tiles|shader)|ds_type_(?:map|list|stack|queue|grid|priority)|ef_(?:explosion|ring|ellipse|firework|smoke|smokeup|star|spark|flare|cloud|rain|snow)|pt_shape_(?:pixel|disk|square|line|star|circle|ring|sphere|flare|spark|explosion|cloud|smoke|snow)|ps_(?:distr|shape)_(?:linear|gaussian|invgaussian|rectangle|ellipse|diamond|line)|ty_(?:real|string)|dll_(?:cdel|cdecl|stdcall)|matrix_(?:view|projection|world)|os_(?:win32|windows|macosx|ios|android|linux|unknown|winphone|win8native|psvita|ps4|xboxone|ps3|uwp)|browser_(?:not_a_browser|unknown|ie|firefox|chrome|safari|safari_mobile|opera|tizen|windows_store|ie_mobile)|device_ios_(?:unknown|iphone|iphone_retina|ipad|ipad_retina|iphone5|iphone6|iphone6plus)|device_(?:emulator|tablet)|display_(?:landscape|landscape_flipped|portrait|portrait_flipped)|of_challenge_(?:win|lose|tie)|leaderboard_type_(?:number|time_mins_secs)|cmpfunc_(?:never|less|equal|lessequal|greater|notequal|greaterequal|always)|cull_(?:noculling|clockwise|counterclockwise)|lighttype_(?:dir|point)|iap_(?:ev_storeload|ev_product|ev_purchase|ev_consume|ev_restore|storeload_ok|storeload_failed|status_uninitialised|status_unavailable|status_loading|status_available|status_processing|status_restoring|failed|unavailable|available|purchased|canceled|refunded)|fb_login_(?:default|fallback_to_webview|no_fallback_to_webview|forcing_webview|use_system_account|forcing_safari)|phy_joint_(?:anchor_1_x|anchor_1_y|anchor_2_x|anchor_2_y|reaction_force_x|reaction_force_y|reaction_torque|motor_speed|angle|motor_torque|max_motor_torque|translation|speed|motor_force|max_motor_force|length_1|length_2|damping_ratio|frequency|lower_angle_limit|upper_angle_limit|angle_limits|max_length|max_torque|max_force)|phy_debug_render_(?:aabb|collision_pairs|coms|core_shapes|joints|obb|shapes)|phy_particle_flag_(?:water|zombie|wall|spring|elastic|viscous|powder|tensile|colourmixing|colormixing)|phy_particle_group_flag_(?:solid|rigid)|phy_particle_data_flag_(?:typeflags|position|velocity|colour|color|category)|achievement_(?:our_info|friends_info|leaderboard_info|info|filter_(?:all_players|friends_only|favorites_only)|type_challenge|type_score_challenge|pic_loaded|show_(?:ui|profile|leaderboard|achievement|bank|friend_picker|purchase_prompt))|network_(?:socket_(?:tcp|udp|bluetooth)|type_(?:connect|disconnect|data|non_blocking_connect)|config_(?:connect_timeout|use_non_blocking_socket|enable_reliable_udp|disable_reliable_udp))|buffer_(?:fixed|grow|wrap|fast|vbuffer|network|u8|s8|u16|s16|u32|s32|u64|f16|f32|f64|bool|text|string|seek_start|seek_relative|seek_end|generalerror|outofspace|outofbounds|invalidtype)|gp_(?:face\\d|shoulderl|shoulderr|shoulderlb|shoulderrb|select|start|stickl|stickr|padu|padd|padl|padr|axislh|axislv|axisrh|axisrv)|ov_(?:friends|community|players|settings|gamegroup|achievements)|lb_sort_(?:none|ascending|descending)|lb_disp_(?:none|numeric|time_sec|time_ms)|ugc_(?:result_success|filetype_(?:community|microtrans)|visibility_(?:public|friends_only|private)|query_RankedBy(?:Vote|PublicationDate|Trend|NumTimesReported|TotalVotesAsc|VotesUp|TextSearch)|query_(?:AcceptedForGameRankedByAcceptanceDate|FavoritedByFriendsRankedByPublicationDate|CreatedByFriendsRankedByPublicationDate|NotYetRated)|sortorder_CreationOrder(?:Desc|Asc)|sortorder_(?:TitleAsc|LastUpdatedDesc|SubscriptionDateDesc|VoteScoreDesc|ForModeration)|list_(?:Published|VotedOn|VotedUp|VotedDown|WillVoteLater|Favorited|Subscribed|UsedOrPlayed|Followed)|match_(?:Items|Items_Mtx|Items_ReadyToUse|Collections|Artwork|Videos|Screenshots|AllGuides|WebGuides|IntegratedGuides|UsableInGame|ControllerBindings))|vertex_usage_(?:position|colour|color|normal|texcoord|textcoord|blendweight|blendindices|psize|tangent|binormal|fog|depth|sample)|vertex_type_(?:float\\d|colour|color|ubyte4)|layerelementtype_(?:undefined|background|instance|oldtilemap|sprite|tilemap|particlesystem|tile)|tile_(?:rotate|flip|mirror|index_mask)|input_type|se_(?:chorus|compressor|echo|equalizer|flanger|gargle|none|reverb)|text_type|(obj|scr|spr|rm)\\w+)\\b/,\n  'variable': /\\b(x|y|(?:x|y)(?:previous|start)|(?:h|v)speed|direction|speed|friction|gravity|gravity_direction|path_(?:index|position|positionprevious|speed|scale|orientation|endaction)|object_index|id|solid|persistent|mask_index|instance_(?:count|id)|alarm|timeline_(?:index|position|speed|running|loop)|visible|sprite_(?:index|width|height|xoffset|yoffset)|image_(?:number|index|speed|depth|xscale|yscale|angle|alpha|blend)|bbox_(?:left|right|top|bottom)|layer|phy_(?:rotation|(?:position|linear_velocity|speed|com|collision|col_normal)_(?:x|y)|angular_(?:velocity|damping)|position_(?:x|y)previous|speed|linear_damping|bullet|fixed_rotation|active|mass|inertia|dynamic|kinematic|sleeping|collision_points)|working_directory|webgl_enabled|view_(?:(?:y|x|w|h)view|(?:y|x|w|h)port|(?:v|h)(?:speed|border)|visible|surface_id|object|enabled|current|angle)|undefined|transition_(?:steps|kind|color)|temp_directory|show_(?:score|lives|health)|secure_mode|score|room_(?:width|speed|persistent|last|height|first|caption)|room|pointer_(?:null|invalid)|os_(?:version|type|device|browser)|mouse_(?:y|x|lastbutton|button)|lives|keyboard_(?:string|lastkey|lastchar|key)|iap_data|health|gamemaker_(?:version|registered|pro)|game_(?:save|project|display)_(?:id|name)|fps_real|fps|event_(?:type|object|number|action)|error_(?:occurred|last)|display_aa|delta_time|debug_mode|cursor_sprite|current_(?:year|weekday|time|second|month|minute|hour|day)|caption_(?:score|lives|health)|browser_(?:width|height)|background_(?:yscale|y|xscale|x|width|vtiled|vspeed|visible|showcolour|showcolor|index|htiled|hspeed|height|foreground|colour|color|blend|alpha)|async_load|application_surface|argument(?:_relitive|_count|\\d)|argument|global|local|self|other)\\b/\n});","Prism.languages.gamemakerlanguage = Prism.languages.gml = Prism.languages.extend(\"clike\", {\n  number: /(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ulf]*/i,\n  keyword: /\\b(?:if|else|switch|case|default|break|for|repeat|while|do|until|continue|exit|return|globalvar|var|enum)\\b/,\n  operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not|with|at|xor|not)\\b/,\n  constant: /\\b(self|other|all|noone|global|local|undefined|pointer_(?:invalid|null)|action_(?:stop|restart|continue|reverse)|pi|GM_build_date|GM_version|timezone_(?:local|utc)|gamespeed_(?:fps|microseconds)|ev_(?:create|destroy|step|alarm|keyboard|mouse|collision|other|draw|draw_(?:begin|end|pre|post)|keypress|keyrelease|trigger|(?:left|right|middle|no)_button|(?:left|right|middle)_press|(?:left|right|middle)_release|mouse_(?:enter|leave|wheel_up|wheel_down)|global_(?:left|right|middle)_button|global_(?:left|right|middle)_press|global_(?:left|right|middle)_release|joystick(?:1|2)_(?:left|right|up|down|button1|button2|button3|button4|button5|button6|button7|button8)|outside|boundary|game_start|game_end|room_start|room_end|no_more_lives|animation_end|end_of_path|no_more_health|user\\d|step_(?:normal|begin|end)|gui|gui_begin|gui_end)|vk_(?:nokey|anykey|enter|return|shift|control|alt|escape|space|backspace|tab|pause|printscreen|left|right|up|down|home|end|delete|insert|pageup|pagedown|f\\d|numpad\\d|divide|multiply|subtract|add|decimal|lshift|lcontrol|lalt|rshift|rcontrol|ralt)|mb_(?:any|none|left|right|middle)|c_(?:aqua|black|blue|dkgray|fuchsia|gray|green|lime|ltgray|maroon|navy|olive|purple|red|silver|teal|white|yellow|orange)|fa_(?:left|center|right|top|middle|bottom|readonly|hidden|sysfile|volumeid|directory|archive)|pr_(?:pointlist|linelist|linestrip|trianglelist|trianglestrip|trianglefan)|bm_(?:complex|normal|add|max|subtract|zero|one|src_colour|inv_src_colour|src_color|inv_src_color|src_alpha|inv_src_alpha|dest_alpha|inv_dest_alpha|dest_colour|inv_dest_colour|dest_color|inv_dest_color|src_alpha_sat)|audio_(?:falloff_(?:none|inverse_distance|inverse_distance_clamped|linear_distance|linear_distance_clamped|exponent_distance|exponent_distance_clamped)|old_system|new_system|mono|stereo|3d)|cr_(?:default|none|arrow|cross|beam|size_nesw|size_ns|size_nwse|size_we|uparrow|hourglass|drag|appstart|handpoint|size_all)|spritespeed_framesper(?:second|gameframe)|asset_(?:object|unknown|sprite|sound|room|path|script|font|timeline|tiles|shader)|ds_type_(?:map|list|stack|queue|grid|priority)|ef_(?:explosion|ring|ellipse|firework|smoke|smokeup|star|spark|flare|cloud|rain|snow)|pt_shape_(?:pixel|disk|square|line|star|circle|ring|sphere|flare|spark|explosion|cloud|smoke|snow)|ps_(?:distr|shape)_(?:linear|gaussian|invgaussian|rectangle|ellipse|diamond|line)|ty_(?:real|string)|dll_(?:cdel|cdecl|stdcall)|matrix_(?:view|projection|world)|os_(?:win32|windows|macosx|ios|android|linux|unknown|winphone|win8native|psvita|ps4|xboxone|ps3|uwp)|browser_(?:not_a_browser|unknown|ie|firefox|chrome|safari|safari_mobile|opera|tizen|windows_store|ie_mobile)|device_ios_(?:unknown|iphone|iphone_retina|ipad|ipad_retina|iphone5|iphone6|iphone6plus)|device_(?:emulator|tablet)|display_(?:landscape|landscape_flipped|portrait|portrait_flipped)|of_challenge_(?:win|lose|tie)|leaderboard_type_(?:number|time_mins_secs)|cmpfunc_(?:never|less|equal|lessequal|greater|notequal|greaterequal|always)|cull_(?:noculling|clockwise|counterclockwise)|lighttype_(?:dir|point)|iap_(?:ev_storeload|ev_product|ev_purchase|ev_consume|ev_restore|storeload_ok|storeload_failed|status_uninitialised|status_unavailable|status_loading|status_available|status_processing|status_restoring|failed|unavailable|available|purchased|canceled|refunded)|fb_login_(?:default|fallback_to_webview|no_fallback_to_webview|forcing_webview|use_system_account|forcing_safari)|phy_joint_(?:anchor_1_x|anchor_1_y|anchor_2_x|anchor_2_y|reaction_force_x|reaction_force_y|reaction_torque|motor_speed|angle|motor_torque|max_motor_torque|translation|speed|motor_force|max_motor_force|length_1|length_2|damping_ratio|frequency|lower_angle_limit|upper_angle_limit|angle_limits|max_length|max_torque|max_force)|phy_debug_render_(?:aabb|collision_pairs|coms|core_shapes|joints|obb|shapes)|phy_particle_flag_(?:water|zombie|wall|spring|elastic|viscous|powder|tensile|colourmixing|colormixing)|phy_particle_group_flag_(?:solid|rigid)|phy_particle_data_flag_(?:typeflags|position|velocity|colour|color|category)|achievement_(?:our_info|friends_info|leaderboard_info|info|filter_(?:all_players|friends_only|favorites_only)|type_challenge|type_score_challenge|pic_loaded|show_(?:ui|profile|leaderboard|achievement|bank|friend_picker|purchase_prompt))|network_(?:socket_(?:tcp|udp|bluetooth)|type_(?:connect|disconnect|data|non_blocking_connect)|config_(?:connect_timeout|use_non_blocking_socket|enable_reliable_udp|disable_reliable_udp))|buffer_(?:fixed|grow|wrap|fast|vbuffer|network|u8|s8|u16|s16|u32|s32|u64|f16|f32|f64|bool|text|string|seek_start|seek_relative|seek_end|generalerror|outofspace|outofbounds|invalidtype)|gp_(?:face\\d|shoulderl|shoulderr|shoulderlb|shoulderrb|select|start|stickl|stickr|padu|padd|padl|padr|axislh|axislv|axisrh|axisrv)|ov_(?:friends|community|players|settings|gamegroup|achievements)|lb_sort_(?:none|ascending|descending)|lb_disp_(?:none|numeric|time_sec|time_ms)|ugc_(?:result_success|filetype_(?:community|microtrans)|visibility_(?:public|friends_only|private)|query_RankedBy(?:Vote|PublicationDate|Trend|NumTimesReported|TotalVotesAsc|VotesUp|TextSearch)|query_(?:AcceptedForGameRankedByAcceptanceDate|FavoritedByFriendsRankedByPublicationDate|CreatedByFriendsRankedByPublicationDate|NotYetRated)|sortorder_CreationOrder(?:Desc|Asc)|sortorder_(?:TitleAsc|LastUpdatedDesc|SubscriptionDateDesc|VoteScoreDesc|ForModeration)|list_(?:Published|VotedOn|VotedUp|VotedDown|WillVoteLater|Favorited|Subscribed|UsedOrPlayed|Followed)|match_(?:Items|Items_Mtx|Items_ReadyToUse|Collections|Artwork|Videos|Screenshots|AllGuides|WebGuides|IntegratedGuides|UsableInGame|ControllerBindings))|vertex_usage_(?:position|colour|color|normal|texcoord|textcoord|blendweight|blendindices|psize|tangent|binormal|fog|depth|sample)|vertex_type_(?:float\\d|colour|color|ubyte4)|layerelementtype_(?:undefined|background|instance|oldtilemap|sprite|tilemap|particlesystem|tile)|tile_(?:rotate|flip|mirror|index_mask)|input_type|se_(?:chorus|compressor|echo|equalizer|flanger|gargle|none|reverb)|text_type|(obj|scr|spr|rm)\\w+)\\b/,\n  variable: /\\b(x|y|(?:x|y)(?:previous|start)|(?:h|v)speed|direction|speed|friction|gravity|gravity_direction|path_(?:index|position|positionprevious|speed|scale|orientation|endaction)|object_index|id|solid|persistent|mask_index|instance_(?:count|id)|alarm|timeline_(?:index|position|speed|running|loop)|visible|sprite_(?:index|width|height|xoffset|yoffset)|image_(?:number|index|speed|depth|xscale|yscale|angle|alpha|blend)|bbox_(?:left|right|top|bottom)|layer|phy_(?:rotation|(?:position|linear_velocity|speed|com|collision|col_normal)_(?:x|y)|angular_(?:velocity|damping)|position_(?:x|y)previous|speed|linear_damping|bullet|fixed_rotation|active|mass|inertia|dynamic|kinematic|sleeping|collision_points)|working_directory|webgl_enabled|view_(?:(?:y|x|w|h)view|(?:y|x|w|h)port|(?:v|h)(?:speed|border)|visible|surface_id|object|enabled|current|angle)|undefined|transition_(?:steps|kind|color)|temp_directory|show_(?:score|lives|health)|secure_mode|score|room_(?:width|speed|persistent|last|height|first|caption)|room|pointer_(?:null|invalid)|os_(?:version|type|device|browser)|mouse_(?:y|x|lastbutton|button)|lives|keyboard_(?:string|lastkey|lastchar|key)|iap_data|health|gamemaker_(?:version|registered|pro)|game_(?:save|project|display)_(?:id|name)|fps_real|fps|event_(?:type|object|number|action)|error_(?:occurred|last)|display_aa|delta_time|debug_mode|cursor_sprite|current_(?:year|weekday|time|second|month|minute|hour|day)|caption_(?:score|lives|health)|browser_(?:width|height)|background_(?:yscale|y|xscale|x|width|vtiled|vspeed|visible|showcolour|showcolor|index|htiled|hspeed|height|foreground|colour|color|blend|alpha)|async_load|application_surface|argument(?:_relitive|_count|\\d)|argument|global|local|self|other)\\b/\n});","Prism.languages.go = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'builtin': /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/,\n  'boolean': /\\b(?:_|iota|nil|true|false)\\b/,\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'number': /(?:\\b0x[a-f\\d]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n  'string': {\n    pattern: /([\"'`])(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: true\n  }\n});\ndelete Prism.languages.go['class-name'];","Prism.languages.go = Prism.languages.extend(\"clike\", {\n  keyword: /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  builtin: /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/,\n  boolean: /\\b(?:_|iota|nil|true|false)\\b/,\n  operator: /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  number: /(?:\\b0x[a-f\\d]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n  string: {\n    pattern: /([\"'`])(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: !0\n  }\n}), delete Prism.languages.go[\"class-name\"];","Prism.languages.graphql = {\n  'comment': /#.*/,\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:true|false)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': {\n    pattern: /[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true\n  },\n  'fragment': {\n    pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:enum|fragment|implements|input|interface|mutation|on|query|scalar|schema|type|union)\\b/,\n  'operator': /[!=|]|\\.{3}/,\n  'punctuation': /[!(){}\\[\\]:=,]/,\n  'constant': /\\b(?!ID\\b)[A-Z][A-Z_\\d]*\\b/\n};","Prism.languages.graphql = {\n  comment: /#.*/,\n  string: {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: !0\n  },\n  number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  boolean: /\\b(?:true|false)\\b/,\n  variable: /\\$[a-z_]\\w*/i,\n  directive: {\n    pattern: /@[a-z_]\\w*/i,\n    alias: \"function\"\n  },\n  \"attr-name\": {\n    pattern: /[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n    greedy: !0\n  },\n  \"class-name\": {\n    pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: !0\n  },\n  fragment: {\n    pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n    lookbehind: !0,\n    alias: \"function\"\n  },\n  keyword: /\\b(?:enum|fragment|implements|input|interface|mutation|on|query|scalar|schema|type|union)\\b/,\n  operator: /[!=|]|\\.{3}/,\n  punctuation: /[!(){}\\[\\]:=,]/,\n  constant: /\\b(?!ID\\b)[A-Z][A-Z_\\d]*\\b/\n};","require(\"core-js/modules/es6.regexp.replace\");\n\nPrism.languages.groovy = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:as|def|in|abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n  'string': [{\n    pattern: /(\"\"\"|''')[\\s\\S]*?\\1|(?:\\$\\/)(?:\\$\\/\\$|[\\s\\S])*?\\/\\$/,\n    greedy: true\n  }, {\n    pattern: /([\"'\\/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  }],\n  'number': /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?[\\d]+)?)[glidf]?\\b/i,\n  'operator': {\n    pattern: /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.{1,2}(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n    lookbehind: true\n  },\n  'punctuation': /\\.+|[{}[\\];(),:$]/\n});\nPrism.languages.insertBefore('groovy', 'string', {\n  'shebang': {\n    pattern: /#!.+/,\n    alias: 'comment'\n  }\n});\nPrism.languages.insertBefore('groovy', 'punctuation', {\n  'spock-block': /\\b(?:setup|given|when|then|and|cleanup|expect|where):/\n});\nPrism.languages.insertBefore('groovy', 'function', {\n  'annotation': {\n    alias: 'punctuation',\n    pattern: /(^|[^.])@\\w+/,\n    lookbehind: true\n  }\n}); // Handle string interpolation\n\nPrism.hooks.add('wrap', function (env) {\n  if (env.language === 'groovy' && env.type === 'string') {\n    var delimiter = env.content[0];\n\n    if (delimiter != \"'\") {\n      var pattern = /([^\\\\])(?:\\$(?:\\{.*?\\}|[\\w.]+))/;\n\n      if (delimiter === '$') {\n        pattern = /([^\\$])(?:\\$(?:\\{.*?\\}|[\\w.]+))/;\n      } // To prevent double HTML-encoding we have to decode env.content first\n\n\n      env.content = env.content.replace(/&lt;/g, '<').replace(/&amp;/g, '&');\n      env.content = Prism.highlight(env.content, {\n        'expression': {\n          pattern: pattern,\n          lookbehind: true,\n          inside: Prism.languages.groovy\n        }\n      });\n      env.classes.push(delimiter === '/' ? 'regex' : 'gstring');\n    }\n  }\n});","require(\"core-js/modules/es6.regexp.replace\");\n\nPrism.languages.groovy = Prism.languages.extend(\"clike\", {\n  keyword: /\\b(?:as|def|in|abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n  string: [{\n    pattern: /(\"\"\"|''')[\\s\\S]*?\\1|(?:\\$\\/)(?:\\$\\/\\$|[\\s\\S])*?\\/\\$/,\n    greedy: !0\n  }, {\n    pattern: /([\"'\\/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  }],\n  number: /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?[\\d]+)?)[glidf]?\\b/i,\n  operator: {\n    pattern: /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.{1,2}(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n    lookbehind: !0\n  },\n  punctuation: /\\.+|[{}[\\];(),:$]/\n}), Prism.languages.insertBefore(\"groovy\", \"string\", {\n  shebang: {\n    pattern: /#!.+/,\n    alias: \"comment\"\n  }\n}), Prism.languages.insertBefore(\"groovy\", \"punctuation\", {\n  \"spock-block\": /\\b(?:setup|given|when|then|and|cleanup|expect|where):/\n}), Prism.languages.insertBefore(\"groovy\", \"function\", {\n  annotation: {\n    alias: \"punctuation\",\n    pattern: /(^|[^.])@\\w+/,\n    lookbehind: !0\n  }\n}), Prism.hooks.add(\"wrap\", function (e) {\n  if (\"groovy\" === e.language && \"string\" === e.type) {\n    var t = e.content[0];\n\n    if (\"'\" != t) {\n      var n = /([^\\\\])(?:\\$(?:\\{.*?\\}|[\\w.]+))/;\n      \"$\" === t && (n = /([^\\$])(?:\\$(?:\\{.*?\\}|[\\w.]+))/), e.content = e.content.replace(/&lt;/g, \"<\").replace(/&amp;/g, \"&\"), e.content = Prism.highlight(e.content, {\n        expression: {\n          pattern: n,\n          lookbehind: !0,\n          inside: Prism.languages.groovy\n        }\n      }), e.classes.push(\"/\" === t ? \"regex\" : \"gstring\");\n    }\n  }\n});","require(\"core-js/modules/es6.regexp.constructor\");\n\n/* TODO\n\tHandle multiline code after tag\n\t    %foo= some |\n\t\t\tmultiline |\n\t\t\tcode |\n*/\n(function (Prism) {\n  Prism.languages.haml = {\n    // Multiline stuff should appear before the rest\n    'multiline-comment': {\n      pattern: /((?:^|\\r?\\n|\\r)([\\t ]*))(?:\\/|-#).*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)*/,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    'multiline-code': [{\n      pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*,[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.*,[\\t ]*)*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)/,\n      lookbehind: true,\n      inside: {\n        rest: Prism.languages.ruby\n      }\n    }, {\n      pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*\\|[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.*\\|[\\t ]*)*/,\n      lookbehind: true,\n      inside: {\n        rest: Prism.languages.ruby\n      }\n    }],\n    // See at the end of the file for known filters\n    'filter': {\n      pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)):[\\w-]+(?:(?:\\r?\\n|\\r)(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/,\n      lookbehind: true,\n      inside: {\n        'filter-name': {\n          pattern: /^:[\\w-]+/,\n          alias: 'variable'\n        }\n      }\n    },\n    'markup': {\n      pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)<.+/,\n      lookbehind: true,\n      inside: {\n        rest: Prism.languages.markup\n      }\n    },\n    'doctype': {\n      pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)!!!(?: .+)?/,\n      lookbehind: true\n    },\n    'tag': {\n      // Allows for one nested group of braces\n      pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,\n      lookbehind: true,\n      inside: {\n        'attributes': [{\n          // Lookbehind tries to prevent interpolations from breaking it all\n          // Allows for one nested group of braces\n          pattern: /(^|[^#])\\{(?:\\{[^}]+\\}|[^}])+\\}/,\n          lookbehind: true,\n          inside: {\n            rest: Prism.languages.ruby\n          }\n        }, {\n          pattern: /\\([^)]+\\)/,\n          inside: {\n            'attr-value': {\n              pattern: /(=\\s*)(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|[^)\\s]+)/,\n              lookbehind: true\n            },\n            'attr-name': /[\\w:-]+(?=\\s*!?=|\\s*[,)])/,\n            'punctuation': /[=(),]/\n          }\n        }, {\n          pattern: /\\[[^\\]]+\\]/,\n          inside: {\n            rest: Prism.languages.ruby\n          }\n        }],\n        'punctuation': /[<>]/\n      }\n    },\n    'code': {\n      pattern: /((?:^|\\r?\\n|\\r)[\\t ]*(?:[~-]|[&!]?=)).+/,\n      lookbehind: true,\n      inside: {\n        rest: Prism.languages.ruby\n      }\n    },\n    // Interpolations in plain text\n    'interpolation': {\n      pattern: /#\\{[^}]+\\}/,\n      inside: {\n        'delimiter': {\n          pattern: /^#\\{|\\}$/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.ruby\n      }\n    },\n    'punctuation': {\n      pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[~=\\-&!]+/,\n      lookbehind: true\n    }\n  };\n  var filter_pattern = '((?:^|\\\\r?\\\\n|\\\\r)([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r)(?:\\\\2[\\\\t ]+.+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+'; // Non exhaustive list of available filters and associated languages\n\n  var filters = ['css', {\n    filter: 'coffee',\n    language: 'coffeescript'\n  }, 'erb', 'javascript', 'less', 'markdown', 'ruby', 'scss', 'textile'];\n  var all_filters = {};\n\n  for (var i = 0, l = filters.length; i < l; i++) {\n    var filter = filters[i];\n    filter = typeof filter === 'string' ? {\n      filter: filter,\n      language: filter\n    } : filter;\n\n    if (Prism.languages[filter.language]) {\n      all_filters['filter-' + filter.filter] = {\n        pattern: RegExp(filter_pattern.replace('{{filter_name}}', filter.filter)),\n        lookbehind: true,\n        inside: {\n          'filter-name': {\n            pattern: /^:[\\w-]+/,\n            alias: 'variable'\n          },\n          rest: Prism.languages[filter.language]\n        }\n      };\n    }\n  }\n\n  Prism.languages.insertBefore('haml', 'filter', all_filters);\n})(Prism);","require(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\n!function (e) {\n  e.languages.haml = {\n    \"multiline-comment\": {\n      pattern: /((?:^|\\r?\\n|\\r)([\\t ]*))(?:\\/|-#).*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)*/,\n      lookbehind: !0,\n      alias: \"comment\"\n    },\n    \"multiline-code\": [{\n      pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*,[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.*,[\\t ]*)*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)/,\n      lookbehind: !0,\n      inside: {\n        rest: e.languages.ruby\n      }\n    }, {\n      pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*\\|[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.*\\|[\\t ]*)*/,\n      lookbehind: !0,\n      inside: {\n        rest: e.languages.ruby\n      }\n    }],\n    filter: {\n      pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)):[\\w-]+(?:(?:\\r?\\n|\\r)(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/,\n      lookbehind: !0,\n      inside: {\n        \"filter-name\": {\n          pattern: /^:[\\w-]+/,\n          alias: \"variable\"\n        }\n      }\n    },\n    markup: {\n      pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)<.+/,\n      lookbehind: !0,\n      inside: {\n        rest: e.languages.markup\n      }\n    },\n    doctype: {\n      pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)!!!(?: .+)?/,\n      lookbehind: !0\n    },\n    tag: {\n      pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,\n      lookbehind: !0,\n      inside: {\n        attributes: [{\n          pattern: /(^|[^#])\\{(?:\\{[^}]+\\}|[^}])+\\}/,\n          lookbehind: !0,\n          inside: {\n            rest: e.languages.ruby\n          }\n        }, {\n          pattern: /\\([^)]+\\)/,\n          inside: {\n            \"attr-value\": {\n              pattern: /(=\\s*)(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|[^)\\s]+)/,\n              lookbehind: !0\n            },\n            \"attr-name\": /[\\w:-]+(?=\\s*!?=|\\s*[,)])/,\n            punctuation: /[=(),]/\n          }\n        }, {\n          pattern: /\\[[^\\]]+\\]/,\n          inside: {\n            rest: e.languages.ruby\n          }\n        }],\n        punctuation: /[<>]/\n      }\n    },\n    code: {\n      pattern: /((?:^|\\r?\\n|\\r)[\\t ]*(?:[~-]|[&!]?=)).+/,\n      lookbehind: !0,\n      inside: {\n        rest: e.languages.ruby\n      }\n    },\n    interpolation: {\n      pattern: /#\\{[^}]+\\}/,\n      inside: {\n        delimiter: {\n          pattern: /^#\\{|\\}$/,\n          alias: \"punctuation\"\n        },\n        rest: e.languages.ruby\n      }\n    },\n    punctuation: {\n      pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[~=\\-&!]+/,\n      lookbehind: !0\n    }\n  };\n\n  for (var t = [\"css\", {\n    filter: \"coffee\",\n    language: \"coffeescript\"\n  }, \"erb\", \"javascript\", \"less\", \"markdown\", \"ruby\", \"scss\", \"textile\"], r = {}, n = 0, a = t.length; n < a; n++) {\n    var i = t[n];\n    i = \"string\" == typeof i ? {\n      filter: i,\n      language: i\n    } : i, e.languages[i.language] && (r[\"filter-\" + i.filter] = {\n      pattern: RegExp(\"((?:^|\\\\r?\\\\n|\\\\r)([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r)(?:\\\\2[\\\\t ]+.+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+\".replace(\"{{filter_name}}\", i.filter)),\n      lookbehind: !0,\n      inside: {\n        \"filter-name\": {\n          pattern: /^:[\\w-]+/,\n          alias: \"variable\"\n        },\n        rest: e.languages[i.language]\n      }\n    });\n  }\n\n  e.languages.insertBefore(\"haml\", \"filter\", r);\n}(Prism);","(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'block': {\n      pattern: /^(\\s*~?\\s*)[#\\/]\\S+?(?=\\s*~?\\s*$|\\s)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n})(Prism);","!function (e) {\n  e.languages.handlebars = {\n    comment: /\\{\\{![\\s\\S]*?\\}\\}/,\n    delimiter: {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\n      alias: \"punctuation\"\n    },\n    string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    boolean: /\\b(?:true|false)\\b/,\n    block: {\n      pattern: /^(\\s*~?\\s*)[#\\/]\\S+?(?=\\s*~?\\s*$|\\s)/i,\n      lookbehind: !0,\n      alias: \"keyword\"\n    },\n    brackets: {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    punctuation: /[!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    variable: /[^!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  }, e.hooks.add(\"before-tokenize\", function (a) {\n    e.languages[\"markup-templating\"].buildPlaceholders(a, \"handlebars\", /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g);\n  }), e.hooks.add(\"after-tokenize\", function (a) {\n    e.languages[\"markup-templating\"].tokenizePlaceholders(a, \"handlebars\");\n  });\n}(Prism);","Prism.languages.haskell = {\n  'comment': {\n    pattern: /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|{-[\\s\\S]*?-})/m,\n    lookbehind: true\n  },\n  'char': /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n  'string': {\n    pattern: /\"(?:[^\\\\\"]|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+)|\\\\\\s+\\\\)*\"/,\n    greedy: true\n  },\n  'keyword': /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n  'import_statement': {\n    // The imported or hidden names are not included in this import\n    // statement. This is because we want to highlight those exactly like\n    // we do for the names in the program.\n    pattern: /((?:\\r?\\n|\\r|^)\\s*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][_a-zA-Z0-9']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n    lookbehind: true,\n    inside: {\n      'keyword': /\\b(?:import|qualified|as|hiding)\\b/\n    }\n  },\n  // These are builtin variables only. Constructors are highlighted later as a constant.\n  'builtin': /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n  // decimal integers and floating point numbers | octal integers | hexadecimal integers\n  'number': /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n  // Most of this is needed because of the meaning of a single '.'.\n  // If it stands alone freely, it is the function composition.\n  // It may also be a separator between a module name and an identifier => no\n  // operator. If it comes together with other special characters it is an\n  // operator too.\n  'operator': /\\s\\.\\s|[-!#$%*+=?&@|~.:<>^\\\\\\/]*\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+|[-!#$%*+=?&@|~.:<>^\\\\\\/]+\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]*|[-!#$%*+=?&@|~:<>^\\\\\\/]+|`([A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n  // In Haskell, nearly everything is a variable, do not highlight these.\n  'hvariable': /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*\\b/,\n  'constant': /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*\\b/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nPrism.languages.hs = Prism.languages.haskell;","Prism.languages.haskell = {\n  comment: {\n    pattern: /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|{-[\\s\\S]*?-})/m,\n    lookbehind: !0\n  },\n  char: /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n  string: {\n    pattern: /\"(?:[^\\\\\"]|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+)|\\\\\\s+\\\\)*\"/,\n    greedy: !0\n  },\n  keyword: /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n  import_statement: {\n    pattern: /((?:\\r?\\n|\\r|^)\\s*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][_a-zA-Z0-9']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n    lookbehind: !0,\n    inside: {\n      keyword: /\\b(?:import|qualified|as|hiding)\\b/\n    }\n  },\n  builtin: /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n  number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n  operator: /\\s\\.\\s|[-!#$%*+=?&@|~.:<>^\\\\\\/]*\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+|[-!#$%*+=?&@|~.:<>^\\\\\\/]+\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]*|[-!#$%*+=?&@|~:<>^\\\\\\/]+|`([A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n  hvariable: /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*\\b/,\n  constant: /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*\\b/,\n  punctuation: /[{}[\\];(),.:]/\n}, Prism.languages.hs = Prism.languages.haskell;","Prism.languages.haxe = Prism.languages.extend('clike', {\n  // Strings can be multi-line\n  'string': {\n    pattern: /([\"'])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        pattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^}]+\\})/,\n        lookbehind: true,\n        inside: {\n          'interpolation': {\n            pattern: /^\\$\\w*/,\n            alias: 'variable' // See rest below\n\n          }\n        }\n      }\n    }\n  },\n  // The final look-ahead prevents highlighting of keywords if expressions such as \"haxe.macro.Expr\"\n  'keyword': /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|from|for|function|if|implements|import|in|inline|interface|macro|new|null|override|public|private|return|static|super|switch|throw|to|try|typedef|using|var|while)(?!\\.)\\b/,\n  'operator': /\\.{3}|\\+\\+?|-[->]?|[=!]=?|&&?|\\|\\|?|<[<=]?|>[>=]?|[*\\/%~^]/\n});\nPrism.languages.insertBefore('haxe', 'class-name', {\n  'regex': {\n    pattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[igmsu]*/,\n    greedy: true\n  }\n});\nPrism.languages.insertBefore('haxe', 'keyword', {\n  'preprocessor': {\n    pattern: /#\\w+/,\n    alias: 'builtin'\n  },\n  'metadata': {\n    pattern: /@:?\\w+/,\n    alias: 'symbol'\n  },\n  'reification': {\n    pattern: /\\$(?:\\w+|(?=\\{))/,\n    alias: 'variable'\n  }\n});\nPrism.languages.haxe['string'].inside['interpolation'].inside.rest = Prism.languages.haxe;\ndelete Prism.languages.haxe['class-name'];","Prism.languages.haxe = Prism.languages.extend(\"clike\", {\n  string: {\n    pattern: /([\"'])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n    greedy: !0,\n    inside: {\n      interpolation: {\n        pattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^}]+\\})/,\n        lookbehind: !0,\n        inside: {\n          interpolation: {\n            pattern: /^\\$\\w*/,\n            alias: \"variable\"\n          }\n        }\n      }\n    }\n  },\n  keyword: /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|from|for|function|if|implements|import|in|inline|interface|macro|new|null|override|public|private|return|static|super|switch|throw|to|try|typedef|using|var|while)(?!\\.)\\b/,\n  operator: /\\.{3}|\\+\\+?|-[->]?|[=!]=?|&&?|\\|\\|?|<[<=]?|>[>=]?|[*\\/%~^]/\n}), Prism.languages.insertBefore(\"haxe\", \"class-name\", {\n  regex: {\n    pattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[igmsu]*/,\n    greedy: !0\n  }\n}), Prism.languages.insertBefore(\"haxe\", \"keyword\", {\n  preprocessor: {\n    pattern: /#\\w+/,\n    alias: \"builtin\"\n  },\n  metadata: {\n    pattern: /@:?\\w+/,\n    alias: \"symbol\"\n  },\n  reification: {\n    pattern: /\\$(?:\\w+|(?=\\{))/,\n    alias: \"variable\"\n  }\n}), Prism.languages.haxe.string.inside.interpolation.inside.rest = Prism.languages.haxe, delete Prism.languages.haxe[\"class-name\"];","Prism.languages.hcl = {\n  'comment': /(?:\\/\\/|#).*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n  'heredoc': {\n    pattern: /<<-?(\\w+)[\\s\\S]*?^\\s*\\1/m,\n    greedy: true,\n    alias: 'string'\n  },\n  'keyword': [{\n    pattern: /(?:resource|data)\\s+(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")(?=\\s+\"[\\w-]+\"\\s+{)/i,\n    inside: {\n      'type': {\n        pattern: /(resource|data|\\s+)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")/i,\n        lookbehind: true,\n        alias: 'variable'\n      }\n    }\n  }, {\n    pattern: /(?:provider|provisioner|variable|output|module|backend)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+(?={)/i,\n    inside: {\n      'type': {\n        pattern: /(provider|provisioner|variable|output|module|backend)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+/i,\n        lookbehind: true,\n        alias: 'variable'\n      }\n    }\n  }, {\n    pattern: /[\\w-]+(?=\\s+{)/\n  }],\n  'property': [/[\\w-\\.]+(?=\\s*=(?!=))/, /\"(?:\\\\[\\s\\S]|[^\\\\\"])+\"(?=\\s*[:=])/],\n  'string': {\n    pattern: /\"(?:[^\\\\$\"]|\\\\[\\s\\S]|\\$(?:(?=\")|\\$+|[^\"${])|\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\})*\"/,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        pattern: /(^|[^$])\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\}/,\n        lookbehind: true,\n        inside: {\n          'type': {\n            pattern: /(\\b(?:terraform|var|self|count|module|path|data|local)\\b\\.)[\\w\\*]+/i,\n            lookbehind: true,\n            alias: 'variable'\n          },\n          'keyword': /\\b(?:terraform|var|self|count|module|path|data|local)\\b/i,\n          'function': /\\w+(?=\\()/,\n          'string': {\n            pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n            greedy: true\n          },\n          'number': /\\b0x[\\da-f]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?/i,\n          'punctuation': /[!\\$#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~?:]/\n        }\n      }\n    }\n  },\n  'number': /\\b0x[\\da-f]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?/i,\n  'boolean': /\\b(?:true|false)\\b/i,\n  'punctuation': /[=\\[\\]{}]/\n};","Prism.languages.hcl = {\n  comment: /(?:\\/\\/|#).*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n  heredoc: {\n    pattern: /<<-?(\\w+)[\\s\\S]*?^\\s*\\1/m,\n    greedy: !0,\n    alias: \"string\"\n  },\n  keyword: [{\n    pattern: /(?:resource|data)\\s+(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")(?=\\s+\"[\\w-]+\"\\s+{)/i,\n    inside: {\n      type: {\n        pattern: /(resource|data|\\s+)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")/i,\n        lookbehind: !0,\n        alias: \"variable\"\n      }\n    }\n  }, {\n    pattern: /(?:provider|provisioner|variable|output|module|backend)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+(?={)/i,\n    inside: {\n      type: {\n        pattern: /(provider|provisioner|variable|output|module|backend)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+/i,\n        lookbehind: !0,\n        alias: \"variable\"\n      }\n    }\n  }, {\n    pattern: /[\\w-]+(?=\\s+{)/\n  }],\n  property: [/[\\w-\\.]+(?=\\s*=(?!=))/, /\"(?:\\\\[\\s\\S]|[^\\\\\"])+\"(?=\\s*[:=])/],\n  string: {\n    pattern: /\"(?:[^\\\\$\"]|\\\\[\\s\\S]|\\$(?:(?=\")|\\$+|[^\"${])|\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\})*\"/,\n    greedy: !0,\n    inside: {\n      interpolation: {\n        pattern: /(^|[^$])\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\}/,\n        lookbehind: !0,\n        inside: {\n          type: {\n            pattern: /(\\b(?:terraform|var|self|count|module|path|data|local)\\b\\.)[\\w\\*]+/i,\n            lookbehind: !0,\n            alias: \"variable\"\n          },\n          keyword: /\\b(?:terraform|var|self|count|module|path|data|local)\\b/i,\n          function: /\\w+(?=\\()/,\n          string: {\n            pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n            greedy: !0\n          },\n          number: /\\b0x[\\da-f]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?/i,\n          punctuation: /[!\\$#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~?:]/\n        }\n      }\n    }\n  },\n  number: /\\b0x[\\da-f]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?/i,\n  boolean: /\\b(?:true|false)\\b/i,\n  punctuation: /[=\\[\\]{}]/\n};","/**\n * Original by Scott Helme.\n *\n * Reference: https://scotthelme.co.uk/hpkp-cheat-sheet/\n */\nPrism.languages.hpkp = {\n  'directive': {\n    pattern: /\\b(?:(?:includeSubDomains|preload|strict)(?: |;)|pin-sha256=\"[a-zA-Z\\d+=/]+\"|(?:max-age|report-uri)=|report-to )/,\n    alias: 'keyword'\n  },\n  'safe': {\n    pattern: /\\d{7,}/,\n    alias: 'selector'\n  },\n  'unsafe': {\n    pattern: /\\d{1,6}/,\n    alias: 'function'\n  }\n};","Prism.languages.hpkp = {\n  directive: {\n    pattern: /\\b(?:(?:includeSubDomains|preload|strict)(?: |;)|pin-sha256=\"[a-zA-Z\\d+=/]+\"|(?:max-age|report-uri)=|report-to )/,\n    alias: \"keyword\"\n  },\n  safe: {\n    pattern: /\\d{7,}/,\n    alias: \"selector\"\n  },\n  unsafe: {\n    pattern: /\\d{1,6}/,\n    alias: \"function\"\n  }\n};","/**\n * Original by Scott Helme.\n *\n * Reference: https://scotthelme.co.uk/hsts-cheat-sheet/\n */\nPrism.languages.hsts = {\n  'directive': {\n    pattern: /\\b(?:max-age=|includeSubDomains|preload)/,\n    alias: 'keyword'\n  },\n  'safe': {\n    pattern: /\\d{8,}/,\n    alias: 'selector'\n  },\n  'unsafe': {\n    pattern: /\\d{1,7}/,\n    alias: 'function'\n  }\n};","Prism.languages.hsts = {\n  directive: {\n    pattern: /\\b(?:max-age=|includeSubDomains|preload)/,\n    alias: \"keyword\"\n  },\n  safe: {\n    pattern: /\\d{8,}/,\n    alias: \"selector\"\n  },\n  unsafe: {\n    pattern: /\\d{1,7}/,\n    alias: \"function\"\n  }\n};","require(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\n(function (Prism) {\n  Prism.languages.http = {\n    'request-line': {\n      pattern: /^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\s(?:https?:\\/\\/|\\/)\\S+\\sHTTP\\/[0-9.]+/m,\n      inside: {\n        // HTTP Verb\n        'property': /^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\b/,\n        // Path or query argument\n        'attr-name': /:\\w+/\n      }\n    },\n    'response-status': {\n      pattern: /^HTTP\\/1.[01] \\d+.*/m,\n      inside: {\n        // Status, e.g. 200 OK\n        'property': {\n          pattern: /(^HTTP\\/1.[01] )\\d+.*/i,\n          lookbehind: true\n        }\n      }\n    },\n    // HTTP header name\n    'header-name': {\n      pattern: /^[\\w-]+:(?=.)/m,\n      alias: 'keyword'\n    }\n  }; // Create a mapping of Content-Type headers to language definitions\n\n  var langs = Prism.languages;\n  var httpLanguages = {\n    'application/javascript': langs.javascript,\n    'application/json': langs.json || langs.javascript,\n    'application/xml': langs.xml,\n    'text/xml': langs.xml,\n    'text/html': langs.html,\n    'text/css': langs.css\n  }; // Declare which types can also be suffixes\n\n  var suffixTypes = {\n    'application/json': true,\n    'application/xml': true\n  };\n  /**\n   * Returns a pattern for the given content type which matches it and any type which has it as a suffix.\n   *\n   * @param {string} contentType\n   * @returns {string}\n   */\n\n  function getSuffixPattern(contentType) {\n    var suffix = contentType.replace(/^[a-z]+\\//, '');\n    var suffixPattern = '\\\\w+/(?:[\\\\w.-]+\\\\+)+' + suffix + '(?![+\\\\w.-])';\n    return '(?:' + contentType + '|' + suffixPattern + ')';\n  } // Insert each content type parser that has its associated language\n  // currently loaded.\n\n\n  var options;\n\n  for (var contentType in httpLanguages) {\n    if (httpLanguages[contentType]) {\n      options = options || {};\n      var pattern = suffixTypes[contentType] ? getSuffixPattern(contentType) : contentType;\n      options[contentType] = {\n        pattern: RegExp('(content-type:\\\\s*' + pattern + '[\\\\s\\\\S]*?)(?:\\\\r?\\\\n|\\\\r){2}[\\\\s\\\\S]*', 'i'),\n        lookbehind: true,\n        inside: {\n          rest: httpLanguages[contentType]\n        }\n      };\n    }\n  }\n\n  if (options) {\n    Prism.languages.insertBefore('http', 'header-name', options);\n  }\n})(Prism);","require(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\n!function (t) {\n  t.languages.http = {\n    \"request-line\": {\n      pattern: /^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\s(?:https?:\\/\\/|\\/)\\S+\\sHTTP\\/[0-9.]+/m,\n      inside: {\n        property: /^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\b/,\n        \"attr-name\": /:\\w+/\n      }\n    },\n    \"response-status\": {\n      pattern: /^HTTP\\/1.[01] \\d+.*/m,\n      inside: {\n        property: {\n          pattern: /(^HTTP\\/1.[01] )\\d+.*/i,\n          lookbehind: !0\n        }\n      }\n    },\n    \"header-name\": {\n      pattern: /^[\\w-]+:(?=.)/m,\n      alias: \"keyword\"\n    }\n  };\n  var a,\n      e,\n      n,\n      i = t.languages,\n      s = {\n    \"application/javascript\": i.javascript,\n    \"application/json\": i.json || i.javascript,\n    \"application/xml\": i.xml,\n    \"text/xml\": i.xml,\n    \"text/html\": i.html,\n    \"text/css\": i.css\n  },\n      p = {\n    \"application/json\": !0,\n    \"application/xml\": !0\n  };\n\n  for (var r in s) {\n    if (s[r]) {\n      a = a || {};\n      var T = p[r] ? (void 0, n = (e = r).replace(/^[a-z]+\\//, \"\"), \"(?:\" + e + \"|\\\\w+/(?:[\\\\w.-]+\\\\+)+\" + n + \"(?![+\\\\w.-]))\") : r;\n      a[r] = {\n        pattern: RegExp(\"(content-type:\\\\s*\" + T + \"[\\\\s\\\\S]*?)(?:\\\\r?\\\\n|\\\\r){2}[\\\\s\\\\S]*\", \"i\"),\n        lookbehind: !0,\n        inside: {\n          rest: s[r]\n        }\n      };\n    }\n  }\n\n  a && t.languages.insertBefore(\"http\", \"header-name\", a);\n}(Prism);","// according to the offical reference (EN)\n// https://ichigojam.net/IchigoJam-en.html\nPrism.languages.ichigojam = {\n  'comment': /(?:\\B'|REM)(?:[^\\n\\r]*)/i,\n  'string': {\n    pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^_ +\\-.A-Z\\d])*\"/i,\n    greedy: true\n  },\n  'number': /\\B#[0-9A-F]+|\\B`[01]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n  'keyword': /\\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GSB|GOTO|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|RIGHT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\\$|\\b)/i,\n  'function': /\\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\\$|\\b)/i,\n  'label': /(?:\\B@[^\\s]+)/i,\n  'operator': /<[=>]?|>=?|\\|\\||&&|[+\\-*\\/=|&^~!]|\\b(?:AND|NOT|OR)\\b/i,\n  'punctuation': /[\\[,;:()\\]]/\n};","Prism.languages.ichigojam = {\n  comment: /(?:\\B'|REM)(?:[^\\n\\r]*)/i,\n  string: {\n    pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^_ +\\-.A-Z\\d])*\"/i,\n    greedy: !0\n  },\n  number: /\\B#[0-9A-F]+|\\B`[01]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n  keyword: /\\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GSB|GOTO|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|RIGHT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\\$|\\b)/i,\n  function: /\\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\\$|\\b)/i,\n  label: /(?:\\B@[^\\s]+)/i,\n  operator: /<[=>]?|>=?|\\|\\||&&|[+\\-*\\/=|&^~!]|\\b(?:AND|NOT|OR)\\b/i,\n  punctuation: /[\\[,;:()\\]]/\n};","Prism.languages.icon = {\n  'comment': /#.*/,\n  'string': {\n    pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n_]|\\\\.|_(?!\\1)(?:\\r\\n|[\\s\\S]))*\\1/,\n    greedy: true\n  },\n  'number': /\\b(?:\\d+r[a-z\\d]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b|\\.\\d+\\b/i,\n  'builtin-keyword': {\n    pattern: /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\\b/,\n    alias: 'variable'\n  },\n  'directive': {\n    pattern: /\\$\\w+/,\n    alias: 'builtin'\n  },\n  'keyword': /\\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\\b/,\n  'function': /(?!\\d)\\w+(?=\\s*[({]|\\s*!\\s*\\[)/,\n  'operator': /[+-]:(?!=)|(?:[\\/?@^%&]|\\+\\+?|--?|==?=?|~==?=?|\\*\\*?|\\|\\|\\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\\\|~]/,\n  'punctuation': /[\\[\\](){},;]/\n};","Prism.languages.icon = {\n  comment: /#.*/,\n  string: {\n    pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n_]|\\\\.|_(?!\\1)(?:\\r\\n|[\\s\\S]))*\\1/,\n    greedy: !0\n  },\n  number: /\\b(?:\\d+r[a-z\\d]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b|\\.\\d+\\b/i,\n  \"builtin-keyword\": {\n    pattern: /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\\b/,\n    alias: \"variable\"\n  },\n  directive: {\n    pattern: /\\$\\w+/,\n    alias: \"builtin\"\n  },\n  keyword: /\\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\\b/,\n  function: /(?!\\d)\\w+(?=\\s*[({]|\\s*!\\s*\\[)/,\n  operator: /[+-]:(?!=)|(?:[\\/?@^%&]|\\+\\+?|--?|==?=?|~==?=?|\\*\\*?|\\|\\|\\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\\\|~]/,\n  punctuation: /[\\[\\](){},;]/\n};","Prism.languages.inform7 = {\n  'string': {\n    pattern: /\"[^\"]*\"/,\n    inside: {\n      'substitution': {\n        pattern: /\\[[^\\]]+\\]/,\n        inside: {\n          'delimiter': {\n            pattern: /\\[|\\]/,\n            alias: 'punctuation' // See rest below\n\n          }\n        }\n      }\n    }\n  },\n  'comment': {\n    pattern: /\\[[^\\]]+\\]/,\n    greedy: true\n  },\n  'title': {\n    pattern: /^[ \\t]*(?:volume|book|part(?! of)|chapter|section|table)\\b.+/im,\n    alias: 'important'\n  },\n  'number': {\n    pattern: /(^|[^-])(?:\\b\\d+(?:\\.\\d+)?(?:\\^\\d+)?\\w*|\\b(?:one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve))\\b(?!-)/i,\n    lookbehind: true\n  },\n  'verb': {\n    pattern: /(^|[^-])\\b(?:applying to|are|attacking|answering|asking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:s|ing)?|consulting|contain(?:s|ing)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:ve|s|ving)|hold(?:s|ing)?|impl(?:y|ies)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:s|ing)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:s|ing)?|setting|showing|singing|sleeping|smelling|squeezing|switching|support(?:s|ing)?|swearing|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:s|ing)?|var(?:y|ies|ying)|waiting|waking|waving|wear(?:s|ing)?)\\b(?!-)/i,\n    lookbehind: true,\n    alias: 'operator'\n  },\n  'keyword': {\n    pattern: /(^|[^-])\\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|unless|the story)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\\b(?!-)/i,\n    lookbehind: true\n  },\n  'property': {\n    pattern: /(^|[^-])\\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: on| off)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\\b(?!-)/i,\n    lookbehind: true,\n    alias: 'symbol'\n  },\n  'position': {\n    pattern: /(^|[^-])\\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\\b(?!-)/i,\n    lookbehind: true,\n    alias: 'keyword'\n  },\n  'type': {\n    pattern: /(^|[^-])\\b(?:actions?|activit(?:y|ies)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\\b(?!-)/i,\n    lookbehind: true,\n    alias: 'variable'\n  },\n  'punctuation': /[.,:;(){}]/\n};\nPrism.languages.inform7['string'].inside['substitution'].inside.rest = Prism.languages.inform7; // We don't want the remaining text in the substitution to be highlighted as the string.\n\nPrism.languages.inform7['string'].inside['substitution'].inside.rest.text = {\n  pattern: /\\S(?:\\s*\\S)*/,\n  alias: 'comment'\n};","Prism.languages.inform7 = {\n  string: {\n    pattern: /\"[^\"]*\"/,\n    inside: {\n      substitution: {\n        pattern: /\\[[^\\]]+\\]/,\n        inside: {\n          delimiter: {\n            pattern: /\\[|\\]/,\n            alias: \"punctuation\"\n          }\n        }\n      }\n    }\n  },\n  comment: {\n    pattern: /\\[[^\\]]+\\]/,\n    greedy: !0\n  },\n  title: {\n    pattern: /^[ \\t]*(?:volume|book|part(?! of)|chapter|section|table)\\b.+/im,\n    alias: \"important\"\n  },\n  number: {\n    pattern: /(^|[^-])(?:\\b\\d+(?:\\.\\d+)?(?:\\^\\d+)?\\w*|\\b(?:one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve))\\b(?!-)/i,\n    lookbehind: !0\n  },\n  verb: {\n    pattern: /(^|[^-])\\b(?:applying to|are|attacking|answering|asking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:s|ing)?|consulting|contain(?:s|ing)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:ve|s|ving)|hold(?:s|ing)?|impl(?:y|ies)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:s|ing)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:s|ing)?|setting|showing|singing|sleeping|smelling|squeezing|switching|support(?:s|ing)?|swearing|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:s|ing)?|var(?:y|ies|ying)|waiting|waking|waving|wear(?:s|ing)?)\\b(?!-)/i,\n    lookbehind: !0,\n    alias: \"operator\"\n  },\n  keyword: {\n    pattern: /(^|[^-])\\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|unless|the story)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\\b(?!-)/i,\n    lookbehind: !0\n  },\n  property: {\n    pattern: /(^|[^-])\\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: on| off)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\\b(?!-)/i,\n    lookbehind: !0,\n    alias: \"symbol\"\n  },\n  position: {\n    pattern: /(^|[^-])\\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\\b(?!-)/i,\n    lookbehind: !0,\n    alias: \"keyword\"\n  },\n  type: {\n    pattern: /(^|[^-])\\b(?:actions?|activit(?:y|ies)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\\b(?!-)/i,\n    lookbehind: !0,\n    alias: \"variable\"\n  },\n  punctuation: /[.,:;(){}]/\n}, Prism.languages.inform7.string.inside.substitution.inside.rest = Prism.languages.inform7, Prism.languages.inform7.string.inside.substitution.inside.rest.text = {\n  pattern: /\\S(?:\\s*\\S)*/,\n  alias: \"comment\"\n};","Prism.languages.ini = {\n  'comment': /^[ \\t]*[;#].*$/m,\n  'selector': /^[ \\t]*\\[.*?\\]/m,\n  'constant': /^[ \\t]*[^\\s=]+?(?=[ \\t]*=)/m,\n  'attr-value': {\n    pattern: /=.*/,\n    inside: {\n      'punctuation': /^[=]/\n    }\n  }\n};","Prism.languages.ini = {\n  comment: /^[ \\t]*[;#].*$/m,\n  selector: /^[ \\t]*\\[.*?\\]/m,\n  constant: /^[ \\t]*[^\\s=]+?(?=[ \\t]*=)/m,\n  \"attr-value\": {\n    pattern: /=.*/,\n    inside: {\n      punctuation: /^[=]/\n    }\n  }\n};","Prism.languages.io = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true\n  }],\n  'triple-quoted-string': {\n    pattern: /\"\"\"(?:\\\\[\\s\\S]|(?!\"\"\")[^\\\\])*\"\"\"/,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  'keyword': /\\b(?:activate|activeCoroCount|asString|block|break|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getSlot|getEnvironmentVariable|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|call|try|type|uniqueId|updateSlot|wait|while|write|yield)\\b/,\n  'builtin': /\\b(?:Array|AudioDevice|AudioMixer|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Regex|SGML|SGMLElement|SGMLParser|SQLite|Server|Sequence|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink|Random|BigNum|Sequence)\\b/,\n  'boolean': /\\b(?:true|false|nil)\\b/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e-?\\d+)?/i,\n  'operator': /[=!*/%+-^&|]=|>>?=?|<<?=?|:?:?=|\\+\\+?|--?|\\*\\*?|\\/\\/?|%|\\|\\|?|&&?|(\\b(?:return|and|or|not)\\b)|@@?|\\?\\??|\\.\\./,\n  'punctuation': /[{}[\\];(),.:]/\n};","Prism.languages.io = {\n  comment: [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: !0\n  }],\n  \"triple-quoted-string\": {\n    pattern: /\"\"\"(?:\\\\[\\s\\S]|(?!\"\"\")[^\\\\])*\"\"\"/,\n    greedy: !0,\n    alias: \"string\"\n  },\n  string: {\n    pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: !0\n  },\n  keyword: /\\b(?:activate|activeCoroCount|asString|block|break|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getSlot|getEnvironmentVariable|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|call|try|type|uniqueId|updateSlot|wait|while|write|yield)\\b/,\n  builtin: /\\b(?:Array|AudioDevice|AudioMixer|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Regex|SGML|SGMLElement|SGMLParser|SQLite|Server|Sequence|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink|Random|BigNum|Sequence)\\b/,\n  boolean: /\\b(?:true|false|nil)\\b/,\n  number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e-?\\d+)?/i,\n  operator: /[=!*/%+-^&|]=|>>?=?|<<?=?|:?:?=|\\+\\+?|--?|\\*\\*?|\\/\\/?|%|\\|\\|?|&&?|(\\b(?:return|and|or|not)\\b)|@@?|\\?\\??|\\.\\./,\n  punctuation: /[{}[\\];(),.:]/\n};","Prism.languages.j = {\n  'comment': /\\bNB\\..*/,\n  'string': {\n    pattern: /'(?:''|[^'\\r\\n])*'/,\n    greedy: true\n  },\n  'keyword': /\\b(?:(?:adverb|conjunction|CR|def|define|dyad|LF|monad|noun|verb)\\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\\w+|goto_\\w+|if|label_\\w+|return|select|throw|try|while|whilst)\\.)/,\n  'verb': {\n    // Negative look-ahead prevents bad highlighting\n    // of ^: ;. =. =: !. !:\n    pattern: /(?!\\^:|;\\.|[=!][.:])(?:\\{(?:\\.|::?)?|p(?:\\.\\.?|:)|[=!\\]]|[<>+*\\-%$|,#][.:]?|[?^]\\.?|[;\\[]:?|[~}\"i][.:]|[ACeEIjLor]\\.|(?:[_\\/\\\\qsux]|_?\\d):)/,\n    alias: 'keyword'\n  },\n  'number': /\\b_?(?:(?!\\d:)\\d+(?:\\.\\d+)?(?:(?:[ejpx]|ad|ar)_?\\d+(?:\\.\\d+)?)*(?:b_?[\\da-z]+(?:\\.[\\da-z]+)?)?|_(?!\\.))/,\n  'adverb': {\n    pattern: /[~}]|[\\/\\\\]\\.?|[bfM]\\.|t[.:]/,\n    alias: 'builtin'\n  },\n  'operator': /[=a][.:]|_\\./,\n  'conjunction': {\n    pattern: /&(?:\\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\\.|`:?|[\\^LS]:|\"/,\n    alias: 'variable'\n  },\n  'punctuation': /[()]/\n};","Prism.languages.j = {\n  comment: /\\bNB\\..*/,\n  string: {\n    pattern: /'(?:''|[^'\\r\\n])*'/,\n    greedy: !0\n  },\n  keyword: /\\b(?:(?:adverb|conjunction|CR|def|define|dyad|LF|monad|noun|verb)\\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\\w+|goto_\\w+|if|label_\\w+|return|select|throw|try|while|whilst)\\.)/,\n  verb: {\n    pattern: /(?!\\^:|;\\.|[=!][.:])(?:\\{(?:\\.|::?)?|p(?:\\.\\.?|:)|[=!\\]]|[<>+*\\-%$|,#][.:]?|[?^]\\.?|[;\\[]:?|[~}\"i][.:]|[ACeEIjLor]\\.|(?:[_\\/\\\\qsux]|_?\\d):)/,\n    alias: \"keyword\"\n  },\n  number: /\\b_?(?:(?!\\d:)\\d+(?:\\.\\d+)?(?:(?:[ejpx]|ad|ar)_?\\d+(?:\\.\\d+)?)*(?:b_?[\\da-z]+(?:\\.[\\da-z]+)?)?|_(?!\\.))/,\n  adverb: {\n    pattern: /[~}]|[\\/\\\\]\\.?|[bfM]\\.|t[.:]/,\n    alias: \"builtin\"\n  },\n  operator: /[=a][.:]|_\\./,\n  conjunction: {\n    pattern: /&(?:\\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\\.|`:?|[\\^LS]:|\"/,\n    alias: \"variable\"\n  },\n  punctuation: /[()]/\n};","(function (Prism) {\n  var keywords = /\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while|var|null|exports|module|open|opens|provides|requires|to|transitive|uses|with)\\b/; // based on the java naming conventions\n\n  var className = /\\b[A-Z](?:\\w*[a-z]\\w*)?\\b/;\n  Prism.languages.java = Prism.languages.extend('clike', {\n    'class-name': [className, // variables and parameters\n    // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n    /\\b[A-Z]\\w*(?=\\s+\\w+\\s*[;,=())])/],\n    'keyword': keywords,\n    'function': [Prism.languages.clike.function, {\n      pattern: /(\\:\\:)[a-z_]\\w*/,\n      lookbehind: true\n    }],\n    'number': /\\b0b[01][01_]*L?\\b|\\b0x[\\da-f_]*\\.?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*\\.?[\\d_]*|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n    'operator': {\n      pattern: /(^|[^.])(?:<<=?|>>>?=?|->|([-+&|])\\2|[?:~]|[-+*/%&|^!=<>]=?)/m,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('java', 'class-name', {\n    'annotation': {\n      alias: 'punctuation',\n      pattern: /(^|[^.])@\\w+/,\n      lookbehind: true\n    },\n    'namespace': {\n      pattern: /(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)[a-z]\\w*(\\.[a-z]\\w*)+/,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\./\n      }\n    },\n    'generics': {\n      pattern: /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n      inside: {\n        'class-name': className,\n        'keyword': keywords,\n        'punctuation': /[<>(),.:]/,\n        'operator': /[?&|]/\n      }\n    }\n  });\n})(Prism);","!function (e) {\n  var t = /\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while|var|null|exports|module|open|opens|provides|requires|to|transitive|uses|with)\\b/,\n      a = /\\b[A-Z](?:\\w*[a-z]\\w*)?\\b/;\n  e.languages.java = e.languages.extend(\"clike\", {\n    \"class-name\": [a, /\\b[A-Z]\\w*(?=\\s+\\w+\\s*[;,=())])/],\n    keyword: t,\n    function: [e.languages.clike.function, {\n      pattern: /(\\:\\:)[a-z_]\\w*/,\n      lookbehind: !0\n    }],\n    number: /\\b0b[01][01_]*L?\\b|\\b0x[\\da-f_]*\\.?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*\\.?[\\d_]*|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n    operator: {\n      pattern: /(^|[^.])(?:<<=?|>>>?=?|->|([-+&|])\\2|[?:~]|[-+*/%&|^!=<>]=?)/m,\n      lookbehind: !0\n    }\n  }), e.languages.insertBefore(\"java\", \"class-name\", {\n    annotation: {\n      alias: \"punctuation\",\n      pattern: /(^|[^.])@\\w+/,\n      lookbehind: !0\n    },\n    namespace: {\n      pattern: /(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)[a-z]\\w*(\\.[a-z]\\w*)+/,\n      lookbehind: !0,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    generics: {\n      pattern: /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n      inside: {\n        \"class-name\": a,\n        keyword: t,\n        punctuation: /[<>(),.:]/,\n        operator: /[?&|]/\n      }\n    }\n  });\n}(Prism);","(function (Prism) {\n  var codeLines = {\n    'code': {\n      pattern: /(^(\\s*(?:\\*\\s*)*)).*[^*\\s].+$/m,\n      lookbehind: true,\n      inside: Prism.languages.java,\n      alias: 'language-java'\n    }\n  };\n  Prism.languages.javadoc = Prism.languages.extend('javadoclike', {});\n  Prism.languages.insertBefore('javadoc', 'keyword', {\n    'class-name': [{\n      pattern: /(@(?:exception|throws|see|link|linkplain|value)\\s+(?:[a-z\\d]+\\.)*)[A-Z](?:\\w*[a-z]\\w*)?(?:\\.[A-Z](?:\\w*[a-z]\\w*)?)*/,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\./\n      }\n    }, {\n      // @param <T> the first generic type parameter\n      pattern: /(@param\\s+)<[A-Z]\\w*>/,\n      lookbehind: true,\n      inside: {\n        'punctuation': /[.<>]/\n      }\n    }],\n    'namespace': {\n      pattern: /(@(?:exception|throws|see|link|linkplain)\\s+)(?:[a-z\\d]+\\.)+/,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\./\n      }\n    },\n    'code-section': [{\n      pattern: /(\\{@code\\s+)(?:[^{}]|\\{[^{}]*\\})+?(?=\\s*\\})/,\n      lookbehind: true,\n      inside: codeLines\n    }, {\n      pattern: /(<(code|tt)>\\s*)[\\s\\S]+?(?=\\s*<\\/\\2>)/,\n      lookbehind: true,\n      inside: codeLines\n    }],\n    'tag': Prism.languages.markup.tag\n  });\n  Prism.languages.javadoclike.addSupport('java', Prism.languages.javadoc);\n})(Prism);","!function (a) {\n  var e = {\n    code: {\n      pattern: /(^(\\s*(?:\\*\\s*)*)).*[^*\\s].+$/m,\n      lookbehind: !0,\n      inside: a.languages.java,\n      alias: \"language-java\"\n    }\n  };\n  a.languages.javadoc = a.languages.extend(\"javadoclike\", {}), a.languages.insertBefore(\"javadoc\", \"keyword\", {\n    \"class-name\": [{\n      pattern: /(@(?:exception|throws|see|link|linkplain|value)\\s+(?:[a-z\\d]+\\.)*)[A-Z](?:\\w*[a-z]\\w*)?(?:\\.[A-Z](?:\\w*[a-z]\\w*)?)*/,\n      lookbehind: !0,\n      inside: {\n        punctuation: /\\./\n      }\n    }, {\n      pattern: /(@param\\s+)<[A-Z]\\w*>/,\n      lookbehind: !0,\n      inside: {\n        punctuation: /[.<>]/\n      }\n    }],\n    namespace: {\n      pattern: /(@(?:exception|throws|see|link|linkplain)\\s+)(?:[a-z\\d]+\\.)+/,\n      lookbehind: !0,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    \"code-section\": [{\n      pattern: /(\\{@code\\s+)(?:[^{}]|\\{[^{}]*\\})+?(?=\\s*\\})/,\n      lookbehind: !0,\n      inside: e\n    }, {\n      pattern: /(<(code|tt)>\\s*)[\\s\\S]+?(?=\\s*<\\/\\2>)/,\n      lookbehind: !0,\n      inside: e\n    }],\n    tag: a.languages.markup.tag\n  }), a.languages.javadoclike.addSupport(\"java\", a.languages.javadoc);\n}(Prism);","require(\"core-js/modules/es6.regexp.constructor\");\n\n(function (Prism) {\n  var javaDocLike = Prism.languages.javadoclike = {\n    'parameter': {\n      pattern: /(^\\s*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:param|arg|arguments)\\s+)\\w+/m,\n      lookbehind: true\n    },\n    'keyword': {\n      // keywords are the first word in a line preceded be an `@` or surrounded by curly braces.\n      // @word, {@word}\n      pattern: /(^\\s*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\n      lookbehind: true\n    },\n    'punctuation': /[{}]/\n  };\n  /**\n   * Adds doc comment support to the given language and calls a given callback on each doc comment pattern.\n   *\n   * @param {string} lang the language add doc comment support to.\n   * @param {(pattern: {inside: {rest: undefined}}) => void} callback the function called with each doc comment pattern as argument.\n   */\n\n  function docCommentSupport(lang, callback) {\n    var tokenName = 'doc-comment';\n    var grammar = Prism.languages[lang];\n\n    if (!grammar) {\n      return;\n    }\n\n    var token = grammar[tokenName];\n\n    if (!token) {\n      // add doc comment: /** */\n      var definition = {};\n      definition[tokenName] = {\n        pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\n        alias: 'comment'\n      };\n      grammar = Prism.languages.insertBefore(lang, 'comment', definition);\n      token = grammar[tokenName];\n    }\n\n    if (token instanceof RegExp) {\n      // convert regex to object\n      token = grammar[tokenName] = {\n        pattern: token\n      };\n    }\n\n    if (Array.isArray(token)) {\n      for (var i = 0, l = token.length; i < l; i++) {\n        if (token[i] instanceof RegExp) {\n          token[i] = {\n            pattern: token[i]\n          };\n        }\n\n        callback(token[i]);\n      }\n    } else {\n      callback(token);\n    }\n  }\n  /**\n   * Adds doc-comment support to the given languages for the given documentation language.\n   *\n   * @param {string[]|string} languages\n   * @param {Object} docLanguage\n   */\n\n\n  function addSupport(languages, docLanguage) {\n    if (typeof languages === 'string') {\n      languages = [languages];\n    }\n\n    languages.forEach(function (lang) {\n      docCommentSupport(lang, function (pattern) {\n        if (!pattern.inside) {\n          pattern.inside = {};\n        }\n\n        pattern.inside.rest = docLanguage;\n      });\n    });\n  }\n\n  Object.defineProperty(javaDocLike, 'addSupport', {\n    value: addSupport\n  });\n  javaDocLike.addSupport(['java', 'javascript', 'php'], javaDocLike);\n})(Prism);","require(\"core-js/modules/es6.regexp.constructor\");\n\n!function (p) {\n  var a = p.languages.javadoclike = {\n    parameter: {\n      pattern: /(^\\s*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:param|arg|arguments)\\s+)\\w+/m,\n      lookbehind: !0\n    },\n    keyword: {\n      pattern: /(^\\s*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\n      lookbehind: !0\n    },\n    punctuation: /[{}]/\n  };\n  Object.defineProperty(a, \"addSupport\", {\n    value: function value(a, e) {\n      \"string\" == typeof a && (a = [a]), a.forEach(function (a) {\n        !function (a, e) {\n          var n = \"doc-comment\",\n              t = p.languages[a];\n\n          if (t) {\n            var r = t[n];\n\n            if (!r) {\n              var i = {\n                \"doc-comment\": {\n                  pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\n                  alias: \"comment\"\n                }\n              };\n              r = (t = p.languages.insertBefore(a, \"comment\", i))[n];\n            }\n\n            if (r instanceof RegExp && (r = t[n] = {\n              pattern: r\n            }), Array.isArray(r)) for (var o = 0, s = r.length; o < s; o++) {\n              r[o] instanceof RegExp && (r[o] = {\n                pattern: r[o]\n              }), e(r[o]);\n            } else e(r);\n          }\n        }(a, function (a) {\n          a.inside || (a.inside = {}), a.inside.rest = e;\n        });\n      });\n    }\n  }), a.addSupport([\"java\", \"javascript\", \"php\"], a);\n}(Prism);","Prism.languages.javascript = Prism.languages.extend('clike', {\n  'class-name': [Prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.])\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  'number': /\\b(?:(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+)n?|\\d+n|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'operator': /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n});\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n    lookbehind: true,\n    greedy: true\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\${[^}]+}|[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        pattern: /\\${[^}]+}/,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\${|}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  }\n});\n\nif (Prism.languages.markup) {\n  Prism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;","Prism.languages.javascript = Prism.languages.extend(\"clike\", {\n  \"class-name\": [Prism.languages.clike[\"class-name\"], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n    lookbehind: !0\n  }],\n  keyword: [{\n    pattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^.])\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: !0\n  }],\n  number: /\\b(?:(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+)n?|\\d+n|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n  function: /[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  operator: /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n}), Prism.languages.javascript[\"class-name\"][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/, Prism.languages.insertBefore(\"javascript\", \"keyword\", {\n  regex: {\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n    lookbehind: !0,\n    greedy: !0\n  },\n  \"function-variable\": {\n    pattern: /[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n    alias: \"function\"\n  },\n  parameter: [{\n    pattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n    lookbehind: !0,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n    lookbehind: !0,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n    lookbehind: !0,\n    inside: Prism.languages.javascript\n  }],\n  constant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n}), Prism.languages.insertBefore(\"javascript\", \"string\", {\n  \"template-string\": {\n    pattern: /`(?:\\\\[\\s\\S]|\\${[^}]+}|[^\\\\`])*`/,\n    greedy: !0,\n    inside: {\n      interpolation: {\n        pattern: /\\${[^}]+}/,\n        inside: {\n          \"interpolation-punctuation\": {\n            pattern: /^\\${|}$/,\n            alias: \"punctuation\"\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      string: /[\\s\\S]+/\n    }\n  }\n}), Prism.languages.markup && Prism.languages.markup.tag.addInlined(\"script\", \"javascript\"), Prism.languages.js = Prism.languages.javascript;","Prism.languages.javastacktrace = {\n  // java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n  // Caused by: java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n  // Caused by: com.example.myproject.MyProjectServletException\n  // Caused by: MidLevelException: LowLevelException\n  // Suppressed: Resource$CloseFailException: Resource ID = 0\n  'summary': {\n    pattern: /^[\\t ]*(?:(?:Caused by:|Suppressed:|Exception in thread \"[^\"]*\")[\\t ]+)?[\\w$.]+(?:\\:.*)?$/m,\n    inside: {\n      'keyword': {\n        pattern: /^(\\s*)(?:(?:Caused by|Suppressed)(?=:)|Exception in thread)/m,\n        lookbehind: true\n      },\n      // the current thread if the summary starts with 'Exception in thread'\n      'string': {\n        pattern: /^(\\s*)\"[^\"]*\"/,\n        lookbehind: true\n      },\n      'exceptions': {\n        pattern: /^(:?\\s*)[\\w$.]+(?=:|$)/,\n        lookbehind: true,\n        inside: {\n          'class-name': /[\\w$]+(?=$|:)/,\n          'namespace': /[a-z]\\w*/,\n          'punctuation': /[.:]/\n        }\n      },\n      'message': {\n        pattern: /(:\\s*)\\S.*/,\n        lookbehind: true,\n        alias: 'string'\n      },\n      'punctuation': /[:]/\n    }\n  },\n  // at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166)\n  // at org.hsqldb.jdbc.Util.throwError(Unknown Source) here could be some notes\n  // at Util.<init>(Unknown Source)\n  'stack-frame': {\n    pattern: /^[\\t ]*at [\\w$.]+(?:<init>)?\\([^()]*\\)/m,\n    inside: {\n      'keyword': {\n        pattern: /^(\\s*)at/,\n        lookbehind: true\n      },\n      'source': [// (Main.java:15)\n      // (Main.scala:15)\n      {\n        pattern: /(\\()\\w+.\\w+:\\d+(?=\\))/,\n        lookbehind: true,\n        inside: {\n          'file': /^\\w+\\.\\w+/,\n          'punctuation': /:/,\n          'line-number': {\n            pattern: /\\d+/,\n            alias: 'number'\n          }\n        }\n      }, // (Unknown Source)\n      // (Native Method)\n      // (...something...)\n      {\n        pattern: /(\\()[^()]*(?=\\))/,\n        lookbehind: true,\n        inside: {\n          'keyword': /^(?:Unknown Source|Native Method)$/\n        }\n      }],\n      'class-name': /[\\w$]+(?=\\.(?:<init>|[\\w$]+)\\()/,\n      'function': /(?:<init>|[\\w$]+)(?=\\()/,\n      'namespace': /[a-z]\\w*/,\n      'punctuation': /[.()]/\n    }\n  },\n  // ... 32 more\n  // ... 32 common frames omitted\n  'more': {\n    pattern: /^[\\t ]*\\.{3} \\d+ [a-z]+(?: [a-z]+)*/m,\n    inside: {\n      'punctuation': /\\.{3}/,\n      'number': /\\d+/,\n      'keyword': /\\b[a-z]+(?: [a-z]+)*\\b/\n    }\n  }\n};","Prism.languages.javastacktrace = {\n  summary: {\n    pattern: /^[\\t ]*(?:(?:Caused by:|Suppressed:|Exception in thread \"[^\"]*\")[\\t ]+)?[\\w$.]+(?:\\:.*)?$/m,\n    inside: {\n      keyword: {\n        pattern: /^(\\s*)(?:(?:Caused by|Suppressed)(?=:)|Exception in thread)/m,\n        lookbehind: !0\n      },\n      string: {\n        pattern: /^(\\s*)\"[^\"]*\"/,\n        lookbehind: !0\n      },\n      exceptions: {\n        pattern: /^(:?\\s*)[\\w$.]+(?=:|$)/,\n        lookbehind: !0,\n        inside: {\n          \"class-name\": /[\\w$]+(?=$|:)/,\n          namespace: /[a-z]\\w*/,\n          punctuation: /[.:]/\n        }\n      },\n      message: {\n        pattern: /(:\\s*)\\S.*/,\n        lookbehind: !0,\n        alias: \"string\"\n      },\n      punctuation: /[:]/\n    }\n  },\n  \"stack-frame\": {\n    pattern: /^[\\t ]*at [\\w$.]+(?:<init>)?\\([^()]*\\)/m,\n    inside: {\n      keyword: {\n        pattern: /^(\\s*)at/,\n        lookbehind: !0\n      },\n      source: [{\n        pattern: /(\\()\\w+.\\w+:\\d+(?=\\))/,\n        lookbehind: !0,\n        inside: {\n          file: /^\\w+\\.\\w+/,\n          punctuation: /:/,\n          \"line-number\": {\n            pattern: /\\d+/,\n            alias: \"number\"\n          }\n        }\n      }, {\n        pattern: /(\\()[^()]*(?=\\))/,\n        lookbehind: !0,\n        inside: {\n          keyword: /^(?:Unknown Source|Native Method)$/\n        }\n      }],\n      \"class-name\": /[\\w$]+(?=\\.(?:<init>|[\\w$]+)\\()/,\n      function: /(?:<init>|[\\w$]+)(?=\\()/,\n      namespace: /[a-z]\\w*/,\n      punctuation: /[.()]/\n    }\n  },\n  more: {\n    pattern: /^[\\t ]*\\.{3} \\d+ [a-z]+(?: [a-z]+)*/m,\n    inside: {\n      punctuation: /\\.{3}/,\n      number: /\\d+/,\n      keyword: /\\b[a-z]+(?: [a-z]+)*\\b/\n    }\n  }\n};","Prism.languages.jolie = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:include|define|is_defined|undef|main|init|outputPort|inputPort|Location|Protocol|Interfaces|RequestResponse|OneWay|type|interface|extender|throws|cset|csets|forward|Aggregates|Redirects|embedded|courier|execution|sequential|concurrent|single|scope|install|throw|comp|cH|default|global|linkIn|linkOut|synchronized|this|new|for|if|else|while|in|Jolie|Java|Javascript|nullProcess|spawn|constants|with|provide|until|exit|foreach|instanceof|over|service)\\b/,\n  'builtin': /\\b(?:undefined|string|int|void|long|Byte|bool|double|float|char|any)\\b/,\n  'number': /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?l?/i,\n  'operator': /-[-=>]?|\\+[+=]?|<[<=]?|[>=*!]=?|&&|\\|\\||[:?\\/%^]/,\n  'symbol': /[|;@]/,\n  'punctuation': /[,.]/,\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  }\n});\ndelete Prism.languages.jolie['class-name'];\nPrism.languages.insertBefore('jolie', 'keyword', {\n  'function': {\n    pattern: /((?:\\b(?:outputPort|inputPort|in|service|courier)\\b|@)\\s*)\\w+/,\n    lookbehind: true\n  },\n  'aggregates': {\n    pattern: /(\\bAggregates\\s*:\\s*)(?:\\w+(?:\\s+with\\s+\\w+)?\\s*,\\s*)*\\w+(?:\\s+with\\s+\\w+)?/,\n    lookbehind: true,\n    inside: {\n      'withExtension': {\n        pattern: /\\bwith\\s+\\w+/,\n        inside: {\n          'keyword': /\\bwith\\b/\n        }\n      },\n      'function': {\n        pattern: /\\w+/\n      },\n      'punctuation': {\n        pattern: /,/\n      }\n    }\n  },\n  'redirects': {\n    pattern: /(\\bRedirects\\s*:\\s*)(?:\\w+\\s*=>\\s*\\w+\\s*,\\s*)*(?:\\w+\\s*=>\\s*\\w+)/,\n    lookbehind: true,\n    inside: {\n      'punctuation': {\n        pattern: /,/\n      },\n      'function': {\n        pattern: /\\w+/\n      },\n      'symbol': {\n        pattern: /=>/\n      }\n    }\n  }\n});","Prism.languages.jolie = Prism.languages.extend(\"clike\", {\n  keyword: /\\b(?:include|define|is_defined|undef|main|init|outputPort|inputPort|Location|Protocol|Interfaces|RequestResponse|OneWay|type|interface|extender|throws|cset|csets|forward|Aggregates|Redirects|embedded|courier|execution|sequential|concurrent|single|scope|install|throw|comp|cH|default|global|linkIn|linkOut|synchronized|this|new|for|if|else|while|in|Jolie|Java|Javascript|nullProcess|spawn|constants|with|provide|until|exit|foreach|instanceof|over|service)\\b/,\n  builtin: /\\b(?:undefined|string|int|void|long|Byte|bool|double|float|char|any)\\b/,\n  number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?l?/i,\n  operator: /-[-=>]?|\\+[+=]?|<[<=]?|[>=*!]=?|&&|\\|\\||[:?\\/%^]/,\n  symbol: /[|;@]/,\n  punctuation: /[,.]/,\n  string: {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  }\n}), delete Prism.languages.jolie[\"class-name\"], Prism.languages.insertBefore(\"jolie\", \"keyword\", {\n  function: {\n    pattern: /((?:\\b(?:outputPort|inputPort|in|service|courier)\\b|@)\\s*)\\w+/,\n    lookbehind: !0\n  },\n  aggregates: {\n    pattern: /(\\bAggregates\\s*:\\s*)(?:\\w+(?:\\s+with\\s+\\w+)?\\s*,\\s*)*\\w+(?:\\s+with\\s+\\w+)?/,\n    lookbehind: !0,\n    inside: {\n      withExtension: {\n        pattern: /\\bwith\\s+\\w+/,\n        inside: {\n          keyword: /\\bwith\\b/\n        }\n      },\n      function: {\n        pattern: /\\w+/\n      },\n      punctuation: {\n        pattern: /,/\n      }\n    }\n  },\n  redirects: {\n    pattern: /(\\bRedirects\\s*:\\s*)(?:\\w+\\s*=>\\s*\\w+\\s*,\\s*)*(?:\\w+\\s*=>\\s*\\w+)/,\n    lookbehind: !0,\n    inside: {\n      punctuation: {\n        pattern: /,/\n      },\n      function: {\n        pattern: /\\w+/\n      },\n      symbol: {\n        pattern: /=>/\n      }\n    }\n  }\n});","require(\"core-js/modules/es6.regexp.constructor\");\n\n(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n      lookbehind: true,\n      alias: ['function-variable', 'method', 'function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'function', {\n    'method': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n      lookbehind: true,\n      alias: ['function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [{\n      // standard built-ins\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n      pattern: /\\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\\b/,\n      alias: 'class-name'\n    }, {\n      // errors\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: 'class-name'\n    }]\n  });\n  Prism.languages.javascript['keyword'].unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: 'module'\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: ['null', 'nil']\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: 'nil'\n  });\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'spread': {\n      pattern: /\\.{3}/,\n      alias: 'operator'\n    },\n    'arrow': {\n      pattern: /=>/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: /(\\.\\s*)[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*/,\n      lookbehind: true\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    'dom': {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\\b/,\n      alias: 'variable'\n    },\n    'console': {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name'\n    }\n  }); // add 'maybe-class-name' to tokens which might be a class name\n\n  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token]; // convert regex to object\n\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value\n      };\n    } // keep in mind that we don't support arrays\n\n\n    var inside = value.inside || {};\n    value.inside = inside;\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(Prism);","require(\"core-js/modules/es6.regexp.constructor\");\n\n!function (a) {\n  a.languages.insertBefore(\"javascript\", \"function-variable\", {\n    \"method-variable\": {\n      pattern: RegExp(\"(\\\\.\\\\s*)\" + a.languages.javascript[\"function-variable\"].pattern.source),\n      lookbehind: !0,\n      alias: [\"function-variable\", \"method\", \"function\", \"property-access\"]\n    }\n  }), a.languages.insertBefore(\"javascript\", \"function\", {\n    method: {\n      pattern: RegExp(\"(\\\\.\\\\s*)\" + a.languages.javascript.function.source),\n      lookbehind: !0,\n      alias: [\"function\", \"property-access\"]\n    }\n  }), a.languages.insertBefore(\"javascript\", \"constant\", {\n    \"known-class-name\": [{\n      pattern: /\\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\\b/,\n      alias: \"class-name\"\n    }, {\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: \"class-name\"\n    }]\n  }), a.languages.javascript.keyword.unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: \"module\"\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: [\"null\", \"nil\"]\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: \"nil\"\n  }), a.languages.insertBefore(\"javascript\", \"operator\", {\n    spread: {\n      pattern: /\\.{3}/,\n      alias: \"operator\"\n    },\n    arrow: {\n      pattern: /=>/,\n      alias: \"operator\"\n    }\n  }), a.languages.insertBefore(\"javascript\", \"punctuation\", {\n    \"property-access\": {\n      pattern: /(\\.\\s*)[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*/,\n      lookbehind: !0\n    },\n    \"maybe-class-name\": {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: !0\n    },\n    dom: {\n      pattern: /\\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\\b/,\n      alias: \"variable\"\n    },\n    console: {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: \"class-name\"\n    }\n  });\n\n  for (var e = [\"function\", \"function-variable\", \"method\", \"method-variable\", \"property-access\"], t = 0; t < e.length; t++) {\n    var n = e[t],\n        r = a.languages.javascript[n];\n    \"RegExp\" === a.util.type(r) && (r = a.languages.javascript[n] = {\n      pattern: r\n    });\n    var s = r.inside || {};\n    (r.inside = s)[\"maybe-class-name\"] = /^[A-Z][\\s\\S]*/;\n  }\n}(Prism);","require(\"core-js/modules/es6.regexp.constructor\");\n\n(function (Prism) {\n  var javascript = Prism.languages.javascript;\n  var type = /{(?:[^{}]|{(?:[^{}]|{[^{}]*})*})+}/.source;\n  var parameterPrefix = '(@(?:param|arg|argument|property)\\\\s+(?:' + type + '\\\\s+)?)';\n  Prism.languages.jsdoc = Prism.languages.extend('javadoclike', {\n    'parameter': {\n      // @param {string} foo - foo bar\n      pattern: RegExp(parameterPrefix + /[$\\w\\xA0-\\uFFFF.]+(?=\\s|$)/.source),\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\./\n      }\n    }\n  });\n  Prism.languages.insertBefore('jsdoc', 'keyword', {\n    'optional-parameter': {\n      // @param {string} [baz.foo=\"bar\"] foo bar\n      pattern: RegExp(parameterPrefix + /\\[[$\\w\\xA0-\\uFFFF.]+(?:=[^[\\]]+)?\\](?=\\s|$)/.source),\n      lookbehind: true,\n      inside: {\n        'parameter': {\n          pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\./\n          }\n        },\n        'code': {\n          pattern: /(=)[\\s\\S]*(?=\\]$)/,\n          lookbehind: true,\n          inside: javascript,\n          alias: 'language-javascript'\n        },\n        'punctuation': /[=[\\]]/\n      }\n    },\n    'class-name': [{\n      pattern: RegExp('(@[a-z]+\\\\s+)' + type),\n      lookbehind: true,\n      inside: {\n        'punctuation': /[.,:?=<>|{}()[\\]]/\n      }\n    }, {\n      pattern: /(@(?:augments|extends|class|interface|memberof!?|this)\\s+)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\./\n      }\n    }],\n    'example': {\n      pattern: /(@example\\s+)[^@]+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n      lookbehind: true,\n      inside: {\n        'code': {\n          pattern: /^(\\s*(?:\\*\\s*)?).+$/m,\n          lookbehind: true,\n          inside: javascript,\n          alias: 'language-javascript'\n        }\n      }\n    }\n  });\n  Prism.languages.javadoclike.addSupport('javascript', Prism.languages.jsdoc);\n})(Prism);","require(\"core-js/modules/es6.regexp.constructor\");\n\n!function (a) {\n  var e = a.languages.javascript,\n      n = \"{(?:[^{}]|{(?:[^{}]|{[^{}]*})*})+}\",\n      s = \"(@(?:param|arg|argument|property)\\\\s+(?:\" + n + \"\\\\s+)?)\";\n  a.languages.jsdoc = a.languages.extend(\"javadoclike\", {\n    parameter: {\n      pattern: RegExp(s + \"[$\\\\w\\\\xA0-\\\\uFFFF.]+(?=\\\\s|$)\"),\n      lookbehind: !0,\n      inside: {\n        punctuation: /\\./\n      }\n    }\n  }), a.languages.insertBefore(\"jsdoc\", \"keyword\", {\n    \"optional-parameter\": {\n      pattern: RegExp(s + \"\\\\[[$\\\\w\\\\xA0-\\\\uFFFF.]+(?:=[^[\\\\]]+)?\\\\](?=\\\\s|$)\"),\n      lookbehind: !0,\n      inside: {\n        parameter: {\n          pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n          lookbehind: !0,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        code: {\n          pattern: /(=)[\\s\\S]*(?=\\]$)/,\n          lookbehind: !0,\n          inside: e,\n          alias: \"language-javascript\"\n        },\n        punctuation: /[=[\\]]/\n      }\n    },\n    \"class-name\": [{\n      pattern: RegExp(\"(@[a-z]+\\\\s+)\" + n),\n      lookbehind: !0,\n      inside: {\n        punctuation: /[.,:?=<>|{}()[\\]]/\n      }\n    }, {\n      pattern: /(@(?:augments|extends|class|interface|memberof!?|this)\\s+)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/,\n      lookbehind: !0,\n      inside: {\n        punctuation: /\\./\n      }\n    }],\n    example: {\n      pattern: /(@example\\s+)[^@]+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n      lookbehind: !0,\n      inside: {\n        code: {\n          pattern: /^(\\s*(?:\\*\\s*)?).+$/m,\n          lookbehind: !0,\n          inside: e,\n          alias: \"language-javascript\"\n        }\n      }\n    }\n  }), a.languages.javadoclike.addSupport(\"javascript\", a.languages.jsdoc);\n}(Prism);","Prism.languages.json = {\n  'comment': /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n  'property': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    greedy: true\n  },\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    greedy: true\n  },\n  'number': /-?\\d+\\.?\\d*(e[+-]?\\d+)?/i,\n  'punctuation': /[{}[\\],]/,\n  'operator': /:/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  }\n};","Prism.languages.json = {\n  comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n  property: {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    greedy: !0\n  },\n  string: {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    greedy: !0\n  },\n  number: /-?\\d+\\.?\\d*(e[+-]?\\d+)?/i,\n  punctuation: /[{}[\\],]/,\n  operator: /:/,\n  boolean: /\\b(?:true|false)\\b/,\n  null: {\n    pattern: /\\bnull\\b/,\n    alias: \"keyword\"\n  }\n};","require(\"core-js/modules/es6.regexp.constructor\");\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n?|\\n|.)|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  Prism.languages.json5 = Prism.languages.extend('json', {\n    'property': [{\n      pattern: RegExp(string.source + '(?=\\\\s*:)'),\n      greedy: true\n    }, {\n      pattern: /[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*:)/,\n      alias: 'unquoted'\n    }],\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'number': /[+-]?(?:NaN|Infinity|0x[a-fA-F\\d]+|(?:\\d+\\.?\\d*|\\.\\d+)(?:[eE][+-]?\\d+)?)/\n  });\n})(Prism);","require(\"core-js/modules/es6.regexp.constructor\");\n\n!function (n) {\n  var e = /(\"|')(?:\\\\(?:\\r\\n?|\\n|.)|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  n.languages.json5 = n.languages.extend(\"json\", {\n    property: [{\n      pattern: RegExp(e.source + \"(?=\\\\s*:)\"),\n      greedy: !0\n    }, {\n      pattern: /[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*:)/,\n      alias: \"unquoted\"\n    }],\n    string: {\n      pattern: e,\n      greedy: !0\n    },\n    number: /[+-]?(?:NaN|Infinity|0x[a-fA-F\\d]+|(?:\\d+\\.?\\d*|\\.\\d+)(?:[eE][+-]?\\d+)?)/\n  });\n}(Prism);","Prism.languages.jsonp = Prism.languages.extend('json', {\n  'punctuation': /[{}[\\]();,.]/\n});\nPrism.languages.insertBefore('jsonp', 'punctuation', {\n  'function': /[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/\n});","Prism.languages.jsonp = Prism.languages.extend(\"json\", {\n  punctuation: /[{}[\\]();,.]/\n}), Prism.languages.insertBefore(\"jsonp\", \"punctuation\", {\n  function: /[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/\n});","!function (i) {\n  var t = i.util.clone(i.languages.javascript);\n  i.languages.jsx = i.languages.extend(\"markup\", t), i.languages.jsx.tag.pattern = /<\\/?(?:[\\w.:-]+\\s*(?:\\s+(?:[\\w.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}))*\\s*\\/?)?>/i, i.languages.jsx.tag.inside.tag.pattern = /^<\\/?[^\\s>\\/]*/i, i.languages.jsx.tag.inside[\"attr-value\"].pattern = /=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i, i.languages.jsx.tag.inside.tag.inside[\"class-name\"] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/, i.languages.insertBefore(\"inside\", \"attr-name\", {\n    spread: {\n      pattern: /\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}/,\n      inside: {\n        punctuation: /\\.{3}|[{}.]/,\n        \"attr-value\": /\\w+/\n      }\n    }\n  }, i.languages.jsx.tag), i.languages.insertBefore(\"inside\", \"attr-value\", {\n    script: {\n      pattern: /=(\\{(?:\\{(?:\\{[^}]*\\}|[^}])*\\}|[^}])+\\})/i,\n      inside: {\n        \"script-punctuation\": {\n          pattern: /^=(?={)/,\n          alias: \"punctuation\"\n        },\n        rest: i.languages.jsx\n      },\n      alias: \"language-javascript\"\n    }\n  }, i.languages.jsx.tag);\n\n  var o = function o(t) {\n    return t ? \"string\" == typeof t ? t : \"string\" == typeof t.content ? t.content : t.content.map(o).join(\"\") : \"\";\n  },\n      p = function p(t) {\n    for (var n = [], e = 0; e < t.length; e++) {\n      var a = t[e],\n          s = !1;\n\n      if (\"string\" != typeof a && (\"tag\" === a.type && a.content[0] && \"tag\" === a.content[0].type ? \"</\" === a.content[0].content[0].content ? 0 < n.length && n[n.length - 1].tagName === o(a.content[0].content[1]) && n.pop() : \"/>\" === a.content[a.content.length - 1].content || n.push({\n        tagName: o(a.content[0].content[1]),\n        openedBraces: 0\n      }) : 0 < n.length && \"punctuation\" === a.type && \"{\" === a.content ? n[n.length - 1].openedBraces++ : 0 < n.length && 0 < n[n.length - 1].openedBraces && \"punctuation\" === a.type && \"}\" === a.content ? n[n.length - 1].openedBraces-- : s = !0), (s || \"string\" == typeof a) && 0 < n.length && 0 === n[n.length - 1].openedBraces) {\n        var g = o(a);\n        e < t.length - 1 && (\"string\" == typeof t[e + 1] || \"plain-text\" === t[e + 1].type) && (g += o(t[e + 1]), t.splice(e + 1, 1)), 0 < e && (\"string\" == typeof t[e - 1] || \"plain-text\" === t[e - 1].type) && (g = o(t[e - 1]) + g, t.splice(e - 1, 1), e--), t[e] = new i.Token(\"plain-text\", g, null, g);\n      }\n\n      a.content && \"string\" != typeof a.content && p(a.content);\n    }\n  };\n\n  i.hooks.add(\"after-tokenize\", function (t) {\n    \"jsx\" !== t.language && \"tsx\" !== t.language || p(t.tokens);\n  });\n}(Prism);","Prism.languages.julia = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true\n  },\n  'string': /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2/,\n  'keyword': /\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|let|local|macro|module|print|println|quote|return|try|type|typealias|using|while)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'number': /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[box])?(?:[\\da-f]+\\.?\\d*|\\.\\d+)(?:[efp][+-]?\\d+)?j?/i,\n  'operator': /[-+*^%÷&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥]/,\n  'punctuation': /[{}[\\];(),.:]/\n};","Prism.languages.julia = {\n  comment: {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: !0\n  },\n  string: /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2/,\n  keyword: /\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|let|local|macro|module|print|println|quote|return|try|type|typealias|using|while)\\b/,\n  boolean: /\\b(?:true|false)\\b/,\n  number: /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[box])?(?:[\\da-f]+\\.?\\d*|\\.\\d+)(?:[efp][+-]?\\d+)?j?/i,\n  operator: /[-+*^%÷&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥]/,\n  punctuation: /[{}[\\];(),.:]/\n};","Prism.languages.keyman = {\n  'comment': /\\bc\\s.*/i,\n  'function': /\\[\\s*(?:(?:CTRL|SHIFT|ALT|LCTRL|RCTRL|LALT|RALT|CAPS|NCAPS)\\s+)*(?:[TKU]_[\\w?]+|\".+?\"|'.+?')\\s*\\]/i,\n  // virtual key\n  'string': /(\"|').*?\\1/,\n  'bold': [// header statements, system stores and variable system stores\n  /&(?:baselayout|bitmap|capsononly|capsalwaysoff|shiftfreescaps|copyright|ethnologuecode|hotkey|includecodes|keyboardversion|kmw_embedcss|kmw_embedjs|kmw_helpfile|kmw_helptext|kmw_rtl|language|layer|layoutfile|message|mnemoniclayout|name|oldcharposmatching|platform|targets|version|visualkeyboard|windowslanguages)\\b/i, /\\b(?:bitmap|bitmaps|caps on only|caps always off|shift frees caps|copyright|hotkey|language|layout|message|name|version)\\b/i],\n  'keyword': /\\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|return|reset|save|set|store|use)\\b/i,\n  // rule keywords\n  'atrule': /\\b(?:ansi|begin|unicode|group|using keys|match|nomatch)\\b/i,\n  // structural keywords\n  'number': /\\b(?:U\\+[\\dA-F]+|d\\d+|x[\\da-f]+|\\d+)\\b/i,\n  // U+####, x###, d### characters and numbers\n  'operator': /[+>\\\\,()]/,\n  'tag': /\\$(?:keyman|kmfl|weaver|keymanweb|keymanonly):/i // prefixes\n\n};","Prism.languages.keyman = {\n  comment: /\\bc\\s.*/i,\n  function: /\\[\\s*(?:(?:CTRL|SHIFT|ALT|LCTRL|RCTRL|LALT|RALT|CAPS|NCAPS)\\s+)*(?:[TKU]_[\\w?]+|\".+?\"|'.+?')\\s*\\]/i,\n  string: /(\"|').*?\\1/,\n  bold: [/&(?:baselayout|bitmap|capsononly|capsalwaysoff|shiftfreescaps|copyright|ethnologuecode|hotkey|includecodes|keyboardversion|kmw_embedcss|kmw_embedjs|kmw_helpfile|kmw_helptext|kmw_rtl|language|layer|layoutfile|message|mnemoniclayout|name|oldcharposmatching|platform|targets|version|visualkeyboard|windowslanguages)\\b/i, /\\b(?:bitmap|bitmaps|caps on only|caps always off|shift frees caps|copyright|hotkey|language|layout|message|name|version)\\b/i],\n  keyword: /\\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|return|reset|save|set|store|use)\\b/i,\n  atrule: /\\b(?:ansi|begin|unicode|group|using keys|match|nomatch)\\b/i,\n  number: /\\b(?:U\\+[\\dA-F]+|d\\d+|x[\\da-f]+|\\d+)\\b/i,\n  operator: /[+>\\\\,()]/,\n  tag: /\\$(?:keyman|kmfl|weaver|keymanweb|keymanonly):/i\n};","(function (Prism) {\n  Prism.languages.kotlin = Prism.languages.extend('clike', {\n    'keyword': {\n      // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n      pattern: /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n      lookbehind: true\n    },\n    'function': [/\\w+(?=\\s*\\()/, {\n      pattern: /(\\.)\\w+(?=\\s*\\{)/,\n      lookbehind: true\n    }],\n    'number': /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n    'operator': /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n  });\n  delete Prism.languages.kotlin[\"class-name\"];\n  Prism.languages.insertBefore('kotlin', 'string', {\n    'raw-string': {\n      pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n      alias: 'string' // See interpolation below\n\n    }\n  });\n  Prism.languages.insertBefore('kotlin', 'keyword', {\n    'annotation': {\n      pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n      alias: 'builtin'\n    }\n  });\n  Prism.languages.insertBefore('kotlin', 'function', {\n    'label': {\n      pattern: /\\w+@|@\\w+/,\n      alias: 'symbol'\n    }\n  });\n  var interpolation = [{\n    pattern: /\\$\\{[^}]+\\}/,\n    inside: {\n      delimiter: {\n        pattern: /^\\$\\{|\\}$/,\n        alias: 'variable'\n      },\n      rest: Prism.languages.kotlin\n    }\n  }, {\n    pattern: /\\$\\w+/,\n    alias: 'variable'\n  }];\n  Prism.languages.kotlin['string'].inside = Prism.languages.kotlin['raw-string'].inside = {\n    interpolation: interpolation\n  };\n})(Prism);","!function (e) {\n  e.languages.kotlin = e.languages.extend(\"clike\", {\n    keyword: {\n      pattern: /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n      lookbehind: !0\n    },\n    function: [/\\w+(?=\\s*\\()/, {\n      pattern: /(\\.)\\w+(?=\\s*\\{)/,\n      lookbehind: !0\n    }],\n    number: /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n    operator: /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n  }), delete e.languages.kotlin[\"class-name\"], e.languages.insertBefore(\"kotlin\", \"string\", {\n    \"raw-string\": {\n      pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n      alias: \"string\"\n    }\n  }), e.languages.insertBefore(\"kotlin\", \"keyword\", {\n    annotation: {\n      pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n      alias: \"builtin\"\n    }\n  }), e.languages.insertBefore(\"kotlin\", \"function\", {\n    label: {\n      pattern: /\\w+@|@\\w+/,\n      alias: \"symbol\"\n    }\n  });\n  var n = [{\n    pattern: /\\$\\{[^}]+\\}/,\n    inside: {\n      delimiter: {\n        pattern: /^\\$\\{|\\}$/,\n        alias: \"variable\"\n      },\n      rest: e.languages.kotlin\n    }\n  }, {\n    pattern: /\\$\\w+/,\n    alias: \"variable\"\n  }];\n  e.languages.kotlin.string.inside = e.languages.kotlin[\"raw-string\"].inside = {\n    interpolation: n\n  };\n}(Prism);","(function (Prism) {\n  var funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i,\n      insideEqu = {\n    'equation-command': {\n      pattern: funcPattern,\n      alias: 'regex'\n    }\n  };\n  Prism.languages.latex = {\n    'comment': /%.*/m,\n    // the verbatim environment prints whitespace to the document\n    'cdata': {\n      pattern: /(\\\\begin\\{((?:verbatim|lstlisting)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n      lookbehind: true\n    },\n\n    /*\n     * equations can be between $ $ or \\( \\) or \\[ \\]\n     * (all are multiline)\n     */\n    'equation': [{\n      pattern: /\\$(?:\\\\[\\s\\S]|[^\\\\$])*\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n      inside: insideEqu,\n      alias: 'string'\n    }, {\n      pattern: /(\\\\begin\\{((?:equation|math|eqnarray|align|multline|gather)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n      lookbehind: true,\n      inside: insideEqu,\n      alias: 'string'\n    }],\n\n    /*\n     * arguments which are keywords or references are highlighted\n     * as keywords\n     */\n    'keyword': {\n      pattern: /(\\\\(?:begin|end|ref|cite|label|usepackage|documentclass)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n      lookbehind: true\n    },\n    'url': {\n      pattern: /(\\\\url\\{)[^}]+(?=\\})/,\n      lookbehind: true\n    },\n\n    /*\n     * section or chapter headlines are highlighted as bold so that\n     * they stand out more\n     */\n    'headline': {\n      pattern: /(\\\\(?:part|chapter|section|subsection|frametitle|subsubsection|paragraph|subparagraph|subsubparagraph|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\}(?:\\[[^\\]]+\\])?)/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    'function': {\n      pattern: funcPattern,\n      alias: 'selector'\n    },\n    'punctuation': /[[\\]{}&]/\n  };\n})(Prism);","!function (a) {\n  var e = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i,\n      n = {\n    \"equation-command\": {\n      pattern: e,\n      alias: \"regex\"\n    }\n  };\n  Prism.languages.latex = {\n    comment: /%.*/m,\n    cdata: {\n      pattern: /(\\\\begin\\{((?:verbatim|lstlisting)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n      lookbehind: !0\n    },\n    equation: [{\n      pattern: /\\$(?:\\\\[\\s\\S]|[^\\\\$])*\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n      inside: n,\n      alias: \"string\"\n    }, {\n      pattern: /(\\\\begin\\{((?:equation|math|eqnarray|align|multline|gather)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n      lookbehind: !0,\n      inside: n,\n      alias: \"string\"\n    }],\n    keyword: {\n      pattern: /(\\\\(?:begin|end|ref|cite|label|usepackage|documentclass)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n      lookbehind: !0\n    },\n    url: {\n      pattern: /(\\\\url\\{)[^}]+(?=\\})/,\n      lookbehind: !0\n    },\n    headline: {\n      pattern: /(\\\\(?:part|chapter|section|subsection|frametitle|subsubsection|paragraph|subparagraph|subsubparagraph|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\}(?:\\[[^\\]]+\\])?)/,\n      lookbehind: !0,\n      alias: \"class-name\"\n    },\n    function: {\n      pattern: e,\n      alias: \"selector\"\n    },\n    punctuation: /[[\\]{}&]/\n  };\n}();","/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\nPrism.languages.less = Prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-]+?(?:\\([^{}]+\\)|[^(){};])*?(?=\\s*\\{)/i,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\([^{}]*\\)|[^{};@])*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n  'operator': /[+\\-*\\/]/\n});\nPrism.languages.insertBefore('less', 'property', {\n  'variable': [// Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      \"punctuation\": /:/\n    }\n  }, // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});","Prism.languages.less = Prism.languages.extend(\"css\", {\n  comment: [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: !0\n  }],\n  atrule: {\n    pattern: /@[\\w-]+?(?:\\([^{}]+\\)|[^(){};])*?(?=\\s*\\{)/i,\n    inside: {\n      punctuation: /[:()]/\n    }\n  },\n  selector: {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\([^{}]*\\)|[^{};@])*?(?=\\s*\\{)/,\n    inside: {\n      variable: /@+[\\w-]+/\n    }\n  },\n  property: /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n  operator: /[+\\-*\\/]/\n}), Prism.languages.insertBefore(\"less\", \"property\", {\n  variable: [{\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      punctuation: /:/\n    }\n  }, /@@?[\\w-]+/],\n  \"mixin-usage\": {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,\n    lookbehind: !0,\n    alias: \"function\"\n  }\n});","Prism.languages.liquid = {\n  'keyword': /\\b(?:comment|endcomment|if|elsif|else|endif|unless|endunless|for|endfor|case|endcase|when|in|break|assign|continue|limit|offset|range|reversed|raw|endraw|capture|endcapture|tablerow|endtablerow)\\b/,\n  'number': /\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp-]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?[df]?/i,\n  'operator': {\n    pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,\n    lookbehind: true\n  },\n  'function': {\n    pattern: /(^|[\\s;|&])(?:append|prepend|capitalize|cycle|cols|increment|decrement|abs|at_least|at_most|ceil|compact|concat|date|default|divided_by|downcase|escape|escape_once|first|floor|join|last|lstrip|map|minus|modulo|newline_to_br|plus|remove|remove_first|replace|replace_first|reverse|round|rstrip|size|slice|sort|sort_natural|split|strip|strip_html|strip_newlines|times|truncate|truncatewords|uniq|upcase|url_decode|url_encode|include|paginate)(?=$|[\\s;|&])/,\n    lookbehind: true\n  }\n};","Prism.languages.liquid = {\n  keyword: /\\b(?:comment|endcomment|if|elsif|else|endif|unless|endunless|for|endfor|case|endcase|when|in|break|assign|continue|limit|offset|range|reversed|raw|endraw|capture|endcapture|tablerow|endtablerow)\\b/,\n  number: /\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp-]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?[df]?/i,\n  operator: {\n    pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,\n    lookbehind: !0\n  },\n  function: {\n    pattern: /(^|[\\s;|&])(?:append|prepend|capitalize|cycle|cols|increment|decrement|abs|at_least|at_most|ceil|compact|concat|date|default|divided_by|downcase|escape|escape_once|first|floor|join|last|lstrip|map|minus|modulo|newline_to_br|plus|remove|remove_first|replace|replace_first|reverse|round|rstrip|size|slice|sort|sort_natural|split|strip|strip_html|strip_newlines|times|truncate|truncatewords|uniq|upcase|url_decode|url_encode|include|paginate)(?=$|[\\s;|&])/,\n    lookbehind: !0\n  }\n};","require(\"core-js/modules/es6.regexp.constructor\");\n\n(function (Prism) {\n  // Functions to construct regular expressions\n  // simple form\n  // e.g. (interactive ... or (interactive)\n  function simple_form(name) {\n    return RegExp('(\\\\()' + name + '(?=[\\\\s\\\\)])');\n  } // booleans and numbers\n\n\n  function primitive(pattern) {\n    return RegExp('([\\\\s([])' + pattern + '(?=[\\\\s)])');\n  } // Patterns in regular expressions\n  // Symbol name. See https://www.gnu.org/software/emacs/manual/html_node/elisp/Symbol-Type.html\n  // & and : are excluded as they are usually used for special purposes\n\n\n  var symbol = '[-+*/_~!@$%^=<>{}\\\\w]+'; // symbol starting with & used in function arguments\n\n  var marker = '&' + symbol; // Open parenthesis for look-behind\n\n  var par = '(\\\\()';\n  var endpar = '(?=\\\\))'; // End the pattern with look-ahead space\n\n  var space = '(?=\\\\s)';\n  var language = {\n    // Three or four semicolons are considered a heading.\n    // See https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html\n    heading: {\n      pattern: /;;;.*/,\n      alias: ['comment', 'title']\n    },\n    comment: /;.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n      greedy: true,\n      inside: {\n        argument: /[-A-Z]+(?=[.,\\s])/,\n        symbol: RegExp('`' + symbol + \"'\")\n      }\n    },\n    'quoted-symbol': {\n      pattern: RegExp(\"#?'\" + symbol),\n      alias: ['variable', 'symbol']\n    },\n    'lisp-property': {\n      pattern: RegExp(':' + symbol),\n      alias: 'property'\n    },\n    splice: {\n      pattern: RegExp(',@?' + symbol),\n      alias: ['symbol', 'variable']\n    },\n    keyword: [{\n      pattern: RegExp(par + '(?:(?:lexical-)?let\\\\*?|(?:cl-)?letf|if|when|while|unless|cons|cl-loop|and|or|not|cond|setq|error|message|null|require|provide|use-package)' + space),\n      lookbehind: true\n    }, {\n      pattern: RegExp(par + '(?:for|do|collect|return|finally|append|concat|in|by)' + space),\n      lookbehind: true\n    }],\n    declare: {\n      pattern: simple_form('declare'),\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    interactive: {\n      pattern: simple_form('interactive'),\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    boolean: {\n      pattern: primitive('(?:t|nil)'),\n      lookbehind: true\n    },\n    number: {\n      pattern: primitive('[-+]?\\\\d+(?:\\\\.\\\\d*)?'),\n      lookbehind: true\n    },\n    defvar: {\n      pattern: RegExp(par + 'def(?:var|const|custom|group)\\\\s+' + symbol),\n      lookbehind: true,\n      inside: {\n        keyword: /^def[a-z]+/,\n        variable: RegExp(symbol)\n      }\n    },\n    defun: {\n      pattern: RegExp(par + '(?:cl-)?(?:defun\\\\*?|defmacro)\\\\s+' + symbol + '\\\\s+\\\\([\\\\s\\\\S]*?\\\\)'),\n      lookbehind: true,\n      inside: {\n        keyword: /^(?:cl-)?def\\S+/,\n        // See below, this property needs to be defined later so that it can\n        // reference the language object.\n        arguments: null,\n        function: {\n          pattern: RegExp('(^\\\\s)' + symbol),\n          lookbehind: true\n        },\n        punctuation: /[()]/\n      }\n    },\n    lambda: {\n      pattern: RegExp(par + 'lambda\\\\s+\\\\((?:&?' + symbol + '\\\\s*)*\\\\)'),\n      lookbehind: true,\n      inside: {\n        keyword: /^lambda/,\n        // See below, this property needs to be defined later so that it can\n        // reference the language object.\n        arguments: null,\n        punctuation: /[()]/\n      }\n    },\n    car: {\n      pattern: RegExp(par + symbol),\n      lookbehind: true\n    },\n    punctuation: [// open paren, brackets, and close paren\n    /(['`,]?\\(|[)\\[\\]])/, // cons\n    {\n      pattern: /(\\s)\\.(?=\\s)/,\n      lookbehind: true\n    }]\n  };\n  var arg = {\n    'lisp-marker': RegExp(marker),\n    rest: {\n      argument: {\n        pattern: RegExp(symbol),\n        alias: 'variable'\n      },\n      varform: {\n        pattern: RegExp(par + symbol + '\\\\s+\\\\S[\\\\s\\\\S]*' + endpar),\n        lookbehind: true,\n        inside: {\n          string: language.string,\n          boolean: language.boolean,\n          number: language.number,\n          symbol: language.symbol,\n          punctuation: /[()]/\n        }\n      }\n    }\n  };\n  var forms = '\\\\S+(?:\\\\s+\\\\S+)*';\n  var arglist = {\n    pattern: RegExp(par + '[\\\\s\\\\S]*' + endpar),\n    lookbehind: true,\n    inside: {\n      'rest-vars': {\n        pattern: RegExp('&(?:rest|body)\\\\s+' + forms),\n        inside: arg\n      },\n      'other-marker-vars': {\n        pattern: RegExp('&(?:optional|aux)\\\\s+' + forms),\n        inside: arg\n      },\n      keys: {\n        pattern: RegExp('&key\\\\s+' + forms + '(?:\\\\s+&allow-other-keys)?'),\n        inside: arg\n      },\n      argument: {\n        pattern: RegExp(symbol),\n        alias: 'variable'\n      },\n      punctuation: /[()]/\n    }\n  };\n  language['lambda'].inside.arguments = arglist;\n  language['defun'].inside.arguments = Prism.util.clone(arglist);\n  language['defun'].inside.arguments.inside.sublist = arglist;\n  Prism.languages.lisp = language;\n  Prism.languages.elisp = language;\n  Prism.languages.emacs = language;\n  Prism.languages['emacs-lisp'] = language;\n})(Prism);","require(\"core-js/modules/es6.regexp.constructor\");\n\n!function (e) {\n  function n(e) {\n    return RegExp(\"(\\\\()\" + e + \"(?=[\\\\s\\\\)])\");\n  }\n\n  function a(e) {\n    return RegExp(\"([\\\\s([])\" + e + \"(?=[\\\\s)])\");\n  }\n\n  var t = \"[-+*/_~!@$%^=<>{}\\\\w]+\",\n      r = \"(\\\\()\",\n      i = \"(?=\\\\))\",\n      s = \"(?=\\\\s)\",\n      o = {\n    heading: {\n      pattern: /;;;.*/,\n      alias: [\"comment\", \"title\"]\n    },\n    comment: /;.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n      greedy: !0,\n      inside: {\n        argument: /[-A-Z]+(?=[.,\\s])/,\n        symbol: RegExp(\"`\" + t + \"'\")\n      }\n    },\n    \"quoted-symbol\": {\n      pattern: RegExp(\"#?'\" + t),\n      alias: [\"variable\", \"symbol\"]\n    },\n    \"lisp-property\": {\n      pattern: RegExp(\":\" + t),\n      alias: \"property\"\n    },\n    splice: {\n      pattern: RegExp(\",@?\" + t),\n      alias: [\"symbol\", \"variable\"]\n    },\n    keyword: [{\n      pattern: RegExp(r + \"(?:(?:lexical-)?let\\\\*?|(?:cl-)?letf|if|when|while|unless|cons|cl-loop|and|or|not|cond|setq|error|message|null|require|provide|use-package)\" + s),\n      lookbehind: !0\n    }, {\n      pattern: RegExp(r + \"(?:for|do|collect|return|finally|append|concat|in|by)\" + s),\n      lookbehind: !0\n    }],\n    declare: {\n      pattern: n(\"declare\"),\n      lookbehind: !0,\n      alias: \"keyword\"\n    },\n    interactive: {\n      pattern: n(\"interactive\"),\n      lookbehind: !0,\n      alias: \"keyword\"\n    },\n    boolean: {\n      pattern: a(\"(?:t|nil)\"),\n      lookbehind: !0\n    },\n    number: {\n      pattern: a(\"[-+]?\\\\d+(?:\\\\.\\\\d*)?\"),\n      lookbehind: !0\n    },\n    defvar: {\n      pattern: RegExp(r + \"def(?:var|const|custom|group)\\\\s+\" + t),\n      lookbehind: !0,\n      inside: {\n        keyword: /^def[a-z]+/,\n        variable: RegExp(t)\n      }\n    },\n    defun: {\n      pattern: RegExp(r + \"(?:cl-)?(?:defun\\\\*?|defmacro)\\\\s+\" + t + \"\\\\s+\\\\([\\\\s\\\\S]*?\\\\)\"),\n      lookbehind: !0,\n      inside: {\n        keyword: /^(?:cl-)?def\\S+/,\n        arguments: null,\n        function: {\n          pattern: RegExp(\"(^\\\\s)\" + t),\n          lookbehind: !0\n        },\n        punctuation: /[()]/\n      }\n    },\n    lambda: {\n      pattern: RegExp(r + \"lambda\\\\s+\\\\((?:&?\" + t + \"\\\\s*)*\\\\)\"),\n      lookbehind: !0,\n      inside: {\n        keyword: /^lambda/,\n        arguments: null,\n        punctuation: /[()]/\n      }\n    },\n    car: {\n      pattern: RegExp(r + t),\n      lookbehind: !0\n    },\n    punctuation: [/(['`,]?\\(|[)\\[\\]])/, {\n      pattern: /(\\s)\\.(?=\\s)/,\n      lookbehind: !0\n    }]\n  },\n      l = {\n    \"lisp-marker\": RegExp(\"&[-+*/_~!@$%^=<>{}\\\\w]+\"),\n    rest: {\n      argument: {\n        pattern: RegExp(t),\n        alias: \"variable\"\n      },\n      varform: {\n        pattern: RegExp(r + t + \"\\\\s+\\\\S[\\\\s\\\\S]*\" + i),\n        lookbehind: !0,\n        inside: {\n          string: o.string,\n          boolean: o.boolean,\n          number: o.number,\n          symbol: o.symbol,\n          punctuation: /[()]/\n        }\n      }\n    }\n  },\n      p = \"\\\\S+(?:\\\\s+\\\\S+)*\",\n      d = {\n    pattern: RegExp(r + \"[\\\\s\\\\S]*\" + i),\n    lookbehind: !0,\n    inside: {\n      \"rest-vars\": {\n        pattern: RegExp(\"&(?:rest|body)\\\\s+\" + p),\n        inside: l\n      },\n      \"other-marker-vars\": {\n        pattern: RegExp(\"&(?:optional|aux)\\\\s+\" + p),\n        inside: l\n      },\n      keys: {\n        pattern: RegExp(\"&key\\\\s+\" + p + \"(?:\\\\s+&allow-other-keys)?\"),\n        inside: l\n      },\n      argument: {\n        pattern: RegExp(t),\n        alias: \"variable\"\n      },\n      punctuation: /[()]/\n    }\n  };\n  o.lambda.inside.arguments = d, o.defun.inside.arguments = e.util.clone(d), o.defun.inside.arguments.inside.sublist = d, e.languages.lisp = o, e.languages.elisp = o, e.languages.emacs = o, e.languages[\"emacs-lisp\"] = o;\n}(Prism);","Prism.languages.livescript = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true\n  }],\n  'interpolated-string': {\n    /* Look-behind and look-ahead prevents wrong behavior of the greedy pattern\n    * forcing it to match \"\"\"-quoted string when it would otherwise match \"-quoted first. */\n    pattern: /(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'variable': {\n        pattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,\n        lookbehind: true\n      },\n      'interpolation': {\n        pattern: /(^|[^\\\\])#\\{[^}]+\\}/m,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^#\\{|\\}$/,\n            alias: 'variable' // See rest below\n\n          }\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'string': [{\n    pattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: true\n  }, {\n    pattern: /<\\[[\\s\\S]*?\\]>/,\n    greedy: true\n  }, /\\\\[^\\s,;\\])}]+/],\n  'regex': [{\n    pattern: /\\/\\/(\\[.+?]|\\\\.|(?!\\/\\/)[^\\\\])+\\/\\/[gimyu]{0,5}/,\n    greedy: true,\n    inside: {\n      'comment': {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      }\n    }\n  }, {\n    pattern: /\\/(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}/,\n    greedy: true\n  }],\n  'keyword': {\n    pattern: /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,\n    lookbehind: true\n  },\n  'keyword-operator': {\n    pattern: /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?:nt| not)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,\n    lookbehind: true,\n    alias: 'operator'\n  },\n  'boolean': {\n    pattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,\n    lookbehind: true\n  },\n  'argument': {\n    // Don't match .&. nor &&\n    pattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,\n    lookbehind: true,\n    alias: 'variable'\n  },\n  'number': /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,\n  'identifier': /[a-z_](?:-?[a-z]|[\\d_])*/i,\n  'operator': [// Spaced .\n  {\n    pattern: /( )\\.(?= )/,\n    lookbehind: true\n  }, // Full list, in order:\n  // .= .~ .. ...\n  // .&. .^. .<<. .>>. .>>>.\n  // := :: ::=\n  // &&\n  // || |>\n  // < << <<< <<<<\n  // <- <-- <-! <--!\n  // <~ <~~ <~! <~~!\n  // <| <= <?\n  // > >> >= >?\n  // - -- -> -->\n  // + ++\n  // @ @@\n  // % %%\n  // * **\n  // ! != !~=\n  // !~> !~~>\n  // !-> !-->\n  // ~ ~> ~~> ~=\n  // = ==\n  // ^ ^^\n  // / ?\n  /\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/],\n  'punctuation': /[(){}\\[\\]|.,:;`]/\n};\nPrism.languages.livescript['interpolated-string'].inside['interpolation'].inside.rest = Prism.languages.livescript;","Prism.languages.livescript = {\n  comment: [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: !0\n  }],\n  \"interpolated-string\": {\n    pattern: /(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,\n    lookbehind: !0,\n    greedy: !0,\n    inside: {\n      variable: {\n        pattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,\n        lookbehind: !0\n      },\n      interpolation: {\n        pattern: /(^|[^\\\\])#\\{[^}]+\\}/m,\n        lookbehind: !0,\n        inside: {\n          \"interpolation-punctuation\": {\n            pattern: /^#\\{|\\}$/,\n            alias: \"variable\"\n          }\n        }\n      },\n      string: /[\\s\\S]+/\n    }\n  },\n  string: [{\n    pattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: !0\n  }, {\n    pattern: /<\\[[\\s\\S]*?\\]>/,\n    greedy: !0\n  }, /\\\\[^\\s,;\\])}]+/],\n  regex: [{\n    pattern: /\\/\\/(\\[.+?]|\\\\.|(?!\\/\\/)[^\\\\])+\\/\\/[gimyu]{0,5}/,\n    greedy: !0,\n    inside: {\n      comment: {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: !0\n      }\n    }\n  }, {\n    pattern: /\\/(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}/,\n    greedy: !0\n  }],\n  keyword: {\n    pattern: /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,\n    lookbehind: !0\n  },\n  \"keyword-operator\": {\n    pattern: /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?:nt| not)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,\n    lookbehind: !0,\n    alias: \"operator\"\n  },\n  boolean: {\n    pattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,\n    lookbehind: !0\n  },\n  argument: {\n    pattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,\n    lookbehind: !0,\n    alias: \"variable\"\n  },\n  number: /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,\n  identifier: /[a-z_](?:-?[a-z]|[\\d_])*/i,\n  operator: [{\n    pattern: /( )\\.(?= )/,\n    lookbehind: !0\n  }, /\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/],\n  punctuation: /[(){}\\[\\]|.,:;`]/\n}, Prism.languages.livescript[\"interpolated-string\"].inside.interpolation.inside.rest = Prism.languages.livescript;","Prism.languages.lolcode = {\n  'comment': [/\\bOBTW\\s+[\\s\\S]*?\\s+TLDR\\b/, /\\bBTW.+/],\n  'string': {\n    pattern: /\"(?::.|[^\"])*\"/,\n    inside: {\n      'variable': /:\\{[^}]+\\}/,\n      'symbol': [/:\\([a-f\\d]+\\)/i, /:\\[[^\\]]+\\]/, /:[)>o\":]/]\n    },\n    greedy: true\n  },\n  'number': /(?:\\B-)?(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)/,\n  'symbol': {\n    pattern: /(^|\\s)(?:A )?(?:YARN|NUMBR|NUMBAR|TROOF|BUKKIT|NOOB)(?=\\s|,|$)/,\n    lookbehind: true,\n    inside: {\n      'keyword': /A(?=\\s)/\n    }\n  },\n  'label': {\n    pattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\n    lookbehind: true,\n    alias: 'string'\n  },\n  'function': {\n    pattern: /((?:^|\\s)(?:I IZ|HOW IZ I|IZ) )[a-zA-Z]\\w*/,\n    lookbehind: true\n  },\n  'keyword': [{\n    pattern: /(^|\\s)(?:O HAI IM|KTHX|HAI|KTHXBYE|I HAS A|ITZ(?: A)?|R|AN|MKAY|SMOOSH|MAEK|IS NOW(?: A)?|VISIBLE|GIMMEH|O RLY\\?|YA RLY|NO WAI|OIC|MEBBE|WTF\\?|OMG|OMGWTF|GTFO|IM IN YR|IM OUTTA YR|FOUND YR|YR|TIL|WILE|UPPIN|NERFIN|I IZ|HOW IZ I|IF U SAY SO|SRS|HAS A|LIEK(?: A)?|IZ)(?=\\s|,|$)/,\n    lookbehind: true\n  }, /'Z(?=\\s|,|$)/],\n  'boolean': {\n    pattern: /(^|\\s)(?:WIN|FAIL)(?=\\s|,|$)/,\n    lookbehind: true\n  },\n  'variable': {\n    pattern: /(^|\\s)IT(?=\\s|,|$)/,\n    lookbehind: true\n  },\n  'operator': {\n    pattern: /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:SUM|DIFF|PRODUKT|QUOSHUNT|MOD|BIGGR|SMALLR|BOTH|EITHER|WON|ALL|ANY) OF)(?=\\s|,|$)/,\n    lookbehind: true\n  },\n  'punctuation': /\\.{3}|…|,|!/\n};","Prism.languages.lolcode = {\n  comment: [/\\bOBTW\\s+[\\s\\S]*?\\s+TLDR\\b/, /\\bBTW.+/],\n  string: {\n    pattern: /\"(?::.|[^\"])*\"/,\n    inside: {\n      variable: /:\\{[^}]+\\}/,\n      symbol: [/:\\([a-f\\d]+\\)/i, /:\\[[^\\]]+\\]/, /:[)>o\":]/]\n    },\n    greedy: !0\n  },\n  number: /(?:\\B-)?(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)/,\n  symbol: {\n    pattern: /(^|\\s)(?:A )?(?:YARN|NUMBR|NUMBAR|TROOF|BUKKIT|NOOB)(?=\\s|,|$)/,\n    lookbehind: !0,\n    inside: {\n      keyword: /A(?=\\s)/\n    }\n  },\n  label: {\n    pattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\n    lookbehind: !0,\n    alias: \"string\"\n  },\n  function: {\n    pattern: /((?:^|\\s)(?:I IZ|HOW IZ I|IZ) )[a-zA-Z]\\w*/,\n    lookbehind: !0\n  },\n  keyword: [{\n    pattern: /(^|\\s)(?:O HAI IM|KTHX|HAI|KTHXBYE|I HAS A|ITZ(?: A)?|R|AN|MKAY|SMOOSH|MAEK|IS NOW(?: A)?|VISIBLE|GIMMEH|O RLY\\?|YA RLY|NO WAI|OIC|MEBBE|WTF\\?|OMG|OMGWTF|GTFO|IM IN YR|IM OUTTA YR|FOUND YR|YR|TIL|WILE|UPPIN|NERFIN|I IZ|HOW IZ I|IF U SAY SO|SRS|HAS A|LIEK(?: A)?|IZ)(?=\\s|,|$)/,\n    lookbehind: !0\n  }, /'Z(?=\\s|,|$)/],\n  boolean: {\n    pattern: /(^|\\s)(?:WIN|FAIL)(?=\\s|,|$)/,\n    lookbehind: !0\n  },\n  variable: {\n    pattern: /(^|\\s)IT(?=\\s|,|$)/,\n    lookbehind: !0\n  },\n  operator: {\n    pattern: /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:SUM|DIFF|PRODUKT|QUOSHUNT|MOD|BIGGR|SMALLR|BOTH|EITHER|WON|ALL|ANY) OF)(?=\\s|,|$)/,\n    lookbehind: !0\n  },\n  punctuation: /\\.{3}|…|,|!/\n};","Prism.languages.lua = {\n  'comment': /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n  // \\z may be used to skip the following space\n  'string': {\n    pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[\\s\\S]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n    greedy: true\n  },\n  'number': /\\b0x[a-f\\d]+\\.?[a-f\\d]*(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|\\.?\\d*(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n  'keyword': /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n  'function': /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n  'operator': [/[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/, {\n    // Match \"..\" but don't break \"...\"\n    pattern: /(^|[^.])\\.\\.(?!\\.)/,\n    lookbehind: true\n  }],\n  'punctuation': /[\\[\\](){},;]|\\.+|:+/\n};","Prism.languages.lua = {\n  comment: /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n  string: {\n    pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[\\s\\S]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n    greedy: !0\n  },\n  number: /\\b0x[a-f\\d]+\\.?[a-f\\d]*(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|\\.?\\d*(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n  keyword: /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n  function: /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n  operator: [/[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/, {\n    pattern: /(^|[^.])\\.\\.(?!\\.)/,\n    lookbehind: !0\n  }],\n  punctuation: /[\\[\\](){},;]|\\.+|:+/\n};","Prism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  // Built-in target names\n  'builtin': /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n  // Targets\n  'symbol': {\n    pattern: /^[^:=\\r\\n]+(?=\\s*:(?!=))/m,\n    inside: {\n      'variable': /\\$+(?:[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  'keyword': [// Directives\n  /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/, // Functions\n  {\n    pattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n    lookbehind: true\n  }],\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};","Prism.languages.makefile = {\n  comment: {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: !0\n  },\n  string: {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  },\n  builtin: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n  symbol: {\n    pattern: /^[^:=\\r\\n]+(?=\\s*:(?!=))/m,\n    inside: {\n      variable: /\\$+(?:[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  variable: /\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  keyword: [/-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/, {\n    pattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n    lookbehind: !0\n  }],\n  operator: /(?:::|[?:+!])?=|[|@]/,\n  punctuation: /[:;(){}]/\n};","require(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nPrism.languages.markdown = Prism.languages.extend('markup', {});\nPrism.languages.insertBefore('markdown', 'prolog', {\n  'blockquote': {\n    // > ...\n    pattern: /^>(?:[\\t ]*>)*/m,\n    alias: 'punctuation'\n  },\n  'code': [{\n    // Prefixed by 4 spaces or 1 tab\n    pattern: /^(?: {4}|\\t).+/m,\n    alias: 'keyword'\n  }, {\n    // `code`\n    // ``code``\n    pattern: /``.+?``|`[^`\\n]+`/,\n    alias: 'keyword'\n  }, {\n    // ```optional language\n    // code block\n    // ```\n    pattern: /^```[\\s\\S]*?^```$/m,\n    greedy: true,\n    inside: {\n      'code-block': {\n        pattern: /^(```.*(?:\\r?\\n|\\r))[\\s\\S]+?(?=(?:\\r?\\n|\\r)^```$)/m,\n        lookbehind: true\n      },\n      'code-language': {\n        pattern: /^(```).+/,\n        lookbehind: true\n      },\n      'punctuation': /```/\n    }\n  }],\n  'title': [{\n    // title 1\n    // =======\n    // title 2\n    // -------\n    pattern: /\\S.*(?:\\r?\\n|\\r)(?:==+|--+)/,\n    alias: 'important',\n    inside: {\n      punctuation: /==+$|--+$/\n    }\n  }, {\n    // # title 1\n    // ###### title 6\n    pattern: /(^\\s*)#+.+/m,\n    lookbehind: true,\n    alias: 'important',\n    inside: {\n      punctuation: /^#+|#+$/\n    }\n  }],\n  'hr': {\n    // ***\n    // ---\n    // * * *\n    // -----------\n    pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n    lookbehind: true,\n    alias: 'punctuation'\n  },\n  'list': {\n    // * item\n    // + item\n    // - item\n    // 1. item\n    pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n    lookbehind: true,\n    alias: 'punctuation'\n  },\n  'url-reference': {\n    // [id]: http://example.com \"Optional title\"\n    // [id]: http://example.com 'Optional title'\n    // [id]: http://example.com (Optional title)\n    // [id]: <http://example.com> \"Optional title\"\n    pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n    inside: {\n      'variable': {\n        pattern: /^(!?\\[)[^\\]]+/,\n        lookbehind: true\n      },\n      'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n      'punctuation': /^[\\[\\]!:]|[<>]/\n    },\n    alias: 'url'\n  },\n  'bold': {\n    // **strong**\n    // __strong__\n    // Allow only one line break\n    pattern: /(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'punctuation': /^\\*\\*|^__|\\*\\*$|__$/\n    }\n  },\n  'italic': {\n    // *em*\n    // _em_\n    // Allow only one line break\n    pattern: /(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'punctuation': /^[*_]|[*_]$/\n    }\n  },\n  'strike': {\n    // ~~strike through~~\n    // ~strike~\n    // Allow only one line break\n    pattern: /(^|[^\\\\])(~~?)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'punctuation': /^~~?|~~?$/\n    }\n  },\n  'url': {\n    // [example](http://example.com \"Optional title\")\n    // [example] [id]\n    pattern: /!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,\n    inside: {\n      'variable': {\n        pattern: /(!?\\[)[^\\]]+(?=\\]$)/,\n        lookbehind: true\n      },\n      'string': {\n        pattern: /\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/\n      }\n    }\n  }\n});\n['bold', 'italic', 'strike'].forEach(function (token) {\n  ['url', 'bold', 'italic', 'strike'].forEach(function (inside) {\n    if (token !== inside) {\n      Prism.languages.markdown[token].inside[inside] = Prism.languages.markdown[inside];\n    }\n  });\n});\nPrism.hooks.add('after-tokenize', function (env) {\n  if (env.language !== 'markdown' && env.language !== 'md') {\n    return;\n  }\n\n  function walkTokens(tokens) {\n    if (!tokens || typeof tokens === 'string') {\n      return;\n    }\n\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      var token = tokens[i];\n\n      if (token.type !== 'code') {\n        walkTokens(token.content);\n        continue;\n      }\n\n      var codeLang = token.content[1];\n      var codeBlock = token.content[3];\n\n      if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {\n        // this might be a language that Prism does not support\n        var alias = 'language-' + codeLang.content.trim().split(/\\s+/)[0].toLowerCase(); // add alias\n\n        if (!codeBlock.alias) {\n          codeBlock.alias = [alias];\n        } else if (typeof codeBlock.alias === 'string') {\n          codeBlock.alias = [codeBlock.alias, alias];\n        } else {\n          codeBlock.alias.push(alias);\n        }\n      }\n    }\n  }\n\n  walkTokens(env.tokens);\n});\nPrism.hooks.add('wrap', function (env) {\n  if (env.type !== 'code-block') {\n    return;\n  }\n\n  var codeLang = '';\n\n  for (var i = 0, l = env.classes.length; i < l; i++) {\n    var cls = env.classes[i];\n    var match = /language-(.+)/.exec(cls);\n\n    if (match) {\n      codeLang = match[1];\n      break;\n    }\n  }\n\n  var grammar = Prism.languages[codeLang];\n\n  if (!grammar) {\n    return;\n  } // reverse Prism.util.encode\n\n\n  var code = env.content.replace(/&lt;/g, '<').replace(/&amp;/g, '&');\n  env.content = Prism.highlight(code, grammar, codeLang);\n});\nPrism.languages.md = Prism.languages.markdown;","require(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nPrism.languages.markdown = Prism.languages.extend(\"markup\", {}), Prism.languages.insertBefore(\"markdown\", \"prolog\", {\n  blockquote: {\n    pattern: /^>(?:[\\t ]*>)*/m,\n    alias: \"punctuation\"\n  },\n  code: [{\n    pattern: /^(?: {4}|\\t).+/m,\n    alias: \"keyword\"\n  }, {\n    pattern: /``.+?``|`[^`\\n]+`/,\n    alias: \"keyword\"\n  }, {\n    pattern: /^```[\\s\\S]*?^```$/m,\n    greedy: !0,\n    inside: {\n      \"code-block\": {\n        pattern: /^(```.*(?:\\r?\\n|\\r))[\\s\\S]+?(?=(?:\\r?\\n|\\r)^```$)/m,\n        lookbehind: !0\n      },\n      \"code-language\": {\n        pattern: /^(```).+/,\n        lookbehind: !0\n      },\n      punctuation: /```/\n    }\n  }],\n  title: [{\n    pattern: /\\S.*(?:\\r?\\n|\\r)(?:==+|--+)/,\n    alias: \"important\",\n    inside: {\n      punctuation: /==+$|--+$/\n    }\n  }, {\n    pattern: /(^\\s*)#+.+/m,\n    lookbehind: !0,\n    alias: \"important\",\n    inside: {\n      punctuation: /^#+|#+$/\n    }\n  }],\n  hr: {\n    pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n    lookbehind: !0,\n    alias: \"punctuation\"\n  },\n  list: {\n    pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n    lookbehind: !0,\n    alias: \"punctuation\"\n  },\n  \"url-reference\": {\n    pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n    inside: {\n      variable: {\n        pattern: /^(!?\\[)[^\\]]+/,\n        lookbehind: !0\n      },\n      string: /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n      punctuation: /^[\\[\\]!:]|[<>]/\n    },\n    alias: \"url\"\n  },\n  bold: {\n    pattern: /(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n    lookbehind: !0,\n    greedy: !0,\n    inside: {\n      punctuation: /^\\*\\*|^__|\\*\\*$|__$/\n    }\n  },\n  italic: {\n    pattern: /(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n    lookbehind: !0,\n    greedy: !0,\n    inside: {\n      punctuation: /^[*_]|[*_]$/\n    }\n  },\n  strike: {\n    pattern: /(^|[^\\\\])(~~?)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n    lookbehind: !0,\n    greedy: !0,\n    inside: {\n      punctuation: /^~~?|~~?$/\n    }\n  },\n  url: {\n    pattern: /!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,\n    inside: {\n      variable: {\n        pattern: /(!?\\[)[^\\]]+(?=\\]$)/,\n        lookbehind: !0\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/\n      }\n    }\n  }\n}), [\"bold\", \"italic\", \"strike\"].forEach(function (a) {\n  [\"url\", \"bold\", \"italic\", \"strike\"].forEach(function (n) {\n    a !== n && (Prism.languages.markdown[a].inside[n] = Prism.languages.markdown[n]);\n  });\n}), Prism.hooks.add(\"after-tokenize\", function (n) {\n  \"markdown\" !== n.language && \"md\" !== n.language || !function n(a) {\n    if (a && \"string\" != typeof a) for (var t = 0, e = a.length; t < e; t++) {\n      var r = a[t];\n\n      if (\"code\" === r.type) {\n        var i = r.content[1],\n            o = r.content[3];\n\n        if (i && o && \"code-language\" === i.type && \"code-block\" === o.type && \"string\" == typeof i.content) {\n          var s = \"language-\" + i.content.trim().split(/\\s+/)[0].toLowerCase();\n          o.alias ? \"string\" == typeof o.alias ? o.alias = [o.alias, s] : o.alias.push(s) : o.alias = [s];\n        }\n      } else n(r.content);\n    }\n  }(n.tokens);\n}), Prism.hooks.add(\"wrap\", function (n) {\n  if (\"code-block\" === n.type) {\n    for (var a = \"\", t = 0, e = n.classes.length; t < e; t++) {\n      var r = n.classes[t],\n          i = /language-(.+)/.exec(r);\n\n      if (i) {\n        a = i[1];\n        break;\n      }\n    }\n\n    var o = Prism.languages[a];\n\n    if (o) {\n      var s = n.content.replace(/&lt;/g, \"<\").replace(/&amp;/g, \"&\");\n      n.content = Prism.highlight(s, o, a);\n    }\n  }\n}), Prism.languages.md = Prism.languages.markdown;","require(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\n(function (Prism) {\n  /**\n   * Returns the placeholder for the given language id and index.\n   *\n   * @param {string} language\n   * @param {string|number} index\n   * @returns {string}\n   */\n  function getPlaceholder(language, index) {\n    return '___' + language.toUpperCase() + index + '___';\n  }\n\n  Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n    buildPlaceholders: {\n      /**\n       * Tokenize all inline templating expressions matching `placeholderPattern`.\n       *\n       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n       * `true` will be replaced.\n       *\n       * @param {object} env The environment of the `before-tokenize` hook.\n       * @param {string} language The language id.\n       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n       * @param {(match: string) => boolean} [replaceFilter]\n       */\n      value: function value(env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return;\n        }\n\n        var tokenStack = env.tokenStack = [];\n        env.code = env.code.replace(placeholderPattern, function (match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match;\n          }\n\n          var i = tokenStack.length;\n          var placeholder; // Check for existing strings\n\n          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n            ++i;\n          } // Create a sparse array\n\n\n          tokenStack[i] = match;\n          return placeholder;\n        }); // Switch the grammar to markup\n\n        env.grammar = Prism.languages.markup;\n      }\n    },\n    tokenizePlaceholders: {\n      /**\n       * Replace placeholders with proper tokens after tokenizing.\n       *\n       * @param {object} env The environment of the `after-tokenize` hook.\n       * @param {string} language The language id.\n       */\n      value: function value(env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return;\n        } // Switch the grammar back\n\n\n        env.grammar = Prism.languages[language];\n        var j = 0;\n        var keys = Object.keys(env.tokenStack);\n\n        function walkTokens(tokens) {\n          for (var i = 0; i < tokens.length; i++) {\n            // all placeholders are replaced already\n            if (j >= keys.length) {\n              break;\n            }\n\n            var token = tokens[i];\n\n            if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n              var k = keys[j];\n              var t = env.tokenStack[k];\n              var s = typeof token === 'string' ? token : token.content;\n              var placeholder = getPlaceholder(language, k);\n              var index = s.indexOf(placeholder);\n\n              if (index > -1) {\n                ++j;\n                var before = s.substring(0, index);\n                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                var after = s.substring(index + placeholder.length);\n                var replacement = [];\n\n                if (before) {\n                  replacement.push.apply(replacement, walkTokens([before]));\n                }\n\n                replacement.push(middle);\n\n                if (after) {\n                  replacement.push.apply(replacement, walkTokens([after]));\n                }\n\n                if (typeof token === 'string') {\n                  tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                } else {\n                  token.content = replacement;\n                }\n              }\n            } else if (token.content\n            /* && typeof token.content !== 'string' */\n            ) {\n                walkTokens(token.content);\n              }\n          }\n\n          return tokens;\n        }\n\n        walkTokens(env.tokens);\n      }\n    }\n  });\n})(Prism);","require(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\n!function (h) {\n  function v(e, n) {\n    return \"___\" + e.toUpperCase() + n + \"___\";\n  }\n\n  Object.defineProperties(h.languages[\"markup-templating\"] = {}, {\n    buildPlaceholders: {\n      value: function value(a, r, e, o) {\n        if (a.language === r) {\n          var c = a.tokenStack = [];\n          a.code = a.code.replace(e, function (e) {\n            if (\"function\" == typeof o && !o(e)) return e;\n\n            for (var n, t = c.length; -1 !== a.code.indexOf(n = v(r, t));) {\n              ++t;\n            }\n\n            return c[t] = e, n;\n          }), a.grammar = h.languages.markup;\n        }\n      }\n    },\n    tokenizePlaceholders: {\n      value: function value(p, k) {\n        if (p.language === k && p.tokenStack) {\n          p.grammar = h.languages[k];\n          var m = 0,\n              d = Object.keys(p.tokenStack);\n          !function e(n) {\n            for (var t = 0; t < n.length && !(m >= d.length); t++) {\n              var a = n[t];\n\n              if (\"string\" == typeof a || a.content && \"string\" == typeof a.content) {\n                var r = d[m],\n                    o = p.tokenStack[r],\n                    c = \"string\" == typeof a ? a : a.content,\n                    i = v(k, r),\n                    u = c.indexOf(i);\n\n                if (-1 < u) {\n                  ++m;\n                  var g = c.substring(0, u),\n                      l = new h.Token(k, h.tokenize(o, p.grammar), \"language-\" + k, o),\n                      s = c.substring(u + i.length),\n                      f = [];\n                  g && f.push.apply(f, e([g])), f.push(l), s && f.push.apply(f, e([s])), \"string\" == typeof a ? n.splice.apply(n, [t, 1].concat(f)) : a.content = f;\n                }\n              } else a.content && e(a.content);\n            }\n\n            return n;\n          }(p.tokens);\n        }\n      }\n    }\n  });\n}(Prism);","require(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nPrism.languages.markup = {\n  'comment': /<!--[\\s\\S]*?-->/,\n  'prolog': /<\\?[\\s\\S]+?\\?>/,\n  'doctype': /<!DOCTYPE[\\s\\S]+?>/i,\n  'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/i,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n        inside: {\n          'punctuation': [/^=/, {\n            pattern: /^(\\s*)[\"']|[\"']$/,\n            lookbehind: true\n          }]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': /&#?[\\da-z]{1,8};/i\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity']; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: Prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, tagName), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    Prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;","require(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nPrism.languages.markup = {\n  comment: /<!--[\\s\\S]*?-->/,\n  prolog: /<\\?[\\s\\S]+?\\?>/,\n  doctype: /<!DOCTYPE[\\s\\S]+?>/i,\n  cdata: /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n  tag: {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n    greedy: !0,\n    inside: {\n      tag: {\n        pattern: /^<\\/?[^\\s>\\/]+/i,\n        inside: {\n          punctuation: /^<\\/?/,\n          namespace: /^[^\\s>\\/:]+:/\n        }\n      },\n      \"attr-value\": {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n        inside: {\n          punctuation: [/^=/, {\n            pattern: /^(\\s*)[\"']|[\"']$/,\n            lookbehind: !0\n          }]\n        }\n      },\n      punctuation: /\\/?>/,\n      \"attr-name\": {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          namespace: /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  entity: /&#?[\\da-z]{1,8};/i\n}, Prism.languages.markup.tag.inside[\"attr-value\"].inside.entity = Prism.languages.markup.entity, Prism.hooks.add(\"wrap\", function (a) {\n  \"entity\" === a.type && (a.attributes.title = a.content.replace(/&amp;/, \"&\"));\n}), Object.defineProperty(Prism.languages.markup.tag, \"addInlined\", {\n  value: function value(a, e) {\n    var s = {};\n    s[\"language-\" + e] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: !0,\n      inside: Prism.languages[e]\n    }, s.cdata = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var n = {\n      \"included-cdata\": {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: s\n      }\n    };\n    n[\"language-\" + e] = {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages[e]\n    };\n    var i = {};\n    i[a] = {\n      pattern: RegExp(\"(<__[\\\\s\\\\S]*?>)(?:<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\s*|[\\\\s\\\\S])*?(?=<\\\\/__>)\".replace(/__/g, a), \"i\"),\n      lookbehind: !0,\n      greedy: !0,\n      inside: n\n    }, Prism.languages.insertBefore(\"markup\", \"cdata\", i);\n  }\n}), Prism.languages.xml = Prism.languages.extend(\"markup\", {}), Prism.languages.html = Prism.languages.markup, Prism.languages.mathml = Prism.languages.markup, Prism.languages.svg = Prism.languages.markup;","Prism.languages.matlab = {\n  'comment': [/%\\{[\\s\\S]*?\\}%/, /%.+/],\n  'string': {\n    pattern: /\\B'(?:''|[^'\\r\\n])*'/,\n    greedy: true\n  },\n  // FIXME We could handle imaginary numbers as a whole\n  'number': /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n  'keyword': /\\b(?:break|case|catch|continue|else|elseif|end|for|function|if|inf|NaN|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n  'function': /(?!\\d)\\w+(?=\\s*\\()/,\n  'operator': /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n  'punctuation': /\\.{3}|[.,;\\[\\](){}!]/\n};","Prism.languages.matlab = {\n  comment: [/%\\{[\\s\\S]*?\\}%/, /%.+/],\n  string: {\n    pattern: /\\B'(?:''|[^'\\r\\n])*'/,\n    greedy: !0\n  },\n  number: /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n  keyword: /\\b(?:break|case|catch|continue|else|elseif|end|for|function|if|inf|NaN|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n  function: /(?!\\d)\\w+(?=\\s*\\()/,\n  operator: /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n  punctuation: /\\.{3}|[.,;\\[\\](){}!]/\n};","Prism.languages.mel = {\n  'comment': /\\/\\/.*/,\n  'code': {\n    pattern: /`(?:\\\\.|[^\\\\`\\r\\n])*`/,\n    greedy: true,\n    alias: 'italic',\n    inside: {\n      'delimiter': {\n        pattern: /^`|`$/,\n        alias: 'punctuation' // See rest below\n\n      }\n    }\n  },\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'variable': /\\$\\w+/,\n  'number': /\\b0x[\\da-fA-F]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+/,\n  'flag': {\n    pattern: /-[^\\d\\W]\\w*/,\n    alias: 'operator'\n  },\n  'keyword': /\\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\\b/,\n  'function': /\\w+(?=\\()|\\b(?:about|abs|addAttr|addAttributeEditorNodeHelp|addDynamic|addNewShelfTab|addPP|addPanelCategory|addPrefixToName|advanceToNextDrivenKey|affectedNet|affects|aimConstraint|air|alias|aliasAttr|align|alignCtx|alignCurve|alignSurface|allViewFit|ambientLight|angle|angleBetween|animCone|animCurveEditor|animDisplay|animView|annotate|appendStringArray|applicationName|applyAttrPreset|applyTake|arcLenDimContext|arcLengthDimension|arclen|arrayMapper|art3dPaintCtx|artAttrCtx|artAttrPaintVertexCtx|artAttrSkinPaintCtx|artAttrTool|artBuildPaintMenu|artFluidAttrCtx|artPuttyCtx|artSelectCtx|artSetPaintCtx|artUserPaintCtx|assignCommand|assignInputDevice|assignViewportFactories|attachCurve|attachDeviceAttr|attachSurface|attrColorSliderGrp|attrCompatibility|attrControlGrp|attrEnumOptionMenu|attrEnumOptionMenuGrp|attrFieldGrp|attrFieldSliderGrp|attrNavigationControlGrp|attrPresetEditWin|attributeExists|attributeInfo|attributeMenu|attributeQuery|autoKeyframe|autoPlace|bakeClip|bakeFluidShading|bakePartialHistory|bakeResults|bakeSimulation|basename|basenameEx|batchRender|bessel|bevel|bevelPlus|binMembership|bindSkin|blend2|blendShape|blendShapeEditor|blendShapePanel|blendTwoAttr|blindDataType|boneLattice|boundary|boxDollyCtx|boxZoomCtx|bufferCurve|buildBookmarkMenu|buildKeyframeMenu|button|buttonManip|CBG|cacheFile|cacheFileCombine|cacheFileMerge|cacheFileTrack|camera|cameraView|canCreateManip|canvas|capitalizeString|catch|catchQuiet|ceil|changeSubdivComponentDisplayLevel|changeSubdivRegion|channelBox|character|characterMap|characterOutlineEditor|characterize|chdir|checkBox|checkBoxGrp|checkDefaultRenderGlobals|choice|circle|circularFillet|clamp|clear|clearCache|clip|clipEditor|clipEditorCurrentTimeCtx|clipSchedule|clipSchedulerOutliner|clipTrimBefore|closeCurve|closeSurface|cluster|cmdFileOutput|cmdScrollFieldExecuter|cmdScrollFieldReporter|cmdShell|coarsenSubdivSelectionList|collision|color|colorAtPoint|colorEditor|colorIndex|colorIndexSliderGrp|colorSliderButtonGrp|colorSliderGrp|columnLayout|commandEcho|commandLine|commandPort|compactHairSystem|componentEditor|compositingInterop|computePolysetVolume|condition|cone|confirmDialog|connectAttr|connectControl|connectDynamic|connectJoint|connectionInfo|constrain|constrainValue|constructionHistory|container|containsMultibyte|contextInfo|control|convertFromOldLayers|convertIffToPsd|convertLightmap|convertSolidTx|convertTessellation|convertUnit|copyArray|copyFlexor|copyKey|copySkinWeights|cos|cpButton|cpCache|cpClothSet|cpCollision|cpConstraint|cpConvClothToMesh|cpForces|cpGetSolverAttr|cpPanel|cpProperty|cpRigidCollisionFilter|cpSeam|cpSetEdit|cpSetSolverAttr|cpSolver|cpSolverTypes|cpTool|cpUpdateClothUVs|createDisplayLayer|createDrawCtx|createEditor|createLayeredPsdFile|createMotionField|createNewShelf|createNode|createRenderLayer|createSubdivRegion|cross|crossProduct|ctxAbort|ctxCompletion|ctxEditMode|ctxTraverse|currentCtx|currentTime|currentTimeCtx|currentUnit|curve|curveAddPtCtx|curveCVCtx|curveEPCtx|curveEditorCtx|curveIntersect|curveMoveEPCtx|curveOnSurface|curveSketchCtx|cutKey|cycleCheck|cylinder|dagPose|date|defaultLightListCheckBox|defaultNavigation|defineDataServer|defineVirtualDevice|deformer|deg_to_rad|delete|deleteAttr|deleteShadingGroupsAndMaterials|deleteShelfTab|deleteUI|deleteUnusedBrushes|delrandstr|detachCurve|detachDeviceAttr|detachSurface|deviceEditor|devicePanel|dgInfo|dgdirty|dgeval|dgtimer|dimWhen|directKeyCtx|directionalLight|dirmap|dirname|disable|disconnectAttr|disconnectJoint|diskCache|displacementToPoly|displayAffected|displayColor|displayCull|displayLevelOfDetail|displayPref|displayRGBColor|displaySmoothness|displayStats|displayString|displaySurface|distanceDimContext|distanceDimension|doBlur|dolly|dollyCtx|dopeSheetEditor|dot|dotProduct|doubleProfileBirailSurface|drag|dragAttrContext|draggerContext|dropoffLocator|duplicate|duplicateCurve|duplicateSurface|dynCache|dynControl|dynExport|dynExpression|dynGlobals|dynPaintEditor|dynParticleCtx|dynPref|dynRelEdPanel|dynRelEditor|dynamicLoad|editAttrLimits|editDisplayLayerGlobals|editDisplayLayerMembers|editRenderLayerAdjustment|editRenderLayerGlobals|editRenderLayerMembers|editor|editorTemplate|effector|emit|emitter|enableDevice|encodeString|endString|endsWith|env|equivalent|equivalentTol|erf|error|eval|evalDeferred|evalEcho|event|exactWorldBoundingBox|exclusiveLightCheckBox|exec|executeForEachObject|exists|exp|expression|expressionEditorListen|extendCurve|extendSurface|extrude|fcheck|fclose|feof|fflush|fgetline|fgetword|file|fileBrowserDialog|fileDialog|fileExtension|fileInfo|filetest|filletCurve|filter|filterCurve|filterExpand|filterStudioImport|findAllIntersections|findAnimCurves|findKeyframe|findMenuItem|findRelatedSkinCluster|finder|firstParentOf|fitBspline|flexor|floatEq|floatField|floatFieldGrp|floatScrollBar|floatSlider|floatSlider2|floatSliderButtonGrp|floatSliderGrp|floor|flow|fluidCacheInfo|fluidEmitter|fluidVoxelInfo|flushUndo|fmod|fontDialog|fopen|formLayout|format|fprint|frameLayout|fread|freeFormFillet|frewind|fromNativePath|fwrite|gamma|gauss|geometryConstraint|getApplicationVersionAsFloat|getAttr|getClassification|getDefaultBrush|getFileList|getFluidAttr|getInputDeviceRange|getMayaPanelTypes|getModifiers|getPanel|getParticleAttr|getPluginResource|getenv|getpid|glRender|glRenderEditor|globalStitch|gmatch|goal|gotoBindPose|grabColor|gradientControl|gradientControlNoAttr|graphDollyCtx|graphSelectContext|graphTrackCtx|gravity|grid|gridLayout|group|groupObjectsByName|HfAddAttractorToAS|HfAssignAS|HfBuildEqualMap|HfBuildFurFiles|HfBuildFurImages|HfCancelAFR|HfConnectASToHF|HfCreateAttractor|HfDeleteAS|HfEditAS|HfPerformCreateAS|HfRemoveAttractorFromAS|HfSelectAttached|HfSelectAttractors|HfUnAssignAS|hardenPointCurve|hardware|hardwareRenderPanel|headsUpDisplay|headsUpMessage|help|helpLine|hermite|hide|hilite|hitTest|hotBox|hotkey|hotkeyCheck|hsv_to_rgb|hudButton|hudSlider|hudSliderButton|hwReflectionMap|hwRender|hwRenderLoad|hyperGraph|hyperPanel|hyperShade|hypot|iconTextButton|iconTextCheckBox|iconTextRadioButton|iconTextRadioCollection|iconTextScrollList|iconTextStaticLabel|ikHandle|ikHandleCtx|ikHandleDisplayScale|ikSolver|ikSplineHandleCtx|ikSystem|ikSystemInfo|ikfkDisplayMethod|illustratorCurves|image|imfPlugins|inheritTransform|insertJoint|insertJointCtx|insertKeyCtx|insertKnotCurve|insertKnotSurface|instance|instanceable|instancer|intField|intFieldGrp|intScrollBar|intSlider|intSliderGrp|interToUI|internalVar|intersect|iprEngine|isAnimCurve|isConnected|isDirty|isParentOf|isSameObject|isTrue|isValidObjectName|isValidString|isValidUiName|isolateSelect|itemFilter|itemFilterAttr|itemFilterRender|itemFilterType|joint|jointCluster|jointCtx|jointDisplayScale|jointLattice|keyTangent|keyframe|keyframeOutliner|keyframeRegionCurrentTimeCtx|keyframeRegionDirectKeyCtx|keyframeRegionDollyCtx|keyframeRegionInsertKeyCtx|keyframeRegionMoveKeyCtx|keyframeRegionScaleKeyCtx|keyframeRegionSelectKeyCtx|keyframeRegionSetKeyCtx|keyframeRegionTrackCtx|keyframeStats|lassoContext|lattice|latticeDeformKeyCtx|launch|launchImageEditor|layerButton|layeredShaderPort|layeredTexturePort|layout|layoutDialog|lightList|lightListEditor|lightListPanel|lightlink|lineIntersection|linearPrecision|linstep|listAnimatable|listAttr|listCameras|listConnections|listDeviceAttachments|listHistory|listInputDeviceAxes|listInputDeviceButtons|listInputDevices|listMenuAnnotation|listNodeTypes|listPanelCategories|listRelatives|listSets|listTransforms|listUnselected|listerEditor|loadFluid|loadNewShelf|loadPlugin|loadPluginLanguageResources|loadPrefObjects|localizedPanelLabel|lockNode|loft|log|longNameOf|lookThru|ls|lsThroughFilter|lsType|lsUI|Mayatomr|mag|makeIdentity|makeLive|makePaintable|makeRoll|makeSingleSurface|makeTubeOn|makebot|manipMoveContext|manipMoveLimitsCtx|manipOptions|manipRotateContext|manipRotateLimitsCtx|manipScaleContext|manipScaleLimitsCtx|marker|match|max|memory|menu|menuBarLayout|menuEditor|menuItem|menuItemToShelf|menuSet|menuSetPref|messageLine|min|minimizeApp|mirrorJoint|modelCurrentTimeCtx|modelEditor|modelPanel|mouse|movIn|movOut|move|moveIKtoFK|moveKeyCtx|moveVertexAlongDirection|multiProfileBirailSurface|mute|nParticle|nameCommand|nameField|namespace|namespaceInfo|newPanelItems|newton|nodeCast|nodeIconButton|nodeOutliner|nodePreset|nodeType|noise|nonLinear|normalConstraint|normalize|nurbsBoolean|nurbsCopyUVSet|nurbsCube|nurbsEditUV|nurbsPlane|nurbsSelect|nurbsSquare|nurbsToPoly|nurbsToPolygonsPref|nurbsToSubdiv|nurbsToSubdivPref|nurbsUVSet|nurbsViewDirectionVector|objExists|objectCenter|objectLayer|objectType|objectTypeUI|obsoleteProc|oceanNurbsPreviewPlane|offsetCurve|offsetCurveOnSurface|offsetSurface|openGLExtension|openMayaPref|optionMenu|optionMenuGrp|optionVar|orbit|orbitCtx|orientConstraint|outlinerEditor|outlinerPanel|overrideModifier|paintEffectsDisplay|pairBlend|palettePort|paneLayout|panel|panelConfiguration|panelHistory|paramDimContext|paramDimension|paramLocator|parent|parentConstraint|particle|particleExists|particleInstancer|particleRenderInfo|partition|pasteKey|pathAnimation|pause|pclose|percent|performanceOptions|pfxstrokes|pickWalk|picture|pixelMove|planarSrf|plane|play|playbackOptions|playblast|plugAttr|plugNode|pluginInfo|pluginResourceUtil|pointConstraint|pointCurveConstraint|pointLight|pointMatrixMult|pointOnCurve|pointOnSurface|pointPosition|poleVectorConstraint|polyAppend|polyAppendFacetCtx|polyAppendVertex|polyAutoProjection|polyAverageNormal|polyAverageVertex|polyBevel|polyBlendColor|polyBlindData|polyBoolOp|polyBridgeEdge|polyCacheMonitor|polyCheck|polyChipOff|polyClipboard|polyCloseBorder|polyCollapseEdge|polyCollapseFacet|polyColorBlindData|polyColorDel|polyColorPerVertex|polyColorSet|polyCompare|polyCone|polyCopyUV|polyCrease|polyCreaseCtx|polyCreateFacet|polyCreateFacetCtx|polyCube|polyCut|polyCutCtx|polyCylinder|polyCylindricalProjection|polyDelEdge|polyDelFacet|polyDelVertex|polyDuplicateAndConnect|polyDuplicateEdge|polyEditUV|polyEditUVShell|polyEvaluate|polyExtrudeEdge|polyExtrudeFacet|polyExtrudeVertex|polyFlipEdge|polyFlipUV|polyForceUV|polyGeoSampler|polyHelix|polyInfo|polyInstallAction|polyLayoutUV|polyListComponentConversion|polyMapCut|polyMapDel|polyMapSew|polyMapSewMove|polyMergeEdge|polyMergeEdgeCtx|polyMergeFacet|polyMergeFacetCtx|polyMergeUV|polyMergeVertex|polyMirrorFace|polyMoveEdge|polyMoveFacet|polyMoveFacetUV|polyMoveUV|polyMoveVertex|polyNormal|polyNormalPerVertex|polyNormalizeUV|polyOptUvs|polyOptions|polyOutput|polyPipe|polyPlanarProjection|polyPlane|polyPlatonicSolid|polyPoke|polyPrimitive|polyPrism|polyProjection|polyPyramid|polyQuad|polyQueryBlindData|polyReduce|polySelect|polySelectConstraint|polySelectConstraintMonitor|polySelectCtx|polySelectEditCtx|polySeparate|polySetToFaceNormal|polySewEdge|polyShortestPathCtx|polySmooth|polySoftEdge|polySphere|polySphericalProjection|polySplit|polySplitCtx|polySplitEdge|polySplitRing|polySplitVertex|polyStraightenUVBorder|polySubdivideEdge|polySubdivideFacet|polyToSubdiv|polyTorus|polyTransfer|polyTriangulate|polyUVSet|polyUnite|polyWedgeFace|popen|popupMenu|pose|pow|preloadRefEd|print|progressBar|progressWindow|projFileViewer|projectCurve|projectTangent|projectionContext|projectionManip|promptDialog|propModCtx|propMove|psdChannelOutliner|psdEditTextureFile|psdExport|psdTextureFile|putenv|pwd|python|querySubdiv|quit|rad_to_deg|radial|radioButton|radioButtonGrp|radioCollection|radioMenuItemCollection|rampColorPort|rand|randomizeFollicles|randstate|rangeControl|readTake|rebuildCurve|rebuildSurface|recordAttr|recordDevice|redo|reference|referenceEdit|referenceQuery|refineSubdivSelectionList|refresh|refreshAE|registerPluginResource|rehash|reloadImage|removeJoint|removeMultiInstance|removePanelCategory|rename|renameAttr|renameSelectionList|renameUI|render|renderGlobalsNode|renderInfo|renderLayerButton|renderLayerParent|renderLayerPostProcess|renderLayerUnparent|renderManip|renderPartition|renderQualityNode|renderSettings|renderThumbnailUpdate|renderWindowEditor|renderWindowSelectContext|renderer|reorder|reorderDeformers|requires|reroot|resampleFluid|resetAE|resetPfxToPolyCamera|resetTool|resolutionNode|retarget|reverseCurve|reverseSurface|revolve|rgb_to_hsv|rigidBody|rigidSolver|roll|rollCtx|rootOf|rot|rotate|rotationInterpolation|roundConstantRadius|rowColumnLayout|rowLayout|runTimeCommand|runup|sampleImage|saveAllShelves|saveAttrPreset|saveFluid|saveImage|saveInitialState|saveMenu|savePrefObjects|savePrefs|saveShelf|saveToolSettings|scale|scaleBrushBrightness|scaleComponents|scaleConstraint|scaleKey|scaleKeyCtx|sceneEditor|sceneUIReplacement|scmh|scriptCtx|scriptEditorInfo|scriptJob|scriptNode|scriptTable|scriptToShelf|scriptedPanel|scriptedPanelType|scrollField|scrollLayout|sculpt|searchPathArray|seed|selLoadSettings|select|selectContext|selectCurveCV|selectKey|selectKeyCtx|selectKeyframeRegionCtx|selectMode|selectPref|selectPriority|selectType|selectedNodes|selectionConnection|separator|setAttr|setAttrEnumResource|setAttrMapping|setAttrNiceNameResource|setConstraintRestPosition|setDefaultShadingGroup|setDrivenKeyframe|setDynamic|setEditCtx|setEditor|setFluidAttr|setFocus|setInfinity|setInputDeviceMapping|setKeyCtx|setKeyPath|setKeyframe|setKeyframeBlendshapeTargetWts|setMenuMode|setNodeNiceNameResource|setNodeTypeFlag|setParent|setParticleAttr|setPfxToPolyCamera|setPluginResource|setProject|setStampDensity|setStartupMessage|setState|setToolTo|setUITemplate|setXformManip|sets|shadingConnection|shadingGeometryRelCtx|shadingLightRelCtx|shadingNetworkCompare|shadingNode|shapeCompare|shelfButton|shelfLayout|shelfTabLayout|shellField|shortNameOf|showHelp|showHidden|showManipCtx|showSelectionInTitle|showShadingGroupAttrEditor|showWindow|sign|simplify|sin|singleProfileBirailSurface|size|sizeBytes|skinCluster|skinPercent|smoothCurve|smoothTangentSurface|smoothstep|snap2to2|snapKey|snapMode|snapTogetherCtx|snapshot|soft|softMod|softModCtx|sort|sound|soundControl|source|spaceLocator|sphere|sphrand|spotLight|spotLightPreviewPort|spreadSheetEditor|spring|sqrt|squareSurface|srtContext|stackTrace|startString|startsWith|stitchAndExplodeShell|stitchSurface|stitchSurfacePoints|strcmp|stringArrayCatenate|stringArrayContains|stringArrayCount|stringArrayInsertAtIndex|stringArrayIntersector|stringArrayRemove|stringArrayRemoveAtIndex|stringArrayRemoveDuplicates|stringArrayRemoveExact|stringArrayToString|stringToStringArray|strip|stripPrefixFromName|stroke|subdAutoProjection|subdCleanTopology|subdCollapse|subdDuplicateAndConnect|subdEditUV|subdListComponentConversion|subdMapCut|subdMapSewMove|subdMatchTopology|subdMirror|subdToBlind|subdToPoly|subdTransferUVsToCache|subdiv|subdivCrease|subdivDisplaySmoothness|substitute|substituteAllString|substituteGeometry|substring|surface|surfaceSampler|surfaceShaderList|swatchDisplayPort|switchTable|symbolButton|symbolCheckBox|sysFile|system|tabLayout|tan|tangentConstraint|texLatticeDeformContext|texManipContext|texMoveContext|texMoveUVShellContext|texRotateContext|texScaleContext|texSelectContext|texSelectShortestPathCtx|texSmudgeUVContext|texWinToolCtx|text|textCurves|textField|textFieldButtonGrp|textFieldGrp|textManip|textScrollList|textToShelf|textureDisplacePlane|textureHairColor|texturePlacementContext|textureWindow|threadCount|threePointArcCtx|timeControl|timePort|timerX|toNativePath|toggle|toggleAxis|toggleWindowVisibility|tokenize|tokenizeList|tolerance|tolower|toolButton|toolCollection|toolDropped|toolHasOptions|toolPropertyWindow|torus|toupper|trace|track|trackCtx|transferAttributes|transformCompare|transformLimits|translator|trim|trunc|truncateFluidCache|truncateHairCache|tumble|tumbleCtx|turbulence|twoPointArcCtx|uiRes|uiTemplate|unassignInputDevice|undo|undoInfo|ungroup|uniform|unit|unloadPlugin|untangleUV|untitledFileName|untrim|upAxis|updateAE|userCtx|uvLink|uvSnapshot|validateShelfName|vectorize|view2dToolCtx|viewCamera|viewClipPlane|viewFit|viewHeadOn|viewLookAt|viewManip|viewPlace|viewSet|visor|volumeAxis|vortex|waitCursor|warning|webBrowser|webBrowserPrefs|whatIs|window|windowPref|wire|wireContext|workspace|wrinkle|wrinkleContext|writeTake|xbmLangPathList|xform)\\b/,\n  'operator': [/\\+[+=]?|-[-=]?|&&|\\|\\||[<>]=|[*\\/!=]=?|[%^]/, {\n    // We don't want to match <<\n    pattern: /(^|[^<])<(?!<)/,\n    lookbehind: true\n  }, {\n    // We don't want to match >>\n    pattern: /(^|[^>])>(?!>)/,\n    lookbehind: true\n  }],\n  'punctuation': /<<|>>|[.,:;?\\[\\](){}]/\n};\nPrism.languages.mel['code'].inside.rest = Prism.languages.mel;","Prism.languages.mel = {\n  comment: /\\/\\/.*/,\n  code: {\n    pattern: /`(?:\\\\.|[^\\\\`\\r\\n])*`/,\n    greedy: !0,\n    alias: \"italic\",\n    inside: {\n      delimiter: {\n        pattern: /^`|`$/,\n        alias: \"punctuation\"\n      }\n    }\n  },\n  string: {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: !0\n  },\n  variable: /\\$\\w+/,\n  number: /\\b0x[\\da-fA-F]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+/,\n  flag: {\n    pattern: /-[^\\d\\W]\\w*/,\n    alias: \"operator\"\n  },\n  keyword: /\\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\\b/,\n  function: /\\w+(?=\\()|\\b(?:about|abs|addAttr|addAttributeEditorNodeHelp|addDynamic|addNewShelfTab|addPP|addPanelCategory|addPrefixToName|advanceToNextDrivenKey|affectedNet|affects|aimConstraint|air|alias|aliasAttr|align|alignCtx|alignCurve|alignSurface|allViewFit|ambientLight|angle|angleBetween|animCone|animCurveEditor|animDisplay|animView|annotate|appendStringArray|applicationName|applyAttrPreset|applyTake|arcLenDimContext|arcLengthDimension|arclen|arrayMapper|art3dPaintCtx|artAttrCtx|artAttrPaintVertexCtx|artAttrSkinPaintCtx|artAttrTool|artBuildPaintMenu|artFluidAttrCtx|artPuttyCtx|artSelectCtx|artSetPaintCtx|artUserPaintCtx|assignCommand|assignInputDevice|assignViewportFactories|attachCurve|attachDeviceAttr|attachSurface|attrColorSliderGrp|attrCompatibility|attrControlGrp|attrEnumOptionMenu|attrEnumOptionMenuGrp|attrFieldGrp|attrFieldSliderGrp|attrNavigationControlGrp|attrPresetEditWin|attributeExists|attributeInfo|attributeMenu|attributeQuery|autoKeyframe|autoPlace|bakeClip|bakeFluidShading|bakePartialHistory|bakeResults|bakeSimulation|basename|basenameEx|batchRender|bessel|bevel|bevelPlus|binMembership|bindSkin|blend2|blendShape|blendShapeEditor|blendShapePanel|blendTwoAttr|blindDataType|boneLattice|boundary|boxDollyCtx|boxZoomCtx|bufferCurve|buildBookmarkMenu|buildKeyframeMenu|button|buttonManip|CBG|cacheFile|cacheFileCombine|cacheFileMerge|cacheFileTrack|camera|cameraView|canCreateManip|canvas|capitalizeString|catch|catchQuiet|ceil|changeSubdivComponentDisplayLevel|changeSubdivRegion|channelBox|character|characterMap|characterOutlineEditor|characterize|chdir|checkBox|checkBoxGrp|checkDefaultRenderGlobals|choice|circle|circularFillet|clamp|clear|clearCache|clip|clipEditor|clipEditorCurrentTimeCtx|clipSchedule|clipSchedulerOutliner|clipTrimBefore|closeCurve|closeSurface|cluster|cmdFileOutput|cmdScrollFieldExecuter|cmdScrollFieldReporter|cmdShell|coarsenSubdivSelectionList|collision|color|colorAtPoint|colorEditor|colorIndex|colorIndexSliderGrp|colorSliderButtonGrp|colorSliderGrp|columnLayout|commandEcho|commandLine|commandPort|compactHairSystem|componentEditor|compositingInterop|computePolysetVolume|condition|cone|confirmDialog|connectAttr|connectControl|connectDynamic|connectJoint|connectionInfo|constrain|constrainValue|constructionHistory|container|containsMultibyte|contextInfo|control|convertFromOldLayers|convertIffToPsd|convertLightmap|convertSolidTx|convertTessellation|convertUnit|copyArray|copyFlexor|copyKey|copySkinWeights|cos|cpButton|cpCache|cpClothSet|cpCollision|cpConstraint|cpConvClothToMesh|cpForces|cpGetSolverAttr|cpPanel|cpProperty|cpRigidCollisionFilter|cpSeam|cpSetEdit|cpSetSolverAttr|cpSolver|cpSolverTypes|cpTool|cpUpdateClothUVs|createDisplayLayer|createDrawCtx|createEditor|createLayeredPsdFile|createMotionField|createNewShelf|createNode|createRenderLayer|createSubdivRegion|cross|crossProduct|ctxAbort|ctxCompletion|ctxEditMode|ctxTraverse|currentCtx|currentTime|currentTimeCtx|currentUnit|curve|curveAddPtCtx|curveCVCtx|curveEPCtx|curveEditorCtx|curveIntersect|curveMoveEPCtx|curveOnSurface|curveSketchCtx|cutKey|cycleCheck|cylinder|dagPose|date|defaultLightListCheckBox|defaultNavigation|defineDataServer|defineVirtualDevice|deformer|deg_to_rad|delete|deleteAttr|deleteShadingGroupsAndMaterials|deleteShelfTab|deleteUI|deleteUnusedBrushes|delrandstr|detachCurve|detachDeviceAttr|detachSurface|deviceEditor|devicePanel|dgInfo|dgdirty|dgeval|dgtimer|dimWhen|directKeyCtx|directionalLight|dirmap|dirname|disable|disconnectAttr|disconnectJoint|diskCache|displacementToPoly|displayAffected|displayColor|displayCull|displayLevelOfDetail|displayPref|displayRGBColor|displaySmoothness|displayStats|displayString|displaySurface|distanceDimContext|distanceDimension|doBlur|dolly|dollyCtx|dopeSheetEditor|dot|dotProduct|doubleProfileBirailSurface|drag|dragAttrContext|draggerContext|dropoffLocator|duplicate|duplicateCurve|duplicateSurface|dynCache|dynControl|dynExport|dynExpression|dynGlobals|dynPaintEditor|dynParticleCtx|dynPref|dynRelEdPanel|dynRelEditor|dynamicLoad|editAttrLimits|editDisplayLayerGlobals|editDisplayLayerMembers|editRenderLayerAdjustment|editRenderLayerGlobals|editRenderLayerMembers|editor|editorTemplate|effector|emit|emitter|enableDevice|encodeString|endString|endsWith|env|equivalent|equivalentTol|erf|error|eval|evalDeferred|evalEcho|event|exactWorldBoundingBox|exclusiveLightCheckBox|exec|executeForEachObject|exists|exp|expression|expressionEditorListen|extendCurve|extendSurface|extrude|fcheck|fclose|feof|fflush|fgetline|fgetword|file|fileBrowserDialog|fileDialog|fileExtension|fileInfo|filetest|filletCurve|filter|filterCurve|filterExpand|filterStudioImport|findAllIntersections|findAnimCurves|findKeyframe|findMenuItem|findRelatedSkinCluster|finder|firstParentOf|fitBspline|flexor|floatEq|floatField|floatFieldGrp|floatScrollBar|floatSlider|floatSlider2|floatSliderButtonGrp|floatSliderGrp|floor|flow|fluidCacheInfo|fluidEmitter|fluidVoxelInfo|flushUndo|fmod|fontDialog|fopen|formLayout|format|fprint|frameLayout|fread|freeFormFillet|frewind|fromNativePath|fwrite|gamma|gauss|geometryConstraint|getApplicationVersionAsFloat|getAttr|getClassification|getDefaultBrush|getFileList|getFluidAttr|getInputDeviceRange|getMayaPanelTypes|getModifiers|getPanel|getParticleAttr|getPluginResource|getenv|getpid|glRender|glRenderEditor|globalStitch|gmatch|goal|gotoBindPose|grabColor|gradientControl|gradientControlNoAttr|graphDollyCtx|graphSelectContext|graphTrackCtx|gravity|grid|gridLayout|group|groupObjectsByName|HfAddAttractorToAS|HfAssignAS|HfBuildEqualMap|HfBuildFurFiles|HfBuildFurImages|HfCancelAFR|HfConnectASToHF|HfCreateAttractor|HfDeleteAS|HfEditAS|HfPerformCreateAS|HfRemoveAttractorFromAS|HfSelectAttached|HfSelectAttractors|HfUnAssignAS|hardenPointCurve|hardware|hardwareRenderPanel|headsUpDisplay|headsUpMessage|help|helpLine|hermite|hide|hilite|hitTest|hotBox|hotkey|hotkeyCheck|hsv_to_rgb|hudButton|hudSlider|hudSliderButton|hwReflectionMap|hwRender|hwRenderLoad|hyperGraph|hyperPanel|hyperShade|hypot|iconTextButton|iconTextCheckBox|iconTextRadioButton|iconTextRadioCollection|iconTextScrollList|iconTextStaticLabel|ikHandle|ikHandleCtx|ikHandleDisplayScale|ikSolver|ikSplineHandleCtx|ikSystem|ikSystemInfo|ikfkDisplayMethod|illustratorCurves|image|imfPlugins|inheritTransform|insertJoint|insertJointCtx|insertKeyCtx|insertKnotCurve|insertKnotSurface|instance|instanceable|instancer|intField|intFieldGrp|intScrollBar|intSlider|intSliderGrp|interToUI|internalVar|intersect|iprEngine|isAnimCurve|isConnected|isDirty|isParentOf|isSameObject|isTrue|isValidObjectName|isValidString|isValidUiName|isolateSelect|itemFilter|itemFilterAttr|itemFilterRender|itemFilterType|joint|jointCluster|jointCtx|jointDisplayScale|jointLattice|keyTangent|keyframe|keyframeOutliner|keyframeRegionCurrentTimeCtx|keyframeRegionDirectKeyCtx|keyframeRegionDollyCtx|keyframeRegionInsertKeyCtx|keyframeRegionMoveKeyCtx|keyframeRegionScaleKeyCtx|keyframeRegionSelectKeyCtx|keyframeRegionSetKeyCtx|keyframeRegionTrackCtx|keyframeStats|lassoContext|lattice|latticeDeformKeyCtx|launch|launchImageEditor|layerButton|layeredShaderPort|layeredTexturePort|layout|layoutDialog|lightList|lightListEditor|lightListPanel|lightlink|lineIntersection|linearPrecision|linstep|listAnimatable|listAttr|listCameras|listConnections|listDeviceAttachments|listHistory|listInputDeviceAxes|listInputDeviceButtons|listInputDevices|listMenuAnnotation|listNodeTypes|listPanelCategories|listRelatives|listSets|listTransforms|listUnselected|listerEditor|loadFluid|loadNewShelf|loadPlugin|loadPluginLanguageResources|loadPrefObjects|localizedPanelLabel|lockNode|loft|log|longNameOf|lookThru|ls|lsThroughFilter|lsType|lsUI|Mayatomr|mag|makeIdentity|makeLive|makePaintable|makeRoll|makeSingleSurface|makeTubeOn|makebot|manipMoveContext|manipMoveLimitsCtx|manipOptions|manipRotateContext|manipRotateLimitsCtx|manipScaleContext|manipScaleLimitsCtx|marker|match|max|memory|menu|menuBarLayout|menuEditor|menuItem|menuItemToShelf|menuSet|menuSetPref|messageLine|min|minimizeApp|mirrorJoint|modelCurrentTimeCtx|modelEditor|modelPanel|mouse|movIn|movOut|move|moveIKtoFK|moveKeyCtx|moveVertexAlongDirection|multiProfileBirailSurface|mute|nParticle|nameCommand|nameField|namespace|namespaceInfo|newPanelItems|newton|nodeCast|nodeIconButton|nodeOutliner|nodePreset|nodeType|noise|nonLinear|normalConstraint|normalize|nurbsBoolean|nurbsCopyUVSet|nurbsCube|nurbsEditUV|nurbsPlane|nurbsSelect|nurbsSquare|nurbsToPoly|nurbsToPolygonsPref|nurbsToSubdiv|nurbsToSubdivPref|nurbsUVSet|nurbsViewDirectionVector|objExists|objectCenter|objectLayer|objectType|objectTypeUI|obsoleteProc|oceanNurbsPreviewPlane|offsetCurve|offsetCurveOnSurface|offsetSurface|openGLExtension|openMayaPref|optionMenu|optionMenuGrp|optionVar|orbit|orbitCtx|orientConstraint|outlinerEditor|outlinerPanel|overrideModifier|paintEffectsDisplay|pairBlend|palettePort|paneLayout|panel|panelConfiguration|panelHistory|paramDimContext|paramDimension|paramLocator|parent|parentConstraint|particle|particleExists|particleInstancer|particleRenderInfo|partition|pasteKey|pathAnimation|pause|pclose|percent|performanceOptions|pfxstrokes|pickWalk|picture|pixelMove|planarSrf|plane|play|playbackOptions|playblast|plugAttr|plugNode|pluginInfo|pluginResourceUtil|pointConstraint|pointCurveConstraint|pointLight|pointMatrixMult|pointOnCurve|pointOnSurface|pointPosition|poleVectorConstraint|polyAppend|polyAppendFacetCtx|polyAppendVertex|polyAutoProjection|polyAverageNormal|polyAverageVertex|polyBevel|polyBlendColor|polyBlindData|polyBoolOp|polyBridgeEdge|polyCacheMonitor|polyCheck|polyChipOff|polyClipboard|polyCloseBorder|polyCollapseEdge|polyCollapseFacet|polyColorBlindData|polyColorDel|polyColorPerVertex|polyColorSet|polyCompare|polyCone|polyCopyUV|polyCrease|polyCreaseCtx|polyCreateFacet|polyCreateFacetCtx|polyCube|polyCut|polyCutCtx|polyCylinder|polyCylindricalProjection|polyDelEdge|polyDelFacet|polyDelVertex|polyDuplicateAndConnect|polyDuplicateEdge|polyEditUV|polyEditUVShell|polyEvaluate|polyExtrudeEdge|polyExtrudeFacet|polyExtrudeVertex|polyFlipEdge|polyFlipUV|polyForceUV|polyGeoSampler|polyHelix|polyInfo|polyInstallAction|polyLayoutUV|polyListComponentConversion|polyMapCut|polyMapDel|polyMapSew|polyMapSewMove|polyMergeEdge|polyMergeEdgeCtx|polyMergeFacet|polyMergeFacetCtx|polyMergeUV|polyMergeVertex|polyMirrorFace|polyMoveEdge|polyMoveFacet|polyMoveFacetUV|polyMoveUV|polyMoveVertex|polyNormal|polyNormalPerVertex|polyNormalizeUV|polyOptUvs|polyOptions|polyOutput|polyPipe|polyPlanarProjection|polyPlane|polyPlatonicSolid|polyPoke|polyPrimitive|polyPrism|polyProjection|polyPyramid|polyQuad|polyQueryBlindData|polyReduce|polySelect|polySelectConstraint|polySelectConstraintMonitor|polySelectCtx|polySelectEditCtx|polySeparate|polySetToFaceNormal|polySewEdge|polyShortestPathCtx|polySmooth|polySoftEdge|polySphere|polySphericalProjection|polySplit|polySplitCtx|polySplitEdge|polySplitRing|polySplitVertex|polyStraightenUVBorder|polySubdivideEdge|polySubdivideFacet|polyToSubdiv|polyTorus|polyTransfer|polyTriangulate|polyUVSet|polyUnite|polyWedgeFace|popen|popupMenu|pose|pow|preloadRefEd|print|progressBar|progressWindow|projFileViewer|projectCurve|projectTangent|projectionContext|projectionManip|promptDialog|propModCtx|propMove|psdChannelOutliner|psdEditTextureFile|psdExport|psdTextureFile|putenv|pwd|python|querySubdiv|quit|rad_to_deg|radial|radioButton|radioButtonGrp|radioCollection|radioMenuItemCollection|rampColorPort|rand|randomizeFollicles|randstate|rangeControl|readTake|rebuildCurve|rebuildSurface|recordAttr|recordDevice|redo|reference|referenceEdit|referenceQuery|refineSubdivSelectionList|refresh|refreshAE|registerPluginResource|rehash|reloadImage|removeJoint|removeMultiInstance|removePanelCategory|rename|renameAttr|renameSelectionList|renameUI|render|renderGlobalsNode|renderInfo|renderLayerButton|renderLayerParent|renderLayerPostProcess|renderLayerUnparent|renderManip|renderPartition|renderQualityNode|renderSettings|renderThumbnailUpdate|renderWindowEditor|renderWindowSelectContext|renderer|reorder|reorderDeformers|requires|reroot|resampleFluid|resetAE|resetPfxToPolyCamera|resetTool|resolutionNode|retarget|reverseCurve|reverseSurface|revolve|rgb_to_hsv|rigidBody|rigidSolver|roll|rollCtx|rootOf|rot|rotate|rotationInterpolation|roundConstantRadius|rowColumnLayout|rowLayout|runTimeCommand|runup|sampleImage|saveAllShelves|saveAttrPreset|saveFluid|saveImage|saveInitialState|saveMenu|savePrefObjects|savePrefs|saveShelf|saveToolSettings|scale|scaleBrushBrightness|scaleComponents|scaleConstraint|scaleKey|scaleKeyCtx|sceneEditor|sceneUIReplacement|scmh|scriptCtx|scriptEditorInfo|scriptJob|scriptNode|scriptTable|scriptToShelf|scriptedPanel|scriptedPanelType|scrollField|scrollLayout|sculpt|searchPathArray|seed|selLoadSettings|select|selectContext|selectCurveCV|selectKey|selectKeyCtx|selectKeyframeRegionCtx|selectMode|selectPref|selectPriority|selectType|selectedNodes|selectionConnection|separator|setAttr|setAttrEnumResource|setAttrMapping|setAttrNiceNameResource|setConstraintRestPosition|setDefaultShadingGroup|setDrivenKeyframe|setDynamic|setEditCtx|setEditor|setFluidAttr|setFocus|setInfinity|setInputDeviceMapping|setKeyCtx|setKeyPath|setKeyframe|setKeyframeBlendshapeTargetWts|setMenuMode|setNodeNiceNameResource|setNodeTypeFlag|setParent|setParticleAttr|setPfxToPolyCamera|setPluginResource|setProject|setStampDensity|setStartupMessage|setState|setToolTo|setUITemplate|setXformManip|sets|shadingConnection|shadingGeometryRelCtx|shadingLightRelCtx|shadingNetworkCompare|shadingNode|shapeCompare|shelfButton|shelfLayout|shelfTabLayout|shellField|shortNameOf|showHelp|showHidden|showManipCtx|showSelectionInTitle|showShadingGroupAttrEditor|showWindow|sign|simplify|sin|singleProfileBirailSurface|size|sizeBytes|skinCluster|skinPercent|smoothCurve|smoothTangentSurface|smoothstep|snap2to2|snapKey|snapMode|snapTogetherCtx|snapshot|soft|softMod|softModCtx|sort|sound|soundControl|source|spaceLocator|sphere|sphrand|spotLight|spotLightPreviewPort|spreadSheetEditor|spring|sqrt|squareSurface|srtContext|stackTrace|startString|startsWith|stitchAndExplodeShell|stitchSurface|stitchSurfacePoints|strcmp|stringArrayCatenate|stringArrayContains|stringArrayCount|stringArrayInsertAtIndex|stringArrayIntersector|stringArrayRemove|stringArrayRemoveAtIndex|stringArrayRemoveDuplicates|stringArrayRemoveExact|stringArrayToString|stringToStringArray|strip|stripPrefixFromName|stroke|subdAutoProjection|subdCleanTopology|subdCollapse|subdDuplicateAndConnect|subdEditUV|subdListComponentConversion|subdMapCut|subdMapSewMove|subdMatchTopology|subdMirror|subdToBlind|subdToPoly|subdTransferUVsToCache|subdiv|subdivCrease|subdivDisplaySmoothness|substitute|substituteAllString|substituteGeometry|substring|surface|surfaceSampler|surfaceShaderList|swatchDisplayPort|switchTable|symbolButton|symbolCheckBox|sysFile|system|tabLayout|tan|tangentConstraint|texLatticeDeformContext|texManipContext|texMoveContext|texMoveUVShellContext|texRotateContext|texScaleContext|texSelectContext|texSelectShortestPathCtx|texSmudgeUVContext|texWinToolCtx|text|textCurves|textField|textFieldButtonGrp|textFieldGrp|textManip|textScrollList|textToShelf|textureDisplacePlane|textureHairColor|texturePlacementContext|textureWindow|threadCount|threePointArcCtx|timeControl|timePort|timerX|toNativePath|toggle|toggleAxis|toggleWindowVisibility|tokenize|tokenizeList|tolerance|tolower|toolButton|toolCollection|toolDropped|toolHasOptions|toolPropertyWindow|torus|toupper|trace|track|trackCtx|transferAttributes|transformCompare|transformLimits|translator|trim|trunc|truncateFluidCache|truncateHairCache|tumble|tumbleCtx|turbulence|twoPointArcCtx|uiRes|uiTemplate|unassignInputDevice|undo|undoInfo|ungroup|uniform|unit|unloadPlugin|untangleUV|untitledFileName|untrim|upAxis|updateAE|userCtx|uvLink|uvSnapshot|validateShelfName|vectorize|view2dToolCtx|viewCamera|viewClipPlane|viewFit|viewHeadOn|viewLookAt|viewManip|viewPlace|viewSet|visor|volumeAxis|vortex|waitCursor|warning|webBrowser|webBrowserPrefs|whatIs|window|windowPref|wire|wireContext|workspace|wrinkle|wrinkleContext|writeTake|xbmLangPathList|xform)\\b/,\n  operator: [/\\+[+=]?|-[-=]?|&&|\\|\\||[<>]=|[*\\/!=]=?|[%^]/, {\n    pattern: /(^|[^<])<(?!<)/,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^>])>(?!>)/,\n    lookbehind: !0\n  }],\n  punctuation: /<<|>>|[.,:;?\\[\\](){}]/\n}, Prism.languages.mel.code.inside.rest = Prism.languages.mel;","Prism.languages.mizar = {\n  'comment': /::.+/,\n  'keyword': /@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|equals|end|environ|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:y|ies)|when|where|with|wrt)\\b/,\n  'parameter': {\n    pattern: /\\$(?:10|\\d)/,\n    alias: 'variable'\n  },\n  'variable': /\\w+(?=:)/,\n  'number': /(?:\\b|-)\\d+\\b/,\n  'operator': /\\.\\.\\.|->|&|\\.?=/,\n  'punctuation': /\\(#|#\\)|[,:;\\[\\](){}]/\n};","Prism.languages.mizar = {\n  comment: /::.+/,\n  keyword: /@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|equals|end|environ|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:y|ies)|when|where|with|wrt)\\b/,\n  parameter: {\n    pattern: /\\$(?:10|\\d)/,\n    alias: \"variable\"\n  },\n  variable: /\\w+(?=:)/,\n  number: /(?:\\b|-)\\d+\\b/,\n  operator: /\\.\\.\\.|->|&|\\.?=/,\n  punctuation: /\\(#|#\\)|[,:;\\[\\](){}]/\n};","Prism.languages.monkey = {\n  'string': /\"[^\"\\r\\n]*\"/,\n  'comment': [{\n    pattern: /^#Rem\\s+[\\s\\S]*?^#End/im,\n    greedy: true\n  }, {\n    pattern: /'.+/,\n    greedy: true\n  }],\n  'preprocessor': {\n    pattern: /(^[ \\t]*)#.+/m,\n    lookbehind: true,\n    alias: 'comment'\n  },\n  'function': /\\w+(?=\\()/,\n  'type-char': {\n    pattern: /(\\w)[?%#$]/,\n    lookbehind: true,\n    alias: 'variable'\n  },\n  'number': {\n    pattern: /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:Void|Strict|Public|Private|Property|Bool|Int|Float|String|Array|Object|Continue|Exit|Import|Extern|New|Self|Super|Try|Catch|Eachin|True|False|Extends|Abstract|Final|Select|Case|Default|Const|Local|Global|Field|Method|Function|Class|End|If|Then|Else|ElseIf|EndIf|While|Wend|Repeat|Until|Forever|For|To|Step|Next|Return|Module|Interface|Implements|Inline|Throw|Null)\\b/i,\n  'operator': /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\n  'punctuation': /[.,:;()\\[\\]]/\n};","Prism.languages.monkey = {\n  string: /\"[^\"\\r\\n]*\"/,\n  comment: [{\n    pattern: /^#Rem\\s+[\\s\\S]*?^#End/im,\n    greedy: !0\n  }, {\n    pattern: /'.+/,\n    greedy: !0\n  }],\n  preprocessor: {\n    pattern: /(^[ \\t]*)#.+/m,\n    lookbehind: !0,\n    alias: \"comment\"\n  },\n  function: /\\w+(?=\\()/,\n  \"type-char\": {\n    pattern: /(\\w)[?%#$]/,\n    lookbehind: !0,\n    alias: \"variable\"\n  },\n  number: {\n    pattern: /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\n    lookbehind: !0\n  },\n  keyword: /\\b(?:Void|Strict|Public|Private|Property|Bool|Int|Float|String|Array|Object|Continue|Exit|Import|Extern|New|Self|Super|Try|Catch|Eachin|True|False|Extends|Abstract|Final|Select|Case|Default|Const|Local|Global|Field|Method|Function|Class|End|If|Then|Else|ElseIf|EndIf|While|Wend|Repeat|Until|Forever|For|To|Step|Next|Return|Module|Interface|Implements|Inline|Throw|Null)\\b/i,\n  operator: /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\n  punctuation: /[.,:;()\\[\\]]/\n};","Prism.languages.n1ql = {\n  'comment': /\\/\\*[\\s\\S]*?(?:$|\\*\\/)/,\n  'parameter': /\\$[\\w.]+/,\n  'string': {\n    pattern: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\]|\\1\\1)*\\1/,\n    greedy: true\n  },\n  'identifier': {\n    pattern: /`(?:\\\\[\\s\\S]|[^\\\\`]|``)*`/,\n    greedy: true\n  },\n  'function': /\\b(?:ABS|ACOS|ARRAY_AGG|ARRAY_APPEND|ARRAY_AVG|ARRAY_CONCAT|ARRAY_CONTAINS|ARRAY_COUNT|ARRAY_DISTINCT|ARRAY_FLATTEN|ARRAY_IFNULL|ARRAY_INSERT|ARRAY_INTERSECT|ARRAY_LENGTH|ARRAY_MAX|ARRAY_MIN|ARRAY_POSITION|ARRAY_PREPEND|ARRAY_PUT|ARRAY_RANGE|ARRAY_REMOVE|ARRAY_REPEAT|ARRAY_REPLACE|ARRAY_REVERSE|ARRAY_SORT|ARRAY_STAR|ARRAY_SUM|ARRAY_SYMDIFF|ARRAY_SYMDIFFN|ARRAY_UNION|ASIN|ATAN|ATAN2|AVG|BASE64|BASE64_DECODE|BASE64_ENCODE|BITAND|BITCLEAR|BITNOT|BITOR|BITSET|BITSHIFT|BITTEST|BITXOR|CEIL|CLOCK_LOCAL|CLOCK_MILLIS|CLOCK_STR|CLOCK_TZ|CLOCK_UTC|CONTAINS|CONTAINS_TOKEN|CONTAINS_TOKEN_LIKE|CONTAINS_TOKEN_REGEXP|COS|COUNT|CURL|DATE_ADD_MILLIS|DATE_ADD_STR|DATE_DIFF_MILLIS|DATE_DIFF_STR|DATE_FORMAT_STR|DATE_PART_MILLIS|DATE_PART_STR|DATE_RANGE_MILLIS|DATE_RANGE_STR|DATE_TRUNC_MILLIS|DATE_TRUNC_STR|DECODE_JSON|DEGREES|DURATION_TO_STR|E|ENCODED_SIZE|ENCODE_JSON|EXP|FLOOR|GREATEST|HAS_TOKEN|IFINF|IFMISSING|IFMISSINGORNULL|IFNAN|IFNANORINF|IFNULL|INITCAP|ISARRAY|ISATOM|ISBOOLEAN|ISNUMBER|ISOBJECT|ISSTRING|IsBitSET|LEAST|LENGTH|LN|LOG|LOWER|LTRIM|MAX|META|MILLIS|MILLIS_TO_LOCAL|MILLIS_TO_STR|MILLIS_TO_TZ|MILLIS_TO_UTC|MILLIS_TO_ZONE_NAME|MIN|MISSINGIF|NANIF|NEGINFIF|NOW_LOCAL|NOW_MILLIS|NOW_STR|NOW_TZ|NOW_UTC|NULLIF|OBJECT_ADD|OBJECT_CONCAT|OBJECT_INNER_PAIRS|OBJECT_INNER_VALUES|OBJECT_LENGTH|OBJECT_NAMES|OBJECT_PAIRS|OBJECT_PUT|OBJECT_REMOVE|OBJECT_RENAME|OBJECT_REPLACE|OBJECT_UNWRAP|OBJECT_VALUES|PAIRS|PI|POLY_LENGTH|POSINFIF|POSITION|POWER|RADIANS|RANDOM|REGEXP_CONTAINS|REGEXP_LIKE|REGEXP_POSITION|REGEXP_REPLACE|REPEAT|REPLACE|REVERSE|ROUND|RTRIM|SIGN|SIN|SPLIT|SQRT|STR_TO_DURATION|STR_TO_MILLIS|STR_TO_TZ|STR_TO_UTC|STR_TO_ZONE_NAME|SUBSTR|SUFFIXES|SUM|TAN|TITLE|TOARRAY|TOATOM|TOBOOLEAN|TOKENS|TOKENS|TONUMBER|TOOBJECT|TOSTRING|TRIM|TRUNC|TYPE|UPPER|WEEKDAY_MILLIS|WEEKDAY_STR)(?=\\s*\\()/i,\n  'keyword': /\\b(?:ALL|ALTER|ANALYZE|AS|ASC|BEGIN|BINARY|BOOLEAN|BREAK|BUCKET|BUILD|BY|CALL|CAST|CLUSTER|COLLATE|COLLECTION|COMMIT|CONNECT|CONTINUE|CORRELATE|COVER|CREATE|DATABASE|DATASET|DATASTORE|DECLARE|DECREMENT|DELETE|DERIVED|DESC|DESCRIBE|DISTINCT|DO|DROP|EACH|ELEMENT|EXCEPT|EXCLUDE|EXECUTE|EXPLAIN|FETCH|FLATTEN|FOR|FORCE|FROM|FUNCTION|GRANT|GROUP|GSI|HAVING|IF|IGNORE|ILIKE|INCLUDE|INCREMENT|INDEX|INFER|INLINE|INNER|INSERT|INTERSECT|INTO|IS|JOIN|KEY|KEYS|KEYSPACE|KNOWN|LAST|LEFT|LET|LETTING|LIMIT|LSM|MAP|MAPPING|MATCHED|MATERIALIZED|MERGE|MINUS|MISSING|NAMESPACE|NEST|NULL|NUMBER|OBJECT|OFFSET|ON|OPTION|ORDER|OUTER|OVER|PARSE|PARTITION|PASSWORD|PATH|POOL|PREPARE|PRIMARY|PRIVATE|PRIVILEGE|PROCEDURE|PUBLIC|RAW|REALM|REDUCE|RENAME|RETURN|RETURNING|REVOKE|RIGHT|ROLE|ROLLBACK|SATISFIES|SCHEMA|SELECT|SELF|SEMI|SET|SHOW|SOME|START|STATISTICS|STRING|SYSTEM|TO|TRANSACTION|TRIGGER|TRUNCATE|UNDER|UNION|UNIQUE|UNKNOWN|UNNEST|UNSET|UPDATE|UPSERT|USE|USER|USING|VALIDATE|VALUE|VALUES|VIA|VIEW|WHERE|WHILE|WITH|WORK|XOR)\\b/i,\n  'boolean': /\\b(?:TRUE|FALSE)\\b/i,\n  'number': /(?:\\b\\d+\\.|\\B\\.)\\d+e[+\\-]?\\d+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%]|!=|==?|\\|\\||<[>=]?|>=?|\\b(?:AND|ANY|ARRAY|BETWEEN|CASE|ELSE|END|EVERY|EXISTS|FIRST|IN|LIKE|NOT|OR|THEN|VALUED|WHEN|WITHIN)\\b/i,\n  'punctuation': /[;[\\](),.{}:]/\n};","Prism.languages.n1ql = {\n  comment: /\\/\\*[\\s\\S]*?(?:$|\\*\\/)/,\n  parameter: /\\$[\\w.]+/,\n  string: {\n    pattern: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\]|\\1\\1)*\\1/,\n    greedy: !0\n  },\n  identifier: {\n    pattern: /`(?:\\\\[\\s\\S]|[^\\\\`]|``)*`/,\n    greedy: !0\n  },\n  function: /\\b(?:ABS|ACOS|ARRAY_AGG|ARRAY_APPEND|ARRAY_AVG|ARRAY_CONCAT|ARRAY_CONTAINS|ARRAY_COUNT|ARRAY_DISTINCT|ARRAY_FLATTEN|ARRAY_IFNULL|ARRAY_INSERT|ARRAY_INTERSECT|ARRAY_LENGTH|ARRAY_MAX|ARRAY_MIN|ARRAY_POSITION|ARRAY_PREPEND|ARRAY_PUT|ARRAY_RANGE|ARRAY_REMOVE|ARRAY_REPEAT|ARRAY_REPLACE|ARRAY_REVERSE|ARRAY_SORT|ARRAY_STAR|ARRAY_SUM|ARRAY_SYMDIFF|ARRAY_SYMDIFFN|ARRAY_UNION|ASIN|ATAN|ATAN2|AVG|BASE64|BASE64_DECODE|BASE64_ENCODE|BITAND|BITCLEAR|BITNOT|BITOR|BITSET|BITSHIFT|BITTEST|BITXOR|CEIL|CLOCK_LOCAL|CLOCK_MILLIS|CLOCK_STR|CLOCK_TZ|CLOCK_UTC|CONTAINS|CONTAINS_TOKEN|CONTAINS_TOKEN_LIKE|CONTAINS_TOKEN_REGEXP|COS|COUNT|CURL|DATE_ADD_MILLIS|DATE_ADD_STR|DATE_DIFF_MILLIS|DATE_DIFF_STR|DATE_FORMAT_STR|DATE_PART_MILLIS|DATE_PART_STR|DATE_RANGE_MILLIS|DATE_RANGE_STR|DATE_TRUNC_MILLIS|DATE_TRUNC_STR|DECODE_JSON|DEGREES|DURATION_TO_STR|E|ENCODED_SIZE|ENCODE_JSON|EXP|FLOOR|GREATEST|HAS_TOKEN|IFINF|IFMISSING|IFMISSINGORNULL|IFNAN|IFNANORINF|IFNULL|INITCAP|ISARRAY|ISATOM|ISBOOLEAN|ISNUMBER|ISOBJECT|ISSTRING|IsBitSET|LEAST|LENGTH|LN|LOG|LOWER|LTRIM|MAX|META|MILLIS|MILLIS_TO_LOCAL|MILLIS_TO_STR|MILLIS_TO_TZ|MILLIS_TO_UTC|MILLIS_TO_ZONE_NAME|MIN|MISSINGIF|NANIF|NEGINFIF|NOW_LOCAL|NOW_MILLIS|NOW_STR|NOW_TZ|NOW_UTC|NULLIF|OBJECT_ADD|OBJECT_CONCAT|OBJECT_INNER_PAIRS|OBJECT_INNER_VALUES|OBJECT_LENGTH|OBJECT_NAMES|OBJECT_PAIRS|OBJECT_PUT|OBJECT_REMOVE|OBJECT_RENAME|OBJECT_REPLACE|OBJECT_UNWRAP|OBJECT_VALUES|PAIRS|PI|POLY_LENGTH|POSINFIF|POSITION|POWER|RADIANS|RANDOM|REGEXP_CONTAINS|REGEXP_LIKE|REGEXP_POSITION|REGEXP_REPLACE|REPEAT|REPLACE|REVERSE|ROUND|RTRIM|SIGN|SIN|SPLIT|SQRT|STR_TO_DURATION|STR_TO_MILLIS|STR_TO_TZ|STR_TO_UTC|STR_TO_ZONE_NAME|SUBSTR|SUFFIXES|SUM|TAN|TITLE|TOARRAY|TOATOM|TOBOOLEAN|TOKENS|TOKENS|TONUMBER|TOOBJECT|TOSTRING|TRIM|TRUNC|TYPE|UPPER|WEEKDAY_MILLIS|WEEKDAY_STR)(?=\\s*\\()/i,\n  keyword: /\\b(?:ALL|ALTER|ANALYZE|AS|ASC|BEGIN|BINARY|BOOLEAN|BREAK|BUCKET|BUILD|BY|CALL|CAST|CLUSTER|COLLATE|COLLECTION|COMMIT|CONNECT|CONTINUE|CORRELATE|COVER|CREATE|DATABASE|DATASET|DATASTORE|DECLARE|DECREMENT|DELETE|DERIVED|DESC|DESCRIBE|DISTINCT|DO|DROP|EACH|ELEMENT|EXCEPT|EXCLUDE|EXECUTE|EXPLAIN|FETCH|FLATTEN|FOR|FORCE|FROM|FUNCTION|GRANT|GROUP|GSI|HAVING|IF|IGNORE|ILIKE|INCLUDE|INCREMENT|INDEX|INFER|INLINE|INNER|INSERT|INTERSECT|INTO|IS|JOIN|KEY|KEYS|KEYSPACE|KNOWN|LAST|LEFT|LET|LETTING|LIMIT|LSM|MAP|MAPPING|MATCHED|MATERIALIZED|MERGE|MINUS|MISSING|NAMESPACE|NEST|NULL|NUMBER|OBJECT|OFFSET|ON|OPTION|ORDER|OUTER|OVER|PARSE|PARTITION|PASSWORD|PATH|POOL|PREPARE|PRIMARY|PRIVATE|PRIVILEGE|PROCEDURE|PUBLIC|RAW|REALM|REDUCE|RENAME|RETURN|RETURNING|REVOKE|RIGHT|ROLE|ROLLBACK|SATISFIES|SCHEMA|SELECT|SELF|SEMI|SET|SHOW|SOME|START|STATISTICS|STRING|SYSTEM|TO|TRANSACTION|TRIGGER|TRUNCATE|UNDER|UNION|UNIQUE|UNKNOWN|UNNEST|UNSET|UPDATE|UPSERT|USE|USER|USING|VALIDATE|VALUE|VALUES|VIA|VIEW|WHERE|WHILE|WITH|WORK|XOR)\\b/i,\n  boolean: /\\b(?:TRUE|FALSE)\\b/i,\n  number: /(?:\\b\\d+\\.|\\B\\.)\\d+e[+\\-]?\\d+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+\\b/i,\n  operator: /[-+*\\/=%]|!=|==?|\\|\\||<[>=]?|>=?|\\b(?:AND|ANY|ARRAY|BETWEEN|CASE|ELSE|END|EVERY|EXISTS|FIRST|IN|LIKE|NOT|OR|THEN|VALUED|WHEN|WITHIN)\\b/i,\n  punctuation: /[;[\\](),.{}:]/\n};","Prism.languages.n4js = Prism.languages.extend('javascript', {\n  // Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html\n  'keyword': /\\b(?:any|Array|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\n});\nPrism.languages.insertBefore('n4js', 'constant', {\n  // Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations\n  'annotation': {\n    pattern: /@+\\w+/,\n    alias: 'operator'\n  }\n});\nPrism.languages.n4jsd = Prism.languages.n4js;","Prism.languages.n4js = Prism.languages.extend(\"javascript\", {\n  keyword: /\\b(?:any|Array|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\n}), Prism.languages.insertBefore(\"n4js\", \"constant\", {\n  annotation: {\n    pattern: /@+\\w+/,\n    alias: \"operator\"\n  }\n}), Prism.languages.n4jsd = Prism.languages.n4js;","Prism.languages['nand2tetris-hdl'] = {\n  'comment': /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n  'keyword': /\\b(?:CHIP|IN|OUT|PARTS|BUILTIN|CLOCKED)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'function': /[A-Za-z][A-Za-z0-9]*(?=\\()/,\n  'number': /\\b\\d+\\b/,\n  'operator': /=|\\.\\./,\n  'punctuation': /[{}[\\];(),:]/\n};","Prism.languages[\"nand2tetris-hdl\"] = {\n  comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n  keyword: /\\b(?:CHIP|IN|OUT|PARTS|BUILTIN|CLOCKED)\\b/,\n  boolean: /\\b(?:true|false)\\b/,\n  function: /[A-Za-z][A-Za-z0-9]*(?=\\()/,\n  number: /\\b\\d+\\b/,\n  operator: /=|\\.\\./,\n  punctuation: /[{}[\\];(),:]/\n};","Prism.languages.nasm = {\n  'comment': /;.*$/m,\n  'string': /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n  'label': {\n    pattern: /(^\\s*)[A-Za-z._?$][\\w.?$@~#]*:/m,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'keyword': [/\\[?BITS (?:16|32|64)\\]?/, {\n    pattern: /(^\\s*)section\\s*[a-zA-Z.]+:?/im,\n    lookbehind: true\n  }, /(?:extern|global)[^;\\r\\n]*/i, /(?:CPU|FLOAT|DEFAULT).*$/m],\n  'register': {\n    pattern: /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|sp|si|di)|[cdefgs]s)\\b/i,\n    alias: 'variable'\n  },\n  'number': /(?:\\b|(?=\\$))(?:0[hx][\\da-f]*\\.?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|\\d*\\.?\\d+(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n  'operator': /[\\[\\]*+\\-\\/%<>=&|$!]/\n};","Prism.languages.nasm = {\n  comment: /;.*$/m,\n  string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n  label: {\n    pattern: /(^\\s*)[A-Za-z._?$][\\w.?$@~#]*:/m,\n    lookbehind: !0,\n    alias: \"function\"\n  },\n  keyword: [/\\[?BITS (?:16|32|64)\\]?/, {\n    pattern: /(^\\s*)section\\s*[a-zA-Z.]+:?/im,\n    lookbehind: !0\n  }, /(?:extern|global)[^;\\r\\n]*/i, /(?:CPU|FLOAT|DEFAULT).*$/m],\n  register: {\n    pattern: /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|sp|si|di)|[cdefgs]s)\\b/i,\n    alias: \"variable\"\n  },\n  number: /(?:\\b|(?=\\$))(?:0[hx][\\da-f]*\\.?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|\\d*\\.?\\d+(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n  operator: /[\\[\\]*+\\-\\/%<>=&|$!]/\n};","Prism.languages.nginx = Prism.languages.extend('clike', {\n  'comment': {\n    pattern: /(^|[^\"{\\\\])#.*/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:CONTENT_|DOCUMENT_|GATEWAY_|HTTP_|HTTPS|if_not_empty|PATH_|QUERY_|REDIRECT_|REMOTE_|REQUEST_|SCGI|SCRIPT_|SERVER_|http|events|accept_mutex|accept_mutex_delay|access_log|add_after_body|add_before_body|add_header|addition_types|aio|alias|allow|ancient_browser|ancient_browser_value|auth|auth_basic|auth_basic_user_file|auth_http|auth_http_header|auth_http_timeout|autoindex|autoindex_exact_size|autoindex_localtime|break|charset|charset_map|charset_types|chunked_transfer_encoding|client_body_buffer_size|client_body_in_file_only|client_body_in_single_buffer|client_body_temp_path|client_body_timeout|client_header_buffer_size|client_header_timeout|client_max_body_size|connection_pool_size|create_full_put_path|daemon|dav_access|dav_methods|debug_connection|debug_points|default_type|deny|devpoll_changes|devpoll_events|directio|directio_alignment|disable_symlinks|empty_gif|env|epoll_events|error_log|error_page|expires|fastcgi_buffer_size|fastcgi_buffers|fastcgi_busy_buffers_size|fastcgi_cache|fastcgi_cache_bypass|fastcgi_cache_key|fastcgi_cache_lock|fastcgi_cache_lock_timeout|fastcgi_cache_methods|fastcgi_cache_min_uses|fastcgi_cache_path|fastcgi_cache_purge|fastcgi_cache_use_stale|fastcgi_cache_valid|fastcgi_connect_timeout|fastcgi_hide_header|fastcgi_ignore_client_abort|fastcgi_ignore_headers|fastcgi_index|fastcgi_intercept_errors|fastcgi_keep_conn|fastcgi_max_temp_file_size|fastcgi_next_upstream|fastcgi_no_cache|fastcgi_param|fastcgi_pass|fastcgi_pass_header|fastcgi_read_timeout|fastcgi_redirect_errors|fastcgi_send_timeout|fastcgi_split_path_info|fastcgi_store|fastcgi_store_access|fastcgi_temp_file_write_size|fastcgi_temp_path|flv|geo|geoip_city|geoip_country|google_perftools_profiles|gzip|gzip_buffers|gzip_comp_level|gzip_disable|gzip_http_version|gzip_min_length|gzip_proxied|gzip_static|gzip_types|gzip_vary|if|if_modified_since|ignore_invalid_headers|image_filter|image_filter_buffer|image_filter_jpeg_quality|image_filter_sharpen|image_filter_transparency|imap_capabilities|imap_client_buffer|include|index|internal|ip_hash|keepalive|keepalive_disable|keepalive_requests|keepalive_timeout|kqueue_changes|kqueue_events|large_client_header_buffers|limit_conn|limit_conn_log_level|limit_conn_zone|limit_except|limit_rate|limit_rate_after|limit_req|limit_req_log_level|limit_req_zone|limit_zone|lingering_close|lingering_time|lingering_timeout|listen|location|lock_file|log_format|log_format_combined|log_not_found|log_subrequest|map|map_hash_bucket_size|map_hash_max_size|master_process|max_ranges|memcached_buffer_size|memcached_connect_timeout|memcached_next_upstream|memcached_pass|memcached_read_timeout|memcached_send_timeout|merge_slashes|min_delete_depth|modern_browser|modern_browser_value|mp4|mp4_buffer_size|mp4_max_buffer_size|msie_padding|msie_refresh|multi_accept|open_file_cache|open_file_cache_errors|open_file_cache_min_uses|open_file_cache_valid|open_log_file_cache|optimize_server_names|override_charset|pcre_jit|perl|perl_modules|perl_require|perl_set|pid|pop3_auth|pop3_capabilities|port_in_redirect|post_action|postpone_output|protocol|proxy|proxy_buffer|proxy_buffer_size|proxy_buffering|proxy_buffers|proxy_busy_buffers_size|proxy_cache|proxy_cache_bypass|proxy_cache_key|proxy_cache_lock|proxy_cache_lock_timeout|proxy_cache_methods|proxy_cache_min_uses|proxy_cache_path|proxy_cache_use_stale|proxy_cache_valid|proxy_connect_timeout|proxy_cookie_domain|proxy_cookie_path|proxy_headers_hash_bucket_size|proxy_headers_hash_max_size|proxy_hide_header|proxy_http_version|proxy_ignore_client_abort|proxy_ignore_headers|proxy_intercept_errors|proxy_max_temp_file_size|proxy_method|proxy_next_upstream|proxy_no_cache|proxy_pass|proxy_pass_error_message|proxy_pass_header|proxy_pass_request_body|proxy_pass_request_headers|proxy_read_timeout|proxy_redirect|proxy_redirect_errors|proxy_send_lowat|proxy_send_timeout|proxy_set_body|proxy_set_header|proxy_ssl_session_reuse|proxy_store|proxy_store_access|proxy_temp_file_write_size|proxy_temp_path|proxy_timeout|proxy_upstream_fail_timeout|proxy_upstream_max_fails|random_index|read_ahead|real_ip_header|recursive_error_pages|request_pool_size|reset_timedout_connection|resolver|resolver_timeout|return|rewrite|root|rtsig_overflow_events|rtsig_overflow_test|rtsig_overflow_threshold|rtsig_signo|satisfy|satisfy_any|secure_link_secret|send_lowat|send_timeout|sendfile|sendfile_max_chunk|server|server_name|server_name_in_redirect|server_names_hash_bucket_size|server_names_hash_max_size|server_tokens|set|set_real_ip_from|smtp_auth|smtp_capabilities|so_keepalive|source_charset|split_clients|ssi|ssi_silent_errors|ssi_types|ssi_value_length|ssl|ssl_certificate|ssl_certificate_key|ssl_ciphers|ssl_client_certificate|ssl_crl|ssl_dhparam|ssl_engine|ssl_prefer_server_ciphers|ssl_protocols|ssl_session_cache|ssl_session_timeout|ssl_verify_client|ssl_verify_depth|starttls|stub_status|sub_filter|sub_filter_once|sub_filter_types|tcp_nodelay|tcp_nopush|timeout|timer_resolution|try_files|types|types_hash_bucket_size|types_hash_max_size|underscores_in_headers|uninitialized_variable_warn|upstream|use|user|userid|userid_domain|userid_expires|userid_name|userid_p3p|userid_path|userid_service|valid_referers|variables_hash_bucket_size|variables_hash_max_size|worker_connections|worker_cpu_affinity|worker_priority|worker_processes|worker_rlimit_core|worker_rlimit_nofile|worker_rlimit_sigpending|working_directory|xclient|xml_entities|xslt_entities|xslt_stylesheet|xslt_types|ssl_session_tickets|ssl_stapling|ssl_stapling_verify|ssl_ecdh_curve|ssl_trusted_certificate|more_set_headers|ssl_early_data)\\b/i\n});\nPrism.languages.insertBefore('nginx', 'keyword', {\n  'variable': /\\$[a-z_]+/i\n});","Prism.languages.nginx = Prism.languages.extend(\"clike\", {\n  comment: {\n    pattern: /(^|[^\"{\\\\])#.*/,\n    lookbehind: !0\n  },\n  keyword: /\\b(?:CONTENT_|DOCUMENT_|GATEWAY_|HTTP_|HTTPS|if_not_empty|PATH_|QUERY_|REDIRECT_|REMOTE_|REQUEST_|SCGI|SCRIPT_|SERVER_|http|events|accept_mutex|accept_mutex_delay|access_log|add_after_body|add_before_body|add_header|addition_types|aio|alias|allow|ancient_browser|ancient_browser_value|auth|auth_basic|auth_basic_user_file|auth_http|auth_http_header|auth_http_timeout|autoindex|autoindex_exact_size|autoindex_localtime|break|charset|charset_map|charset_types|chunked_transfer_encoding|client_body_buffer_size|client_body_in_file_only|client_body_in_single_buffer|client_body_temp_path|client_body_timeout|client_header_buffer_size|client_header_timeout|client_max_body_size|connection_pool_size|create_full_put_path|daemon|dav_access|dav_methods|debug_connection|debug_points|default_type|deny|devpoll_changes|devpoll_events|directio|directio_alignment|disable_symlinks|empty_gif|env|epoll_events|error_log|error_page|expires|fastcgi_buffer_size|fastcgi_buffers|fastcgi_busy_buffers_size|fastcgi_cache|fastcgi_cache_bypass|fastcgi_cache_key|fastcgi_cache_lock|fastcgi_cache_lock_timeout|fastcgi_cache_methods|fastcgi_cache_min_uses|fastcgi_cache_path|fastcgi_cache_purge|fastcgi_cache_use_stale|fastcgi_cache_valid|fastcgi_connect_timeout|fastcgi_hide_header|fastcgi_ignore_client_abort|fastcgi_ignore_headers|fastcgi_index|fastcgi_intercept_errors|fastcgi_keep_conn|fastcgi_max_temp_file_size|fastcgi_next_upstream|fastcgi_no_cache|fastcgi_param|fastcgi_pass|fastcgi_pass_header|fastcgi_read_timeout|fastcgi_redirect_errors|fastcgi_send_timeout|fastcgi_split_path_info|fastcgi_store|fastcgi_store_access|fastcgi_temp_file_write_size|fastcgi_temp_path|flv|geo|geoip_city|geoip_country|google_perftools_profiles|gzip|gzip_buffers|gzip_comp_level|gzip_disable|gzip_http_version|gzip_min_length|gzip_proxied|gzip_static|gzip_types|gzip_vary|if|if_modified_since|ignore_invalid_headers|image_filter|image_filter_buffer|image_filter_jpeg_quality|image_filter_sharpen|image_filter_transparency|imap_capabilities|imap_client_buffer|include|index|internal|ip_hash|keepalive|keepalive_disable|keepalive_requests|keepalive_timeout|kqueue_changes|kqueue_events|large_client_header_buffers|limit_conn|limit_conn_log_level|limit_conn_zone|limit_except|limit_rate|limit_rate_after|limit_req|limit_req_log_level|limit_req_zone|limit_zone|lingering_close|lingering_time|lingering_timeout|listen|location|lock_file|log_format|log_format_combined|log_not_found|log_subrequest|map|map_hash_bucket_size|map_hash_max_size|master_process|max_ranges|memcached_buffer_size|memcached_connect_timeout|memcached_next_upstream|memcached_pass|memcached_read_timeout|memcached_send_timeout|merge_slashes|min_delete_depth|modern_browser|modern_browser_value|mp4|mp4_buffer_size|mp4_max_buffer_size|msie_padding|msie_refresh|multi_accept|open_file_cache|open_file_cache_errors|open_file_cache_min_uses|open_file_cache_valid|open_log_file_cache|optimize_server_names|override_charset|pcre_jit|perl|perl_modules|perl_require|perl_set|pid|pop3_auth|pop3_capabilities|port_in_redirect|post_action|postpone_output|protocol|proxy|proxy_buffer|proxy_buffer_size|proxy_buffering|proxy_buffers|proxy_busy_buffers_size|proxy_cache|proxy_cache_bypass|proxy_cache_key|proxy_cache_lock|proxy_cache_lock_timeout|proxy_cache_methods|proxy_cache_min_uses|proxy_cache_path|proxy_cache_use_stale|proxy_cache_valid|proxy_connect_timeout|proxy_cookie_domain|proxy_cookie_path|proxy_headers_hash_bucket_size|proxy_headers_hash_max_size|proxy_hide_header|proxy_http_version|proxy_ignore_client_abort|proxy_ignore_headers|proxy_intercept_errors|proxy_max_temp_file_size|proxy_method|proxy_next_upstream|proxy_no_cache|proxy_pass|proxy_pass_error_message|proxy_pass_header|proxy_pass_request_body|proxy_pass_request_headers|proxy_read_timeout|proxy_redirect|proxy_redirect_errors|proxy_send_lowat|proxy_send_timeout|proxy_set_body|proxy_set_header|proxy_ssl_session_reuse|proxy_store|proxy_store_access|proxy_temp_file_write_size|proxy_temp_path|proxy_timeout|proxy_upstream_fail_timeout|proxy_upstream_max_fails|random_index|read_ahead|real_ip_header|recursive_error_pages|request_pool_size|reset_timedout_connection|resolver|resolver_timeout|return|rewrite|root|rtsig_overflow_events|rtsig_overflow_test|rtsig_overflow_threshold|rtsig_signo|satisfy|satisfy_any|secure_link_secret|send_lowat|send_timeout|sendfile|sendfile_max_chunk|server|server_name|server_name_in_redirect|server_names_hash_bucket_size|server_names_hash_max_size|server_tokens|set|set_real_ip_from|smtp_auth|smtp_capabilities|so_keepalive|source_charset|split_clients|ssi|ssi_silent_errors|ssi_types|ssi_value_length|ssl|ssl_certificate|ssl_certificate_key|ssl_ciphers|ssl_client_certificate|ssl_crl|ssl_dhparam|ssl_engine|ssl_prefer_server_ciphers|ssl_protocols|ssl_session_cache|ssl_session_timeout|ssl_verify_client|ssl_verify_depth|starttls|stub_status|sub_filter|sub_filter_once|sub_filter_types|tcp_nodelay|tcp_nopush|timeout|timer_resolution|try_files|types|types_hash_bucket_size|types_hash_max_size|underscores_in_headers|uninitialized_variable_warn|upstream|use|user|userid|userid_domain|userid_expires|userid_name|userid_p3p|userid_path|userid_service|valid_referers|variables_hash_bucket_size|variables_hash_max_size|worker_connections|worker_cpu_affinity|worker_priority|worker_processes|worker_rlimit_core|worker_rlimit_nofile|worker_rlimit_sigpending|working_directory|xclient|xml_entities|xslt_entities|xslt_stylesheet|xslt_types|ssl_session_tickets|ssl_stapling|ssl_stapling_verify|ssl_ecdh_curve|ssl_trusted_certificate|more_set_headers|ssl_early_data)\\b/i\n}), Prism.languages.insertBefore(\"nginx\", \"keyword\", {\n  variable: /\\$[a-z_]+/i\n});","Prism.languages.nim = {\n  'comment': /#.*/,\n  // Double-quoted strings can be prefixed by an identifier (Generalized raw string literals)\n  // Character literals are handled specifically to prevent issues with numeric type suffixes\n  'string': {\n    pattern: /(?:(?:\\b(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+)?(?:\"\"\"[\\s\\S]*?\"\"\"(?!\")|\"(?:\\\\[\\s\\S]|\"\"|[^\"\\\\])*\")|'(?:\\\\(?:\\d+|x[\\da-fA-F]{2}|.)|[^'])')/,\n    greedy: true\n  },\n  // The negative look ahead prevents wrong highlighting of the .. operator\n  'number': /\\b(?:0[xXoObB][\\da-fA-F_]+|\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:[eE][+-]?\\d[\\d_]*)?)(?:'?[iuf]\\d*)?/,\n  'keyword': /\\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\\b/,\n  'function': {\n    pattern: /(?:(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+|`[^`\\r\\n]+`)\\*?(?:\\[[^\\]]+\\])?(?=\\s*\\()/,\n    inside: {\n      'operator': /\\*$/\n    }\n  },\n  // We don't want to highlight operators inside backticks\n  'ignore': {\n    pattern: /`[^`\\r\\n]+`/,\n    inside: {\n      'punctuation': /`/\n    }\n  },\n  'operator': {\n    // Look behind and look ahead prevent wrong highlighting of punctuations [. .] {. .} (. .)\n    // but allow the slice operator .. to take precedence over them\n    // One can define his own operators in Nim so all combination of operators might be an operator.\n    pattern: /(^|[({\\[](?=\\.\\.)|(?![({\\[]\\.).)(?:(?:[=+\\-*\\/<>@$~&%|!?^:\\\\]|\\.\\.|\\.(?![)}\\]]))+|\\b(?:and|div|of|or|in|is|isnot|mod|not|notin|shl|shr|xor)\\b)/m,\n    lookbehind: true\n  },\n  'punctuation': /[({\\[]\\.|\\.[)}\\]]|[`(){}\\[\\],:]/\n};","Prism.languages.nim = {\n  comment: /#.*/,\n  string: {\n    pattern: /(?:(?:\\b(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+)?(?:\"\"\"[\\s\\S]*?\"\"\"(?!\")|\"(?:\\\\[\\s\\S]|\"\"|[^\"\\\\])*\")|'(?:\\\\(?:\\d+|x[\\da-fA-F]{2}|.)|[^'])')/,\n    greedy: !0\n  },\n  number: /\\b(?:0[xXoObB][\\da-fA-F_]+|\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:[eE][+-]?\\d[\\d_]*)?)(?:'?[iuf]\\d*)?/,\n  keyword: /\\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\\b/,\n  function: {\n    pattern: /(?:(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+|`[^`\\r\\n]+`)\\*?(?:\\[[^\\]]+\\])?(?=\\s*\\()/,\n    inside: {\n      operator: /\\*$/\n    }\n  },\n  ignore: {\n    pattern: /`[^`\\r\\n]+`/,\n    inside: {\n      punctuation: /`/\n    }\n  },\n  operator: {\n    pattern: /(^|[({\\[](?=\\.\\.)|(?![({\\[]\\.).)(?:(?:[=+\\-*\\/<>@$~&%|!?^:\\\\]|\\.\\.|\\.(?![)}\\]]))+|\\b(?:and|div|of|or|in|is|isnot|mod|not|notin|shl|shr|xor)\\b)/m,\n    lookbehind: !0\n  },\n  punctuation: /[({\\[]\\.|\\.[)}\\]]|[`(){}\\[\\],:]/\n};","Prism.languages.nix = {\n  'comment': /\\/\\*[\\s\\S]*?\\*\\/|#.*/,\n  'string': {\n    pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // The lookbehind ensures the ${} is not preceded by \\ or ''\n        pattern: /(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^}]|\\{[^}]*\\})*}/,\n        lookbehind: true,\n        inside: {\n          'antiquotation': {\n            pattern: /^\\$(?=\\{)/,\n            alias: 'variable' // See rest below\n\n          }\n        }\n      }\n    }\n  },\n  'url': [/\\b(?:[a-z]{3,7}:\\/\\/)[\\w\\-+%~\\/.:#=?&]+/, {\n    pattern: /([^\\/])(?:[\\w\\-+%~.:#=?&]*(?!\\/\\/)[\\w\\-+%~\\/.:#=?&])?(?!\\/\\/)\\/[\\w\\-+%~\\/.:#=?&]*/,\n    lookbehind: true\n  }],\n  'antiquotation': {\n    pattern: /\\$(?=\\{)/,\n    alias: 'variable'\n  },\n  'number': /\\b\\d+\\b/,\n  'keyword': /\\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\\b/,\n  'function': /\\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:url|Tarball)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\\b|\\bfoldl'\\B/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'operator': /[=!<>]=?|\\+\\+?|\\|\\||&&|\\/\\/|->?|[?@]/,\n  'punctuation': /[{}()[\\].,:;]/\n};\nPrism.languages.nix.string.inside.interpolation.inside.rest = Prism.languages.nix;","Prism.languages.nix = {\n  comment: /\\/\\*[\\s\\S]*?\\*\\/|#.*/,\n  string: {\n    pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,\n    greedy: !0,\n    inside: {\n      interpolation: {\n        pattern: /(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^}]|\\{[^}]*\\})*}/,\n        lookbehind: !0,\n        inside: {\n          antiquotation: {\n            pattern: /^\\$(?=\\{)/,\n            alias: \"variable\"\n          }\n        }\n      }\n    }\n  },\n  url: [/\\b(?:[a-z]{3,7}:\\/\\/)[\\w\\-+%~\\/.:#=?&]+/, {\n    pattern: /([^\\/])(?:[\\w\\-+%~.:#=?&]*(?!\\/\\/)[\\w\\-+%~\\/.:#=?&])?(?!\\/\\/)\\/[\\w\\-+%~\\/.:#=?&]*/,\n    lookbehind: !0\n  }],\n  antiquotation: {\n    pattern: /\\$(?=\\{)/,\n    alias: \"variable\"\n  },\n  number: /\\b\\d+\\b/,\n  keyword: /\\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\\b/,\n  function: /\\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:url|Tarball)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\\b|\\bfoldl'\\B/,\n  boolean: /\\b(?:true|false)\\b/,\n  operator: /[=!<>]=?|\\+\\+?|\\|\\||&&|\\/\\/|->?|[?@]/,\n  punctuation: /[{}()[\\].,:;]/\n}, Prism.languages.nix.string.inside.interpolation.inside.rest = Prism.languages.nix;","/**\n * Original by Jan T. Sott (http://github.com/idleberg)\n *\n * Includes all commands and plug-ins shipped with NSIS 3.02\n */\nPrism.languages.nsis = {\n  'comment': {\n    pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|[#;].*)/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'keyword': {\n    pattern: /(^\\s*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|Banner|BG(?:Font|Gradient|Image)|BrandingText|BringToFront|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|CRCCheck|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|WriteUTF16LE|Seek|Write|WriteByte|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DlgItem|DLLVersion(?:Local)?|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|LabelAddress|TempFileName)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|Silent)|InitPluginsDir|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Int(?:64|Ptr)?CmpU?|Int(?:64)?Fmt|Int(?:Ptr)?Op|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|Name|Nop|ns(?:Dialogs|Exec)|NSISdl|OutFile|Page(?:Callbacks)?|PE(?:DllCharacteristics|SubsysVer)|Pop|Push|Quit|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|RMDir|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|Unicode|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UninstPage|UnRegDLL|UserInfo|Var|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle)\\b/m,\n    lookbehind: true\n  },\n  'property': /\\b(?:admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user|ARCHIVE|FILE_(ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK((CR|CU|LM)(32|64)?|DD|PD|U)|HKEY_(CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY)\\b/,\n  'constant': /\\${[\\w\\.:\\^-]+}|\\$\\([\\w\\.:\\^-]+\\)/i,\n  'variable': /\\$\\w+/i,\n  'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n  'operator': /--?|\\+\\+?|<=?|>=?|==?=?|&&?|\\|\\|?|[?*\\/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/,\n  'important': {\n    pattern: /(^\\s*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|ifdef|ifmacrodef|ifmacrondef|ifndef|if|include|insertmacro|macroend|macro|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|verbose|warning)\\b/mi,\n    lookbehind: true\n  }\n};","Prism.languages.nsis = {\n  comment: {\n    pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|[#;].*)/,\n    lookbehind: !0\n  },\n  string: {\n    pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  },\n  keyword: {\n    pattern: /(^\\s*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|Banner|BG(?:Font|Gradient|Image)|BrandingText|BringToFront|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|CRCCheck|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|WriteUTF16LE|Seek|Write|WriteByte|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DlgItem|DLLVersion(?:Local)?|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|LabelAddress|TempFileName)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|Silent)|InitPluginsDir|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Int(?:64|Ptr)?CmpU?|Int(?:64)?Fmt|Int(?:Ptr)?Op|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|Name|Nop|ns(?:Dialogs|Exec)|NSISdl|OutFile|Page(?:Callbacks)?|PE(?:DllCharacteristics|SubsysVer)|Pop|Push|Quit|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|RMDir|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|Unicode|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UninstPage|UnRegDLL|UserInfo|Var|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle)\\b/m,\n    lookbehind: !0\n  },\n  property: /\\b(?:admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user|ARCHIVE|FILE_(ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK((CR|CU|LM)(32|64)?|DD|PD|U)|HKEY_(CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY)\\b/,\n  constant: /\\${[\\w\\.:\\^-]+}|\\$\\([\\w\\.:\\^-]+\\)/i,\n  variable: /\\$\\w+/i,\n  number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n  operator: /--?|\\+\\+?|<=?|>=?|==?=?|&&?|\\|\\|?|[?*\\/~^%]/,\n  punctuation: /[{}[\\];(),.:]/,\n  important: {\n    pattern: /(^\\s*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|ifdef|ifmacrodef|ifmacrondef|ifndef|if|include|insertmacro|macroend|macro|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|verbose|warning)\\b/im,\n    lookbehind: !0\n  }\n};","Prism.languages.objectivec = Prism.languages.extend('c', {\n  'keyword': /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'string': /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\ndelete Prism.languages.objectivec['class-name'];","Prism.languages.objectivec = Prism.languages.extend(\"c\", {\n  keyword: /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  string: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n  operator: /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n}), delete Prism.languages.objectivec[\"class-name\"];","Prism.languages.ocaml = {\n  'comment': /\\(\\*[\\s\\S]*?\\*\\)/,\n  'string': [{\n    pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n    greedy: true\n  }],\n  'number': /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,\n  'type': {\n    pattern: /\\B['`]\\w*/,\n    alias: 'variable'\n  },\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  // Custom operators are allowed\n  'operator': /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\\b/,\n  'punctuation': /[(){}\\[\\]|_.,:;]/\n};","Prism.languages.ocaml = {\n  comment: /\\(\\*[\\s\\S]*?\\*\\)/,\n  string: [{\n    pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: !0\n  }, {\n    pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n    greedy: !0\n  }],\n  number: /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,\n  type: {\n    pattern: /\\B['`]\\w*/,\n    alias: \"variable\"\n  },\n  directive: {\n    pattern: /\\B#\\w+/,\n    alias: \"function\"\n  },\n  keyword: /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\\b/,\n  boolean: /\\b(?:false|true)\\b/,\n  operator: /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\\b/,\n  punctuation: /[(){}\\[\\]|_.,:;]/\n};","(function (Prism) {\n  /* OpenCL kernel language */\n  Prism.languages.opencl = Prism.languages.extend('c', {\n    // Extracted from the official specs (2.0) and http://streamcomputing.eu/downloads/?opencl.lang (opencl-keywords, opencl-types) and http://sourceforge.net/tracker/?func=detail&aid=2957794&group_id=95717&atid=612384 (Words2, partly Words3)\n    'keyword': /\\b(?:__attribute__|(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|auto|break|case|cl_(?:image_format|mem_fence_flags)|clk_event_t|complex|const|continue|default|do|(?:float|double)(?:16(?:x(?:1|16|2|4|8))?|1x(?:1|16|2|4|8)|2(?:x(?:1|16|2|4|8))?|3|4(?:x(?:1|16|2|4|8))?|8(?:x(?:1|16|2|4|8))?)?|else|enum|event_t|extern|for|goto|(?:u?(?:char|short|int|long)|half|quad|bool)(?:2|3|4|8|16)?|if|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|imaginary|inline|intptr_t|ndrange_t|packed|pipe|ptrdiff_t|queue_t|register|reserve_id_t|restrict|return|sampler_t|signed|size_t|sizeof|static|struct|switch|typedef|uintptr_t|uniform|union|unsigned|void|volatile|while)\\b/,\n    // Extracted from http://streamcomputing.eu/downloads/?opencl.lang (global-vars, opencl-dev)\n    'function-opencl-kernel': {\n      pattern: /\\b(?:abs(?:_diff)?|a?(?:cos|sin)(?:h|pi)?|add_sat|aligned|all|and|any|async(?:_work_group_copy|_work_group_strided_copy)?|atan(?:2?(?:pi)?|h)?|atom_(?:add|and|cmpxchg|dec|inc|max|min|or|sub|xchg|xor)|barrier|bitselect|cbrt|ceil|clamp|clz|copies|copysign|cross|degrees|distance|dot|endian|erf|erfc|exp(?:2|10)?|expm1|fabs|fast_(?:distance|length|normalize)|fdim|floor|fma|fmax|fmin|fract|frexp|fro|from|get_(?:global_(?:id|offset|size)|group_id|image_(?:channel_data_type|channel_order|depth|dim|height|width)|local(?:_id|_size)|num_groups|work_dim)|hadd|(?:half|native)_(?:cos|divide|exp(?:2|10)?|log(?:2|10)?|powr|recip|r?sqrt|sin|tan)|hypot|ilogb|is(?:equal|finite|greater(?:equal)?|inf|less(?:equal|greater)?|nan|normal|notequal|(?:un)?ordered)|ldexp|length|lgamma|lgamma_r|log(?:b|1p|2|10)?|mad(?:24|_hi|_sat)?|max|mem(?:_fence)?|min|mix|modf|mul24|mul_hi|nan|nextafter|normalize|pow[nr]?|prefetch|radians|read_(?:image)(?:f|h|u?i)|read_mem_fence|remainder|remquo|reqd_work_group_size|rhadd|rint|rootn|rotate|round|rsqrt|select|shuffle2?|sign|signbit|sincos|smoothstep|sqrt|step|sub_sat|tan|tanh|tanpi|tgamma|to|trunc|upsample|vec_(?:step|type_hint)|v(?:load|store)(?:_half)?(?:2|3|4|8|16)?|v(?:loada_half|storea?(?:_half)?)(?:2|3|4|8|16)?(?:_(?:rte|rtn|rtp|rtz))?|wait_group_events|work_group_size_hint|write_image(?:f|h|u?i)|write_mem_fence)\\b/,\n      alias: 'function'\n    },\n    // Extracted from http://streamcomputing.eu/downloads/?opencl.lang (opencl-const)\n    'constant-opencl-kernel': {\n      pattern: /\\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:LOCAL|GLOBAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT)_(?:DIG|EPSILON|MANT_DIG|(?:MIN|MAX)(?:(?:_10)?_EXP)?)|FLT_RADIX|HUGE_VALF|INFINITY|(?:INT|LONG|SCHAR|SHRT|UCHAR|UINT|ULONG)_(?:MAX|MIN)|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:10|2)E?|PI[24]?|SQRT(?:1_2|2))|NAN)\\b/,\n      alias: 'constant'\n    }\n  });\n  var attributes = {\n    // Extracted from http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-types and opencl-host)\n    'type-opencl-host': {\n      pattern: /\\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|short|int|long)|float|double)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\\b/,\n      alias: 'keyword'\n    },\n    'boolean-opencl-host': {\n      pattern: /\\bCL_(?:TRUE|FALSE)\\b/,\n      alias: 'boolean'\n    },\n    // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-const)\n    'constant-opencl-host': {\n      pattern: /\\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:16|24|8|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\\b/,\n      alias: 'constant'\n    },\n    // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-host)\n    'function-opencl-host': {\n      pattern: /\\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|Kernel|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\\b/,\n      alias: 'function'\n    }\n  };\n  /* OpenCL host API */\n\n  Prism.languages.insertBefore('c', 'keyword', attributes); // Extracted from doxygen class list http://github.khronos.org/OpenCL-CLHPP/annotated.html\n\n  attributes['type-opencl-host-c++'] = {\n    pattern: /\\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|Sampler|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|UserEvent)\\b/,\n    alias: 'keyword'\n  }; // C++ includes everything from the OpenCL C host API plus the classes defined in cl2.h\n\n  Prism.languages.insertBefore('cpp', 'keyword', attributes);\n})(Prism);","!function (E) {\n  E.languages.opencl = E.languages.extend(\"c\", {\n    keyword: /\\b(?:__attribute__|(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|auto|break|case|cl_(?:image_format|mem_fence_flags)|clk_event_t|complex|const|continue|default|do|(?:float|double)(?:16(?:x(?:1|16|2|4|8))?|1x(?:1|16|2|4|8)|2(?:x(?:1|16|2|4|8))?|3|4(?:x(?:1|16|2|4|8))?|8(?:x(?:1|16|2|4|8))?)?|else|enum|event_t|extern|for|goto|(?:u?(?:char|short|int|long)|half|quad|bool)(?:2|3|4|8|16)?|if|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|imaginary|inline|intptr_t|ndrange_t|packed|pipe|ptrdiff_t|queue_t|register|reserve_id_t|restrict|return|sampler_t|signed|size_t|sizeof|static|struct|switch|typedef|uintptr_t|uniform|union|unsigned|void|volatile|while)\\b/,\n    \"function-opencl-kernel\": {\n      pattern: /\\b(?:abs(?:_diff)?|a?(?:cos|sin)(?:h|pi)?|add_sat|aligned|all|and|any|async(?:_work_group_copy|_work_group_strided_copy)?|atan(?:2?(?:pi)?|h)?|atom_(?:add|and|cmpxchg|dec|inc|max|min|or|sub|xchg|xor)|barrier|bitselect|cbrt|ceil|clamp|clz|copies|copysign|cross|degrees|distance|dot|endian|erf|erfc|exp(?:2|10)?|expm1|fabs|fast_(?:distance|length|normalize)|fdim|floor|fma|fmax|fmin|fract|frexp|fro|from|get_(?:global_(?:id|offset|size)|group_id|image_(?:channel_data_type|channel_order|depth|dim|height|width)|local(?:_id|_size)|num_groups|work_dim)|hadd|(?:half|native)_(?:cos|divide|exp(?:2|10)?|log(?:2|10)?|powr|recip|r?sqrt|sin|tan)|hypot|ilogb|is(?:equal|finite|greater(?:equal)?|inf|less(?:equal|greater)?|nan|normal|notequal|(?:un)?ordered)|ldexp|length|lgamma|lgamma_r|log(?:b|1p|2|10)?|mad(?:24|_hi|_sat)?|max|mem(?:_fence)?|min|mix|modf|mul24|mul_hi|nan|nextafter|normalize|pow[nr]?|prefetch|radians|read_(?:image)(?:f|h|u?i)|read_mem_fence|remainder|remquo|reqd_work_group_size|rhadd|rint|rootn|rotate|round|rsqrt|select|shuffle2?|sign|signbit|sincos|smoothstep|sqrt|step|sub_sat|tan|tanh|tanpi|tgamma|to|trunc|upsample|vec_(?:step|type_hint)|v(?:load|store)(?:_half)?(?:2|3|4|8|16)?|v(?:loada_half|storea?(?:_half)?)(?:2|3|4|8|16)?(?:_(?:rte|rtn|rtp|rtz))?|wait_group_events|work_group_size_hint|write_image(?:f|h|u?i)|write_mem_fence)\\b/,\n      alias: \"function\"\n    },\n    \"constant-opencl-kernel\": {\n      pattern: /\\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:LOCAL|GLOBAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT)_(?:DIG|EPSILON|MANT_DIG|(?:MIN|MAX)(?:(?:_10)?_EXP)?)|FLT_RADIX|HUGE_VALF|INFINITY|(?:INT|LONG|SCHAR|SHRT|UCHAR|UINT|ULONG)_(?:MAX|MIN)|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:10|2)E?|PI[24]?|SQRT(?:1_2|2))|NAN)\\b/,\n      alias: \"constant\"\n    }\n  });\n  var _ = {\n    \"type-opencl-host\": {\n      pattern: /\\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|short|int|long)|float|double)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\\b/,\n      alias: \"keyword\"\n    },\n    \"boolean-opencl-host\": {\n      pattern: /\\bCL_(?:TRUE|FALSE)\\b/,\n      alias: \"boolean\"\n    },\n    \"constant-opencl-host\": {\n      pattern: /\\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:16|24|8|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\\b/,\n      alias: \"constant\"\n    },\n    \"function-opencl-host\": {\n      pattern: /\\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|Kernel|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\\b/,\n      alias: \"function\"\n    }\n  };\n  E.languages.insertBefore(\"c\", \"keyword\", _), _[\"type-opencl-host-c++\"] = {\n    pattern: /\\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|Sampler|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|UserEvent)\\b/,\n    alias: \"keyword\"\n  }, E.languages.insertBefore(\"cpp\", \"keyword\", _);\n}(Prism);","Prism.languages.oz = {\n  'comment': /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n  'string': {\n    pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n    greedy: true\n  },\n  'atom': {\n    pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n    greedy: true,\n    alias: 'builtin'\n  },\n  'keyword': /[$_]|\\[\\]|\\b(?:at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\\b/,\n  'function': [/[a-z][A-Za-z\\d]*(?=\\()/, {\n    pattern: /(\\{)[A-Z][A-Za-z\\d]*/,\n    lookbehind: true\n  }],\n  'number': /\\b(?:0[bx][\\da-f]+|\\d+\\.?\\d*(?:e~?\\d+)?\\b)|&(?:[^\\\\]|\\\\(?:\\d{3}|.))/i,\n  'variable': /\\b[A-Z][A-Za-z\\d]*|`(?:[^`\\\\]|\\\\.)+`/,\n  'attr-name': /\\w+(?=:)/,\n  'operator': /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\\\=:?|!!?|[|#+\\-*\\/,~^@]|\\b(?:andthen|div|mod|orelse)\\b/,\n  'punctuation': /[\\[\\](){}.:;?]/\n};","Prism.languages.oz = {\n  comment: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n  string: {\n    pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n    greedy: !0\n  },\n  atom: {\n    pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n    greedy: !0,\n    alias: \"builtin\"\n  },\n  keyword: /[$_]|\\[\\]|\\b(?:at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\\b/,\n  function: [/[a-z][A-Za-z\\d]*(?=\\()/, {\n    pattern: /(\\{)[A-Z][A-Za-z\\d]*/,\n    lookbehind: !0\n  }],\n  number: /\\b(?:0[bx][\\da-f]+|\\d+\\.?\\d*(?:e~?\\d+)?\\b)|&(?:[^\\\\]|\\\\(?:\\d{3}|.))/i,\n  variable: /\\b[A-Z][A-Za-z\\d]*|`(?:[^`\\\\]|\\\\.)+`/,\n  \"attr-name\": /\\w+(?=:)/,\n  operator: /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\\\=:?|!!?|[|#+\\-*\\/,~^@]|\\b(?:andthen|div|mod|orelse)\\b/,\n  punctuation: /[\\[\\](){}.:;?]/\n};","require(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nPrism.languages.parigp = {\n  'comment': /\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,\n  'string': {\n    pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n    greedy: true\n  },\n  // PARI/GP does not care about white spaces at all\n  // so let's process the keywords to build an appropriate regexp\n  // (e.g. \"b *r *e *a *k\", etc.)\n  'keyword': function () {\n    var keywords = ['breakpoint', 'break', 'dbg_down', 'dbg_err', 'dbg_up', 'dbg_x', 'forcomposite', 'fordiv', 'forell', 'forpart', 'forprime', 'forstep', 'forsubgroup', 'forvec', 'for', 'iferr', 'if', 'local', 'my', 'next', 'return', 'until', 'while'];\n    keywords = keywords.map(function (keyword) {\n      return keyword.split('').join(' *');\n    }).join('|');\n    return RegExp('\\\\b(?:' + keywords + ')\\\\b');\n  }(),\n  'function': /\\w[\\w ]*?(?= *\\()/,\n  'number': {\n    // The lookbehind and the negative lookahead prevent from breaking the .. operator\n    pattern: /((?:\\. *\\. *)?)(?:\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *[+-]? *\\d(?: *\\d)*)?/i,\n    lookbehind: true\n  },\n  'operator': /\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?:(?: *<)?(?: *=)?| *>)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,\n  'punctuation': /[\\[\\]{}().,:;|]/\n};","require(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nPrism.languages.parigp = {\n  comment: /\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,\n  string: {\n    pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n    greedy: !0\n  },\n  keyword: function () {\n    var r = [\"breakpoint\", \"break\", \"dbg_down\", \"dbg_err\", \"dbg_up\", \"dbg_x\", \"forcomposite\", \"fordiv\", \"forell\", \"forpart\", \"forprime\", \"forstep\", \"forsubgroup\", \"forvec\", \"for\", \"iferr\", \"if\", \"local\", \"my\", \"next\", \"return\", \"until\", \"while\"];\n    return r = r.map(function (r) {\n      return r.split(\"\").join(\" *\");\n    }).join(\"|\"), RegExp(\"\\\\b(?:\" + r + \")\\\\b\");\n  }(),\n  function: /\\w[\\w ]*?(?= *\\()/,\n  number: {\n    pattern: /((?:\\. *\\. *)?)(?:\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *[+-]? *\\d(?: *\\d)*)?/i,\n    lookbehind: !0\n  },\n  operator: /\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?:(?: *<)?(?: *=)?| *>)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,\n  punctuation: /[\\[\\]{}().,:;|]/\n};","(function (Prism) {\n  var parser = Prism.languages.parser = Prism.languages.extend('markup', {\n    'keyword': {\n      pattern: /(^|[^^])(?:\\^(?:case|eval|for|if|switch|throw)\\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\\b)/,\n      lookbehind: true\n    },\n    'variable': {\n      pattern: /(^|[^^])\\B\\$(?:\\w+|(?=[.{]))(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\.|:+/\n      }\n    },\n    'function': {\n      pattern: /(^|[^^])\\B[@^]\\w+(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n      lookbehind: true,\n      inside: {\n        'keyword': {\n          pattern: /(^@)(?:GET_|SET_)/,\n          lookbehind: true\n        },\n        'punctuation': /\\.|:+/\n      }\n    },\n    'escape': {\n      pattern: /\\^(?:[$^;@()\\[\\]{}\"':]|#[a-f\\d]*)/i,\n      alias: 'builtin'\n    },\n    'punctuation': /[\\[\\](){};]/\n  });\n  parser = Prism.languages.insertBefore('parser', 'keyword', {\n    'parser-comment': {\n      pattern: /(\\s)#.*/,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    'expression': {\n      // Allow for 3 levels of depth\n      pattern: /(^|[^^])\\((?:[^()]|\\((?:[^()]|\\((?:[^()])*\\))*\\))*\\)/,\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'string': {\n          pattern: /(^|[^^])([\"'])(?:(?!\\2)[^^]|\\^[\\s\\S])*\\2/,\n          lookbehind: true\n        },\n        'keyword': parser.keyword,\n        'variable': parser.variable,\n        'function': parser.function,\n        'boolean': /\\b(?:true|false)\\b/,\n        'number': /\\b(?:0x[a-f\\d]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?)\\b/i,\n        'escape': parser.escape,\n        'operator': /[~+*\\/\\\\%]|!(?:\\|\\|?|=)?|&&?|\\|\\|?|==|<[<=]?|>[>=]?|-[fd]?|\\b(?:def|eq|ge|gt|in|is|le|lt|ne)\\b/,\n        'punctuation': parser.punctuation\n      }\n    }\n  });\n  parser = Prism.languages.insertBefore('inside', 'punctuation', {\n    'expression': parser.expression,\n    'keyword': parser.keyword,\n    'variable': parser.variable,\n    'function': parser.function,\n    'escape': parser.escape,\n    'parser-punctuation': {\n      pattern: parser.punctuation,\n      alias: 'punctuation'\n    }\n  }, parser['tag'].inside['attr-value']);\n})(Prism);","!function (e) {\n  var n = e.languages.parser = e.languages.extend(\"markup\", {\n    keyword: {\n      pattern: /(^|[^^])(?:\\^(?:case|eval|for|if|switch|throw)\\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\\b)/,\n      lookbehind: !0\n    },\n    variable: {\n      pattern: /(^|[^^])\\B\\$(?:\\w+|(?=[.{]))(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n      lookbehind: !0,\n      inside: {\n        punctuation: /\\.|:+/\n      }\n    },\n    function: {\n      pattern: /(^|[^^])\\B[@^]\\w+(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n      lookbehind: !0,\n      inside: {\n        keyword: {\n          pattern: /(^@)(?:GET_|SET_)/,\n          lookbehind: !0\n        },\n        punctuation: /\\.|:+/\n      }\n    },\n    escape: {\n      pattern: /\\^(?:[$^;@()\\[\\]{}\"':]|#[a-f\\d]*)/i,\n      alias: \"builtin\"\n    },\n    punctuation: /[\\[\\](){};]/\n  });\n  n = e.languages.insertBefore(\"parser\", \"keyword\", {\n    \"parser-comment\": {\n      pattern: /(\\s)#.*/,\n      lookbehind: !0,\n      alias: \"comment\"\n    },\n    expression: {\n      pattern: /(^|[^^])\\((?:[^()]|\\((?:[^()]|\\((?:[^()])*\\))*\\))*\\)/,\n      greedy: !0,\n      lookbehind: !0,\n      inside: {\n        string: {\n          pattern: /(^|[^^])([\"'])(?:(?!\\2)[^^]|\\^[\\s\\S])*\\2/,\n          lookbehind: !0\n        },\n        keyword: n.keyword,\n        variable: n.variable,\n        function: n.function,\n        boolean: /\\b(?:true|false)\\b/,\n        number: /\\b(?:0x[a-f\\d]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?)\\b/i,\n        escape: n.escape,\n        operator: /[~+*\\/\\\\%]|!(?:\\|\\|?|=)?|&&?|\\|\\|?|==|<[<=]?|>[>=]?|-[fd]?|\\b(?:def|eq|ge|gt|in|is|le|lt|ne)\\b/,\n        punctuation: n.punctuation\n      }\n    }\n  }), n = e.languages.insertBefore(\"inside\", \"punctuation\", {\n    expression: n.expression,\n    keyword: n.keyword,\n    variable: n.variable,\n    function: n.function,\n    escape: n.escape,\n    \"parser-punctuation\": {\n      pattern: n.punctuation,\n      alias: \"punctuation\"\n    }\n  }, n.tag.inside[\"attr-value\"]);\n}(Prism);","// Based on Free Pascal\n\n/* TODO\n\tSupport inline asm ?\n*/\nPrism.languages.pascal = {\n  'comment': [/\\(\\*[\\s\\S]+?\\*\\)/, /\\{[\\s\\S]+?\\}/, /\\/\\/.*/],\n  'string': {\n    pattern: /(?:'(?:''|[^'\\r\\n])*'|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\n    greedy: true\n  },\n  'keyword': [{\n    // Turbo Pascal\n    pattern: /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n    lookbehind: true\n  }, {\n    // Free Pascal\n    pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\n    lookbehind: true\n  }, {\n    // Object Pascal\n    pattern: /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n    lookbehind: true\n  }, {\n    // Modifiers\n    pattern: /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n    lookbehind: true\n  }],\n  'number': [// Hexadecimal, octal and binary\n  /(?:[&%]\\d+|\\$[a-f\\d]+)/i, // Decimal\n  /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i],\n  'operator': [/\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/i, {\n    pattern: /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\n    lookbehind: true\n  }],\n  'punctuation': /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\n};\nPrism.languages.objectpascal = Prism.languages.pascal;","Prism.languages.pascal = {\n  comment: [/\\(\\*[\\s\\S]+?\\*\\)/, /\\{[\\s\\S]+?\\}/, /\\/\\/.*/],\n  string: {\n    pattern: /(?:'(?:''|[^'\\r\\n])*'|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\n    greedy: !0\n  },\n  keyword: [{\n    pattern: /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n    lookbehind: !0\n  }],\n  number: [/(?:[&%]\\d+|\\$[a-f\\d]+)/i, /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i],\n  operator: [/\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/i, {\n    pattern: /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\n    lookbehind: !0\n  }],\n  punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\n}, Prism.languages.objectpascal = Prism.languages.pascal;","Prism.languages.perl = {\n  'comment': [{\n    // POD\n    pattern: /(^\\s*)=\\w+[\\s\\S]*?=cut.*/m,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\\\$])#.*/,\n    lookbehind: true\n  }],\n  // TODO Could be nice to handle Heredoc too.\n  'string': [// q/.../\n  {\n    pattern: /\\b(?:q|qq|qx|qw)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n    greedy: true\n  }, // q a...a\n  {\n    pattern: /\\b(?:q|qq|qx|qw)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n    greedy: true\n  }, // q(...)\n  {\n    pattern: /\\b(?:q|qq|qx|qw)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n    greedy: true\n  }, // q{...}\n  {\n    pattern: /\\b(?:q|qq|qx|qw)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}/,\n    greedy: true\n  }, // q[...]\n  {\n    pattern: /\\b(?:q|qq|qx|qw)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n    greedy: true\n  }, // q<...>\n  {\n    pattern: /\\b(?:q|qq|qx|qw)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n    greedy: true\n  }, // \"...\", `...`\n  {\n    pattern: /(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n    greedy: true\n  }, // '...'\n  // FIXME Multi-line single-quoted strings are not supported as they would break variables containing '\n  {\n    pattern: /'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n    greedy: true\n  }],\n  'regex': [// m/.../\n  {\n    pattern: /\\b(?:m|qr)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\n    greedy: true\n  }, // m a...a\n  {\n    pattern: /\\b(?:m|qr)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\n    greedy: true\n  }, // m(...)\n  {\n    pattern: /\\b(?:m|qr)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngc]*/,\n    greedy: true\n  }, // m{...}\n  {\n    pattern: /\\b(?:m|qr)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngc]*/,\n    greedy: true\n  }, // m[...]\n  {\n    pattern: /\\b(?:m|qr)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngc]*/,\n    greedy: true\n  }, // m<...>\n  {\n    pattern: /\\b(?:m|qr)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngc]*/,\n    greedy: true\n  }, // The lookbehinds prevent -s from breaking\n  // FIXME We don't handle change of separator like s(...)[...]\n  // s/.../.../\n  {\n    pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\n    lookbehind: true,\n    greedy: true\n  }, // s a...a...a\n  {\n    pattern: /(^|[^-]\\b)(?:s|tr|y)\\s+([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\n    lookbehind: true,\n    greedy: true\n  }, // s(...)(...)\n  {\n    pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngcer]*/,\n    lookbehind: true,\n    greedy: true\n  }, // s{...}{...}\n  {\n    pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngcer]*/,\n    lookbehind: true,\n    greedy: true\n  }, // s[...][...]\n  {\n    pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngcer]*/,\n    lookbehind: true,\n    greedy: true\n  }, // s<...><...>\n  {\n    pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngcer]*/,\n    lookbehind: true,\n    greedy: true\n  }, // /.../\n  // The look-ahead tries to prevent two divisions on\n  // the same line from being highlighted as regex.\n  // This does not support multi-line regex.\n  {\n    pattern: /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(lt|gt|le|ge|eq|ne|cmp|not|and|or|xor|x)\\b))/,\n    greedy: true\n  }],\n  // FIXME Not sure about the handling of ::, ', and #\n  'variable': [// ${^POSTMATCH}\n  /[&*$@%]\\{\\^[A-Z]+\\}/, // $^V\n  /[&*$@%]\\^[A-Z_]/, // ${...}\n  /[&*$@%]#?(?=\\{)/, // $foo\n  /[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+)+(?:::)*/i, // $1\n  /[&*$@%]\\d+/, // $_, @_, %!\n  // The negative lookahead prevents from breaking the %= operator\n  /(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/],\n  'filehandle': {\n    // <>, <FOO>, _\n    pattern: /<(?![<=])\\S*>|\\b_\\b/,\n    alias: 'symbol'\n  },\n  'vstring': {\n    // v1.2, 1.2.3\n    pattern: /v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,\n    alias: 'string'\n  },\n  'function': {\n    pattern: /sub [a-z0-9_]+/i,\n    inside: {\n      keyword: /sub/\n    }\n  },\n  'keyword': /\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,\n  'number': /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,\n  'operator': /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:lt|gt|le|ge|eq|ne|cmp|not|and|or|xor)\\b/,\n  'punctuation': /[{}[\\];(),:]/\n};","Prism.languages.perl = {\n  comment: [{\n    pattern: /(^\\s*)=\\w+[\\s\\S]*?=cut.*/m,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^\\\\$])#.*/,\n    lookbehind: !0\n  }],\n  string: [{\n    pattern: /\\b(?:q|qq|qx|qw)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n    greedy: !0\n  }, {\n    pattern: /\\b(?:q|qq|qx|qw)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n    greedy: !0\n  }, {\n    pattern: /\\b(?:q|qq|qx|qw)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n    greedy: !0\n  }, {\n    pattern: /\\b(?:q|qq|qx|qw)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}/,\n    greedy: !0\n  }, {\n    pattern: /\\b(?:q|qq|qx|qw)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n    greedy: !0\n  }, {\n    pattern: /\\b(?:q|qq|qx|qw)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n    greedy: !0\n  }, {\n    pattern: /(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n    greedy: !0\n  }, {\n    pattern: /'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n    greedy: !0\n  }],\n  regex: [{\n    pattern: /\\b(?:m|qr)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\n    greedy: !0\n  }, {\n    pattern: /\\b(?:m|qr)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\n    greedy: !0\n  }, {\n    pattern: /\\b(?:m|qr)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngc]*/,\n    greedy: !0\n  }, {\n    pattern: /\\b(?:m|qr)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngc]*/,\n    greedy: !0\n  }, {\n    pattern: /\\b(?:m|qr)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngc]*/,\n    greedy: !0\n  }, {\n    pattern: /\\b(?:m|qr)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngc]*/,\n    greedy: !0\n  }, {\n    pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\n    lookbehind: !0,\n    greedy: !0\n  }, {\n    pattern: /(^|[^-]\\b)(?:s|tr|y)\\s+([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\n    lookbehind: !0,\n    greedy: !0\n  }, {\n    pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngcer]*/,\n    lookbehind: !0,\n    greedy: !0\n  }, {\n    pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngcer]*/,\n    lookbehind: !0,\n    greedy: !0\n  }, {\n    pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngcer]*/,\n    lookbehind: !0,\n    greedy: !0\n  }, {\n    pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngcer]*/,\n    lookbehind: !0,\n    greedy: !0\n  }, {\n    pattern: /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(lt|gt|le|ge|eq|ne|cmp|not|and|or|xor|x)\\b))/,\n    greedy: !0\n  }],\n  variable: [/[&*$@%]\\{\\^[A-Z]+\\}/, /[&*$@%]\\^[A-Z_]/, /[&*$@%]#?(?=\\{)/, /[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+)+(?:::)*/i, /[&*$@%]\\d+/, /(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/],\n  filehandle: {\n    pattern: /<(?![<=])\\S*>|\\b_\\b/,\n    alias: \"symbol\"\n  },\n  vstring: {\n    pattern: /v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,\n    alias: \"string\"\n  },\n  function: {\n    pattern: /sub [a-z0-9_]+/i,\n    inside: {\n      keyword: /sub/\n    }\n  },\n  keyword: /\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,\n  number: /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,\n  operator: /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:lt|gt|le|ge|eq|ne|cmp|not|and|or|xor)\\b/,\n  punctuation: /[{}[\\];(),:]/\n};","Prism.languages.insertBefore('php', 'variable', {\n  'this': /\\$this\\b/,\n  'global': /\\$(?:_(?:SERVER|GET|POST|FILES|REQUEST|SESSION|ENV|COOKIE)|GLOBALS|HTTP_RAW_POST_DATA|argc|argv|php_errormsg|http_response_header)\\b/,\n  'scope': {\n    pattern: /\\b[\\w\\\\]+::/,\n    inside: {\n      keyword: /static|self|parent/,\n      punctuation: /::|\\\\/\n    }\n  }\n});","Prism.languages.insertBefore(\"php\", \"variable\", {\n  this: /\\$this\\b/,\n  global: /\\$(?:_(?:SERVER|GET|POST|FILES|REQUEST|SESSION|ENV|COOKIE)|GLOBALS|HTTP_RAW_POST_DATA|argc|argv|php_errormsg|http_response_header)\\b/,\n  scope: {\n    pattern: /\\b[\\w\\\\]+::/,\n    inside: {\n      keyword: /static|self|parent/,\n      punctuation: /::|\\\\/\n    }\n  }\n});","/**\n * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n * Modified by Miles Johnson: http://milesj.me\n *\n * Supports the following:\n * \t\t- Extends clike syntax\n * \t\t- Support for PHP 5.3+ (namespaces, traits, generators, etc)\n * \t\t- Smarter constant and function matching\n *\n * Adds the following new token classes:\n * \t\tconstant, delimiter, variable, function, package\n */\n(function (Prism) {\n  Prism.languages.php = Prism.languages.extend('clike', {\n    'keyword': /\\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|class|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|eval|exit|extends|final|finally|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|new|or|parent|print|private|protected|public|require|require_once|return|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\\b/i,\n    'boolean': {\n      pattern: /\\b(?:false|true)\\b/i,\n      alias: 'constant'\n    },\n    'constant': [/\\b[A-Z_][A-Z0-9_]*\\b/, /\\b(?:null)\\b/i],\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('php', 'string', {\n    'shell-comment': {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true,\n      alias: 'comment'\n    }\n  });\n  Prism.languages.insertBefore('php', 'comment', {\n    'delimiter': {\n      pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n      alias: 'important'\n    }\n  });\n  Prism.languages.insertBefore('php', 'keyword', {\n    'variable': /\\$+(?:\\w+\\b|(?={))/i,\n    'package': {\n      pattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\\\/\n      }\n    }\n  }); // Must be defined after the function pattern\n\n  Prism.languages.insertBefore('php', 'operator', {\n    'property': {\n      pattern: /(->)[\\w]+/,\n      lookbehind: true\n    }\n  });\n  var string_interpolation = {\n    pattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[.+?]|->\\w+)*)/,\n    lookbehind: true,\n    inside: {\n      rest: Prism.languages.php\n    }\n  };\n  Prism.languages.insertBefore('php', 'string', {\n    'nowdoc-string': {\n      pattern: /<<<'([^']+)'(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'delimiter': {\n          pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n          alias: 'symbol',\n          inside: {\n            'punctuation': /^<<<'?|[';]$/\n          }\n        }\n      }\n    },\n    'heredoc-string': {\n      pattern: /<<<(?:\"([^\"]+)\"(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;|([a-z_]\\w*)(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\2;)/i,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'delimiter': {\n          pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n          alias: 'symbol',\n          inside: {\n            'punctuation': /^<<<\"?|[\";]$/\n          }\n        },\n        'interpolation': string_interpolation // See below\n\n      }\n    },\n    'single-quoted-string': {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true,\n      alias: 'string'\n    },\n    'double-quoted-string': {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'interpolation': string_interpolation // See below\n\n      }\n    }\n  }); // The different types of PHP strings \"replace\" the C-like standard string\n\n  delete Prism.languages.php['string'];\n  Prism.hooks.add('before-tokenize', function (env) {\n    if (!/<\\?/.test(env.code)) {\n      return;\n    }\n\n    var phpPattern = /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#)(?:[^?\\n\\r]|\\?(?!>))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$))*?(?:\\?>|$)/ig;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n  });\n})(Prism);","!function (n) {\n  n.languages.php = n.languages.extend(\"clike\", {\n    keyword: /\\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|class|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|eval|exit|extends|final|finally|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|new|or|parent|print|private|protected|public|require|require_once|return|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\\b/i,\n    boolean: {\n      pattern: /\\b(?:false|true)\\b/i,\n      alias: \"constant\"\n    },\n    constant: [/\\b[A-Z_][A-Z0-9_]*\\b/, /\\b(?:null)\\b/i],\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: !0\n    }\n  }), n.languages.insertBefore(\"php\", \"string\", {\n    \"shell-comment\": {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: !0,\n      alias: \"comment\"\n    }\n  }), n.languages.insertBefore(\"php\", \"comment\", {\n    delimiter: {\n      pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n      alias: \"important\"\n    }\n  }), n.languages.insertBefore(\"php\", \"keyword\", {\n    variable: /\\$+(?:\\w+\\b|(?={))/i,\n    package: {\n      pattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n      lookbehind: !0,\n      inside: {\n        punctuation: /\\\\/\n      }\n    }\n  }), n.languages.insertBefore(\"php\", \"operator\", {\n    property: {\n      pattern: /(->)[\\w]+/,\n      lookbehind: !0\n    }\n  });\n  var e = {\n    pattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[.+?]|->\\w+)*)/,\n    lookbehind: !0,\n    inside: {\n      rest: n.languages.php\n    }\n  };\n  n.languages.insertBefore(\"php\", \"string\", {\n    \"nowdoc-string\": {\n      pattern: /<<<'([^']+)'(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;/,\n      greedy: !0,\n      alias: \"string\",\n      inside: {\n        delimiter: {\n          pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n          alias: \"symbol\",\n          inside: {\n            punctuation: /^<<<'?|[';]$/\n          }\n        }\n      }\n    },\n    \"heredoc-string\": {\n      pattern: /<<<(?:\"([^\"]+)\"(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;|([a-z_]\\w*)(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\2;)/i,\n      greedy: !0,\n      alias: \"string\",\n      inside: {\n        delimiter: {\n          pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n          alias: \"symbol\",\n          inside: {\n            punctuation: /^<<<\"?|[\";]$/\n          }\n        },\n        interpolation: e\n      }\n    },\n    \"single-quoted-string\": {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: !0,\n      alias: \"string\"\n    },\n    \"double-quoted-string\": {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: !0,\n      alias: \"string\",\n      inside: {\n        interpolation: e\n      }\n    }\n  }), delete n.languages.php.string, n.hooks.add(\"before-tokenize\", function (e) {\n    if (/<\\?/.test(e.code)) {\n      n.languages[\"markup-templating\"].buildPlaceholders(e, \"php\", /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#)(?:[^?\\n\\r]|\\?(?!>))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$))*?(?:\\?>|$)/gi);\n    }\n  }), n.hooks.add(\"after-tokenize\", function (e) {\n    n.languages[\"markup-templating\"].tokenizePlaceholders(e, \"php\");\n  });\n}(Prism);","require(\"core-js/modules/es6.regexp.constructor\");\n\n(function (Prism) {\n  var typeExpression = /(?:[a-zA-Z]\\w*|[|\\\\[\\]])+/.source;\n  Prism.languages.phpdoc = Prism.languages.extend('javadoclike', {\n    'parameter': {\n      pattern: RegExp('(@(?:global|param|property(?:-read|-write)?|var)\\\\s+(?:' + typeExpression + '\\\\s+)?)\\\\$\\\\w+'),\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('phpdoc', 'keyword', {\n    'class-name': [{\n      pattern: RegExp('(@(?:global|package|param|property(?:-read|-write)?|return|subpackage|throws|var)\\\\s+)' + typeExpression),\n      lookbehind: true,\n      inside: {\n        'keyword': /\\b(?:callback|resource|boolean|integer|double|object|string|array|false|float|mixed|bool|null|self|true|void|int)\\b/,\n        'punctuation': /[|\\\\[\\]()]/\n      }\n    }]\n  });\n  Prism.languages.javadoclike.addSupport('php', Prism.languages.phpdoc);\n})(Prism);","require(\"core-js/modules/es6.regexp.constructor\");\n\n!function (a) {\n  var e = \"(?:[a-zA-Z]\\\\w*|[|\\\\\\\\[\\\\]])+\";\n  a.languages.phpdoc = a.languages.extend(\"javadoclike\", {\n    parameter: {\n      pattern: RegExp(\"(@(?:global|param|property(?:-read|-write)?|var)\\\\s+(?:\" + e + \"\\\\s+)?)\\\\$\\\\w+\"),\n      lookbehind: !0\n    }\n  }), a.languages.insertBefore(\"phpdoc\", \"keyword\", {\n    \"class-name\": [{\n      pattern: RegExp(\"(@(?:global|package|param|property(?:-read|-write)?|return|subpackage|throws|var)\\\\s+)\" + e),\n      lookbehind: !0,\n      inside: {\n        keyword: /\\b(?:callback|resource|boolean|integer|double|object|string|array|false|float|mixed|bool|null|self|true|void|int)\\b/,\n        punctuation: /[|\\\\[\\]()]/\n      }\n    }]\n  }), a.languages.javadoclike.addSupport(\"php\", a.languages.phpdoc);\n}(Prism);","(function (Prism) {\n  var plsql = Prism.languages.plsql = Prism.languages.extend('sql', {\n    'comment': [/\\/\\*[\\s\\S]*?\\*\\//, /--.*/]\n  });\n  var keyword = plsql['keyword'];\n\n  if (!Array.isArray(keyword)) {\n    keyword = plsql['keyword'] = [keyword];\n  }\n\n  keyword.unshift(/\\b(?:ACCESS|AGENT|AGGREGATE|ARRAY|ARROW|AT|ATTRIBUTE|AUDIT|AUTHID|BFILE_BASE|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BYTE|CALLING|CHAR_BASE|CHARSET(?:FORM|ID)|CLOB_BASE|COLAUTH|COLLECT|CLUSTERS?|COMPILED|COMPRESS|CONSTANT|CONSTRUCTOR|CONTEXT|CRASH|CUSTOMDATUM|DANGLING|DATE_BASE|DEFINE|DETERMINISTIC|DURATION|ELEMENT|EMPTY|EXCEPTIONS?|EXCLUSIVE|EXTERNAL|FINAL|FORALL|FORM|FOUND|GENERAL|HEAP|HIDDEN|IDENTIFIED|IMMEDIATE|INCLUDING|INCREMENT|INDICATOR|INDEXES|INDICES|INFINITE|INITIAL|ISOPEN|INSTANTIABLE|INTERFACE|INVALIDATE|JAVA|LARGE|LEADING|LENGTH|LIBRARY|LIKE[24C]|LIMITED|LONG|LOOP|MAP|MAXEXTENTS|MAXLEN|MEMBER|MINUS|MLSLABEL|MULTISET|NAME|NAN|NATIVE|NEW|NOAUDIT|NOCOMPRESS|NOCOPY|NOTFOUND|NOWAIT|NUMBER(?:_BASE)?|OBJECT|OCI(?:COLL|DATE|DATETIME|DURATION|INTERVAL|LOBLOCATOR|NUMBER|RAW|REF|REFCURSOR|ROWID|STRING|TYPE)|OFFLINE|ONLINE|ONLY|OPAQUE|OPERATOR|ORACLE|ORADATA|ORGANIZATION|ORL(?:ANY|VARY)|OTHERS|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETERS?|PASCAL|PCTFREE|PIPE(?:LINED)?|PRAGMA|PRIOR|PRIVATE|RAISE|RANGE|RAW|RECORD|REF|REFERENCE|REM|REMAINDER|RESULT|RESOURCE|RETURNING|REVERSE|ROW(?:ID|NUM|TYPE)|SAMPLE|SB[124]|SEGMENT|SELF|SEPARATE|SEQUENCE|SHORT|SIZE(?:_T)?|SPARSE|SQL(?:CODE|DATA|NAME|STATE)|STANDARD|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUCCESSFUL|SYNONYM|SYSDATE|TABAUTH|TDO|THE|TIMEZONE_(?:ABBR|HOUR|MINUTE|REGION)|TRAILING|TRANSAC(?:TIONAL)?|TRUSTED|UB[124]|UID|UNDER|UNTRUSTED|VALIDATE|VALIST|VARCHAR2|VARIABLE|VARIANCE|VARRAY|VIEWS|VOID|WHENEVER|WRAPPED|ZONE)\\b/i);\n  var operator = plsql['operator'];\n\n  if (!Array.isArray(operator)) {\n    operator = plsql['operator'] = [operator];\n  }\n\n  operator.unshift(/:=/);\n})(Prism);","!function (E) {\n  var A = E.languages.plsql = E.languages.extend(\"sql\", {\n    comment: [/\\/\\*[\\s\\S]*?\\*\\//, /--.*/]\n  }),\n      T = A.keyword;\n  Array.isArray(T) || (T = A.keyword = [T]), T.unshift(/\\b(?:ACCESS|AGENT|AGGREGATE|ARRAY|ARROW|AT|ATTRIBUTE|AUDIT|AUTHID|BFILE_BASE|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BYTE|CALLING|CHAR_BASE|CHARSET(?:FORM|ID)|CLOB_BASE|COLAUTH|COLLECT|CLUSTERS?|COMPILED|COMPRESS|CONSTANT|CONSTRUCTOR|CONTEXT|CRASH|CUSTOMDATUM|DANGLING|DATE_BASE|DEFINE|DETERMINISTIC|DURATION|ELEMENT|EMPTY|EXCEPTIONS?|EXCLUSIVE|EXTERNAL|FINAL|FORALL|FORM|FOUND|GENERAL|HEAP|HIDDEN|IDENTIFIED|IMMEDIATE|INCLUDING|INCREMENT|INDICATOR|INDEXES|INDICES|INFINITE|INITIAL|ISOPEN|INSTANTIABLE|INTERFACE|INVALIDATE|JAVA|LARGE|LEADING|LENGTH|LIBRARY|LIKE[24C]|LIMITED|LONG|LOOP|MAP|MAXEXTENTS|MAXLEN|MEMBER|MINUS|MLSLABEL|MULTISET|NAME|NAN|NATIVE|NEW|NOAUDIT|NOCOMPRESS|NOCOPY|NOTFOUND|NOWAIT|NUMBER(?:_BASE)?|OBJECT|OCI(?:COLL|DATE|DATETIME|DURATION|INTERVAL|LOBLOCATOR|NUMBER|RAW|REF|REFCURSOR|ROWID|STRING|TYPE)|OFFLINE|ONLINE|ONLY|OPAQUE|OPERATOR|ORACLE|ORADATA|ORGANIZATION|ORL(?:ANY|VARY)|OTHERS|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETERS?|PASCAL|PCTFREE|PIPE(?:LINED)?|PRAGMA|PRIOR|PRIVATE|RAISE|RANGE|RAW|RECORD|REF|REFERENCE|REM|REMAINDER|RESULT|RESOURCE|RETURNING|REVERSE|ROW(?:ID|NUM|TYPE)|SAMPLE|SB[124]|SEGMENT|SELF|SEPARATE|SEQUENCE|SHORT|SIZE(?:_T)?|SPARSE|SQL(?:CODE|DATA|NAME|STATE)|STANDARD|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUCCESSFUL|SYNONYM|SYSDATE|TABAUTH|TDO|THE|TIMEZONE_(?:ABBR|HOUR|MINUTE|REGION)|TRAILING|TRANSAC(?:TIONAL)?|TRUSTED|UB[124]|UID|UNDER|UNTRUSTED|VALIDATE|VALIST|VARCHAR2|VARIABLE|VARIANCE|VARRAY|VIEWS|VOID|WHENEVER|WRAPPED|ZONE)\\b/i);\n  var R = A.operator;\n  Array.isArray(R) || (R = A.operator = [R]), R.unshift(/:=/);\n}(Prism);","(function (Prism) {\n  var powershell = Prism.languages.powershell = {\n    'comment': [{\n      pattern: /(^|[^`])<#[\\s\\S]*?#>/,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^`])#.*/,\n      lookbehind: true\n    }],\n    'string': [{\n      pattern: /\"(?:`[\\s\\S]|[^`\"])*\"/,\n      greedy: true,\n      inside: {\n        'function': {\n          // Allow for one level of nesting\n          pattern: /(^|[^`])\\$\\((?:\\$\\(.*?\\)|(?!\\$\\()[^\\r\\n)])*\\)/,\n          lookbehind: true,\n          // Populated at end of file\n          inside: {}\n        }\n      }\n    }, {\n      pattern: /'(?:[^']|'')*'/,\n      greedy: true\n    }],\n    // Matches name spaces as well as casts, attribute decorators. Force starting with letter to avoid matching array indices\n    // Supports two levels of nested brackets (e.g. `[OutputType([System.Collections.Generic.List[int]])]`)\n    'namespace': /\\[[a-z](?:\\[(?:\\[[^\\]]*]|[^\\[\\]])*]|[^\\[\\]])*]/i,\n    'boolean': /\\$(?:true|false)\\b/i,\n    'variable': /\\$\\w+\\b/i,\n    // Cmdlets and aliases. Aliases should come last, otherwise \"write\" gets preferred over \"write-host\" for example\n    // Get-Command | ?{ $_.ModuleName -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n    // Get-Alias | ?{ $_.ReferencedCommand.Module.Name -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n    'function': [/\\b(?:Add-(?:Computer|Content|History|Member|PSSnapin|Type)|Checkpoint-Computer|Clear-(?:Content|EventLog|History|Item|ItemProperty|Variable)|Compare-Object|Complete-Transaction|Connect-PSSession|ConvertFrom-(?:Csv|Json|StringData)|Convert-Path|ConvertTo-(?:Csv|Html|Json|Xml)|Copy-(?:Item|ItemProperty)|Debug-Process|Disable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Disconnect-PSSession|Enable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Enter-PSSession|Exit-PSSession|Export-(?:Alias|Clixml|Console|Csv|FormatData|ModuleMember|PSSession)|ForEach-Object|Format-(?:Custom|List|Table|Wide)|Get-(?:Alias|ChildItem|Command|ComputerRestorePoint|Content|ControlPanelItem|Culture|Date|Event|EventLog|EventSubscriber|FormatData|Help|History|Host|HotFix|Item|ItemProperty|Job|Location|Member|Module|Process|PSBreakpoint|PSCallStack|PSDrive|PSProvider|PSSession|PSSessionConfiguration|PSSnapin|Random|Service|TraceSource|Transaction|TypeData|UICulture|Unique|Variable|WmiObject)|Group-Object|Import-(?:Alias|Clixml|Csv|LocalizedData|Module|PSSession)|Invoke-(?:Command|Expression|History|Item|RestMethod|WebRequest|WmiMethod)|Join-Path|Limit-EventLog|Measure-(?:Command|Object)|Move-(?:Item|ItemProperty)|New-(?:Alias|Event|EventLog|Item|ItemProperty|Module|ModuleManifest|Object|PSDrive|PSSession|PSSessionConfigurationFile|PSSessionOption|PSTransportOption|Service|TimeSpan|Variable|WebServiceProxy)|Out-(?:Default|File|GridView|Host|Null|Printer|String)|Pop-Location|Push-Location|Read-Host|Receive-(?:Job|PSSession)|Register-(?:EngineEvent|ObjectEvent|PSSessionConfiguration|WmiEvent)|Remove-(?:Computer|Event|EventLog|Item|ItemProperty|Job|Module|PSBreakpoint|PSDrive|PSSession|PSSnapin|TypeData|Variable|WmiObject)|Rename-(?:Computer|Item|ItemProperty)|Reset-ComputerMachinePassword|Resolve-Path|Restart-(?:Computer|Service)|Restore-Computer|Resume-(?:Job|Service)|Save-Help|Select-(?:Object|String|Xml)|Send-MailMessage|Set-(?:Alias|Content|Date|Item|ItemProperty|Location|PSBreakpoint|PSDebug|PSSessionConfiguration|Service|StrictMode|TraceSource|Variable|WmiInstance)|Show-(?:Command|ControlPanelItem|EventLog)|Sort-Object|Split-Path|Start-(?:Job|Process|Service|Sleep|Transaction)|Stop-(?:Computer|Job|Process|Service)|Suspend-(?:Job|Service)|Tee-Object|Test-(?:ComputerSecureChannel|Connection|ModuleManifest|Path|PSSessionConfigurationFile)|Trace-Command|Unblock-File|Undo-Transaction|Unregister-(?:Event|PSSessionConfiguration)|Update-(?:FormatData|Help|List|TypeData)|Use-Transaction|Wait-(?:Event|Job|Process)|Where-Object|Write-(?:Debug|Error|EventLog|Host|Output|Progress|Verbose|Warning))\\b/i, /\\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i],\n    // per http://technet.microsoft.com/en-us/library/hh847744.aspx\n    'keyword': /\\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,\n    'operator': {\n      pattern: /(\\W?)(?:!|-(eq|ne|gt|ge|lt|le|sh[lr]|not|b?(?:and|x?or)|(?:Not)?(?:Like|Match|Contains|In)|Replace|Join|is(?:Not)?|as)\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,\n      lookbehind: true\n    },\n    'punctuation': /[|{}[\\];(),.]/\n  }; // Variable interpolation inside strings, and nested expressions\n\n  var stringInside = powershell.string[0].inside;\n  stringInside.boolean = powershell.boolean;\n  stringInside.variable = powershell.variable;\n  stringInside.function.inside = powershell;\n})(Prism);","!function (e) {\n  var t = Prism.languages.powershell = {\n    comment: [{\n      pattern: /(^|[^`])<#[\\s\\S]*?#>/,\n      lookbehind: !0\n    }, {\n      pattern: /(^|[^`])#.*/,\n      lookbehind: !0\n    }],\n    string: [{\n      pattern: /\"(?:`[\\s\\S]|[^`\"])*\"/,\n      greedy: !0,\n      inside: {\n        function: {\n          pattern: /(^|[^`])\\$\\((?:\\$\\(.*?\\)|(?!\\$\\()[^\\r\\n)])*\\)/,\n          lookbehind: !0,\n          inside: {}\n        }\n      }\n    }, {\n      pattern: /'(?:[^']|'')*'/,\n      greedy: !0\n    }],\n    namespace: /\\[[a-z](?:\\[(?:\\[[^\\]]*]|[^\\[\\]])*]|[^\\[\\]])*]/i,\n    boolean: /\\$(?:true|false)\\b/i,\n    variable: /\\$\\w+\\b/i,\n    function: [/\\b(?:Add-(?:Computer|Content|History|Member|PSSnapin|Type)|Checkpoint-Computer|Clear-(?:Content|EventLog|History|Item|ItemProperty|Variable)|Compare-Object|Complete-Transaction|Connect-PSSession|ConvertFrom-(?:Csv|Json|StringData)|Convert-Path|ConvertTo-(?:Csv|Html|Json|Xml)|Copy-(?:Item|ItemProperty)|Debug-Process|Disable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Disconnect-PSSession|Enable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Enter-PSSession|Exit-PSSession|Export-(?:Alias|Clixml|Console|Csv|FormatData|ModuleMember|PSSession)|ForEach-Object|Format-(?:Custom|List|Table|Wide)|Get-(?:Alias|ChildItem|Command|ComputerRestorePoint|Content|ControlPanelItem|Culture|Date|Event|EventLog|EventSubscriber|FormatData|Help|History|Host|HotFix|Item|ItemProperty|Job|Location|Member|Module|Process|PSBreakpoint|PSCallStack|PSDrive|PSProvider|PSSession|PSSessionConfiguration|PSSnapin|Random|Service|TraceSource|Transaction|TypeData|UICulture|Unique|Variable|WmiObject)|Group-Object|Import-(?:Alias|Clixml|Csv|LocalizedData|Module|PSSession)|Invoke-(?:Command|Expression|History|Item|RestMethod|WebRequest|WmiMethod)|Join-Path|Limit-EventLog|Measure-(?:Command|Object)|Move-(?:Item|ItemProperty)|New-(?:Alias|Event|EventLog|Item|ItemProperty|Module|ModuleManifest|Object|PSDrive|PSSession|PSSessionConfigurationFile|PSSessionOption|PSTransportOption|Service|TimeSpan|Variable|WebServiceProxy)|Out-(?:Default|File|GridView|Host|Null|Printer|String)|Pop-Location|Push-Location|Read-Host|Receive-(?:Job|PSSession)|Register-(?:EngineEvent|ObjectEvent|PSSessionConfiguration|WmiEvent)|Remove-(?:Computer|Event|EventLog|Item|ItemProperty|Job|Module|PSBreakpoint|PSDrive|PSSession|PSSnapin|TypeData|Variable|WmiObject)|Rename-(?:Computer|Item|ItemProperty)|Reset-ComputerMachinePassword|Resolve-Path|Restart-(?:Computer|Service)|Restore-Computer|Resume-(?:Job|Service)|Save-Help|Select-(?:Object|String|Xml)|Send-MailMessage|Set-(?:Alias|Content|Date|Item|ItemProperty|Location|PSBreakpoint|PSDebug|PSSessionConfiguration|Service|StrictMode|TraceSource|Variable|WmiInstance)|Show-(?:Command|ControlPanelItem|EventLog)|Sort-Object|Split-Path|Start-(?:Job|Process|Service|Sleep|Transaction)|Stop-(?:Computer|Job|Process|Service)|Suspend-(?:Job|Service)|Tee-Object|Test-(?:ComputerSecureChannel|Connection|ModuleManifest|Path|PSSessionConfigurationFile)|Trace-Command|Unblock-File|Undo-Transaction|Unregister-(?:Event|PSSessionConfiguration)|Update-(?:FormatData|Help|List|TypeData)|Use-Transaction|Wait-(?:Event|Job|Process)|Where-Object|Write-(?:Debug|Error|EventLog|Host|Output|Progress|Verbose|Warning))\\b/i, /\\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i],\n    keyword: /\\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,\n    operator: {\n      pattern: /(\\W?)(?:!|-(eq|ne|gt|ge|lt|le|sh[lr]|not|b?(?:and|x?or)|(?:Not)?(?:Like|Match|Contains|In)|Replace|Join|is(?:Not)?|as)\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,\n      lookbehind: !0\n    },\n    punctuation: /[|{}[\\];(),.]/\n  },\n      o = t.string[0].inside;\n  o.boolean = t.boolean, o.variable = t.variable, o.function.inside = t;\n}();","Prism.languages.processing = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:break|catch|case|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n  'operator': /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n});\nPrism.languages.insertBefore('processing', 'number', {\n  // Special case: XML is a type\n  'constant': /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n  'type': {\n    pattern: /\\b(?:boolean|byte|char|color|double|float|int|XML|[A-Z]\\w*)\\b/,\n    alias: 'variable'\n  }\n}); // Spaces are allowed between function name and parenthesis\n\nPrism.languages.processing['function'].pattern = /\\w+(?=\\s*\\()/; // Class-names is not styled by default\n\nPrism.languages.processing['class-name'].alias = 'variable';","Prism.languages.processing = Prism.languages.extend(\"clike\", {\n  keyword: /\\b(?:break|catch|case|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n  operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n}), Prism.languages.insertBefore(\"processing\", \"number\", {\n  constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n  type: {\n    pattern: /\\b(?:boolean|byte|char|color|double|float|int|XML|[A-Z]\\w*)\\b/,\n    alias: \"variable\"\n  }\n}), Prism.languages.processing.function.pattern = /\\w+(?=\\s*\\()/, Prism.languages.processing[\"class-name\"].alias = \"variable\";","Prism.languages.prolog = {\n  // Syntax depends on the implementation\n  'comment': [/%.+/, /\\/\\*[\\s\\S]*?\\*\\//],\n  // Depending on the implementation, strings may allow escaped newlines and quote-escape\n  'string': {\n    pattern: /([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'builtin': /\\b(?:fx|fy|xf[xy]?|yfx?)\\b/,\n  'variable': /\\b[A-Z_]\\w*/,\n  // FIXME: Should we list all null-ary predicates (not followed by a parenthesis) like halt, trace, etc.?\n  'function': /\\b[a-z]\\w*(?:(?=\\()|\\/\\d+)/,\n  'number': /\\b\\d+\\.?\\d*/,\n  // Custom operators are allowed\n  'operator': /[:\\\\=><\\-?*@\\/;+^|!$.]+|\\b(?:is|mod|not|xor)\\b/,\n  'punctuation': /[(){}\\[\\],]/\n};","Prism.languages.prolog = {\n  comment: [/%.+/, /\\/\\*[\\s\\S]*?\\*\\//],\n  string: {\n    pattern: /([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  },\n  builtin: /\\b(?:fx|fy|xf[xy]?|yfx?)\\b/,\n  variable: /\\b[A-Z_]\\w*/,\n  function: /\\b[a-z]\\w*(?:(?=\\()|\\/\\d+)/,\n  number: /\\b\\d+\\.?\\d*/,\n  operator: /[:\\\\=><\\-?*@\\/;+^|!$.]+|\\b(?:is|mod|not|xor)\\b/,\n  punctuation: /[(){}\\[\\],]/\n};","Prism.languages.properties = {\n  'comment': /^[ \\t]*[#!].*$/m,\n  'attr-value': {\n    pattern: /(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?: *[=:] *| ))(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])+/m,\n    lookbehind: true\n  },\n  'attr-name': /^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?= *[=:] *| )/m,\n  'punctuation': /[=:]/\n};","Prism.languages.properties = {\n  comment: /^[ \\t]*[#!].*$/m,\n  \"attr-value\": {\n    pattern: /(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?: *[=:] *| ))(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])+/m,\n    lookbehind: !0\n  },\n  \"attr-name\": /^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?= *[=:] *| )/m,\n  punctuation: /[=:]/\n};","Prism.languages.protobuf = Prism.languages.extend('clike', {\n  keyword: /\\b(?:package|import|message|enum)\\b/,\n  builtin: /\\b(?:required|repeated|optional|reserved)\\b/,\n  primitive: {\n    pattern: /\\b(?:double|float|int32|int64|uint32|uint64|sint32|sint64|fixed32|fixed64|sfixed32|sfixed64|bool|string|bytes)\\b/,\n    alias: 'symbol'\n  }\n});","Prism.languages.protobuf = Prism.languages.extend(\"clike\", {\n  keyword: /\\b(?:package|import|message|enum)\\b/,\n  builtin: /\\b(?:required|repeated|optional|reserved)\\b/,\n  primitive: {\n    pattern: /\\b(?:double|float|int32|int64|uint32|uint64|sint32|sint64|fixed32|fixed64|sfixed32|sfixed64|bool|string|bytes)\\b/,\n    alias: \"symbol\"\n  }\n});","require(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\n(function (Prism) {\n  // TODO:\n  // - Add CSS highlighting inside <style> tags\n  // - Add support for multi-line code blocks\n  // - Add support for interpolation #{} and !{}\n  // - Add support for tag interpolation #[]\n  // - Add explicit support for plain text using |\n  // - Add support for markup embedded in plain text\n  Prism.languages.pug = {\n    // Multiline stuff should appear before the rest\n    // This handles both single-line and multi-line comments\n    'comment': {\n      pattern: /(^([\\t ]*))\\/\\/.*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)*/m,\n      lookbehind: true\n    },\n    // All the tag-related part is in lookbehind\n    // so that it can be highlighted by the \"tag\" pattern\n    'multiline-script': {\n      pattern: /(^([\\t ]*)script\\b.*\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n      lookbehind: true,\n      inside: {\n        rest: Prism.languages.javascript\n      }\n    },\n    // See at the end of the file for known filters\n    'filter': {\n      pattern: /(^([\\t ]*)):.+(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n      lookbehind: true,\n      inside: {\n        'filter-name': {\n          pattern: /^:[\\w-]+/,\n          alias: 'variable'\n        }\n      }\n    },\n    'multiline-plain-text': {\n      pattern: /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n      lookbehind: true\n    },\n    'markup': {\n      pattern: /(^[\\t ]*)<.+/m,\n      lookbehind: true,\n      inside: {\n        rest: Prism.languages.markup\n      }\n    },\n    'doctype': {\n      pattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\n      lookbehind: true\n    },\n    // This handle all conditional and loop keywords\n    'flow-control': {\n      pattern: /(^[\\t ]*)(?:if|unless|else|case|when|default|each|while)\\b(?: .+)?/m,\n      lookbehind: true,\n      inside: {\n        'each': {\n          pattern: /^each .+? in\\b/,\n          inside: {\n            'keyword': /\\b(?:each|in)\\b/,\n            'punctuation': /,/\n          }\n        },\n        'branch': {\n          pattern: /^(?:if|unless|else|case|when|default|while)\\b/,\n          alias: 'keyword'\n        },\n        rest: Prism.languages.javascript\n      }\n    },\n    'keyword': {\n      pattern: /(^[\\t ]*)(?:block|extends|include|append|prepend)\\b.+/m,\n      lookbehind: true\n    },\n    'mixin': [// Declaration\n    {\n      pattern: /(^[\\t ]*)mixin .+/m,\n      lookbehind: true,\n      inside: {\n        'keyword': /^mixin/,\n        'function': /\\w+(?=\\s*\\(|\\s*$)/,\n        'punctuation': /[(),.]/\n      }\n    }, // Usage\n    {\n      pattern: /(^[\\t ]*)\\+.+/m,\n      lookbehind: true,\n      inside: {\n        'name': {\n          pattern: /^\\+\\w+/,\n          alias: 'function'\n        },\n        'rest': Prism.languages.javascript\n      }\n    }],\n    'script': {\n      pattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]+).+/m,\n      lookbehind: true,\n      inside: {\n        rest: Prism.languages.javascript\n      }\n    },\n    'plain-text': {\n      pattern: /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]+).+/m,\n      lookbehind: true\n    },\n    'tag': {\n      pattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\n      lookbehind: true,\n      inside: {\n        'attributes': [{\n          pattern: /&[^(]+\\([^)]+\\)/,\n          inside: {\n            rest: Prism.languages.javascript\n          }\n        }, {\n          pattern: /\\([^)]+\\)/,\n          inside: {\n            'attr-value': {\n              pattern: /(=\\s*)(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\n              lookbehind: true,\n              inside: {\n                rest: Prism.languages.javascript\n              }\n            },\n            'attr-name': /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\n            'punctuation': /[!=(),]+/\n          }\n        }],\n        'punctuation': /:/\n      }\n    },\n    'code': [{\n      pattern: /(^[\\t ]*(?:-|!?=)).+/m,\n      lookbehind: true,\n      inside: {\n        rest: Prism.languages.javascript\n      }\n    }],\n    'punctuation': /[.\\-!=|]+/\n  };\n  var filter_pattern = /(^([\\t ]*)):{{filter_name}}(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/.source; // Non exhaustive list of available filters and associated languages\n\n  var filters = [{\n    filter: 'atpl',\n    language: 'twig'\n  }, {\n    filter: 'coffee',\n    language: 'coffeescript'\n  }, 'ejs', 'handlebars', 'less', 'livescript', 'markdown', {\n    filter: 'sass',\n    language: 'scss'\n  }, 'stylus'];\n  var all_filters = {};\n\n  for (var i = 0, l = filters.length; i < l; i++) {\n    var filter = filters[i];\n    filter = typeof filter === 'string' ? {\n      filter: filter,\n      language: filter\n    } : filter;\n\n    if (Prism.languages[filter.language]) {\n      all_filters['filter-' + filter.filter] = {\n        pattern: RegExp(filter_pattern.replace('{{filter_name}}', filter.filter), 'm'),\n        lookbehind: true,\n        inside: {\n          'filter-name': {\n            pattern: /^:[\\w-]+/,\n            alias: 'variable'\n          },\n          rest: Prism.languages[filter.language]\n        }\n      };\n    }\n  }\n\n  Prism.languages.insertBefore('pug', 'filter', all_filters);\n})(Prism);","require(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\n!function (e) {\n  e.languages.pug = {\n    comment: {\n      pattern: /(^([\\t ]*))\\/\\/.*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)*/m,\n      lookbehind: !0\n    },\n    \"multiline-script\": {\n      pattern: /(^([\\t ]*)script\\b.*\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n      lookbehind: !0,\n      inside: {\n        rest: e.languages.javascript\n      }\n    },\n    filter: {\n      pattern: /(^([\\t ]*)):.+(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n      lookbehind: !0,\n      inside: {\n        \"filter-name\": {\n          pattern: /^:[\\w-]+/,\n          alias: \"variable\"\n        }\n      }\n    },\n    \"multiline-plain-text\": {\n      pattern: /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n      lookbehind: !0\n    },\n    markup: {\n      pattern: /(^[\\t ]*)<.+/m,\n      lookbehind: !0,\n      inside: {\n        rest: e.languages.markup\n      }\n    },\n    doctype: {\n      pattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\n      lookbehind: !0\n    },\n    \"flow-control\": {\n      pattern: /(^[\\t ]*)(?:if|unless|else|case|when|default|each|while)\\b(?: .+)?/m,\n      lookbehind: !0,\n      inside: {\n        each: {\n          pattern: /^each .+? in\\b/,\n          inside: {\n            keyword: /\\b(?:each|in)\\b/,\n            punctuation: /,/\n          }\n        },\n        branch: {\n          pattern: /^(?:if|unless|else|case|when|default|while)\\b/,\n          alias: \"keyword\"\n        },\n        rest: e.languages.javascript\n      }\n    },\n    keyword: {\n      pattern: /(^[\\t ]*)(?:block|extends|include|append|prepend)\\b.+/m,\n      lookbehind: !0\n    },\n    mixin: [{\n      pattern: /(^[\\t ]*)mixin .+/m,\n      lookbehind: !0,\n      inside: {\n        keyword: /^mixin/,\n        function: /\\w+(?=\\s*\\(|\\s*$)/,\n        punctuation: /[(),.]/\n      }\n    }, {\n      pattern: /(^[\\t ]*)\\+.+/m,\n      lookbehind: !0,\n      inside: {\n        name: {\n          pattern: /^\\+\\w+/,\n          alias: \"function\"\n        },\n        rest: e.languages.javascript\n      }\n    }],\n    script: {\n      pattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]+).+/m,\n      lookbehind: !0,\n      inside: {\n        rest: e.languages.javascript\n      }\n    },\n    \"plain-text\": {\n      pattern: /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]+).+/m,\n      lookbehind: !0\n    },\n    tag: {\n      pattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\n      lookbehind: !0,\n      inside: {\n        attributes: [{\n          pattern: /&[^(]+\\([^)]+\\)/,\n          inside: {\n            rest: e.languages.javascript\n          }\n        }, {\n          pattern: /\\([^)]+\\)/,\n          inside: {\n            \"attr-value\": {\n              pattern: /(=\\s*)(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\n              lookbehind: !0,\n              inside: {\n                rest: e.languages.javascript\n              }\n            },\n            \"attr-name\": /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\n            punctuation: /[!=(),]+/\n          }\n        }],\n        punctuation: /:/\n      }\n    },\n    code: [{\n      pattern: /(^[\\t ]*(?:-|!?=)).+/m,\n      lookbehind: !0,\n      inside: {\n        rest: e.languages.javascript\n      }\n    }],\n    punctuation: /[.\\-!=|]+/\n  };\n\n  for (var t = [{\n    filter: \"atpl\",\n    language: \"twig\"\n  }, {\n    filter: \"coffee\",\n    language: \"coffeescript\"\n  }, \"ejs\", \"handlebars\", \"less\", \"livescript\", \"markdown\", {\n    filter: \"sass\",\n    language: \"scss\"\n  }, \"stylus\"], n = {}, a = 0, i = t.length; a < i; a++) {\n    var r = t[a];\n    r = \"string\" == typeof r ? {\n      filter: r,\n      language: r\n    } : r, e.languages[r.language] && (n[\"filter-\" + r.filter] = {\n      pattern: RegExp(\"(^([\\t ]*)):{{filter_name}}(?:(?:\\r?\\n|\\r(?!\\n))(?:\\\\2[\\t ]+.+|\\\\s*?(?=\\r?\\n|\\r)))+\".replace(\"{{filter_name}}\", r.filter), \"m\"),\n      lookbehind: !0,\n      inside: {\n        \"filter-name\": {\n          pattern: /^:[\\w-]+/,\n          alias: \"variable\"\n        },\n        rest: e.languages[r.language]\n      }\n    });\n  }\n\n  e.languages.insertBefore(\"pug\", \"filter\", n);\n}(Prism);","(function (Prism) {\n  Prism.languages.puppet = {\n    'heredoc': [// Matches the content of a quoted heredoc string (subject to interpolation)\n    {\n      pattern: /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,\n      lookbehind: true,\n      alias: 'string',\n      inside: {\n        // Matches the end tag\n        'punctuation': /(?=\\S).*\\S(?= *$)/ // See interpolation below\n\n      }\n    }, // Matches the content of an unquoted heredoc string (no interpolation)\n    {\n      pattern: /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        // Matches the end tag\n        'punctuation': /(?=\\S).*\\S(?= *$)/\n      }\n    }, // Matches the start tag of heredoc strings\n    {\n      pattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,\n      alias: 'string',\n      inside: {\n        'punctuation': {\n          pattern: /(\\().+?(?=\\))/,\n          lookbehind: true\n        }\n      }\n    }],\n    'multiline-comment': {\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n      lookbehind: true,\n      greedy: true,\n      alias: 'comment'\n    },\n    'regex': {\n      // Must be prefixed with the keyword \"node\" or a non-word char\n      pattern: /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        // Extended regexes must have the x flag. They can contain single-line comments.\n        'extended-regex': {\n          pattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,\n          inside: {\n            'comment': /#.*/\n          }\n        }\n      }\n    },\n    'comment': {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true,\n      greedy: true\n    },\n    'string': {\n      // Allow for one nested level of double quotes inside interpolation\n      pattern: /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n      greedy: true,\n      inside: {\n        'double-quoted': {\n          pattern: /^\"[\\s\\S]*\"$/,\n          inside: {// See interpolation below\n          }\n        }\n      }\n    },\n    'variable': {\n      pattern: /\\$(?:::)?\\w+(?:::\\w+)*/,\n      inside: {\n        'punctuation': /::/\n      }\n    },\n    'attr-name': /(?:\\w+|\\*)(?=\\s*=>)/,\n    'function': [{\n      pattern: /(\\.)(?!\\d)\\w+/,\n      lookbehind: true\n    }, /\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/],\n    'number': /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\n    'boolean': /\\b(?:true|false)\\b/,\n    // Includes words reserved for future use\n    'keyword': /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,\n    'datatype': {\n      pattern: /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,\n      alias: 'symbol'\n    },\n    'operator': /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,\n    'punctuation': /[\\[\\]{}().,;]|:+/\n  };\n  var interpolation = [{\n    // Allow for one nested level of braces inside interpolation\n    pattern: /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,\n    lookbehind: true,\n    inside: {\n      'short-variable': {\n        // Negative look-ahead prevent wrong highlighting of functions\n        pattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,\n        lookbehind: true,\n        alias: 'variable',\n        inside: {\n          'punctuation': /::/\n        }\n      },\n      'delimiter': {\n        pattern: /^\\$/,\n        alias: 'variable'\n      },\n      rest: Prism.languages.puppet\n    }\n  }, {\n    pattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,\n    lookbehind: true,\n    alias: 'variable',\n    inside: {\n      'punctuation': /::/\n    }\n  }];\n  Prism.languages.puppet['heredoc'][0].inside.interpolation = interpolation;\n  Prism.languages.puppet['string'].inside['double-quoted'].inside.interpolation = interpolation;\n})(Prism);","!function (e) {\n  e.languages.puppet = {\n    heredoc: [{\n      pattern: /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,\n      lookbehind: !0,\n      alias: \"string\",\n      inside: {\n        punctuation: /(?=\\S).*\\S(?= *$)/\n      }\n    }, {\n      pattern: /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,\n      lookbehind: !0,\n      greedy: !0,\n      alias: \"string\",\n      inside: {\n        punctuation: /(?=\\S).*\\S(?= *$)/\n      }\n    }, {\n      pattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,\n      alias: \"string\",\n      inside: {\n        punctuation: {\n          pattern: /(\\().+?(?=\\))/,\n          lookbehind: !0\n        }\n      }\n    }],\n    \"multiline-comment\": {\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n      lookbehind: !0,\n      greedy: !0,\n      alias: \"comment\"\n    },\n    regex: {\n      pattern: /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,\n      lookbehind: !0,\n      greedy: !0,\n      inside: {\n        \"extended-regex\": {\n          pattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,\n          inside: {\n            comment: /#.*/\n          }\n        }\n      }\n    },\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: !0,\n      greedy: !0\n    },\n    string: {\n      pattern: /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n      greedy: !0,\n      inside: {\n        \"double-quoted\": {\n          pattern: /^\"[\\s\\S]*\"$/,\n          inside: {}\n        }\n      }\n    },\n    variable: {\n      pattern: /\\$(?:::)?\\w+(?:::\\w+)*/,\n      inside: {\n        punctuation: /::/\n      }\n    },\n    \"attr-name\": /(?:\\w+|\\*)(?=\\s*=>)/,\n    function: [{\n      pattern: /(\\.)(?!\\d)\\w+/,\n      lookbehind: !0\n    }, /\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/],\n    number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\n    boolean: /\\b(?:true|false)\\b/,\n    keyword: /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,\n    datatype: {\n      pattern: /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,\n      alias: \"symbol\"\n    },\n    operator: /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,\n    punctuation: /[\\[\\]{}().,;]|:+/\n  };\n  var n = [{\n    pattern: /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,\n    lookbehind: !0,\n    inside: {\n      \"short-variable\": {\n        pattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,\n        lookbehind: !0,\n        alias: \"variable\",\n        inside: {\n          punctuation: /::/\n        }\n      },\n      delimiter: {\n        pattern: /^\\$/,\n        alias: \"variable\"\n      },\n      rest: e.languages.puppet\n    }\n  }, {\n    pattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,\n    lookbehind: !0,\n    alias: \"variable\",\n    inside: {\n      punctuation: /::/\n    }\n  }];\n  e.languages.puppet.heredoc[0].inside.interpolation = n, e.languages.puppet.string.inside[\"double-quoted\"].inside.interpolation = n;\n}(Prism);","require(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\n(function (Prism) {\n  Prism.languages.pure = {\n    'comment': [{\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^\\\\:])\\/\\/.*/,\n      lookbehind: true\n    }, /#!.+/],\n    'inline-lang': {\n      pattern: /%<[\\s\\S]+?%>/,\n      greedy: true,\n      inside: {\n        'lang': {\n          pattern: /(^%< *)-\\*-.+?-\\*-/,\n          lookbehind: true,\n          alias: 'comment'\n        },\n        'delimiter': {\n          pattern: /^%<.*|%>$/,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'string': {\n      pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    'number': {\n      // The look-behind prevents wrong highlighting of the .. operator\n      pattern: /((?:\\.\\.)?)(?:\\b(?:inf|nan)\\b|\\b0x[\\da-f]+|(?:\\b(?:0b)?\\d+(?:\\.\\d)?|\\B\\.\\d)\\d*(?:e[+-]?\\d+)?L?)/i,\n      lookbehind: true\n    },\n    'keyword': /\\b(?:ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|NULL|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\\b/,\n    'function': /\\b(?:abs|add_(?:(?:fundef|interface|macdef|typedef)(?:_at)?|addr|constdef|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_(?:matrix|pointer)|byte_c?string(?:_pointer)?|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|short|sentry|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\\b/,\n    'special': {\n      pattern: /\\b__[a-z]+__\\b/i,\n      alias: 'builtin'\n    },\n    // Any combination of operator chars can be an operator\n    'operator': /(?=\\b_|[^_])[!\"#$%&'*+,\\-.\\/:<=>?@\\\\^_`|~\\u00a1-\\u00bf\\u00d7-\\u00f7\\u20d0-\\u2bff]+|\\b(?:and|div|mod|not|or)\\b/,\n    // FIXME: How can we prevent | and , to be highlighted as operator when they are used alone?\n    'punctuation': /[(){}\\[\\];,|]/\n  };\n  var inlineLanguages = ['c', {\n    lang: 'c++',\n    alias: 'cpp'\n  }, 'fortran'];\n  var inlineLanguageRe = /%< *-\\*- *{lang}\\d* *-\\*-[\\s\\S]+?%>/.source;\n  inlineLanguages.forEach(function (lang) {\n    var alias = lang;\n\n    if (typeof lang !== 'string') {\n      alias = lang.alias;\n      lang = lang.lang;\n    }\n\n    if (Prism.languages[alias]) {\n      var o = {};\n      o['inline-lang-' + alias] = {\n        pattern: RegExp(inlineLanguageRe.replace('{lang}', lang.replace(/([.+*?\\/\\\\(){}\\[\\]])/g, '\\\\$1')), 'i'),\n        inside: Prism.util.clone(Prism.languages.pure['inline-lang'].inside)\n      };\n      o['inline-lang-' + alias].inside.rest = Prism.util.clone(Prism.languages[alias]);\n      Prism.languages.insertBefore('pure', 'inline-lang', o);\n    }\n  }); // C is the default inline language\n\n  if (Prism.languages.c) {\n    Prism.languages.pure['inline-lang'].inside.rest = Prism.util.clone(Prism.languages.c);\n  }\n})(Prism);","require(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\n!function (r) {\n  r.languages.pure = {\n    comment: [{\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n      lookbehind: !0\n    }, {\n      pattern: /(^|[^\\\\:])\\/\\/.*/,\n      lookbehind: !0\n    }, /#!.+/],\n    \"inline-lang\": {\n      pattern: /%<[\\s\\S]+?%>/,\n      greedy: !0,\n      inside: {\n        lang: {\n          pattern: /(^%< *)-\\*-.+?-\\*-/,\n          lookbehind: !0,\n          alias: \"comment\"\n        },\n        delimiter: {\n          pattern: /^%<.*|%>$/,\n          alias: \"punctuation\"\n        }\n      }\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      greedy: !0\n    },\n    number: {\n      pattern: /((?:\\.\\.)?)(?:\\b(?:inf|nan)\\b|\\b0x[\\da-f]+|(?:\\b(?:0b)?\\d+(?:\\.\\d)?|\\B\\.\\d)\\d*(?:e[+-]?\\d+)?L?)/i,\n      lookbehind: !0\n    },\n    keyword: /\\b(?:ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|NULL|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\\b/,\n    function: /\\b(?:abs|add_(?:(?:fundef|interface|macdef|typedef)(?:_at)?|addr|constdef|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_(?:matrix|pointer)|byte_c?string(?:_pointer)?|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|short|sentry|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\\b/,\n    special: {\n      pattern: /\\b__[a-z]+__\\b/i,\n      alias: \"builtin\"\n    },\n    operator: /(?=\\b_|[^_])[!\"#$%&'*+,\\-.\\/:<=>?@\\\\^_`|~\\u00a1-\\u00bf\\u00d7-\\u00f7\\u20d0-\\u2bff]+|\\b(?:and|div|mod|not|or)\\b/,\n    punctuation: /[(){}\\[\\];,|]/\n  };\n  [\"c\", {\n    lang: \"c++\",\n    alias: \"cpp\"\n  }, \"fortran\"].forEach(function (e) {\n    var t = e;\n\n    if (\"string\" != typeof e && (t = e.alias, e = e.lang), r.languages[t]) {\n      var a = {};\n      a[\"inline-lang-\" + t] = {\n        pattern: RegExp(\"%< *-\\\\*- *{lang}\\\\d* *-\\\\*-[\\\\s\\\\S]+?%>\".replace(\"{lang}\", e.replace(/([.+*?\\/\\\\(){}\\[\\]])/g, \"\\\\$1\")), \"i\"),\n        inside: r.util.clone(r.languages.pure[\"inline-lang\"].inside)\n      }, a[\"inline-lang-\" + t].inside.rest = r.util.clone(r.languages[t]), r.languages.insertBefore(\"pure\", \"inline-lang\", a);\n    }\n  }), r.languages.c && (r.languages.pure[\"inline-lang\"].inside.rest = r.util.clone(r.languages.c));\n}(Prism);","Prism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|rf|fr)(?:(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:{{)*){(?!{)(?:[^{}]|{(?!{)(?:[^{}]|{(?!{)(?:[^{}])+})+})+}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|rb|br)?(\"\"\"|''')[\\s\\S]+?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|rb|br)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^\\s*)@\\w+(?:\\.\\w+)*/i,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:True|False|None)\\b/,\n  'number': /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n  'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nPrism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\nPrism.languages.py = Prism.languages.python;","Prism.languages.python = {\n  comment: {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: !0\n  },\n  \"string-interpolation\": {\n    pattern: /(?:f|rf|fr)(?:(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: !0,\n    inside: {\n      interpolation: {\n        pattern: /((?:^|[^{])(?:{{)*){(?!{)(?:[^{}]|{(?!{)(?:[^{}]|{(?!{)(?:[^{}])+})+})+}/,\n        lookbehind: !0,\n        inside: {\n          \"format-spec\": {\n            pattern: /(:)[^:(){}]+(?=}$)/,\n            lookbehind: !0\n          },\n          \"conversion-option\": {\n            pattern: /![sra](?=[:}]$)/,\n            alias: \"punctuation\"\n          },\n          rest: null\n        }\n      },\n      string: /[\\s\\S]+/\n    }\n  },\n  \"triple-quoted-string\": {\n    pattern: /(?:[rub]|rb|br)?(\"\"\"|''')[\\s\\S]+?\\1/i,\n    greedy: !0,\n    alias: \"string\"\n  },\n  string: {\n    pattern: /(?:[rub]|rb|br)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: !0\n  },\n  function: {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: !0\n  },\n  \"class-name\": {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: !0\n  },\n  decorator: {\n    pattern: /(^\\s*)@\\w+(?:\\.\\w+)*/i,\n    lookbehind: !0,\n    alias: [\"annotation\", \"punctuation\"],\n    inside: {\n      punctuation: /\\./\n    }\n  },\n  keyword: /\\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  builtin: /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  boolean: /\\b(?:True|False|None)\\b/,\n  number: /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n  operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  punctuation: /[{}[\\];(),.:]/\n}, Prism.languages.python[\"string-interpolation\"].inside.interpolation.inside.rest = Prism.languages.python, Prism.languages.py = Prism.languages.python;","Prism.languages.q = {\n  'string': /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n  'comment': [// From http://code.kx.com/wiki/Reference/Slash:\n  // When / is following a space (or a right parenthesis, bracket, or brace), it is ignored with the rest of the line.\n  {\n    pattern: /([\\t )\\]}])\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }, // From http://code.kx.com/wiki/Reference/Slash:\n  // A line which has / as its first character and contains at least one other non-whitespace character is a whole-line comment and is ignored entirely.\n  // A / on a line by itself begins a multiline comment which is terminated by the next \\ on a line by itself.\n  // If a / is not matched by a \\, the multiline comment is unterminated and continues to end of file.\n  // The / and \\ must be the first char on the line, but may be followed by any amount of whitespace.\n  {\n    pattern: /(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)/,\n    lookbehind: true,\n    greedy: true\n  }, // From http://code.kx.com/wiki/Reference/Slash:\n  // A \\ on a line by itself with no preceding matching / will comment to end of file.\n  {\n    pattern: /^\\\\[\\t ]*(?:\\r?\\n|\\r)[\\s\\S]+/m,\n    greedy: true\n  }, {\n    pattern: /^#!.+/m,\n    greedy: true\n  }],\n  'symbol': /`(?::\\S+|[\\w.]*)/,\n  'datetime': {\n    pattern: /0N[mdzuvt]|0W[dtz]|\\d{4}\\.\\d\\d(?:m|\\.\\d\\d(?:T(?:\\d\\d(?::\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?)?)?)?[dz]?)|\\d\\d:\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?[uvt]?/,\n    alias: 'number'\n  },\n  // The negative look-ahead prevents bad highlighting\n  // of verbs 0: and 1:\n  'number': /\\b(?![01]:)(?:0[wn]|0W[hj]?|0N[hje]?|0x[\\da-fA-F]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?[hjfeb]?)/,\n  'keyword': /\\\\\\w+\\b|\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\b/,\n  'adverb': {\n    pattern: /['\\/\\\\]:?|\\beach\\b/,\n    alias: 'function'\n  },\n  'verb': {\n    pattern: /(?:\\B\\.\\B|\\b[01]:|<[=>]?|>=?|[:+\\-*%,!?_~=|$&#@^]):?/,\n    alias: 'operator'\n  },\n  'punctuation': /[(){}\\[\\];.]/\n};","Prism.languages.q = {\n  string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n  comment: [{\n    pattern: /([\\t )\\]}])\\/.*/,\n    lookbehind: !0,\n    greedy: !0\n  }, {\n    pattern: /(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)/,\n    lookbehind: !0,\n    greedy: !0\n  }, {\n    pattern: /^\\\\[\\t ]*(?:\\r?\\n|\\r)[\\s\\S]+/m,\n    greedy: !0\n  }, {\n    pattern: /^#!.+/m,\n    greedy: !0\n  }],\n  symbol: /`(?::\\S+|[\\w.]*)/,\n  datetime: {\n    pattern: /0N[mdzuvt]|0W[dtz]|\\d{4}\\.\\d\\d(?:m|\\.\\d\\d(?:T(?:\\d\\d(?::\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?)?)?)?[dz]?)|\\d\\d:\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?[uvt]?/,\n    alias: \"number\"\n  },\n  number: /\\b(?![01]:)(?:0[wn]|0W[hj]?|0N[hje]?|0x[\\da-fA-F]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?[hjfeb]?)/,\n  keyword: /\\\\\\w+\\b|\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\b/,\n  adverb: {\n    pattern: /['\\/\\\\]:?|\\beach\\b/,\n    alias: \"function\"\n  },\n  verb: {\n    pattern: /(?:\\B\\.\\B|\\b[01]:|<[=>]?|>=?|[:+\\-*%,!?_~=|$&#@^]):?/,\n    alias: \"operator\"\n  },\n  punctuation: /[(){}\\[\\];.]/\n};","Prism.languages.qore = Prism.languages.extend('clike', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  // Overridden to allow unescaped multi-line strings\n  'string': {\n    pattern: /(\"|')(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: true\n  },\n  'variable': /\\$(?!\\d)\\w+\\b/,\n  'keyword': /\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:int|float|number|bool|string|date|list)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,\n  'number': /\\b(?:0b[01]+|0x[\\da-f]*\\.?[\\da-fp\\-]+|\\d*\\.?\\d+e?\\d*[df]|\\d*\\.?\\d+)\\b/i,\n  'boolean': /\\b(?:true|false)\\b/i,\n  'operator': {\n    pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,\n    lookbehind: true\n  },\n  'function': /\\$?\\b(?!\\d)\\w+(?=\\()/\n});","Prism.languages.qore = Prism.languages.extend(\"clike\", {\n  comment: {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/|#).*)/,\n    lookbehind: !0\n  },\n  string: {\n    pattern: /(\"|')(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: !0\n  },\n  variable: /\\$(?!\\d)\\w+\\b/,\n  keyword: /\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:int|float|number|bool|string|date|list)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,\n  number: /\\b(?:0b[01]+|0x[\\da-f]*\\.?[\\da-fp\\-]+|\\d*\\.?\\d+e?\\d*[df]|\\d*\\.?\\d+)\\b/i,\n  boolean: /\\b(?:true|false)\\b/i,\n  operator: {\n    pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,\n    lookbehind: !0\n  },\n  function: /\\$?\\b(?!\\d)\\w+(?=\\()/\n});","Prism.languages.r = {\n  'comment': /#.*/,\n  'string': {\n    pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'percent-operator': {\n    // Includes user-defined operators\n    // and %%, %*%, %/%, %in%, %o%, %x%\n    pattern: /%[^%\\s]*%/,\n    alias: 'operator'\n  },\n  'boolean': /\\b(?:TRUE|FALSE)\\b/,\n  'ellipsis': /\\.\\.(?:\\.|\\d+)/,\n  'number': [/\\b(?:NaN|Inf)\\b/, /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/],\n  'keyword': /\\b(?:if|else|repeat|while|function|for|in|next|break|NULL|NA|NA_integer_|NA_real_|NA_complex_|NA_character_)\\b/,\n  'operator': /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n  'punctuation': /[(){}\\[\\],;]/\n};","Prism.languages.r = {\n  comment: /#.*/,\n  string: {\n    pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  },\n  \"percent-operator\": {\n    pattern: /%[^%\\s]*%/,\n    alias: \"operator\"\n  },\n  boolean: /\\b(?:TRUE|FALSE)\\b/,\n  ellipsis: /\\.\\.(?:\\.|\\d+)/,\n  number: [/\\b(?:NaN|Inf)\\b/, /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/],\n  keyword: /\\b(?:if|else|repeat|while|function|for|in|next|break|NULL|NA|NA_integer_|NA_real_|NA_complex_|NA_character_)\\b/,\n  operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n  punctuation: /[(){}\\[\\],;]/\n};","Prism.languages.reason = Prism.languages.extend('clike', {\n  'comment': {\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n});\nPrism.languages.insertBefore('reason', 'class-name', {\n  'character': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    alias: 'string'\n  },\n  'constructor': {\n    // Negative look-ahead prevents from matching things like String.capitalize\n    pattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n    alias: 'variable'\n  },\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete Prism.languages.reason.function;","Prism.languages.reason = Prism.languages.extend(\"clike\", {\n  comment: {\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: !0\n  },\n  string: {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: !0\n  },\n  \"class-name\": /\\b[A-Z]\\w*/,\n  keyword: /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  operator: /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n}), Prism.languages.insertBefore(\"reason\", \"class-name\", {\n  character: {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    alias: \"string\"\n  },\n  constructor: {\n    pattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n    alias: \"variable\"\n  },\n  label: {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: \"symbol\"\n  }\n}), delete Prism.languages.reason.function;","require(\"core-js/modules/es6.regexp.constructor\");\n\n(function (Prism) {\n  var specialEscape = {\n    pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n    alias: 'escape'\n  };\n  var escape = /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|c[a-zA-Z]|0[0-7]{0,2}|[123][0-7]{2}|.)/;\n  var charClass = /\\\\[wsd]|\\.|\\\\p{[^{}]+}/i;\n  var rangeChar = '(?:[^\\\\\\\\-]|' + escape.source + ')';\n  var range = RegExp(rangeChar + '-' + rangeChar); // the name of a capturing group\n\n  var groupName = {\n    pattern: /(<|')[^<>']+(?=[>']$)/,\n    lookbehind: true,\n    alias: 'variable'\n  };\n  var backreference = [/\\\\(?![123][0-7]{2})[1-9]/, // a backreference which is not an octal escape\n  {\n    pattern: /\\\\k<[^<>']+>/,\n    inside: {\n      'group-name': groupName\n    }\n  }];\n  Prism.languages.regex = {\n    'charset': {\n      pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n      lookbehind: true,\n      inside: {\n        'charset-negation': {\n          pattern: /(^\\[)\\^/,\n          lookbehind: true\n        },\n        'charset-punctuation': /^\\[|\\]$/,\n        'range': {\n          pattern: range,\n          inside: {\n            'escape': escape,\n            'range-punctuation': /-/\n          }\n        },\n        'special-escape': specialEscape,\n        'charclass': charClass,\n        'backreference': backreference,\n        'escape': escape\n      }\n    },\n    'special-escape': specialEscape,\n    'charclass': charClass,\n    'backreference': backreference,\n    'anchor': /[$^]|\\\\[ABbGZz]/,\n    'escape': escape,\n    'group': [{\n      // https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html\n      // https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs\n      // (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)\n      pattern: /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n      inside: {\n        'group-name': groupName\n      }\n    }, /\\)/],\n    'quantifier': /[+*?]|\\{(?:\\d+,?\\d*)\\}/,\n    'alternation': /\\|/\n  };\n  ['actionscript', 'coffescript', 'flow', 'javascript', 'typescript', 'vala'].forEach(function (lang) {\n    var grammar = Prism.languages[lang];\n\n    if (grammar) {\n      grammar['regex'].inside = {\n        'regex-flags': /[a-z]+$/,\n        'regex-delimiter': /^\\/|\\/$/,\n        'language-regex': {\n          pattern: /[\\s\\S]+/,\n          inside: Prism.languages.regex\n        }\n      };\n    }\n  });\n})(Prism);","require(\"core-js/modules/es6.regexp.constructor\");\n\n!function (n) {\n  var e = {\n    pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n    alias: \"escape\"\n  },\n      a = /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|c[a-zA-Z]|0[0-7]{0,2}|[123][0-7]{2}|.)/,\n      r = /\\\\[wsd]|\\.|\\\\p{[^{}]+}/i,\n      i = \"(?:[^\\\\\\\\-]|\" + a.source + \")\",\n      s = RegExp(i + \"-\" + i),\n      t = {\n    pattern: /(<|')[^<>']+(?=[>']$)/,\n    lookbehind: !0,\n    alias: \"variable\"\n  },\n      c = [/\\\\(?![123][0-7]{2})[1-9]/, {\n    pattern: /\\\\k<[^<>']+>/,\n    inside: {\n      \"group-name\": t\n    }\n  }];\n  n.languages.regex = {\n    charset: {\n      pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n      lookbehind: !0,\n      inside: {\n        \"charset-negation\": {\n          pattern: /(^\\[)\\^/,\n          lookbehind: !0\n        },\n        \"charset-punctuation\": /^\\[|\\]$/,\n        range: {\n          pattern: s,\n          inside: {\n            escape: a,\n            \"range-punctuation\": /-/\n          }\n        },\n        \"special-escape\": e,\n        charclass: r,\n        backreference: c,\n        escape: a\n      }\n    },\n    \"special-escape\": e,\n    charclass: r,\n    backreference: c,\n    anchor: /[$^]|\\\\[ABbGZz]/,\n    escape: a,\n    group: [{\n      pattern: /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n      inside: {\n        \"group-name\": t\n      }\n    }, /\\)/],\n    quantifier: /[+*?]|\\{(?:\\d+,?\\d*)\\}/,\n    alternation: /\\|/\n  }, [\"actionscript\", \"coffescript\", \"flow\", \"javascript\", \"typescript\", \"vala\"].forEach(function (e) {\n    var a = n.languages[e];\n    a && (a.regex.inside = {\n      \"regex-flags\": /[a-z]+$/,\n      \"regex-delimiter\": /^\\/|\\/$/,\n      \"language-regex\": {\n        pattern: /[\\s\\S]+/,\n        inside: n.languages.regex\n      }\n    });\n  });\n}(Prism);","Prism.languages.renpy = {\n  // TODO Write tests.\n  'comment': {\n    pattern: /(^|[^\\\\])#.+/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2|(?:^#?(?:(?:[0-9a-fA-F]{2}){3}|(?:[0-9a-fA-F]){3})$)/m,\n    greedy: true\n  },\n  'function': /[a-z_]\\w*(?=\\()/i,\n  'property': /\\b(?:insensitive|idle|hover|selected_idle|selected_hover|background|position|alt|xpos|ypos|pos|xanchor|yanchor|anchor|xalign|yalign|align|xcenter|ycenter|xofsset|yoffset|ymaximum|maximum|xmaximum|xminimum|yminimum|minimum|xsize|ysizexysize|xfill|yfill|area|antialias|black_color|bold|caret|color|first_indent|font|size|italic|justify|kerning|language|layout|line_leading|line_overlap_split|line_spacing|min_width|newline_indent|outlines|rest_indent|ruby_style|slow_cps|slow_cps_multiplier|strikethrough|text_align|underline|hyperlink_functions|vertical|hinting|foreground|left_margin|xmargin|top_margin|bottom_margin|ymargin|left_padding|right_padding|xpadding|top_padding|bottom_padding|ypadding|size_group|child|hover_sound|activate_sound|mouse|focus_mask|keyboard_focus|bar_vertical|bar_invert|bar_resizing|left_gutter|right_gutter|top_gutter|bottom_gutter|left_bar|right_bar|top_bar|bottom_bar|thumb|thumb_shadow|thumb_offset|unscrollable|spacing|first_spacing|box_reverse|box_wrap|order_reverse|fit_first|ysize|thumbnail_width|thumbnail_height|help|text_ypos|text_xpos|idle_color|hover_color|selected_idle_color|selected_hover_color|insensitive_color|alpha|insensitive_background|hover_background|zorder|value|width|xadjustment|xanchoraround|xaround|xinitial|xoffset|xzoom|yadjustment|yanchoraround|yaround|yinitial|yzoom|zoom|ground|height|text_style|text_y_fudge|selected_insensitive|has_sound|has_music|has_voice|focus|hovered|image_style|length|minwidth|mousewheel|offset|prefix|radius|range|right_margin|rotate|rotate_pad|developer|screen_width|screen_height|window_title|name|version|windows_icon|default_fullscreen|default_text_cps|default_afm_time|main_menu_music|sample_sound|enter_sound|exit_sound|save_directory|enter_transition|exit_transition|intra_transition|main_game_transition|game_main_transition|end_splash_transition|end_game_transition|after_load_transition|window_show_transition|window_hide_transition|adv_nvl_transition|nvl_adv_transition|enter_yesno_transition|exit_yesno_transition|enter_replay_transition|exit_replay_transition|say_attribute_transition|directory_name|executable_name|include_update|window_icon|modal|google_play_key|google_play_salt|drag_name|drag_handle|draggable|dragged|droppable|dropped|narrator_menu|action|default_afm_enable|version_name|version_tuple|inside|fadeout|fadein|layers|layer_clipping|linear|scrollbars|side_xpos|side_ypos|side_spacing|edgescroll|drag_joined|drag_raise|drop_shadow|drop_shadow_color|subpixel|easein|easeout|time|crop|auto|update|get_installed_packages|can_update|UpdateVersion|Update|overlay_functions|translations|window_left_padding|show_side_image|show_two_window)\\b/,\n  'tag': /\\b(?:label|image|menu|[hv]box|frame|text|imagemap|imagebutton|bar|vbar|screen|textbutton|buttoscreenn|fixed|grid|input|key|mousearea|side|timer|viewport|window|hotspot|hotbar|self|button|drag|draggroup|tag|mm_menu_frame|nvl|block|parallel)\\b|\\$/,\n  'keyword': /\\b(?:as|assert|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|pass|print|raise|return|try|while|yield|adjustment|alignaround|allow|angle|around|box_layout|cache|changed|child_size|clicked|clipping|corner1|corner2|default|delay|exclude|scope|slow|slow_abortable|slow_done|sound|style_group|substitute|suffix|transform_anchor|transpose|unhovered|config|theme|mm_root|gm_root|rounded_window|build|disabled_text|disabled|widget_selected|widget_text|widget_hover|widget|updater|behind|call|expression|hide|init|jump|onlayer|python|renpy|scene|set|show|transform|play|queue|stop|pause|define|window|repeat|contains|choice|on|function|event|animation|clockwise|counterclockwise|circles|knot|null|None|random|has|add|use|fade|dissolve|style|store|id|voice|center|left|right|less_rounded|music|movie|clear|persistent|ui)\\b/,\n  'boolean': /\\b(?:[Tt]rue|[Ff]alse)\\b/,\n  'number': /(?:\\b(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*)|\\B\\.\\d+)(?:e[+-]?\\d+)?j?/i,\n  'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not|with|at)\\b/,\n  'punctuation': /[{}[\\];(),.:]/\n};","Prism.languages.renpy = {\n  comment: {\n    pattern: /(^|[^\\\\])#.+/,\n    lookbehind: !0\n  },\n  string: {\n    pattern: /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2|(?:^#?(?:(?:[0-9a-fA-F]{2}){3}|(?:[0-9a-fA-F]){3})$)/m,\n    greedy: !0\n  },\n  function: /[a-z_]\\w*(?=\\()/i,\n  property: /\\b(?:insensitive|idle|hover|selected_idle|selected_hover|background|position|alt|xpos|ypos|pos|xanchor|yanchor|anchor|xalign|yalign|align|xcenter|ycenter|xofsset|yoffset|ymaximum|maximum|xmaximum|xminimum|yminimum|minimum|xsize|ysizexysize|xfill|yfill|area|antialias|black_color|bold|caret|color|first_indent|font|size|italic|justify|kerning|language|layout|line_leading|line_overlap_split|line_spacing|min_width|newline_indent|outlines|rest_indent|ruby_style|slow_cps|slow_cps_multiplier|strikethrough|text_align|underline|hyperlink_functions|vertical|hinting|foreground|left_margin|xmargin|top_margin|bottom_margin|ymargin|left_padding|right_padding|xpadding|top_padding|bottom_padding|ypadding|size_group|child|hover_sound|activate_sound|mouse|focus_mask|keyboard_focus|bar_vertical|bar_invert|bar_resizing|left_gutter|right_gutter|top_gutter|bottom_gutter|left_bar|right_bar|top_bar|bottom_bar|thumb|thumb_shadow|thumb_offset|unscrollable|spacing|first_spacing|box_reverse|box_wrap|order_reverse|fit_first|ysize|thumbnail_width|thumbnail_height|help|text_ypos|text_xpos|idle_color|hover_color|selected_idle_color|selected_hover_color|insensitive_color|alpha|insensitive_background|hover_background|zorder|value|width|xadjustment|xanchoraround|xaround|xinitial|xoffset|xzoom|yadjustment|yanchoraround|yaround|yinitial|yzoom|zoom|ground|height|text_style|text_y_fudge|selected_insensitive|has_sound|has_music|has_voice|focus|hovered|image_style|length|minwidth|mousewheel|offset|prefix|radius|range|right_margin|rotate|rotate_pad|developer|screen_width|screen_height|window_title|name|version|windows_icon|default_fullscreen|default_text_cps|default_afm_time|main_menu_music|sample_sound|enter_sound|exit_sound|save_directory|enter_transition|exit_transition|intra_transition|main_game_transition|game_main_transition|end_splash_transition|end_game_transition|after_load_transition|window_show_transition|window_hide_transition|adv_nvl_transition|nvl_adv_transition|enter_yesno_transition|exit_yesno_transition|enter_replay_transition|exit_replay_transition|say_attribute_transition|directory_name|executable_name|include_update|window_icon|modal|google_play_key|google_play_salt|drag_name|drag_handle|draggable|dragged|droppable|dropped|narrator_menu|action|default_afm_enable|version_name|version_tuple|inside|fadeout|fadein|layers|layer_clipping|linear|scrollbars|side_xpos|side_ypos|side_spacing|edgescroll|drag_joined|drag_raise|drop_shadow|drop_shadow_color|subpixel|easein|easeout|time|crop|auto|update|get_installed_packages|can_update|UpdateVersion|Update|overlay_functions|translations|window_left_padding|show_side_image|show_two_window)\\b/,\n  tag: /\\b(?:label|image|menu|[hv]box|frame|text|imagemap|imagebutton|bar|vbar|screen|textbutton|buttoscreenn|fixed|grid|input|key|mousearea|side|timer|viewport|window|hotspot|hotbar|self|button|drag|draggroup|tag|mm_menu_frame|nvl|block|parallel)\\b|\\$/,\n  keyword: /\\b(?:as|assert|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|pass|print|raise|return|try|while|yield|adjustment|alignaround|allow|angle|around|box_layout|cache|changed|child_size|clicked|clipping|corner1|corner2|default|delay|exclude|scope|slow|slow_abortable|slow_done|sound|style_group|substitute|suffix|transform_anchor|transpose|unhovered|config|theme|mm_root|gm_root|rounded_window|build|disabled_text|disabled|widget_selected|widget_text|widget_hover|widget|updater|behind|call|expression|hide|init|jump|onlayer|python|renpy|scene|set|show|transform|play|queue|stop|pause|define|window|repeat|contains|choice|on|function|event|animation|clockwise|counterclockwise|circles|knot|null|None|random|has|add|use|fade|dissolve|style|store|id|voice|center|left|right|less_rounded|music|movie|clear|persistent|ui)\\b/,\n  boolean: /\\b(?:[Tt]rue|[Ff]alse)\\b/,\n  number: /(?:\\b(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*)|\\B\\.\\d+)(?:e[+-]?\\d+)?j?/i,\n  operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not|with|at)\\b/,\n  punctuation: /[{}[\\];(),.:]/\n};","Prism.languages.rest = {\n  'table': [{\n    pattern: /(\\s*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1(?:[+|].+)+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/,\n    lookbehind: true,\n    inside: {\n      'punctuation': /\\||(?:\\+[=-]+)+\\+/\n    }\n  }, {\n    pattern: /(\\s*)(?:=+ +)+=+(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1(?:=+ +)+=+(?=(?:\\r?\\n|\\r){2}|\\s*$)/,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[=-]+/\n    }\n  }],\n  // Directive-like patterns\n  'substitution-def': {\n    pattern: /(^\\s*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\n    lookbehind: true,\n    inside: {\n      'substitution': {\n        pattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\n        alias: 'attr-value',\n        inside: {\n          'punctuation': /^\\||\\|$/\n        }\n      },\n      'directive': {\n        pattern: /( +)[^:]+::/,\n        lookbehind: true,\n        alias: 'function',\n        inside: {\n          'punctuation': /::$/\n        }\n      }\n    }\n  },\n  'link-target': [{\n    pattern: /(^\\s*\\.\\. )\\[[^\\]]+\\]/m,\n    lookbehind: true,\n    alias: 'string',\n    inside: {\n      'punctuation': /^\\[|\\]$/\n    }\n  }, {\n    pattern: /(^\\s*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\n    lookbehind: true,\n    alias: 'string',\n    inside: {\n      'punctuation': /^_|:$/\n    }\n  }],\n  'directive': {\n    pattern: /(^\\s*\\.\\. )[^:]+::/m,\n    lookbehind: true,\n    alias: 'function',\n    inside: {\n      'punctuation': /::$/\n    }\n  },\n  'comment': {\n    // The two alternatives try to prevent highlighting of blank comments\n    pattern: /(^\\s*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\n    lookbehind: true\n  },\n  'title': [// Overlined and underlined\n  {\n    pattern: /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\n    inside: {\n      'punctuation': /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n      'important': /.+/\n    }\n  }, // Underlined only\n  {\n    pattern: /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n      'important': /.+/\n    }\n  }],\n  'hr': {\n    pattern: /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\n    lookbehind: true,\n    alias: 'punctuation'\n  },\n  'field': {\n    pattern: /(^\\s*):[^:\\r\\n]+:(?= )/m,\n    lookbehind: true,\n    alias: 'attr-name'\n  },\n  'command-line-option': {\n    pattern: /(^\\s*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\n    lookbehind: true,\n    alias: 'symbol'\n  },\n  'literal-block': {\n    pattern: /::(?:\\r?\\n|\\r){2}([ \\t]+).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\n    inside: {\n      'literal-block-punctuation': {\n        pattern: /^::/,\n        alias: 'punctuation'\n      }\n    }\n  },\n  'quoted-literal-block': {\n    pattern: /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\n    inside: {\n      'literal-block-punctuation': {\n        pattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\n        alias: 'punctuation'\n      }\n    }\n  },\n  'list-bullet': {\n    pattern: /(^\\s*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\n    lookbehind: true,\n    alias: 'punctuation'\n  },\n  'doctest-block': {\n    pattern: /(^\\s*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\n    lookbehind: true,\n    inside: {\n      'punctuation': /^>>>/\n    }\n  },\n  'inline': [{\n    pattern: /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s).*?[^\\s]\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\n    lookbehind: true,\n    inside: {\n      'bold': {\n        pattern: /(^\\*\\*).+(?=\\*\\*$)/,\n        lookbehind: true\n      },\n      'italic': {\n        pattern: /(^\\*).+(?=\\*$)/,\n        lookbehind: true\n      },\n      'inline-literal': {\n        pattern: /(^``).+(?=``$)/,\n        lookbehind: true,\n        alias: 'symbol'\n      },\n      'role': {\n        pattern: /^:[^:]+:|:[^:]+:$/,\n        alias: 'function',\n        inside: {\n          'punctuation': /^:|:$/\n        }\n      },\n      'interpreted-text': {\n        pattern: /(^`).+(?=`$)/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      'substitution': {\n        pattern: /(^\\|).+(?=\\|$)/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      'punctuation': /\\*\\*?|``?|\\|/\n    }\n  }],\n  'link': [{\n    pattern: /\\[[^\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\n    alias: 'string',\n    inside: {\n      'punctuation': /^\\[|\\]_$/\n    }\n  }, {\n    pattern: /(?:\\b[a-z\\d](?:[_.:+]?[a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\n    alias: 'string',\n    inside: {\n      'punctuation': /^_?`|`$|`?_?_$/\n    }\n  }],\n  // Line block start,\n  // quote attribution,\n  // explicit markup start,\n  // and anonymous hyperlink target shortcut (__)\n  'punctuation': {\n    pattern: /(^\\s*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,\n    lookbehind: true\n  }\n};","Prism.languages.rest = {\n  table: [{\n    pattern: /(\\s*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1(?:[+|].+)+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /\\||(?:\\+[=-]+)+\\+/\n    }\n  }, {\n    pattern: /(\\s*)(?:=+ +)+=+(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1(?:=+ +)+=+(?=(?:\\r?\\n|\\r){2}|\\s*$)/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /[=-]+/\n    }\n  }],\n  \"substitution-def\": {\n    pattern: /(^\\s*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\n    lookbehind: !0,\n    inside: {\n      substitution: {\n        pattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\n        alias: \"attr-value\",\n        inside: {\n          punctuation: /^\\||\\|$/\n        }\n      },\n      directive: {\n        pattern: /( +)[^:]+::/,\n        lookbehind: !0,\n        alias: \"function\",\n        inside: {\n          punctuation: /::$/\n        }\n      }\n    }\n  },\n  \"link-target\": [{\n    pattern: /(^\\s*\\.\\. )\\[[^\\]]+\\]/m,\n    lookbehind: !0,\n    alias: \"string\",\n    inside: {\n      punctuation: /^\\[|\\]$/\n    }\n  }, {\n    pattern: /(^\\s*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\n    lookbehind: !0,\n    alias: \"string\",\n    inside: {\n      punctuation: /^_|:$/\n    }\n  }],\n  directive: {\n    pattern: /(^\\s*\\.\\. )[^:]+::/m,\n    lookbehind: !0,\n    alias: \"function\",\n    inside: {\n      punctuation: /::$/\n    }\n  },\n  comment: {\n    pattern: /(^\\s*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\n    lookbehind: !0\n  },\n  title: [{\n    pattern: /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\n    inside: {\n      punctuation: /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n      important: /.+/\n    }\n  }, {\n    pattern: /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n      important: /.+/\n    }\n  }],\n  hr: {\n    pattern: /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\n    lookbehind: !0,\n    alias: \"punctuation\"\n  },\n  field: {\n    pattern: /(^\\s*):[^:\\r\\n]+:(?= )/m,\n    lookbehind: !0,\n    alias: \"attr-name\"\n  },\n  \"command-line-option\": {\n    pattern: /(^\\s*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\n    lookbehind: !0,\n    alias: \"symbol\"\n  },\n  \"literal-block\": {\n    pattern: /::(?:\\r?\\n|\\r){2}([ \\t]+).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\n    inside: {\n      \"literal-block-punctuation\": {\n        pattern: /^::/,\n        alias: \"punctuation\"\n      }\n    }\n  },\n  \"quoted-literal-block\": {\n    pattern: /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\n    inside: {\n      \"literal-block-punctuation\": {\n        pattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\n        alias: \"punctuation\"\n      }\n    }\n  },\n  \"list-bullet\": {\n    pattern: /(^\\s*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\n    lookbehind: !0,\n    alias: \"punctuation\"\n  },\n  \"doctest-block\": {\n    pattern: /(^\\s*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\n    lookbehind: !0,\n    inside: {\n      punctuation: /^>>>/\n    }\n  },\n  inline: [{\n    pattern: /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s).*?[^\\s]\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\n    lookbehind: !0,\n    inside: {\n      bold: {\n        pattern: /(^\\*\\*).+(?=\\*\\*$)/,\n        lookbehind: !0\n      },\n      italic: {\n        pattern: /(^\\*).+(?=\\*$)/,\n        lookbehind: !0\n      },\n      \"inline-literal\": {\n        pattern: /(^``).+(?=``$)/,\n        lookbehind: !0,\n        alias: \"symbol\"\n      },\n      role: {\n        pattern: /^:[^:]+:|:[^:]+:$/,\n        alias: \"function\",\n        inside: {\n          punctuation: /^:|:$/\n        }\n      },\n      \"interpreted-text\": {\n        pattern: /(^`).+(?=`$)/,\n        lookbehind: !0,\n        alias: \"attr-value\"\n      },\n      substitution: {\n        pattern: /(^\\|).+(?=\\|$)/,\n        lookbehind: !0,\n        alias: \"attr-value\"\n      },\n      punctuation: /\\*\\*?|``?|\\|/\n    }\n  }],\n  link: [{\n    pattern: /\\[[^\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\n    alias: \"string\",\n    inside: {\n      punctuation: /^\\[|\\]_$/\n    }\n  }, {\n    pattern: /(?:\\b[a-z\\d](?:[_.:+]?[a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\n    alias: \"string\",\n    inside: {\n      punctuation: /^_?`|`$|`?_?_$/\n    }\n  }],\n  punctuation: {\n    pattern: /(^\\s*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,\n    lookbehind: !0\n  }\n};","Prism.languages.rip = {\n  'comment': /#.*/,\n  'keyword': /(?:=>|->)|\\b(?:class|if|else|switch|case|return|exit|try|catch|finally|raise)\\b/,\n  'builtin': /@|\\bSystem\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'date': /\\b\\d{4}-\\d{2}-\\d{2}\\b/,\n  'time': /\\b\\d{2}:\\d{2}:\\d{2}\\b/,\n  'datetime': /\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\b/,\n  'character': /\\B`[^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]\\b/,\n  'regex': {\n    pattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/(?=\\s*($|[\\r\\n,.;})]))/,\n    lookbehind: true,\n    greedy: true\n  },\n  'symbol': /:[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/,\n  'string': {\n    pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'number': /[+-]?(?:(?:\\d+\\.\\d+)|(?:\\d+))/,\n  'punctuation': /(?:\\.{2,3})|[`,.:;=\\/\\\\()<>\\[\\]{}]/,\n  'reference': /[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/\n};","Prism.languages.rip = {\n  comment: /#.*/,\n  keyword: /(?:=>|->)|\\b(?:class|if|else|switch|case|return|exit|try|catch|finally|raise)\\b/,\n  builtin: /@|\\bSystem\\b/,\n  boolean: /\\b(?:true|false)\\b/,\n  date: /\\b\\d{4}-\\d{2}-\\d{2}\\b/,\n  time: /\\b\\d{2}:\\d{2}:\\d{2}\\b/,\n  datetime: /\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\b/,\n  character: /\\B`[^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]\\b/,\n  regex: {\n    pattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/(?=\\s*($|[\\r\\n,.;})]))/,\n    lookbehind: !0,\n    greedy: !0\n  },\n  symbol: /:[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/,\n  string: {\n    pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  },\n  number: /[+-]?(?:(?:\\d+\\.\\d+)|(?:\\d+))/,\n  punctuation: /(?:\\.{2,3})|[`,.:;=\\/\\\\()<>\\[\\]{}]/,\n  reference: /[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/\n};","Prism.languages.roboconf = {\n  'comment': /#.*/,\n  'keyword': {\n    'pattern': /(^|\\s)(?:(?:facet|instance of)(?=[ \\t]+[\\w-]+[ \\t]*\\{)|(?:external|import)\\b)/,\n    lookbehind: true\n  },\n  'component': {\n    pattern: /[\\w-]+(?=[ \\t]*\\{)/,\n    alias: 'variable'\n  },\n  'property': /[\\w.-]+(?=[ \\t]*:)/,\n  'value': {\n    pattern: /(=[ \\t]*)[^,;]+/,\n    lookbehind: true,\n    alias: 'attr-value'\n  },\n  'optional': {\n    pattern: /\\(optional\\)/,\n    alias: 'builtin'\n  },\n  'wildcard': {\n    pattern: /(\\.)\\*/,\n    lookbehind: true,\n    alias: 'operator'\n  },\n  'punctuation': /[{},.;:=]/\n};","Prism.languages.roboconf = {\n  comment: /#.*/,\n  keyword: {\n    pattern: /(^|\\s)(?:(?:facet|instance of)(?=[ \\t]+[\\w-]+[ \\t]*\\{)|(?:external|import)\\b)/,\n    lookbehind: !0\n  },\n  component: {\n    pattern: /[\\w-]+(?=[ \\t]*\\{)/,\n    alias: \"variable\"\n  },\n  property: /[\\w.-]+(?=[ \\t]*:)/,\n  value: {\n    pattern: /(=[ \\t]*)[^,;]+/,\n    lookbehind: !0,\n    alias: \"attr-value\"\n  },\n  optional: {\n    pattern: /\\(optional\\)/,\n    alias: \"builtin\"\n  },\n  wildcard: {\n    pattern: /(\\.)\\*/,\n    lookbehind: !0,\n    alias: \"operator\"\n  },\n  punctuation: /[{},.;:=]/\n};","/**\n * Original by Samuel Flores\n *\n * Adds the following new token classes:\n * \t\tconstant, builtin, variable, symbol, regex\n */\n(function (Prism) {\n  Prism.languages.ruby = Prism.languages.extend('clike', {\n    'comment': [/#.*/, {\n      pattern: /^=begin\\s[\\s\\S]*?^=end/m,\n      greedy: true\n    }],\n    'keyword': /\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/\n  });\n  var interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    inside: {\n      'delimiter': {\n        pattern: /^#\\{|\\}$/,\n        alias: 'tag'\n      },\n      rest: Prism.languages.ruby\n    }\n  };\n  delete Prism.languages.ruby.function;\n  Prism.languages.insertBefore('ruby', 'keyword', {\n    'regex': [{\n      pattern: /%r([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[gim]{0,3}/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }, {\n      pattern: /%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }, {\n      // Here we need to specifically allow interpolation\n      pattern: /%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }, {\n      pattern: /%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }, {\n      pattern: /%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }, {\n      pattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,\n      lookbehind: true,\n      greedy: true\n    }],\n    'variable': /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n    'symbol': {\n      pattern: /(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n      lookbehind: true\n    },\n    'method-definition': {\n      pattern: /(\\bdef\\s+)[\\w.]+/,\n      lookbehind: true,\n      inside: {\n        'function': /\\w+$/,\n        rest: Prism.languages.ruby\n      }\n    }\n  });\n  Prism.languages.insertBefore('ruby', 'number', {\n    'builtin': /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,\n    'constant': /\\b[A-Z]\\w*(?:[?!]|\\b)/\n  });\n  Prism.languages.ruby.string = [{\n    pattern: /%[qQiIwWxs]?([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }, {\n    pattern: /%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }, {\n    // Here we need to specifically allow interpolation\n    pattern: /%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }, {\n    pattern: /%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }, {\n    pattern: /%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }, {\n    pattern: /(\"|')(?:#\\{[^}]+\\}|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true,\n    inside: {\n      'interpolation': interpolation\n    }\n  }];\n  Prism.languages.rb = Prism.languages.ruby;\n})(Prism);","!function (e) {\n  e.languages.ruby = e.languages.extend(\"clike\", {\n    comment: [/#.*/, {\n      pattern: /^=begin\\s[\\s\\S]*?^=end/m,\n      greedy: !0\n    }],\n    keyword: /\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/\n  });\n  var n = {\n    pattern: /#\\{[^}]+\\}/,\n    inside: {\n      delimiter: {\n        pattern: /^#\\{|\\}$/,\n        alias: \"tag\"\n      },\n      rest: e.languages.ruby\n    }\n  };\n  delete e.languages.ruby.function, e.languages.insertBefore(\"ruby\", \"keyword\", {\n    regex: [{\n      pattern: /%r([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[gim]{0,3}/,\n      greedy: !0,\n      inside: {\n        interpolation: n\n      }\n    }, {\n      pattern: /%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,\n      greedy: !0,\n      inside: {\n        interpolation: n\n      }\n    }, {\n      pattern: /%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,\n      greedy: !0,\n      inside: {\n        interpolation: n\n      }\n    }, {\n      pattern: /%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,\n      greedy: !0,\n      inside: {\n        interpolation: n\n      }\n    }, {\n      pattern: /%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,\n      greedy: !0,\n      inside: {\n        interpolation: n\n      }\n    }, {\n      pattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,\n      lookbehind: !0,\n      greedy: !0\n    }],\n    variable: /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n    symbol: {\n      pattern: /(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n      lookbehind: !0\n    },\n    \"method-definition\": {\n      pattern: /(\\bdef\\s+)[\\w.]+/,\n      lookbehind: !0,\n      inside: {\n        function: /\\w+$/,\n        rest: e.languages.ruby\n      }\n    }\n  }), e.languages.insertBefore(\"ruby\", \"number\", {\n    builtin: /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,\n    constant: /\\b[A-Z]\\w*(?:[?!]|\\b)/\n  }), e.languages.ruby.string = [{\n    pattern: /%[qQiIwWxs]?([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n    greedy: !0,\n    inside: {\n      interpolation: n\n    }\n  }, {\n    pattern: /%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n    greedy: !0,\n    inside: {\n      interpolation: n\n    }\n  }, {\n    pattern: /%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,\n    greedy: !0,\n    inside: {\n      interpolation: n\n    }\n  }, {\n    pattern: /%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n    greedy: !0,\n    inside: {\n      interpolation: n\n    }\n  }, {\n    pattern: /%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n    greedy: !0,\n    inside: {\n      interpolation: n\n    }\n  }, {\n    pattern: /(\"|')(?:#\\{[^}]+\\}|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0,\n    inside: {\n      interpolation: n\n    }\n  }], e.languages.rb = e.languages.ruby;\n}(Prism);","/* TODO\n\tAdd support for Markdown notation inside doc comments\n\tAdd support for nested block comments...\n\tMatch closure params even when not followed by dash or brace\n\tAdd better support for macro definition\n*/\nPrism.languages.rust = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'string': [{\n    pattern: /b?r(#*)\"(?:\\\\.|(?!\"\\1)[^\\\\\\r\\n])*\"\\1/,\n    greedy: true\n  }, {\n    pattern: /b?\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }],\n  'char': {\n    pattern: /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u{(?:[\\da-fA-F]_*){1,6}|.)|[^\\\\\\r\\n\\t'])'/,\n    alias: 'string'\n  },\n  'lifetime-annotation': {\n    pattern: /'[^\\s>']+/,\n    alias: 'symbol'\n  },\n  'keyword': /\\b(?:abstract|alignof|as|be|box|break|const|continue|crate|do|dyn|else|enum|extern|false|final|fn|for|if|impl|in|let|loop|match|mod|move|mut|offsetof|once|override|priv|pub|pure|ref|return|sizeof|static|self|Self|struct|super|true|trait|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/,\n  'attribute': {\n    pattern: /#!?\\[.+?\\]/,\n    greedy: true,\n    alias: 'attr-name'\n  },\n  'function': [/\\w+(?=\\s*\\()/, // Macros can use parens or brackets\n  /\\w+!(?=\\s*\\(|\\[)/],\n  'macro-rules': {\n    pattern: /\\w+!/,\n    alias: 'function'\n  },\n  // Hex, oct, bin, dec numbers with visual separators and type suffix\n  'number': /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:[iu](?:8|16|32|64)?|f32|f64))?\\b/,\n  // Closure params should not be confused with bitwise OR |\n  'closure-params': {\n    pattern: /\\|[^|]*\\|(?=\\s*[{-])/,\n    inside: {\n      'punctuation': /[|:,]/,\n      'operator': /[&*]/\n    }\n  },\n  'punctuation': /[{}[\\];(),:]|\\.+|->/,\n  'operator': /[-+*\\/%!^]=?|=[=>]?|@|&[&=]?|\\|[|=]?|<<?=?|>>?=?/\n};","Prism.languages.rust = {\n  comment: [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: !0\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: !0\n  }],\n  string: [{\n    pattern: /b?r(#*)\"(?:\\\\.|(?!\"\\1)[^\\\\\\r\\n])*\"\\1/,\n    greedy: !0\n  }, {\n    pattern: /b?\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: !0\n  }],\n  char: {\n    pattern: /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u{(?:[\\da-fA-F]_*){1,6}|.)|[^\\\\\\r\\n\\t'])'/,\n    alias: \"string\"\n  },\n  \"lifetime-annotation\": {\n    pattern: /'[^\\s>']+/,\n    alias: \"symbol\"\n  },\n  keyword: /\\b(?:abstract|alignof|as|be|box|break|const|continue|crate|do|dyn|else|enum|extern|false|final|fn|for|if|impl|in|let|loop|match|mod|move|mut|offsetof|once|override|priv|pub|pure|ref|return|sizeof|static|self|Self|struct|super|true|trait|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/,\n  attribute: {\n    pattern: /#!?\\[.+?\\]/,\n    greedy: !0,\n    alias: \"attr-name\"\n  },\n  function: [/\\w+(?=\\s*\\()/, /\\w+!(?=\\s*\\(|\\[)/],\n  \"macro-rules\": {\n    pattern: /\\w+!/,\n    alias: \"function\"\n  },\n  number: /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:[iu](?:8|16|32|64)?|f32|f64))?\\b/,\n  \"closure-params\": {\n    pattern: /\\|[^|]*\\|(?=\\s*[{-])/,\n    inside: {\n      punctuation: /[|:,]/,\n      operator: /[&*]/\n    }\n  },\n  punctuation: /[{}[\\];(),:]|\\.+|->/,\n  operator: /[-+*\\/%!^]=?|=[=>]?|@|&[&=]?|\\|[|=]?|<<?=?|>>?=?/\n};","Prism.languages.sas = {\n  'datalines': {\n    pattern: /^\\s*(?:(?:data)?lines|cards);[\\s\\S]+?(?:\\r?\\n|\\r);/im,\n    alias: 'string',\n    inside: {\n      'keyword': {\n        pattern: /^(\\s*)(?:(?:data)?lines|cards)/i,\n        lookbehind: true\n      },\n      'punctuation': /;/\n    }\n  },\n  'comment': [{\n    pattern: /(^\\s*|;\\s*)\\*.*;/m,\n    lookbehind: true\n  }, /\\/\\*[\\s\\S]+?\\*\\//],\n  'datetime': {\n    // '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt\n    pattern: /'[^']+'(?:dt?|t)\\b/i,\n    alias: 'number'\n  },\n  'string': {\n    pattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n    greedy: true\n  },\n  'keyword': /\\b(?:data|else|format|if|input|proc\\s\\w+|quit|run|then|libname|set|output|options)\\b/i,\n  // Decimal (1.2e23), hexadecimal (0c1x)\n  'number': /\\b(?:[\\da-f]+x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)/i,\n  'operator': /\\*\\*?|\\|\\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\\/=&]|[~¬^]=?|\\b(?:eq|ne|gt|lt|ge|le|in|not)\\b/i,\n  'punctuation': /[$%@.(){}\\[\\];,\\\\]/\n};","Prism.languages.sas = {\n  datalines: {\n    pattern: /^\\s*(?:(?:data)?lines|cards);[\\s\\S]+?(?:\\r?\\n|\\r);/im,\n    alias: \"string\",\n    inside: {\n      keyword: {\n        pattern: /^(\\s*)(?:(?:data)?lines|cards)/i,\n        lookbehind: !0\n      },\n      punctuation: /;/\n    }\n  },\n  comment: [{\n    pattern: /(^\\s*|;\\s*)\\*.*;/m,\n    lookbehind: !0\n  }, /\\/\\*[\\s\\S]+?\\*\\//],\n  datetime: {\n    pattern: /'[^']+'(?:dt?|t)\\b/i,\n    alias: \"number\"\n  },\n  string: {\n    pattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n    greedy: !0\n  },\n  keyword: /\\b(?:data|else|format|if|input|proc\\s\\w+|quit|run|then|libname|set|output|options)\\b/i,\n  number: /\\b(?:[\\da-f]+x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)/i,\n  operator: /\\*\\*?|\\|\\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\\/=&]|[~¬^]=?|\\b(?:eq|ne|gt|lt|ge|le|in|not)\\b/i,\n  punctuation: /[$%@.(){}\\[\\];,\\\\]/\n};","(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t]+.+)*/m,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/m\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/, {\n    pattern: /(\\s+)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s]+.*)/m,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /([ \\t]*)\\S(?:,?[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,?[^,\\r\\n]+)*)*/,\n      lookbehind: true\n    }\n  });\n})(Prism);","!function (e) {\n  e.languages.sass = e.languages.extend(\"css\", {\n    comment: {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t]+.+)*/m,\n      lookbehind: !0\n    }\n  }), e.languages.insertBefore(\"sass\", \"atrule\", {\n    \"atrule-line\": {\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      inside: {\n        atrule: /(?:@[\\w-]+|[+=])/m\n      }\n    }\n  }), delete e.languages.sass.atrule;\n  var t = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/,\n      a = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/, {\n    pattern: /(\\s+)-(?=\\s)/,\n    lookbehind: !0\n  }];\n  e.languages.insertBefore(\"sass\", \"property\", {\n    \"variable-line\": {\n      pattern: /^[ \\t]*\\$.+/m,\n      inside: {\n        punctuation: /:/,\n        variable: t,\n        operator: a\n      }\n    },\n    \"property-line\": {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s]+.*)/m,\n      inside: {\n        property: [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: !0\n        }],\n        punctuation: /:/,\n        variable: t,\n        operator: a,\n        important: e.languages.sass.important\n      }\n    }\n  }), delete e.languages.sass.property, delete e.languages.sass.important, e.languages.insertBefore(\"sass\", \"punctuation\", {\n    selector: {\n      pattern: /([ \\t]*)\\S(?:,?[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,?[^,\\r\\n]+)*)*/,\n      lookbehind: !0\n    }\n  });\n}(Prism);","Prism.languages.scala = Prism.languages.extend('java', {\n  'keyword': /<-|=>|\\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\\b/,\n  'string': [{\n    pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n    greedy: true\n  }, {\n    pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  }],\n  'builtin': /\\b(?:String|Int|Long|Short|Byte|Boolean|Double|Float|Char|Any|AnyRef|AnyVal|Unit|Nothing)\\b/,\n  'number': /\\b0x[\\da-f]*\\.?[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\n  'symbol': /'[^\\d\\s\\\\]\\w*/\n});\ndelete Prism.languages.scala['class-name'];\ndelete Prism.languages.scala['function'];","Prism.languages.scala = Prism.languages.extend(\"java\", {\n  keyword: /<-|=>|\\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\\b/,\n  string: [{\n    pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n    greedy: !0\n  }, {\n    pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0\n  }],\n  builtin: /\\b(?:String|Int|Long|Short|Byte|Boolean|Double|Float|Char|Any|AnyRef|AnyVal|Unit|Nothing)\\b/,\n  number: /\\b0x[\\da-f]*\\.?[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\n  symbol: /'[^\\d\\s\\\\]\\w*/\n}), delete Prism.languages.scala[\"class-name\"], delete Prism.languages.scala.function;","Prism.languages.scheme = {\n  'comment': /;.*/,\n  'string': {\n    pattern: /\"(?:[^\"\\\\]|\\\\.)*\"|'[^()#'\\s]+/,\n    greedy: true\n  },\n  'character': {\n    pattern: /#\\\\(?:[ux][a-fA-F\\d]+|[a-zA-Z]+|\\S)/,\n    alias: 'string'\n  },\n  'keyword': {\n    pattern: /(\\()(?:define(?:-syntax|-library|-values)?|(?:case-)?lambda|let(?:\\*|rec)?(?:-values)?|else|if|cond|begin|delay(?:-force)?|parameterize|guard|set!|(?:quasi-)?quote|syntax-rules)(?=[()\\s])/,\n    lookbehind: true\n  },\n  'builtin': {\n    pattern: /(\\()(?:(?:cons|car|cdr|list|call-with-current-continuation|call\\/cc|append|abs|apply|eval)\\b|null\\?|pair\\?|boolean\\?|eof-object\\?|char\\?|procedure\\?|number\\?|port\\?|string\\?|vector\\?|symbol\\?|bytevector\\?)(?=[()\\s])/,\n    lookbehind: true\n  },\n  'number': {\n    pattern: /([\\s()])[-+]?\\d*\\.?\\d+(?:\\s*[-+]\\s*\\d*\\.?\\d+i)?\\b/,\n    lookbehind: true\n  },\n  'boolean': /#[tf]/,\n  'operator': {\n    pattern: /(\\()(?:[-+*%\\/]|[<>]=?|=>?)(?=\\s|$)/,\n    lookbehind: true\n  },\n  'function': {\n    pattern: /(\\()[^()'\\s]+(?=[()\\s)]|$)/,\n    lookbehind: true\n  },\n  'punctuation': /[()']/\n};","Prism.languages.scheme = {\n  comment: /;.*/,\n  string: {\n    pattern: /\"(?:[^\"\\\\]|\\\\.)*\"|'[^()#'\\s]+/,\n    greedy: !0\n  },\n  character: {\n    pattern: /#\\\\(?:[ux][a-fA-F\\d]+|[a-zA-Z]+|\\S)/,\n    alias: \"string\"\n  },\n  keyword: {\n    pattern: /(\\()(?:define(?:-syntax|-library|-values)?|(?:case-)?lambda|let(?:\\*|rec)?(?:-values)?|else|if|cond|begin|delay(?:-force)?|parameterize|guard|set!|(?:quasi-)?quote|syntax-rules)(?=[()\\s])/,\n    lookbehind: !0\n  },\n  builtin: {\n    pattern: /(\\()(?:(?:cons|car|cdr|list|call-with-current-continuation|call\\/cc|append|abs|apply|eval)\\b|null\\?|pair\\?|boolean\\?|eof-object\\?|char\\?|procedure\\?|number\\?|port\\?|string\\?|vector\\?|symbol\\?|bytevector\\?)(?=[()\\s])/,\n    lookbehind: !0\n  },\n  number: {\n    pattern: /([\\s()])[-+]?\\d*\\.?\\d+(?:\\s*[-+]\\s*\\d*\\.?\\d+i)?\\b/,\n    lookbehind: !0\n  },\n  boolean: /#[tf]/,\n  operator: {\n    pattern: /(\\()(?:[-+*%\\/]|[<>]=?|=>?)(?=\\s|$)/,\n    lookbehind: !0\n  },\n  function: {\n    pattern: /(\\()[^()'\\s]+(?=[()\\s)]|$)/,\n    lookbehind: !0\n  },\n  punctuation: /[()']/\n};","Prism.languages.scss = Prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)*url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()]|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nPrism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i, {\n    pattern: /( +)(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nPrism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nPrism.languages.insertBefore('scss', 'function', {\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n    lookbehind: true\n  }\n});\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;","Prism.languages.scss = Prism.languages.extend(\"css\", {\n  comment: {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: !0\n  },\n  atrule: {\n    pattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n    inside: {\n      rule: /@[\\w-]+/\n    }\n  },\n  url: /(?:[-a-z]+-)*url(?=\\()/i,\n  selector: {\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()]|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,\n    inside: {\n      parent: {\n        pattern: /&/,\n        alias: \"important\"\n      },\n      placeholder: /%[-\\w]+/,\n      variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  property: {\n    pattern: /(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n}), Prism.languages.insertBefore(\"scss\", \"atrule\", {\n  keyword: [/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i, {\n    pattern: /( +)(?:from|through)(?= )/,\n    lookbehind: !0\n  }]\n}), Prism.languages.insertBefore(\"scss\", \"important\", {\n  variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n}), Prism.languages.insertBefore(\"scss\", \"function\", {\n  placeholder: {\n    pattern: /%[-\\w]+/,\n    alias: \"selector\"\n  },\n  statement: {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: \"keyword\"\n  },\n  boolean: /\\b(?:true|false)\\b/,\n  null: {\n    pattern: /\\bnull\\b/,\n    alias: \"keyword\"\n  },\n  operator: {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n    lookbehind: !0\n  }\n}), Prism.languages.scss.atrule.inside.rest = Prism.languages.scss;","Prism.languages.smalltalk = {\n  'comment': /\"(?:\"\"|[^\"])*\"/,\n  'string': /'(?:''|[^'])*'/,\n  'symbol': /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\n  'block-arguments': {\n    pattern: /(\\[\\s*):[^\\[|]*\\|/,\n    lookbehind: true,\n    inside: {\n      'variable': /:[\\da-z]+/i,\n      'punctuation': /\\|/\n    }\n  },\n  'temporary-variables': {\n    pattern: /\\|[^|]+\\|/,\n    inside: {\n      'variable': /[\\da-z]+/i,\n      'punctuation': /\\|/\n    }\n  },\n  'keyword': /\\b(?:nil|true|false|self|super|new)\\b/,\n  'character': {\n    pattern: /\\$./,\n    alias: 'string'\n  },\n  'number': [/\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/, /\\b\\d+(?:\\.\\d+)?(?:e-?\\d+)?/],\n  'operator': /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,\n  'punctuation': /[.;:?\\[\\](){}]/\n};","Prism.languages.smalltalk = {\n  comment: /\"(?:\"\"|[^\"])*\"/,\n  string: /'(?:''|[^'])*'/,\n  symbol: /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\n  \"block-arguments\": {\n    pattern: /(\\[\\s*):[^\\[|]*\\|/,\n    lookbehind: !0,\n    inside: {\n      variable: /:[\\da-z]+/i,\n      punctuation: /\\|/\n    }\n  },\n  \"temporary-variables\": {\n    pattern: /\\|[^|]+\\|/,\n    inside: {\n      variable: /[\\da-z]+/i,\n      punctuation: /\\|/\n    }\n  },\n  keyword: /\\b(?:nil|true|false|self|super|new)\\b/,\n  character: {\n    pattern: /\\$./,\n    alias: \"string\"\n  },\n  number: [/\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/, /\\b\\d+(?:\\.\\d+)?(?:e-?\\d+)?/],\n  operator: /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,\n  punctuation: /[.;:?\\[\\](){}]/\n};","/* TODO\n\tAdd support for variables inside double quoted strings\n\tAdd support for {php}\n*/\n(function (Prism) {\n  Prism.languages.smarty = {\n    'comment': /\\{\\*[\\s\\S]*?\\*\\}/,\n    'delimiter': {\n      pattern: /^\\{|\\}$/i,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n    'variable': [/\\$(?!\\d)\\w+/, /#(?!\\d)\\w+#/, {\n      pattern: /(\\.|->)(?!\\d)\\w+/,\n      lookbehind: true\n    }, {\n      pattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n      lookbehind: true\n    }],\n    'function': [{\n      pattern: /(\\|\\s*)@?(?!\\d)\\w+/,\n      lookbehind: true\n    }, /^\\/?(?!\\d)\\w+/, /(?!\\d)\\w+(?=\\()/],\n    'attr-name': {\n      // Value is made optional because it may have already been tokenized\n      pattern: /\\w+\\s*=\\s*(?:(?!\\d)\\w+)?/,\n      inside: {\n        \"variable\": {\n          pattern: /(=\\s*)(?!\\d)\\w+/,\n          lookbehind: true\n        },\n        \"operator\": /=/\n      }\n    },\n    'punctuation': [/[\\[\\]().,:`]|->/],\n    'operator': [/[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/, /\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/, /\\b(?:eq|neq?|gt|lt|gt?e|lt?e|not|mod|or|and)\\b/],\n    'keyword': /\\b(?:false|off|on|no|true|yes)\\b/\n  }; // Tokenize all inline Smarty expressions\n\n  Prism.hooks.add('before-tokenize', function (env) {\n    var smartyPattern = /\\{\\*[\\s\\S]*?\\*\\}|\\{[\\s\\S]+?\\}/g;\n    var smartyLitteralStart = '{literal}';\n    var smartyLitteralEnd = '{/literal}';\n    var smartyLitteralMode = false;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'smarty', smartyPattern, function (match) {\n      // Smarty tags inside {literal} block are ignored\n      if (match === smartyLitteralEnd) {\n        smartyLitteralMode = false;\n      }\n\n      if (!smartyLitteralMode) {\n        if (match === smartyLitteralStart) {\n          smartyLitteralMode = true;\n        }\n\n        return true;\n      }\n\n      return false;\n    });\n  }); // Re-insert the tokens after tokenizing\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'smarty');\n  });\n})(Prism);","!function (n) {\n  n.languages.smarty = {\n    comment: /\\{\\*[\\s\\S]*?\\*\\}/,\n    delimiter: {\n      pattern: /^\\{|\\}$/i,\n      alias: \"punctuation\"\n    },\n    string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n    variable: [/\\$(?!\\d)\\w+/, /#(?!\\d)\\w+#/, {\n      pattern: /(\\.|->)(?!\\d)\\w+/,\n      lookbehind: !0\n    }, {\n      pattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n      lookbehind: !0\n    }],\n    function: [{\n      pattern: /(\\|\\s*)@?(?!\\d)\\w+/,\n      lookbehind: !0\n    }, /^\\/?(?!\\d)\\w+/, /(?!\\d)\\w+(?=\\()/],\n    \"attr-name\": {\n      pattern: /\\w+\\s*=\\s*(?:(?!\\d)\\w+)?/,\n      inside: {\n        variable: {\n          pattern: /(=\\s*)(?!\\d)\\w+/,\n          lookbehind: !0\n        },\n        operator: /=/\n      }\n    },\n    punctuation: [/[\\[\\]().,:`]|->/],\n    operator: [/[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/, /\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/, /\\b(?:eq|neq?|gt|lt|gt?e|lt?e|not|mod|or|and)\\b/],\n    keyword: /\\b(?:false|off|on|no|true|yes)\\b/\n  }, n.hooks.add(\"before-tokenize\", function (e) {\n    var t = !1;\n    n.languages[\"markup-templating\"].buildPlaceholders(e, \"smarty\", /\\{\\*[\\s\\S]*?\\*\\}|\\{[\\s\\S]+?\\}/g, function (e) {\n      return \"{/literal}\" === e && (t = !1), !t && (\"{literal}\" === e && (t = !0), !0);\n    });\n  }), n.hooks.add(\"after-tokenize\", function (e) {\n    n.languages[\"markup-templating\"].tokenizePlaceholders(e, \"smarty\");\n  });\n}(Prism);","(function (Prism) {\n  var stringPattern = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  var numberPattern = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/;\n  Prism.languages.soy = {\n    'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n      pattern: /(\\s)\\/\\/.*/,\n      lookbehind: true,\n      greedy: true\n    }],\n    'command-arg': {\n      pattern: /({+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\n      lookbehind: true,\n      alias: 'string',\n      inside: {\n        'punctuation': /\\./\n      }\n    },\n    'parameter': {\n      pattern: /({+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    'keyword': [{\n      pattern: /({+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\n      lookbehind: true\n    }, /\\b(?:any|as|attributes|bool|css|float|in|int|js|html|list|map|null|number|string|uri)\\b/],\n    'delimiter': {\n      pattern: /^{+\\/?|\\/?}+$/,\n      alias: 'punctuation'\n    },\n    'property': /\\w+(?==)/,\n    'variable': {\n      pattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+]))*/,\n      inside: {\n        'string': {\n          pattern: stringPattern,\n          greedy: true\n        },\n        'number': numberPattern,\n        'punctuation': /[\\[\\].?]/\n      }\n    },\n    'string': {\n      pattern: stringPattern,\n      greedy: true\n    },\n    'function': [/\\w+(?=\\()/, {\n      pattern: /(\\|[^\\S\\r\\n]*)\\w+/,\n      lookbehind: true\n    }],\n    'boolean': /\\b(?:true|false)\\b/,\n    'number': numberPattern,\n    'operator': /\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,\n    'punctuation': /[{}()\\[\\]|.,:]/\n  }; // Tokenize all inline Soy expressions\n\n  Prism.hooks.add('before-tokenize', function (env) {\n    var soyPattern = /{{.+?}}|{.+?}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g;\n    var soyLitteralStart = '{literal}';\n    var soyLitteralEnd = '{/literal}';\n    var soyLitteralMode = false;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'soy', soyPattern, function (match) {\n      // Soy tags inside {literal} block are ignored\n      if (match === soyLitteralEnd) {\n        soyLitteralMode = false;\n      }\n\n      if (!soyLitteralMode) {\n        if (match === soyLitteralStart) {\n          soyLitteralMode = true;\n        }\n\n        return true;\n      }\n\n      return false;\n    });\n  }); // Re-insert the tokens after tokenizing\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'soy');\n  });\n})(Prism);","!function (t) {\n  var e = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      a = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/;\n  t.languages.soy = {\n    comment: [/\\/\\*[\\s\\S]*?\\*\\//, {\n      pattern: /(\\s)\\/\\/.*/,\n      lookbehind: !0,\n      greedy: !0\n    }],\n    \"command-arg\": {\n      pattern: /({+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\n      lookbehind: !0,\n      alias: \"string\",\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    parameter: {\n      pattern: /({+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\n      lookbehind: !0,\n      alias: \"variable\"\n    },\n    keyword: [{\n      pattern: /({+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\n      lookbehind: !0\n    }, /\\b(?:any|as|attributes|bool|css|float|in|int|js|html|list|map|null|number|string|uri)\\b/],\n    delimiter: {\n      pattern: /^{+\\/?|\\/?}+$/,\n      alias: \"punctuation\"\n    },\n    property: /\\w+(?==)/,\n    variable: {\n      pattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+]))*/,\n      inside: {\n        string: {\n          pattern: e,\n          greedy: !0\n        },\n        number: a,\n        punctuation: /[\\[\\].?]/\n      }\n    },\n    string: {\n      pattern: e,\n      greedy: !0\n    },\n    function: [/\\w+(?=\\()/, {\n      pattern: /(\\|[^\\S\\r\\n]*)\\w+/,\n      lookbehind: !0\n    }],\n    boolean: /\\b(?:true|false)\\b/,\n    number: a,\n    operator: /\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,\n    punctuation: /[{}()\\[\\]|.,:]/\n  }, t.hooks.add(\"before-tokenize\", function (e) {\n    var a = !1;\n    t.languages[\"markup-templating\"].buildPlaceholders(e, \"soy\", /{{.+?}}|{.+?}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g, function (e) {\n      return \"{/literal}\" === e && (a = !1), !a && (\"{literal}\" === e && (a = !0), !0);\n    });\n  }), t.hooks.add(\"after-tokenize\", function (e) {\n    t.languages[\"markup-templating\"].tokenizePlaceholders(e, \"soy\");\n  });\n}(Prism);","Prism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'variable': [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:TRUE|FALSE|NULL)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};","Prism.languages.sql = {\n  comment: {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: !0\n  },\n  variable: [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: !0\n  }, /@[\\w.$]+/],\n  string: {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: !0,\n    lookbehind: !0\n  },\n  function: /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  keyword: /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  boolean: /\\b(?:TRUE|FALSE|NULL)\\b/i,\n  number: /\\b0x[\\da-f]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+\\b/i,\n  operator: /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  punctuation: /[;[\\]()`,.]/\n};","(function (Prism) {\n  var inside = {\n    'url': /url\\(([\"']?).*?\\1\\)/i,\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'number': /\\b\\d+(?:\\.\\d+)?%?/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'operator': [// We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.+|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^{|}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'comment': {\n      pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'atrule-declaration': {\n      pattern: /(^\\s*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,\n      lookbehind: true,\n      inside: {\n        keyword: /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(Prism);","!function (n) {\n  var t = {\n    url: /url\\(([\"']?).*?\\1\\)/i,\n    string: {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: !0\n    },\n    interpolation: null,\n    func: null,\n    important: /\\B!(?:important|optional)\\b/i,\n    keyword: {\n      pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n      lookbehind: !0\n    },\n    hexcode: /#[\\da-f]{3,6}/i,\n    number: /\\b\\d+(?:\\.\\d+)?%?/,\n    boolean: /\\b(?:true|false)\\b/,\n    operator: [/~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.+|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    punctuation: /[{}()\\[\\];:,]/\n  };\n  t.interpolation = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: \"variable\",\n    inside: {\n      delimiter: {\n        pattern: /^{|}$/,\n        alias: \"punctuation\"\n      },\n      rest: t\n    }\n  }, t.func = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      function: /^[^(]+/,\n      rest: t\n    }\n  }, n.languages.stylus = {\n    comment: {\n      pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: !0\n    },\n    \"atrule-declaration\": {\n      pattern: /(^\\s*)@.+/m,\n      lookbehind: !0,\n      inside: {\n        atrule: /^@[\\w-]+/,\n        rest: t\n      }\n    },\n    \"variable-declaration\": {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,\n      lookbehind: !0,\n      inside: {\n        variable: /^\\S+/,\n        rest: t\n      }\n    },\n    statement: {\n      pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,\n      lookbehind: !0,\n      inside: {\n        keyword: /^\\S+/,\n        rest: t\n      }\n    },\n    \"property-declaration\": {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n      lookbehind: !0,\n      inside: {\n        property: {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            interpolation: t.interpolation\n          }\n        },\n        rest: t\n      }\n    },\n    selector: {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n      lookbehind: !0,\n      inside: {\n        interpolation: t.interpolation,\n        punctuation: /[{},]/\n      }\n    },\n    func: t.func,\n    string: t.string,\n    interpolation: t.interpolation,\n    punctuation: /[{}()\\[\\];:.]/\n  };\n}(Prism);","// issues: nested multiline comments\nPrism.languages.swift = Prism.languages.extend('clike', {\n  'string': {\n    pattern: /(\"|')(\\\\(?:\\((?:[^()]|\\([^)]+\\))+\\)|\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        pattern: /\\\\\\((?:[^()]|\\([^)]+\\))+\\)/,\n        inside: {\n          delimiter: {\n            pattern: /^\\\\\\(|\\)$/,\n            alias: 'variable' // See rest below\n\n          }\n        }\n      }\n    }\n  },\n  'keyword': /\\b(?:as|associativity|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic(?:Type)?|else|enum|extension|fallthrough|final|for|func|get|guard|if|import|in|infix|init|inout|internal|is|lazy|left|let|mutating|new|none|nonmutating|operator|optional|override|postfix|precedence|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|Self|set|static|struct|subscript|super|switch|throws?|try|Type|typealias|unowned|unsafe|var|weak|where|while|willSet|__(?:COLUMN__|FILE__|FUNCTION__|LINE__))\\b/,\n  'number': /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n  'constant': /\\b(?:nil|[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n  'atrule': /@\\b(?:IB(?:Outlet|Designable|Action|Inspectable)|class_protocol|exported|noreturn|NS(?:Copying|Managed)|objc|UIApplicationMain|auto_closure)\\b/,\n  'builtin': /\\b(?:[A-Z]\\S+|abs|advance|alignof(?:Value)?|assert|contains|count(?:Elements)?|debugPrint(?:ln)?|distance|drop(?:First|Last)|dump|enumerate|equal|filter|find|first|getVaList|indices|isEmpty|join|last|lexicographicalCompare|map|max(?:Element)?|min(?:Element)?|numericCast|overlaps|partition|print(?:ln)?|reduce|reflect|reverse|sizeof(?:Value)?|sort(?:ed)?|split|startsWith|stride(?:of(?:Value)?)?|suffix|swap|toDebugString|toString|transcode|underestimateCount|unsafeBitCast|with(?:ExtendedLifetime|Unsafe(?:MutablePointers?|Pointers?)|VaList))\\b/\n});\nPrism.languages.swift['string'].inside['interpolation'].inside.rest = Prism.languages.swift;","Prism.languages.swift = Prism.languages.extend(\"clike\", {\n  string: {\n    pattern: /(\"|')(\\\\(?:\\((?:[^()]|\\([^)]+\\))+\\)|\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: !0,\n    inside: {\n      interpolation: {\n        pattern: /\\\\\\((?:[^()]|\\([^)]+\\))+\\)/,\n        inside: {\n          delimiter: {\n            pattern: /^\\\\\\(|\\)$/,\n            alias: \"variable\"\n          }\n        }\n      }\n    }\n  },\n  keyword: /\\b(?:as|associativity|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic(?:Type)?|else|enum|extension|fallthrough|final|for|func|get|guard|if|import|in|infix|init|inout|internal|is|lazy|left|let|mutating|new|none|nonmutating|operator|optional|override|postfix|precedence|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|Self|set|static|struct|subscript|super|switch|throws?|try|Type|typealias|unowned|unsafe|var|weak|where|while|willSet|__(?:COLUMN__|FILE__|FUNCTION__|LINE__))\\b/,\n  number: /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n  constant: /\\b(?:nil|[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n  atrule: /@\\b(?:IB(?:Outlet|Designable|Action|Inspectable)|class_protocol|exported|noreturn|NS(?:Copying|Managed)|objc|UIApplicationMain|auto_closure)\\b/,\n  builtin: /\\b(?:[A-Z]\\S+|abs|advance|alignof(?:Value)?|assert|contains|count(?:Elements)?|debugPrint(?:ln)?|distance|drop(?:First|Last)|dump|enumerate|equal|filter|find|first|getVaList|indices|isEmpty|join|last|lexicographicalCompare|map|max(?:Element)?|min(?:Element)?|numericCast|overlaps|partition|print(?:ln)?|reduce|reflect|reverse|sizeof(?:Value)?|sort(?:ed)?|split|startsWith|stride(?:of(?:Value)?)?|suffix|swap|toDebugString|toString|transcode|underestimateCount|unsafeBitCast|with(?:ExtendedLifetime|Unsafe(?:MutablePointers?|Pointers?)|VaList))\\b/\n}), Prism.languages.swift.string.inside.interpolation.inside.rest = Prism.languages.swift;","Prism.languages.t4 = Prism.languages['t4-cs'] = Prism.languages['t4-templating'].createT4('csharp');","Prism.languages.t4 = Prism.languages[\"t4-cs\"] = Prism.languages[\"t4-templating\"].createT4(\"csharp\");","require(\"core-js/modules/es6.regexp.constructor\");\n\n(function (Prism) {\n  function createBlock(prefix, inside, contentAlias) {\n    return {\n      pattern: RegExp('<#' + prefix + '[\\\\s\\\\S]*?#>'),\n      alias: 'block',\n      inside: {\n        'delimiter': {\n          pattern: RegExp('^<#' + prefix + '|#>$'),\n          alias: 'important'\n        },\n        'content': {\n          pattern: /[\\s\\S]+/,\n          inside: inside,\n          alias: contentAlias\n        }\n      }\n    };\n  }\n\n  function createT4(insideLang) {\n    var grammar = Prism.languages[insideLang];\n    var className = 'language-' + insideLang;\n    return {\n      'block': {\n        pattern: /<#[\\s\\S]+?#>/,\n        inside: {\n          'directive': createBlock('@', {\n            'attr-value': {\n              pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/,\n              inside: {\n                'punctuation': /^=|^[\"']|[\"']$/\n              }\n            },\n            'keyword': /\\w+(?=\\s)/,\n            'attr-name': /\\w+/\n          }),\n          'expression': createBlock('=', grammar, className),\n          'class-feature': createBlock('\\\\+', grammar, className),\n          'standard': createBlock('', grammar, className)\n        }\n      }\n    };\n  }\n\n  Prism.languages['t4-templating'] = Object.defineProperty({}, 'createT4', {\n    value: createT4\n  });\n})(Prism);","require(\"core-js/modules/es6.regexp.constructor\");\n\n!function (n) {\n  function i(e, t, a) {\n    return {\n      pattern: RegExp(\"<#\" + e + \"[\\\\s\\\\S]*?#>\"),\n      alias: \"block\",\n      inside: {\n        delimiter: {\n          pattern: RegExp(\"^<#\" + e + \"|#>$\"),\n          alias: \"important\"\n        },\n        content: {\n          pattern: /[\\s\\S]+/,\n          inside: t,\n          alias: a\n        }\n      }\n    };\n  }\n\n  n.languages[\"t4-templating\"] = Object.defineProperty({}, \"createT4\", {\n    value: function value(e) {\n      var t = n.languages[e],\n          a = \"language-\" + e;\n      return {\n        block: {\n          pattern: /<#[\\s\\S]+?#>/,\n          inside: {\n            directive: i(\"@\", {\n              \"attr-value\": {\n                pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/,\n                inside: {\n                  punctuation: /^=|^[\"']|[\"']$/\n                }\n              },\n              keyword: /\\w+(?=\\s)/,\n              \"attr-name\": /\\w+/\n            }),\n            expression: i(\"=\", t, a),\n            \"class-feature\": i(\"\\\\+\", t, a),\n            standard: i(\"\", t, a)\n          }\n        }\n      };\n    }\n  });\n}(Prism);","Prism.languages['t4-vb'] = Prism.languages['t4-templating'].createT4('visual-basic');","Prism.languages[\"t4-vb\"] = Prism.languages[\"t4-templating\"].createT4(\"visual-basic\");","Prism.languages.tap = {\n  fail: /not ok[^#{\\n\\r]*/,\n  pass: /ok[^#{\\n\\r]*/,\n  pragma: /pragma [+-][a-z]+/,\n  bailout: /bail out!.*/i,\n  version: /TAP version \\d+/i,\n  plan: /\\d+\\.\\.\\d+(?: +#.*)?/,\n  subtest: {\n    pattern: /# Subtest(?:: .*)?/,\n    greedy: true\n  },\n  punctuation: /[{}]/,\n  directive: /#.*/,\n  yamlish: {\n    pattern: /(^[^\\S\\r\\n]*)---(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?[^\\S\\r\\n]*\\.\\.\\.$/m,\n    lookbehind: true,\n    inside: Prism.languages.yaml,\n    alias: 'language-yaml'\n  }\n};","Prism.languages.tap = {\n  fail: /not ok[^#{\\n\\r]*/,\n  pass: /ok[^#{\\n\\r]*/,\n  pragma: /pragma [+-][a-z]+/,\n  bailout: /bail out!.*/i,\n  version: /TAP version \\d+/i,\n  plan: /\\d+\\.\\.\\d+(?: +#.*)?/,\n  subtest: {\n    pattern: /# Subtest(?:: .*)?/,\n    greedy: !0\n  },\n  punctuation: /[{}]/,\n  directive: /#.*/,\n  yamlish: {\n    pattern: /(^[^\\S\\r\\n]*)---(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?[^\\S\\r\\n]*\\.\\.\\.$/m,\n    lookbehind: !0,\n    inside: Prism.languages.yaml,\n    alias: \"language-yaml\"\n  }\n};","Prism.languages.tcl = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n    greedy: true\n  },\n  'variable': [{\n    pattern: /(\\$)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/,\n    lookbehind: true\n  }, {\n    pattern: /(\\$){[^}]+}/,\n    lookbehind: true\n  }, {\n    pattern: /(^\\s*set[ \\t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/m,\n    lookbehind: true\n  }],\n  'function': {\n    pattern: /(^\\s*proc[ \\t]+)[^\\s]+/m,\n    lookbehind: true\n  },\n  'builtin': [{\n    pattern: /(^\\s*)(?:proc|return|class|error|eval|exit|for|foreach|if|switch|while|break|continue)\\b/m,\n    lookbehind: true\n  }, /\\b(?:elseif|else)\\b/],\n  'scope': {\n    pattern: /(^\\s*)(?:global|upvar|variable)\\b/m,\n    lookbehind: true,\n    alias: 'constant'\n  },\n  'keyword': {\n    pattern: /(^\\s*|\\[)(?:after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|Safe_Base|scan|seek|set|socket|source|split|string|subst|Tcl|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|wordBreak(?:After|Before)|test|vars)|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\\b/m,\n    lookbehind: true\n  },\n  'operator': /!=?|\\*\\*?|==|&&?|\\|\\|?|<[=<]?|>[=>]?|[-+~\\/%?^]|\\b(?:eq|ne|in|ni)\\b/,\n  'punctuation': /[{}()\\[\\]]/\n};","Prism.languages.tcl = {\n  comment: {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: !0\n  },\n  string: {\n    pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n    greedy: !0\n  },\n  variable: [{\n    pattern: /(\\$)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/,\n    lookbehind: !0\n  }, {\n    pattern: /(\\$){[^}]+}/,\n    lookbehind: !0\n  }, {\n    pattern: /(^\\s*set[ \\t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/m,\n    lookbehind: !0\n  }],\n  function: {\n    pattern: /(^\\s*proc[ \\t]+)[^\\s]+/m,\n    lookbehind: !0\n  },\n  builtin: [{\n    pattern: /(^\\s*)(?:proc|return|class|error|eval|exit|for|foreach|if|switch|while|break|continue)\\b/m,\n    lookbehind: !0\n  }, /\\b(?:elseif|else)\\b/],\n  scope: {\n    pattern: /(^\\s*)(?:global|upvar|variable)\\b/m,\n    lookbehind: !0,\n    alias: \"constant\"\n  },\n  keyword: {\n    pattern: /(^\\s*|\\[)(?:after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|Safe_Base|scan|seek|set|socket|source|split|string|subst|Tcl|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|wordBreak(?:After|Before)|test|vars)|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\\b/m,\n    lookbehind: !0\n  },\n  operator: /!=?|\\*\\*?|==|&&?|\\|\\|?|<[=<]?|>[=>]?|[-+~\\/%?^]|\\b(?:eq|ne|in|ni)\\b/,\n  punctuation: /[{}()\\[\\]]/\n};","require(\"core-js/modules/es6.string.bold\");\n\nrequire(\"core-js/modules/es6.string.link\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\n(function (Prism) {\n  // We don't allow for pipes inside parentheses\n  // to not break table pattern |(. foo |). bar |\n  var modifierRegex = /(?:\\([^|)]+\\)|\\[[^\\]]+\\]|\\{[^}]+\\})+/.source;\n  var modifierTokens = {\n    'css': {\n      pattern: /\\{[^}]+\\}/,\n      inside: {\n        rest: Prism.languages.css\n      }\n    },\n    'class-id': {\n      pattern: /(\\()[^)]+(?=\\))/,\n      lookbehind: true,\n      alias: 'attr-value'\n    },\n    'lang': {\n      pattern: /(\\[)[^\\]]+(?=\\])/,\n      lookbehind: true,\n      alias: 'attr-value'\n    },\n    // Anything else is punctuation (the first pattern is for row/col spans inside tables)\n    'punctuation': /[\\\\\\/]\\d+|\\S/\n  };\n  var textile = Prism.languages.textile = Prism.languages.extend('markup', {\n    'phrase': {\n      pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n      lookbehind: true,\n      inside: {\n        // h1. Header 1\n        'block-tag': {\n          pattern: RegExp('^[a-z]\\\\w*(?:' + modifierRegex + '|[<>=()])*\\\\.'),\n          inside: {\n            'modifier': {\n              pattern: RegExp('(^[a-z]\\\\w*)(?:' + modifierRegex + '|[<>=()])+(?=\\\\.)'),\n              lookbehind: true,\n              inside: modifierTokens\n            },\n            'tag': /^[a-z]\\w*/,\n            'punctuation': /\\.$/\n          }\n        },\n        // # List item\n        // * List item\n        'list': {\n          pattern: RegExp('^[*#]+(?:' + modifierRegex + ')?\\\\s+.+', 'm'),\n          inside: {\n            'modifier': {\n              pattern: RegExp('(^[*#]+)' + modifierRegex),\n              lookbehind: true,\n              inside: modifierTokens\n            },\n            'punctuation': /^[*#]+/\n          }\n        },\n        // | cell | cell | cell |\n        'table': {\n          // Modifiers can be applied to the row: {color:red}.|1|2|3|\n          // or the cell: |{color:red}.1|2|3|\n          pattern: RegExp('^(?:(?:' + modifierRegex + '|[<>=()^~])+\\\\.\\\\s*)?(?:\\\\|(?:(?:' + modifierRegex + '|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+\\\\.)?[^|]*)+\\\\|', 'm'),\n          inside: {\n            'modifier': {\n              // Modifiers for rows after the first one are\n              // preceded by a pipe and a line feed\n              pattern: RegExp('(^|\\\\|(?:\\\\r?\\\\n|\\\\r)?)(?:' + modifierRegex + '|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+(?=\\\\.)'),\n              lookbehind: true,\n              inside: modifierTokens\n            },\n            'punctuation': /\\||^\\./\n          }\n        },\n        'inline': {\n          pattern: RegExp('(\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])(?:' + modifierRegex + ')?.+?\\\\1'),\n          inside: {\n            // Note: superscripts and subscripts are not handled specifically\n            // *bold*, **bold**\n            'bold': {\n              pattern: RegExp('(^(\\\\*\\\\*?)(?:' + modifierRegex + ')?).+?(?=\\\\2)'),\n              lookbehind: true\n            },\n            // _italic_, __italic__\n            'italic': {\n              pattern: RegExp('(^(__?)(?:' + modifierRegex + ')?).+?(?=\\\\2)'),\n              lookbehind: true\n            },\n            // ??cite??\n            'cite': {\n              pattern: RegExp('(^\\\\?\\\\?(?:' + modifierRegex + ')?).+?(?=\\\\?\\\\?)'),\n              lookbehind: true,\n              alias: 'string'\n            },\n            // @code@\n            'code': {\n              pattern: RegExp('(^@(?:' + modifierRegex + ')?).+?(?=@)'),\n              lookbehind: true,\n              alias: 'keyword'\n            },\n            // +inserted+\n            'inserted': {\n              pattern: RegExp('(^\\\\+(?:' + modifierRegex + ')?).+?(?=\\\\+)'),\n              lookbehind: true\n            },\n            // -deleted-\n            'deleted': {\n              pattern: RegExp('(^-(?:' + modifierRegex + ')?).+?(?=-)'),\n              lookbehind: true\n            },\n            // %span%\n            'span': {\n              pattern: RegExp('(^%(?:' + modifierRegex + ')?).+?(?=%)'),\n              lookbehind: true\n            },\n            'modifier': {\n              pattern: RegExp('(^\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])' + modifierRegex),\n              lookbehind: true,\n              inside: modifierTokens\n            },\n            'punctuation': /[*_%?@+\\-^~]+/\n          }\n        },\n        // [alias]http://example.com\n        'link-ref': {\n          pattern: /^\\[[^\\]]+\\]\\S+$/m,\n          inside: {\n            'string': {\n              pattern: /(\\[)[^\\]]+(?=\\])/,\n              lookbehind: true\n            },\n            'url': {\n              pattern: /(\\])\\S+$/,\n              lookbehind: true\n            },\n            'punctuation': /[\\[\\]]/\n          }\n        },\n        // \"text\":http://example.com\n        // \"text\":link-ref\n        'link': {\n          pattern: RegExp('\"(?:' + modifierRegex + ')?[^\"]+\":.+?(?=[^\\\\w/]?(?:\\\\s|$))'),\n          inside: {\n            'text': {\n              pattern: RegExp('(^\"(?:' + modifierRegex + ')?)[^\"]+(?=\")'),\n              lookbehind: true\n            },\n            'modifier': {\n              pattern: RegExp('(^\")' + modifierRegex),\n              lookbehind: true,\n              inside: modifierTokens\n            },\n            'url': {\n              pattern: /(:).+/,\n              lookbehind: true\n            },\n            'punctuation': /[\":]/\n          }\n        },\n        // !image.jpg!\n        // !image.jpg(Title)!:http://example.com\n        'image': {\n          pattern: RegExp('!(?:' + modifierRegex + '|[<>=()])*[^!\\\\s()]+(?:\\\\([^)]+\\\\))?!(?::.+?(?=[^\\\\w/]?(?:\\\\s|$)))?'),\n          inside: {\n            'source': {\n              pattern: RegExp('(^!(?:' + modifierRegex + '|[<>=()])*)[^!\\\\s()]+(?:\\\\([^)]+\\\\))?(?=!)'),\n              lookbehind: true,\n              alias: 'url'\n            },\n            'modifier': {\n              pattern: RegExp('(^!)(?:' + modifierRegex + '|[<>=()])+'),\n              lookbehind: true,\n              inside: modifierTokens\n            },\n            'url': {\n              pattern: /(:).+/,\n              lookbehind: true\n            },\n            'punctuation': /[!:]/\n          }\n        },\n        // Footnote[1]\n        'footnote': {\n          pattern: /\\b\\[\\d+\\]/,\n          alias: 'comment',\n          inside: {\n            'punctuation': /\\[|\\]/\n          }\n        },\n        // CSS(Cascading Style Sheet)\n        'acronym': {\n          pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n          inside: {\n            'comment': {\n              pattern: /(\\()[^)]+(?=\\))/,\n              lookbehind: true\n            },\n            'punctuation': /[()]/\n          }\n        },\n        // Prism(C)\n        'mark': {\n          pattern: /\\b\\((?:TM|R|C)\\)/,\n          alias: 'comment',\n          inside: {\n            'punctuation': /[()]/\n          }\n        }\n      }\n    }\n  });\n  var phraseInside = textile['phrase'].inside;\n  var nestedPatterns = {\n    'inline': phraseInside['inline'],\n    'link': phraseInside['link'],\n    'image': phraseInside['image'],\n    'footnote': phraseInside['footnote'],\n    'acronym': phraseInside['acronym'],\n    'mark': phraseInside['mark']\n  }; // Only allow alpha-numeric HTML tags, not XML tags\n\n  textile.tag.pattern = /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i; // Allow some nesting\n\n  var phraseInlineInside = phraseInside['inline'].inside;\n  phraseInlineInside['bold'].inside = nestedPatterns;\n  phraseInlineInside['italic'].inside = nestedPatterns;\n  phraseInlineInside['inserted'].inside = nestedPatterns;\n  phraseInlineInside['deleted'].inside = nestedPatterns;\n  phraseInlineInside['span'].inside = nestedPatterns; // Allow some styles inside table cells\n\n  var phraseTableInside = phraseInside['table'].inside;\n  phraseTableInside['inline'] = nestedPatterns['inline'];\n  phraseTableInside['link'] = nestedPatterns['link'];\n  phraseTableInside['image'] = nestedPatterns['image'];\n  phraseTableInside['footnote'] = nestedPatterns['footnote'];\n  phraseTableInside['acronym'] = nestedPatterns['acronym'];\n  phraseTableInside['mark'] = nestedPatterns['mark'];\n})(Prism);","require(\"core-js/modules/es6.string.bold\");\n\nrequire(\"core-js/modules/es6.string.link\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\n!function (e) {\n  var n = \"(?:\\\\([^|)]+\\\\)|\\\\[[^\\\\]]+\\\\]|\\\\{[^}]+\\\\})+\",\n      i = {\n    css: {\n      pattern: /\\{[^}]+\\}/,\n      inside: {\n        rest: e.languages.css\n      }\n    },\n    \"class-id\": {\n      pattern: /(\\()[^)]+(?=\\))/,\n      lookbehind: !0,\n      alias: \"attr-value\"\n    },\n    lang: {\n      pattern: /(\\[)[^\\]]+(?=\\])/,\n      lookbehind: !0,\n      alias: \"attr-value\"\n    },\n    punctuation: /[\\\\\\/]\\d+|\\S/\n  },\n      t = e.languages.textile = e.languages.extend(\"markup\", {\n    phrase: {\n      pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n      lookbehind: !0,\n      inside: {\n        \"block-tag\": {\n          pattern: RegExp(\"^[a-z]\\\\w*(?:\" + n + \"|[<>=()])*\\\\.\"),\n          inside: {\n            modifier: {\n              pattern: RegExp(\"(^[a-z]\\\\w*)(?:\" + n + \"|[<>=()])+(?=\\\\.)\"),\n              lookbehind: !0,\n              inside: i\n            },\n            tag: /^[a-z]\\w*/,\n            punctuation: /\\.$/\n          }\n        },\n        list: {\n          pattern: RegExp(\"^[*#]+(?:\" + n + \")?\\\\s+.+\", \"m\"),\n          inside: {\n            modifier: {\n              pattern: RegExp(\"(^[*#]+)\" + n),\n              lookbehind: !0,\n              inside: i\n            },\n            punctuation: /^[*#]+/\n          }\n        },\n        table: {\n          pattern: RegExp(\"^(?:(?:\" + n + \"|[<>=()^~])+\\\\.\\\\s*)?(?:\\\\|(?:(?:\" + n + \"|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+\\\\.)?[^|]*)+\\\\|\", \"m\"),\n          inside: {\n            modifier: {\n              pattern: RegExp(\"(^|\\\\|(?:\\\\r?\\\\n|\\\\r)?)(?:\" + n + \"|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+(?=\\\\.)\"),\n              lookbehind: !0,\n              inside: i\n            },\n            punctuation: /\\||^\\./\n          }\n        },\n        inline: {\n          pattern: RegExp(\"(\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])(?:\" + n + \")?.+?\\\\1\"),\n          inside: {\n            bold: {\n              pattern: RegExp(\"(^(\\\\*\\\\*?)(?:\" + n + \")?).+?(?=\\\\2)\"),\n              lookbehind: !0\n            },\n            italic: {\n              pattern: RegExp(\"(^(__?)(?:\" + n + \")?).+?(?=\\\\2)\"),\n              lookbehind: !0\n            },\n            cite: {\n              pattern: RegExp(\"(^\\\\?\\\\?(?:\" + n + \")?).+?(?=\\\\?\\\\?)\"),\n              lookbehind: !0,\n              alias: \"string\"\n            },\n            code: {\n              pattern: RegExp(\"(^@(?:\" + n + \")?).+?(?=@)\"),\n              lookbehind: !0,\n              alias: \"keyword\"\n            },\n            inserted: {\n              pattern: RegExp(\"(^\\\\+(?:\" + n + \")?).+?(?=\\\\+)\"),\n              lookbehind: !0\n            },\n            deleted: {\n              pattern: RegExp(\"(^-(?:\" + n + \")?).+?(?=-)\"),\n              lookbehind: !0\n            },\n            span: {\n              pattern: RegExp(\"(^%(?:\" + n + \")?).+?(?=%)\"),\n              lookbehind: !0\n            },\n            modifier: {\n              pattern: RegExp(\"(^\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])\" + n),\n              lookbehind: !0,\n              inside: i\n            },\n            punctuation: /[*_%?@+\\-^~]+/\n          }\n        },\n        \"link-ref\": {\n          pattern: /^\\[[^\\]]+\\]\\S+$/m,\n          inside: {\n            string: {\n              pattern: /(\\[)[^\\]]+(?=\\])/,\n              lookbehind: !0\n            },\n            url: {\n              pattern: /(\\])\\S+$/,\n              lookbehind: !0\n            },\n            punctuation: /[\\[\\]]/\n          }\n        },\n        link: {\n          pattern: RegExp('\"(?:' + n + ')?[^\"]+\":.+?(?=[^\\\\w/]?(?:\\\\s|$))'),\n          inside: {\n            text: {\n              pattern: RegExp('(^\"(?:' + n + ')?)[^\"]+(?=\")'),\n              lookbehind: !0\n            },\n            modifier: {\n              pattern: RegExp('(^\")' + n),\n              lookbehind: !0,\n              inside: i\n            },\n            url: {\n              pattern: /(:).+/,\n              lookbehind: !0\n            },\n            punctuation: /[\":]/\n          }\n        },\n        image: {\n          pattern: RegExp(\"!(?:\" + n + \"|[<>=()])*[^!\\\\s()]+(?:\\\\([^)]+\\\\))?!(?::.+?(?=[^\\\\w/]?(?:\\\\s|$)))?\"),\n          inside: {\n            source: {\n              pattern: RegExp(\"(^!(?:\" + n + \"|[<>=()])*)[^!\\\\s()]+(?:\\\\([^)]+\\\\))?(?=!)\"),\n              lookbehind: !0,\n              alias: \"url\"\n            },\n            modifier: {\n              pattern: RegExp(\"(^!)(?:\" + n + \"|[<>=()])+\"),\n              lookbehind: !0,\n              inside: i\n            },\n            url: {\n              pattern: /(:).+/,\n              lookbehind: !0\n            },\n            punctuation: /[!:]/\n          }\n        },\n        footnote: {\n          pattern: /\\b\\[\\d+\\]/,\n          alias: \"comment\",\n          inside: {\n            punctuation: /\\[|\\]/\n          }\n        },\n        acronym: {\n          pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n          inside: {\n            comment: {\n              pattern: /(\\()[^)]+(?=\\))/,\n              lookbehind: !0\n            },\n            punctuation: /[()]/\n          }\n        },\n        mark: {\n          pattern: /\\b\\((?:TM|R|C)\\)/,\n          alias: \"comment\",\n          inside: {\n            punctuation: /[()]/\n          }\n        }\n      }\n    }\n  }),\n      a = t.phrase.inside,\n      o = {\n    inline: a.inline,\n    link: a.link,\n    image: a.image,\n    footnote: a.footnote,\n    acronym: a.acronym,\n    mark: a.mark\n  };\n  t.tag.pattern = /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i;\n  var r = a.inline.inside;\n  r.bold.inside = o, r.italic.inside = o, r.inserted.inside = o, r.deleted.inside = o, r.span.inside = o;\n  var d = a.table.inside;\n  d.inline = o.inline, d.link = o.link, d.image = o.image, d.footnote = o.footnote, d.acronym = o.acronym, d.mark = o.mark;\n}(Prism);","require(\"core-js/modules/es6.regexp.constructor\");\n\n(function (Prism) {\n  // pattern: /(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\.|[^\\\\\"\\r\\n])*\")/\n  var key = \"(?:[\\\\w-]+|'[^'\\n\\r]*'|\\\"(?:\\\\.|[^\\\\\\\\\\\"\\r\\n])*\\\")\";\n  Prism.languages.toml = {\n    'comment': {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'table': {\n      pattern: RegExp(\"(\\\\[\\\\s*)\" + key + \"(?:\\\\s*\\\\.\\\\s*\" + key + \")*(?=\\\\s*\\\\])\"),\n      lookbehind: true,\n      greedy: true,\n      alias: 'class-name'\n    },\n    'key': {\n      pattern: RegExp(\"(^\\\\s*|[{,]\\\\s*)\" + key + \"(?:\\\\s*\\\\.\\\\s*\" + key + \")*(?=\\\\s*=)\", \"m\"),\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    'string': {\n      pattern: /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    'date': [{\n      // Offset Date-Time, Local Date-Time, Local Date\n      pattern: /\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?/i,\n      alias: 'number'\n    }, {\n      // Local Time\n      pattern: /\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?/i,\n      alias: 'number'\n    }],\n    'number': /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?(?:inf|nan)\\b/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'punctuation': /[.,=[\\]{}]/\n  };\n})(Prism);","require(\"core-js/modules/es6.regexp.constructor\");\n\n!function (e) {\n  var d = \"(?:[\\\\w-]+|'[^'\\n\\r]*'|\\\"(?:\\\\.|[^\\\\\\\\\\\"\\r\\n])*\\\")\";\n  Prism.languages.toml = {\n    comment: {\n      pattern: /#.*/,\n      greedy: !0\n    },\n    table: {\n      pattern: RegExp(\"(\\\\[\\\\s*)\" + d + \"(?:\\\\s*\\\\.\\\\s*\" + d + \")*(?=\\\\s*\\\\])\"),\n      lookbehind: !0,\n      greedy: !0,\n      alias: \"class-name\"\n    },\n    key: {\n      pattern: RegExp(\"(^\\\\s*|[{,]\\\\s*)\" + d + \"(?:\\\\s*\\\\.\\\\s*\" + d + \")*(?=\\\\s*=)\", \"m\"),\n      lookbehind: !0,\n      greedy: !0,\n      alias: \"property\"\n    },\n    string: {\n      pattern: /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: !0\n    },\n    date: [{\n      pattern: /\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?/i,\n      alias: \"number\"\n    }, {\n      pattern: /\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?/i,\n      alias: \"number\"\n    }],\n    number: /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?(?:inf|nan)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    punctuation: /[.,=[\\]{}]/\n  };\n}();","var typescript = Prism.util.clone(Prism.languages.typescript);\nPrism.languages.tsx = Prism.languages.extend('jsx', typescript);","var typescript = Prism.util.clone(Prism.languages.typescript);\nPrism.languages.tsx = Prism.languages.extend(\"jsx\", typescript);","(function (Prism) {\n  Prism.languages.tt2 = Prism.languages.extend('clike', {\n    comment: {\n      pattern: /#.*|\\[%#[\\s\\S]*?%\\]/,\n      lookbehind: true\n    },\n    keyword: /\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|TAGS|THROW|TRY|SWITCH|UNLESS|USE|WHILE|WRAPPER)\\b/,\n    punctuation: /[[\\]{},()]/\n  });\n  Prism.languages.insertBefore('tt2', 'number', {\n    operator: /=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|or|not)\\b/,\n    variable: {\n      pattern: /[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*/i\n    }\n  });\n  Prism.languages.insertBefore('tt2', 'keyword', {\n    'delimiter': {\n      pattern: /^(?:\\[%|%%)-?|-?%]$/,\n      alias: 'punctuation'\n    }\n  });\n  Prism.languages.insertBefore('tt2', 'string', {\n    'single-quoted-string': {\n      pattern: /'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,\n      greedy: true,\n      alias: 'string'\n    },\n    'double-quoted-string': {\n      pattern: /\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        variable: {\n          pattern: /\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i\n        }\n      }\n    }\n  }); // The different types of TT2 strings \"replace\" the C-like standard string\n\n  delete Prism.languages.tt2.string;\n  Prism.hooks.add('before-tokenize', function (env) {\n    var tt2Pattern = /\\[%[\\s\\S]+?%\\]/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'tt2', tt2Pattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'tt2');\n  });\n})(Prism);","!function (t) {\n  t.languages.tt2 = t.languages.extend(\"clike\", {\n    comment: {\n      pattern: /#.*|\\[%#[\\s\\S]*?%\\]/,\n      lookbehind: !0\n    },\n    keyword: /\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|TAGS|THROW|TRY|SWITCH|UNLESS|USE|WHILE|WRAPPER)\\b/,\n    punctuation: /[[\\]{},()]/\n  }), t.languages.insertBefore(\"tt2\", \"number\", {\n    operator: /=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|or|not)\\b/,\n    variable: {\n      pattern: /[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*/i\n    }\n  }), t.languages.insertBefore(\"tt2\", \"keyword\", {\n    delimiter: {\n      pattern: /^(?:\\[%|%%)-?|-?%]$/,\n      alias: \"punctuation\"\n    }\n  }), t.languages.insertBefore(\"tt2\", \"string\", {\n    \"single-quoted-string\": {\n      pattern: /'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,\n      greedy: !0,\n      alias: \"string\"\n    },\n    \"double-quoted-string\": {\n      pattern: /\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,\n      greedy: !0,\n      alias: \"string\",\n      inside: {\n        variable: {\n          pattern: /\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i\n        }\n      }\n    }\n  }), delete t.languages.tt2.string, t.hooks.add(\"before-tokenize\", function (e) {\n    t.languages[\"markup-templating\"].buildPlaceholders(e, \"tt2\", /\\[%[\\s\\S]+?%\\]/g);\n  }), t.hooks.add(\"after-tokenize\", function (e) {\n    t.languages[\"markup-templating\"].tokenizePlaceholders(e, \"tt2\");\n  });\n}(Prism);","Prism.languages.twig = {\n  'comment': /\\{#[\\s\\S]*?#\\}/,\n  'tag': {\n    pattern: /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}/,\n    inside: {\n      'ld': {\n        pattern: /^(?:\\{\\{-?|\\{%-?\\s*\\w+)/,\n        inside: {\n          'punctuation': /^(?:\\{\\{|\\{%)-?/,\n          'keyword': /\\w+/\n        }\n      },\n      'rd': {\n        pattern: /-?(?:%\\}|\\}\\})$/,\n        inside: {\n          'punctuation': /.+/\n        }\n      },\n      'string': {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        inside: {\n          'punctuation': /^['\"]|['\"]$/\n        }\n      },\n      'keyword': /\\b(?:even|if|odd)\\b/,\n      'boolean': /\\b(?:true|false|null)\\b/,\n      'number': /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n      'operator': [{\n        pattern: /(\\s)(?:and|b-and|b-xor|b-or|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n        lookbehind: true\n      }, /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/],\n      'property': /\\b[a-zA-Z_]\\w*\\b/,\n      'punctuation': /[()\\[\\]{}:.,]/\n    }\n  },\n  // The rest can be parsed as HTML\n  'other': {\n    // We want non-blank matches\n    pattern: /\\S(?:[\\s\\S]*\\S)?/,\n    inside: Prism.languages.markup\n  }\n};","Prism.languages.twig = {\n  comment: /\\{#[\\s\\S]*?#\\}/,\n  tag: {\n    pattern: /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}/,\n    inside: {\n      ld: {\n        pattern: /^(?:\\{\\{-?|\\{%-?\\s*\\w+)/,\n        inside: {\n          punctuation: /^(?:\\{\\{|\\{%)-?/,\n          keyword: /\\w+/\n        }\n      },\n      rd: {\n        pattern: /-?(?:%\\}|\\}\\})$/,\n        inside: {\n          punctuation: /.+/\n        }\n      },\n      string: {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        inside: {\n          punctuation: /^['\"]|['\"]$/\n        }\n      },\n      keyword: /\\b(?:even|if|odd)\\b/,\n      boolean: /\\b(?:true|false|null)\\b/,\n      number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n      operator: [{\n        pattern: /(\\s)(?:and|b-and|b-xor|b-or|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n        lookbehind: !0\n      }, /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/],\n      property: /\\b[a-zA-Z_]\\w*\\b/,\n      punctuation: /[()\\[\\]{}:.,]/\n    }\n  },\n  other: {\n    pattern: /\\S(?:[\\s\\S]*\\S)?/,\n    inside: Prism.languages.markup\n  }\n};","Prism.languages.typescript = Prism.languages.extend('javascript', {\n  // From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words\n  'keyword': /\\b(?:abstract|as|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|var|void|while|with|yield)\\b/,\n  'builtin': /\\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\\b/\n});\nPrism.languages.ts = Prism.languages.typescript;","Prism.languages.typescript = Prism.languages.extend(\"javascript\", {\n  keyword: /\\b(?:abstract|as|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|var|void|while|with|yield)\\b/,\n  builtin: /\\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\\b/\n}), Prism.languages.ts = Prism.languages.typescript;","Prism.languages.vala = Prism.languages.extend('clike', {\n  // Classes copied from prism-csharp\n  'class-name': [{\n    // (Foo bar, Bar baz)\n    pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=(?:\\?\\s+|\\*?\\s+\\*?)\\w+)/,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    // [Foo]\n    pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: true,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    // class Foo : Bar\n    pattern: /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: true,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    // class Foo\n    pattern: /((?:\\b(?:class|interface|new|struct|enum)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: true,\n    inside: {\n      punctuation: /\\./\n    }\n  }],\n  'constant': /\\b[A-Z0-9_]+\\b/,\n  'function': /\\w+(?=\\s*\\()/,\n  'keyword': /\\b(?:bool|char|double|float|null|size_t|ssize_t|string|unichar|void|int|int8|int16|int32|int64|long|short|uchar|uint|uint8|uint16|uint32|uint64|ulong|ushort|class|delegate|enum|errordomain|interface|namespace|struct|break|continue|do|for|foreach|return|while|else|if|switch|assert|case|default|abstract|const|dynamic|ensures|extern|inline|internal|override|private|protected|public|requires|signal|static|virtual|volatile|weak|async|owned|unowned|try|catch|finally|throw|as|base|construct|delete|get|in|is|lock|new|out|params|ref|sizeof|set|this|throws|typeof|using|value|var|yield)\\b/i,\n  'number': /(?:\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?:f|u?l?)?/i,\n  'operator': /\\+\\+|--|&&|\\|\\||<<=?|>>=?|=>|->|~|[+\\-*\\/%&^|=!<>]=?|\\?\\??|\\.\\.\\./,\n  'punctuation': /[{}[\\];(),.:]/\n});\nPrism.languages.insertBefore('vala', 'string', {\n  'raw-string': {\n    pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n    greedy: true,\n    alias: 'string'\n  },\n  'template-string': {\n    pattern: /@\"[\\s\\S]*?\"/,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        pattern: /\\$(?:\\([^)]*\\)|[a-zA-Z]\\w*)/,\n        inside: {\n          'delimiter': {\n            pattern: /^\\$\\(?|\\)$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.vala\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  }\n});\nPrism.languages.insertBefore('vala', 'keyword', {\n  'regex': {\n    pattern: /\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[imsx]{0,4}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n    greedy: true\n  }\n});","Prism.languages.vala = Prism.languages.extend(\"clike\", {\n  \"class-name\": [{\n    pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=(?:\\?\\s+|\\*?\\s+\\*?)\\w+)/,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    pattern: /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /\\./\n    }\n  }, {\n    pattern: /((?:\\b(?:class|interface|new|struct|enum)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n    lookbehind: !0,\n    inside: {\n      punctuation: /\\./\n    }\n  }],\n  constant: /\\b[A-Z0-9_]+\\b/,\n  function: /\\w+(?=\\s*\\()/,\n  keyword: /\\b(?:bool|char|double|float|null|size_t|ssize_t|string|unichar|void|int|int8|int16|int32|int64|long|short|uchar|uint|uint8|uint16|uint32|uint64|ulong|ushort|class|delegate|enum|errordomain|interface|namespace|struct|break|continue|do|for|foreach|return|while|else|if|switch|assert|case|default|abstract|const|dynamic|ensures|extern|inline|internal|override|private|protected|public|requires|signal|static|virtual|volatile|weak|async|owned|unowned|try|catch|finally|throw|as|base|construct|delete|get|in|is|lock|new|out|params|ref|sizeof|set|this|throws|typeof|using|value|var|yield)\\b/i,\n  number: /(?:\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?:f|u?l?)?/i,\n  operator: /\\+\\+|--|&&|\\|\\||<<=?|>>=?|=>|->|~|[+\\-*\\/%&^|=!<>]=?|\\?\\??|\\.\\.\\./,\n  punctuation: /[{}[\\];(),.:]/\n}), Prism.languages.insertBefore(\"vala\", \"string\", {\n  \"raw-string\": {\n    pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n    greedy: !0,\n    alias: \"string\"\n  },\n  \"template-string\": {\n    pattern: /@\"[\\s\\S]*?\"/,\n    greedy: !0,\n    inside: {\n      interpolation: {\n        pattern: /\\$(?:\\([^)]*\\)|[a-zA-Z]\\w*)/,\n        inside: {\n          delimiter: {\n            pattern: /^\\$\\(?|\\)$/,\n            alias: \"punctuation\"\n          },\n          rest: Prism.languages.vala\n        }\n      },\n      string: /[\\s\\S]+/\n    }\n  }\n}), Prism.languages.insertBefore(\"vala\", \"keyword\", {\n  regex: {\n    pattern: /\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[imsx]{0,4}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n    greedy: !0\n  }\n});","Prism.languages.vbnet = Prism.languages.extend(\"basic\", {\n  'keyword': /(?:\\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDEC|CDBL|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEFAULT|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LINE INPUT|LET|LIB|LIKE|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPERATOR|OPEN|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHORT|SINGLE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SYNCLOCK|SWAP|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\\$|\\b)/i,\n  'comment': [{\n    pattern: /(?:!|REM\\b).+/i,\n    inside: {\n      'keyword': /^REM/i\n    }\n  }, {\n    pattern: /(^|[^\\\\:])'.*/,\n    lookbehind: true\n  }]\n});","Prism.languages.vbnet = Prism.languages.extend(\"basic\", {\n  keyword: /(?:\\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDEC|CDBL|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEFAULT|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LINE INPUT|LET|LIB|LIKE|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPERATOR|OPEN|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHORT|SINGLE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SYNCLOCK|SWAP|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\\$|\\b)/i,\n  comment: [{\n    pattern: /(?:!|REM\\b).+/i,\n    inside: {\n      keyword: /^REM/i\n    }\n  }, {\n    pattern: /(^|[^\\\\:])'.*/,\n    lookbehind: !0\n  }]\n});","(function (Prism) {\n  Prism.languages.velocity = Prism.languages.extend('markup', {});\n  var velocity = {\n    'variable': {\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+])*|{[^}]+})/i,\n      lookbehind: true,\n      inside: {} // See below\n\n    },\n    'string': {\n      pattern: /\"[^\"]*\"|'[^']*'/,\n      greedy: true\n    },\n    'number': /\\b\\d+\\b/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'operator': /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n    'punctuation': /[(){}[\\]:,.]/\n  };\n  velocity.variable.inside = {\n    'string': velocity['string'],\n    'function': {\n      pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n      lookbehind: true\n    },\n    'number': velocity['number'],\n    'boolean': velocity['boolean'],\n    'punctuation': velocity['punctuation']\n  };\n  Prism.languages.insertBefore('velocity', 'comment', {\n    'unparsed': {\n      pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?]]#/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'punctuation': /^#\\[\\[|]]#$/\n      }\n    },\n    'velocity-comment': [{\n      pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'comment'\n    }, {\n      pattern: /(^|[^\\\\])##.*/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'comment'\n    }],\n    'directive': {\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n      lookbehind: true,\n      inside: {\n        keyword: {\n          pattern: /^#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})|\\bin\\b/,\n          inside: {\n            'punctuation': /[{}]/\n          }\n        },\n        rest: velocity\n      }\n    },\n    'variable': velocity['variable']\n  });\n  Prism.languages.velocity['tag'].inside['attr-value'].inside.rest = Prism.languages.velocity;\n})(Prism);","!function (e) {\n  e.languages.velocity = e.languages.extend(\"markup\", {});\n  var n = {\n    variable: {\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+])*|{[^}]+})/i,\n      lookbehind: !0,\n      inside: {}\n    },\n    string: {\n      pattern: /\"[^\"]*\"|'[^']*'/,\n      greedy: !0\n    },\n    number: /\\b\\d+\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    operator: /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n    punctuation: /[(){}[\\]:,.]/\n  };\n  n.variable.inside = {\n    string: n.string,\n    function: {\n      pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n      lookbehind: !0\n    },\n    number: n.number,\n    boolean: n.boolean,\n    punctuation: n.punctuation\n  }, e.languages.insertBefore(\"velocity\", \"comment\", {\n    unparsed: {\n      pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?]]#/,\n      lookbehind: !0,\n      greedy: !0,\n      inside: {\n        punctuation: /^#\\[\\[|]]#$/\n      }\n    },\n    \"velocity-comment\": [{\n      pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n      lookbehind: !0,\n      greedy: !0,\n      alias: \"comment\"\n    }, {\n      pattern: /(^|[^\\\\])##.*/,\n      lookbehind: !0,\n      greedy: !0,\n      alias: \"comment\"\n    }],\n    directive: {\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n      lookbehind: !0,\n      inside: {\n        keyword: {\n          pattern: /^#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})|\\bin\\b/,\n          inside: {\n            punctuation: /[{}]/\n          }\n        },\n        rest: n\n      }\n    },\n    variable: n.variable\n  }), e.languages.velocity.tag.inside[\"attr-value\"].inside.rest = e.languages.velocity;\n}(Prism);","Prism.languages.verilog = {\n  'comment': /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  // support for any kernel function (ex: $display())\n  'property': /\\B\\$\\w+\\b/,\n  // support for user defined constants (ex: `define)\n  'constant': /\\B`\\w+\\b/,\n  'function': /\\w+(?=\\()/,\n  // support for verilog and system verilog keywords\n  'keyword': /\\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|class|case|casex|casez|cell|chandle|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endspecify|endsequence|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_onevent|pulsestyle_ondetect|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\\b/,\n  // bold highlighting for all verilog and system verilog logic blocks\n  'important': /\\b(?:always_latch|always_comb|always_ff|always)\\b ?@?/,\n  // support for time ticks, vectors, and real numbers\n  'number': /\\B##?\\d+|(?:\\b\\d+)?'[odbh] ?[\\da-fzx_?]+|\\b\\d*[._]?\\d+(?:e[-+]?\\d+)?/i,\n  'operator': /[-+{}^~%*\\/?=!<>&|]+/,\n  'punctuation': /[[\\];(),.:]/\n};","Prism.languages.verilog = {\n  comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n  string: {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: !0\n  },\n  property: /\\B\\$\\w+\\b/,\n  constant: /\\B`\\w+\\b/,\n  function: /\\w+(?=\\()/,\n  keyword: /\\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|class|case|casex|casez|cell|chandle|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endspecify|endsequence|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_onevent|pulsestyle_ondetect|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\\b/,\n  important: /\\b(?:always_latch|always_comb|always_ff|always)\\b ?@?/,\n  number: /\\B##?\\d+|(?:\\b\\d+)?'[odbh] ?[\\da-fzx_?]+|\\b\\d*[._]?\\d+(?:e[-+]?\\d+)?/i,\n  operator: /[-+{}^~%*\\/?=!<>&|]+/,\n  punctuation: /[[\\];(),.:]/\n};","Prism.languages.vhdl = {\n  'comment': /--.+/,\n  // support for all logic vectors\n  'vhdl-vectors': {\n    'pattern': /\\b[oxb]\"[\\da-f_]+\"|\"[01uxzwlh-]+\"/i,\n    'alias': 'number'\n  },\n  // support for operator overloading included\n  'quoted-function': {\n    pattern: /\"\\S+?\"(?=\\()/,\n    alias: 'function'\n  },\n  'string': /\"(?:[^\\\\\"\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n  'constant': /\\b(?:use|library)\\b/i,\n  // support for predefined attributes included\n  'keyword': /\\b(?:'active|'ascending|'base|'delayed|'driving|'driving_value|'event|'high|'image|'instance_name|'last_active|'last_event|'last_value|'left|'leftof|'length|'low|'path_name|'pos|'pred|'quiet|'range|'reverse_range|'right|'rightof|'simple_name|'stable|'succ|'transaction|'val|'value|access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with)\\b/i,\n  'boolean': /\\b(?:true|false)\\b/i,\n  'function': /\\w+(?=\\()/,\n  // decimal, based, physical, and exponential numbers supported\n  'number': /'[01uxzwlh-]'|\\b(?:\\d+#[\\da-f_.]+#|\\d[\\d_.]*)(?:e[-+]?\\d+)?/i,\n  'operator': /[<>]=?|:=|[-+*/&=]|\\b(?:abs|not|mod|rem|sll|srl|sla|sra|rol|ror|and|or|nand|xnor|xor|nor)\\b/i,\n  'punctuation': /[{}[\\];(),.:]/\n};","Prism.languages.vhdl = {\n  comment: /--.+/,\n  \"vhdl-vectors\": {\n    pattern: /\\b[oxb]\"[\\da-f_]+\"|\"[01uxzwlh-]+\"/i,\n    alias: \"number\"\n  },\n  \"quoted-function\": {\n    pattern: /\"\\S+?\"(?=\\()/,\n    alias: \"function\"\n  },\n  string: /\"(?:[^\\\\\"\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n  constant: /\\b(?:use|library)\\b/i,\n  keyword: /\\b(?:'active|'ascending|'base|'delayed|'driving|'driving_value|'event|'high|'image|'instance_name|'last_active|'last_event|'last_value|'left|'leftof|'length|'low|'path_name|'pos|'pred|'quiet|'range|'reverse_range|'right|'rightof|'simple_name|'stable|'succ|'transaction|'val|'value|access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with)\\b/i,\n  boolean: /\\b(?:true|false)\\b/i,\n  function: /\\w+(?=\\()/,\n  number: /'[01uxzwlh-]'|\\b(?:\\d+#[\\da-f_.]+#|\\d[\\d_.]*)(?:e[-+]?\\d+)?/i,\n  operator: /[<>]=?|:=|[-+*/&=]|\\b(?:abs|not|mod|rem|sll|srl|sla|sra|rol|ror|and|or|nand|xnor|xor|nor)\\b/i,\n  punctuation: /[{}[\\];(),.:]/\n};","Prism.languages.vim = {\n  'string': /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,\n  'comment': /\".*/,\n  'function': /\\w+(?=\\()/,\n  'keyword': /\\b(?:ab|abbreviate|abc|abclear|abo|aboveleft|al|all|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|ar|args|argu|argument|as|ascii|bad|badd|ba|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bN|bNext|bo|botright|bp|bprevious|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|br|brewind|bro|browse|bufdo|b|buffer|buffers|bun|bunload|bw|bwipeout|ca|cabbrev|cabc|cabclear|caddb|caddbuffer|cad|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cgetb|cgetbuffer|cgete|cgetexpr|cg|cgetfile|c|change|changes|chd|chdir|che|checkpath|checkt|checktime|cla|clast|cl|clist|clo|close|cmapc|cmapclear|cnew|cnewer|cn|cnext|cN|cNext|cnf|cnfile|cNfcNfile|cnorea|cnoreabbrev|col|colder|colo|colorscheme|comc|comclear|comp|compiler|conf|confirm|con|continue|cope|copen|co|copy|cpf|cpfile|cp|cprevious|cq|cquit|cr|crewind|cuna|cunabbrev|cu|cunmap|cw|cwindow|debugg|debuggreedy|delc|delcommand|d|delete|delf|delfunction|delm|delmarks|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|di|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|earlier|echoe|echoerr|echom|echomsg|echon|e|edit|el|else|elsei|elseif|em|emenu|endfo|endfor|endf|endfunction|endfun|en|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fina|finally|fin|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|folddoc|folddoclosed|foldd|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|ha|hardcopy|h|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iuna|iunabbrev|iu|iunmap|j|join|ju|jumps|k|keepalt|keepj|keepjumps|kee|keepmarks|laddb|laddbuffer|lad|laddexpr|laddf|laddfile|lan|language|la|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|let|left|lefta|leftabove|lex|lexpr|lf|lfile|lfir|lfirst|lgetb|lgetbuffer|lgete|lgetexpr|lg|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|l|list|ll|lla|llast|lli|llist|lmak|lmake|lm|lmap|lmapc|lmapclear|lnew|lnewer|lne|lnext|lN|lNext|lnf|lnfile|lNf|lNfile|ln|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lpf|lpfile|lp|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|mak|make|ma|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkvie|mkview|mkv|mkvimrc|mod|mode|m|move|mzf|mzfile|mz|mzscheme|nbkey|new|n|next|N|Next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|omapc|omapclear|on|only|o|open|opt|options|ou|ounmap|pc|pclose|ped|pedit|pe|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|p|print|P|Print|profd|profdel|prof|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptN|ptNext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|pyf|pyfile|py|python|qa|qall|q|quit|quita|quitall|r|read|rec|recover|redi|redir|red|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|rub|ruby|rubyd|rubydo|rubyf|rubyfile|ru|runtime|rv|rviminfo|sal|sall|san|sandbox|sa|sargument|sav|saveas|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbN|sbNext|sbp|sbprevious|sbr|sbrewind|sb|sbuffer|scripte|scriptencoding|scrip|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sla|slast|sl|sleep|sm|smagic|sm|smap|smapc|smapclear|sme|smenu|sn|snext|sN|sNext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|sor|sort|so|source|spelld|spelldump|spe|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|sp|split|spr|sprevious|sre|srewind|sta|stag|startg|startgreplace|star|startinsert|startr|startreplace|stj|stjump|st|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tab|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabnew|tabn|tabnext|tabN|tabNext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|ta|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tm|tmenu|tn|tnext|tN|tNext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tu|tunmenu|una|unabbreviate|u|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|verb|verbose|ve|version|vert|vertical|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|vi|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|wa|wall|wh|while|winc|wincmd|windo|winp|winpos|win|winsize|wn|wnext|wN|wNext|wp|wprevious|wq|wqa|wqall|w|write|ws|wsverb|wv|wviminfo|X|xa|xall|x|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|XMLent|XMLns|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,\n  'builtin': /\\b(?:autocmd|acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|t_AB|t_AF|t_al|t_AL|t_bc|t_cd|t_ce|t_Ce|t_cl|t_cm|t_Co|t_cs|t_Cs|t_CS|t_CV|t_da|t_db|t_dl|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_fs|t_IE|t_IS|t_k1|t_K1|t_k2|t_k3|t_K3|t_k4|t_K4|t_k5|t_K5|t_k6|t_K6|t_k7|t_K7|t_k8|t_K8|t_k9|t_K9|t_KA|t_kb|t_kB|t_KB|t_KC|t_kd|t_kD|t_KD|t_ke|t_KE|t_KF|t_KG|t_kh|t_KH|t_kI|t_KI|t_KJ|t_KK|t_kl|t_KL|t_kN|t_kP|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_RI|t_RV|t_Sb|t_se|t_Sf|t_SI|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_WP|t_WS|t_xs|t_ZH|t_ZR)\\b/,\n  'number': /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n  'operator': /\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,\n  'punctuation': /[{}[\\](),;:]/\n};","Prism.languages.vim = {\n  string: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,\n  comment: /\".*/,\n  function: /\\w+(?=\\()/,\n  keyword: /\\b(?:ab|abbreviate|abc|abclear|abo|aboveleft|al|all|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|ar|args|argu|argument|as|ascii|bad|badd|ba|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bN|bNext|bo|botright|bp|bprevious|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|br|brewind|bro|browse|bufdo|b|buffer|buffers|bun|bunload|bw|bwipeout|ca|cabbrev|cabc|cabclear|caddb|caddbuffer|cad|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cgetb|cgetbuffer|cgete|cgetexpr|cg|cgetfile|c|change|changes|chd|chdir|che|checkpath|checkt|checktime|cla|clast|cl|clist|clo|close|cmapc|cmapclear|cnew|cnewer|cn|cnext|cN|cNext|cnf|cnfile|cNfcNfile|cnorea|cnoreabbrev|col|colder|colo|colorscheme|comc|comclear|comp|compiler|conf|confirm|con|continue|cope|copen|co|copy|cpf|cpfile|cp|cprevious|cq|cquit|cr|crewind|cuna|cunabbrev|cu|cunmap|cw|cwindow|debugg|debuggreedy|delc|delcommand|d|delete|delf|delfunction|delm|delmarks|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|di|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|earlier|echoe|echoerr|echom|echomsg|echon|e|edit|el|else|elsei|elseif|em|emenu|endfo|endfor|endf|endfunction|endfun|en|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fina|finally|fin|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|folddoc|folddoclosed|foldd|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|ha|hardcopy|h|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iuna|iunabbrev|iu|iunmap|j|join|ju|jumps|k|keepalt|keepj|keepjumps|kee|keepmarks|laddb|laddbuffer|lad|laddexpr|laddf|laddfile|lan|language|la|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|let|left|lefta|leftabove|lex|lexpr|lf|lfile|lfir|lfirst|lgetb|lgetbuffer|lgete|lgetexpr|lg|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|l|list|ll|lla|llast|lli|llist|lmak|lmake|lm|lmap|lmapc|lmapclear|lnew|lnewer|lne|lnext|lN|lNext|lnf|lnfile|lNf|lNfile|ln|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lpf|lpfile|lp|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|mak|make|ma|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkvie|mkview|mkv|mkvimrc|mod|mode|m|move|mzf|mzfile|mz|mzscheme|nbkey|new|n|next|N|Next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|omapc|omapclear|on|only|o|open|opt|options|ou|ounmap|pc|pclose|ped|pedit|pe|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|p|print|P|Print|profd|profdel|prof|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptN|ptNext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|pyf|pyfile|py|python|qa|qall|q|quit|quita|quitall|r|read|rec|recover|redi|redir|red|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|rub|ruby|rubyd|rubydo|rubyf|rubyfile|ru|runtime|rv|rviminfo|sal|sall|san|sandbox|sa|sargument|sav|saveas|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbN|sbNext|sbp|sbprevious|sbr|sbrewind|sb|sbuffer|scripte|scriptencoding|scrip|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sla|slast|sl|sleep|sm|smagic|sm|smap|smapc|smapclear|sme|smenu|sn|snext|sN|sNext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|sor|sort|so|source|spelld|spelldump|spe|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|sp|split|spr|sprevious|sre|srewind|sta|stag|startg|startgreplace|star|startinsert|startr|startreplace|stj|stjump|st|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tab|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabnew|tabn|tabnext|tabN|tabNext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|ta|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tm|tmenu|tn|tnext|tN|tNext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tu|tunmenu|una|unabbreviate|u|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|verb|verbose|ve|version|vert|vertical|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|vi|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|wa|wall|wh|while|winc|wincmd|windo|winp|winpos|win|winsize|wn|wnext|wN|wNext|wp|wprevious|wq|wqa|wqall|w|write|ws|wsverb|wv|wviminfo|X|xa|xall|x|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|XMLent|XMLns|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,\n  builtin: /\\b(?:autocmd|acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|t_AB|t_AF|t_al|t_AL|t_bc|t_cd|t_ce|t_Ce|t_cl|t_cm|t_Co|t_cs|t_Cs|t_CS|t_CV|t_da|t_db|t_dl|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_fs|t_IE|t_IS|t_k1|t_K1|t_k2|t_k3|t_K3|t_k4|t_K4|t_k5|t_K5|t_k6|t_K6|t_k7|t_K7|t_k8|t_K8|t_k9|t_K9|t_KA|t_kb|t_kB|t_KB|t_KC|t_kd|t_kD|t_KD|t_ke|t_KE|t_KF|t_KG|t_kh|t_KH|t_kI|t_KI|t_KJ|t_KK|t_kl|t_KL|t_kN|t_kP|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_RI|t_RV|t_Sb|t_se|t_Sf|t_SI|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_WP|t_WS|t_xs|t_ZH|t_ZR)\\b/,\n  number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n  operator: /\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,\n  punctuation: /[{}[\\](),;:]/\n};","Prism.languages['visual-basic'] = {\n  'comment': {\n    pattern: /(?:['‘’]|REM\\b).*/i,\n    inside: {\n      'keyword': /^REM/i\n    }\n  },\n  'directive': {\n    pattern: /#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:[^\\S\\r\\n]_[^\\S\\r\\n]*(?:\\r\\n?|\\n)|.)+/i,\n    alias: 'comment',\n    greedy: true\n  },\n  'string': {\n    pattern: /[\"“”](?:[\"“”]{2}|[^\"“”])*[\"“”]C?/i,\n    greedy: true\n  },\n  'date': {\n    pattern: /#[^\\S\\r\\n]*(?:\\d+([/-])\\d+\\1\\d+(?:[^\\S\\r\\n]+(?:\\d+[^\\S\\r\\n]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[^\\S\\r\\n]*(?:AM|PM))?))?|(?:\\d+[^\\S\\r\\n]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[^\\S\\r\\n]*(?:AM|PM))?))[^\\S\\r\\n]*#/i,\n    alias: 'builtin'\n  },\n  'number': /(?:(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)(?:E[+-]?\\d+)?|&[HO][\\dA-F]+)(?:U?[ILS]|[FRD])?/i,\n  'boolean': /\\b(?:True|False|Nothing)\\b/i,\n  'keyword': /\\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|TypeOf|U(?:Integer|Long|Short)|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Xor)\\b/i,\n  'operator': [/[+\\-*/\\\\^<=>&#@$%!]/, {\n    pattern: /([^\\S\\r\\n])_(?=[^\\S\\r\\n]*[\\r\\n])/,\n    lookbehind: true\n  }],\n  'punctuation': /[{}().,:?]/\n};\nPrism.languages.vb = Prism.languages['visual-basic'];","Prism.languages[\"visual-basic\"] = {\n  comment: {\n    pattern: /(?:['‘’]|REM\\b).*/i,\n    inside: {\n      keyword: /^REM/i\n    }\n  },\n  directive: {\n    pattern: /#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:[^\\S\\r\\n]_[^\\S\\r\\n]*(?:\\r\\n?|\\n)|.)+/i,\n    alias: \"comment\",\n    greedy: !0\n  },\n  string: {\n    pattern: /[\"“”](?:[\"“”]{2}|[^\"“”])*[\"“”]C?/i,\n    greedy: !0\n  },\n  date: {\n    pattern: /#[^\\S\\r\\n]*(?:\\d+([/-])\\d+\\1\\d+(?:[^\\S\\r\\n]+(?:\\d+[^\\S\\r\\n]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[^\\S\\r\\n]*(?:AM|PM))?))?|(?:\\d+[^\\S\\r\\n]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[^\\S\\r\\n]*(?:AM|PM))?))[^\\S\\r\\n]*#/i,\n    alias: \"builtin\"\n  },\n  number: /(?:(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)(?:E[+-]?\\d+)?|&[HO][\\dA-F]+)(?:U?[ILS]|[FRD])?/i,\n  boolean: /\\b(?:True|False|Nothing)\\b/i,\n  keyword: /\\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|TypeOf|U(?:Integer|Long|Short)|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Xor)\\b/i,\n  operator: [/[+\\-*/\\\\^<=>&#@$%!]/, {\n    pattern: /([^\\S\\r\\n])_(?=[^\\S\\r\\n]*[\\r\\n])/,\n    lookbehind: !0\n  }],\n  punctuation: /[{}().,:?]/\n}, Prism.languages.vb = Prism.languages[\"visual-basic\"];","Prism.languages.wasm = {\n  'comment': [/\\(;[\\s\\S]*?;\\)/, {\n    pattern: /;;.*/,\n    greedy: true\n  }],\n  'string': {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n    greedy: true\n  },\n  'keyword': [{\n    pattern: /\\b(?:align|offset)=/,\n    inside: {\n      'operator': /=/\n    }\n  }, {\n    pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n    inside: {\n      'punctuation': /\\./\n    }\n  }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n  'variable': /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^_`|~]+/i,\n  'number': /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n  'punctuation': /[()]/\n};","Prism.languages.wasm = {\n  comment: [/\\(;[\\s\\S]*?;\\)/, {\n    pattern: /;;.*/,\n    greedy: !0\n  }],\n  string: {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n    greedy: !0\n  },\n  keyword: [{\n    pattern: /\\b(?:align|offset)=/,\n    inside: {\n      operator: /=/\n    }\n  }, {\n    pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n    inside: {\n      punctuation: /\\./\n    }\n  }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n  variable: /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^_`|~]+/i,\n  number: /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n  punctuation: /[()]/\n};","Prism.languages.wiki = Prism.languages.extend('markup', {\n  'block-comment': {\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: true,\n    alias: 'comment'\n  },\n  'heading': {\n    pattern: /^(=+).+?\\1/m,\n    inside: {\n      'punctuation': /^=+|=+$/,\n      'important': /.+/\n    }\n  },\n  'emphasis': {\n    // TODO Multi-line\n    pattern: /('{2,5}).+?\\1/,\n    inside: {\n      'bold italic': {\n        pattern: /(''''').+?(?=\\1)/,\n        lookbehind: true\n      },\n      'bold': {\n        pattern: /(''')[^'](?:.*?[^'])?(?=\\1)/,\n        lookbehind: true\n      },\n      'italic': {\n        pattern: /('')[^'](?:.*?[^'])?(?=\\1)/,\n        lookbehind: true\n      },\n      'punctuation': /^''+|''+$/\n    }\n  },\n  'hr': {\n    pattern: /^-{4,}/m,\n    alias: 'punctuation'\n  },\n  'url': [/ISBN +(?:97[89][ -]?)?(?:\\d[ -]?){9}[\\dx]\\b|(?:RFC|PMID) +\\d+/i, /\\[\\[.+?\\]\\]|\\[.+?\\]/],\n  'variable': [/__[A-Z]+__/, // FIXME Nested structures should be handled\n  // {{formatnum:{{#expr:{{{3}}}}}}}\n  /\\{{3}.+?\\}{3}/, /\\{\\{.+?\\}\\}/],\n  'symbol': [/^#redirect/im, /~{3,5}/],\n  // Handle table attrs:\n  // {|\n  // ! style=\"text-align:left;\"| Item\n  // |}\n  'table-tag': {\n    pattern: /((?:^|[|!])[|!])[^|\\r\\n]+\\|(?!\\|)/m,\n    lookbehind: true,\n    inside: {\n      'table-bar': {\n        pattern: /\\|$/,\n        alias: 'punctuation'\n      },\n      rest: Prism.languages.markup['tag'].inside\n    }\n  },\n  'punctuation': /^(?:\\{\\||\\|\\}|\\|-|[*#:;!|])|\\|\\||!!/m\n});\nPrism.languages.insertBefore('wiki', 'tag', {\n  // Prevent highlighting inside <nowiki>, <source> and <pre> tags\n  'nowiki': {\n    pattern: /<(nowiki|pre|source)\\b[\\s\\S]*?>[\\s\\S]*?<\\/\\1>/i,\n    inside: {\n      'tag': {\n        pattern: /<(?:nowiki|pre|source)\\b[\\s\\S]*?>|<\\/(?:nowiki|pre|source)>/i,\n        inside: Prism.languages.markup['tag'].inside\n      }\n    }\n  }\n});","Prism.languages.wiki = Prism.languages.extend(\"markup\", {\n  \"block-comment\": {\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: !0,\n    alias: \"comment\"\n  },\n  heading: {\n    pattern: /^(=+).+?\\1/m,\n    inside: {\n      punctuation: /^=+|=+$/,\n      important: /.+/\n    }\n  },\n  emphasis: {\n    pattern: /('{2,5}).+?\\1/,\n    inside: {\n      \"bold italic\": {\n        pattern: /(''''').+?(?=\\1)/,\n        lookbehind: !0\n      },\n      bold: {\n        pattern: /(''')[^'](?:.*?[^'])?(?=\\1)/,\n        lookbehind: !0\n      },\n      italic: {\n        pattern: /('')[^'](?:.*?[^'])?(?=\\1)/,\n        lookbehind: !0\n      },\n      punctuation: /^''+|''+$/\n    }\n  },\n  hr: {\n    pattern: /^-{4,}/m,\n    alias: \"punctuation\"\n  },\n  url: [/ISBN +(?:97[89][ -]?)?(?:\\d[ -]?){9}[\\dx]\\b|(?:RFC|PMID) +\\d+/i, /\\[\\[.+?\\]\\]|\\[.+?\\]/],\n  variable: [/__[A-Z]+__/, /\\{{3}.+?\\}{3}/, /\\{\\{.+?\\}\\}/],\n  symbol: [/^#redirect/im, /~{3,5}/],\n  \"table-tag\": {\n    pattern: /((?:^|[|!])[|!])[^|\\r\\n]+\\|(?!\\|)/m,\n    lookbehind: !0,\n    inside: {\n      \"table-bar\": {\n        pattern: /\\|$/,\n        alias: \"punctuation\"\n      },\n      rest: Prism.languages.markup.tag.inside\n    }\n  },\n  punctuation: /^(?:\\{\\||\\|\\}|\\|-|[*#:;!|])|\\|\\||!!/m\n}), Prism.languages.insertBefore(\"wiki\", \"tag\", {\n  nowiki: {\n    pattern: /<(nowiki|pre|source)\\b[\\s\\S]*?>[\\s\\S]*?<\\/\\1>/i,\n    inside: {\n      tag: {\n        pattern: /<(?:nowiki|pre|source)\\b[\\s\\S]*?>|<\\/(?:nowiki|pre|source)>/i,\n        inside: Prism.languages.markup.tag.inside\n      }\n    }\n  }\n});","(function (Prism) {\n  Prism.languages.xeora = Prism.languages.extend('markup', {\n    'constant': {\n      pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n      inside: {\n        'punctuation': {\n          pattern: /\\$/\n        }\n      }\n    },\n    'variable': {\n      pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n      inside: {\n        'punctuation': {\n          pattern: /[$.]/\n        },\n        'operator': {\n          pattern: /#+|[-+*~=^@]/\n        }\n      }\n    },\n    'function-inline': {\n      pattern: /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?\\$/,\n      inside: {\n        'variable': {\n          pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n          inside: {\n            'punctuation': {\n              pattern: /[,.|]/\n            },\n            'operator': {\n              pattern: /#+|[-+*~=^@]/\n            }\n          }\n        },\n        'punctuation': {\n          pattern: /\\$\\w:|[$:?.,|]/\n        }\n      },\n      alias: 'function'\n    },\n    'function-block': {\n      pattern: /\\$XF:{[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?}:XF\\$/,\n      inside: {\n        'punctuation': {\n          pattern: /[$:{}?.,|]/\n        }\n      },\n      alias: 'function'\n    },\n    'directive-inline': {\n      pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\/\\w.]+\\$/,\n      inside: {\n        'punctuation': {\n          pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n          inside: {\n            'tag': {\n              pattern: /#\\d/\n            }\n          }\n        }\n      },\n      alias: 'function'\n    },\n    'directive-block-open': {\n      pattern: /\\$\\w+:{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\w.]+:{(![A-Z]+)?/,\n      inside: {\n        'punctuation': {\n          pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n          inside: {\n            'tag': {\n              pattern: /#\\d/\n            }\n          }\n        },\n        'attribute': {\n          pattern: /![A-Z]+$/,\n          inside: {\n            'punctuation': {\n              pattern: /!/\n            }\n          },\n          alias: 'keyword'\n        }\n      },\n      alias: 'function'\n    },\n    'directive-block-separator': {\n      pattern: /}:[-\\w.]+:{/,\n      inside: {\n        'punctuation': {\n          pattern: /[:{}]/\n        }\n      },\n      alias: 'function'\n    },\n    'directive-block-close': {\n      pattern: /}:[-\\w.]+\\$/,\n      inside: {\n        'punctuation': {\n          pattern: /[:{}$]/\n        }\n      },\n      alias: 'function'\n    }\n  });\n  Prism.languages.insertBefore('inside', 'punctuation', {\n    'variable': Prism.languages.xeora['function-inline'].inside['variable']\n  }, Prism.languages.xeora[\"function-block\"]);\n  Prism.languages.xeoracube = Prism.languages.xeora;\n})(Prism);","!function (n) {\n  n.languages.xeora = n.languages.extend(\"markup\", {\n    constant: {\n      pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n      inside: {\n        punctuation: {\n          pattern: /\\$/\n        }\n      }\n    },\n    variable: {\n      pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n      inside: {\n        punctuation: {\n          pattern: /[$.]/\n        },\n        operator: {\n          pattern: /#+|[-+*~=^@]/\n        }\n      }\n    },\n    \"function-inline\": {\n      pattern: /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?\\$/,\n      inside: {\n        variable: {\n          pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n          inside: {\n            punctuation: {\n              pattern: /[,.|]/\n            },\n            operator: {\n              pattern: /#+|[-+*~=^@]/\n            }\n          }\n        },\n        punctuation: {\n          pattern: /\\$\\w:|[$:?.,|]/\n        }\n      },\n      alias: \"function\"\n    },\n    \"function-block\": {\n      pattern: /\\$XF:{[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?}:XF\\$/,\n      inside: {\n        punctuation: {\n          pattern: /[$:{}?.,|]/\n        }\n      },\n      alias: \"function\"\n    },\n    \"directive-inline\": {\n      pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\/\\w.]+\\$/,\n      inside: {\n        punctuation: {\n          pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n          inside: {\n            tag: {\n              pattern: /#\\d/\n            }\n          }\n        }\n      },\n      alias: \"function\"\n    },\n    \"directive-block-open\": {\n      pattern: /\\$\\w+:{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\w.]+:{(![A-Z]+)?/,\n      inside: {\n        punctuation: {\n          pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n          inside: {\n            tag: {\n              pattern: /#\\d/\n            }\n          }\n        },\n        attribute: {\n          pattern: /![A-Z]+$/,\n          inside: {\n            punctuation: {\n              pattern: /!/\n            }\n          },\n          alias: \"keyword\"\n        }\n      },\n      alias: \"function\"\n    },\n    \"directive-block-separator\": {\n      pattern: /}:[-\\w.]+:{/,\n      inside: {\n        punctuation: {\n          pattern: /[:{}]/\n        }\n      },\n      alias: \"function\"\n    },\n    \"directive-block-close\": {\n      pattern: /}:[-\\w.]+\\$/,\n      inside: {\n        punctuation: {\n          pattern: /[:{}$]/\n        }\n      },\n      alias: \"function\"\n    }\n  }), n.languages.insertBefore(\"inside\", \"punctuation\", {\n    variable: n.languages.xeora[\"function-inline\"].inside.variable\n  }, n.languages.xeora[\"function-block\"]), n.languages.xeoracube = n.languages.xeora;\n}(Prism);","Prism.languages.xojo = {\n  'comment': {\n    pattern: /(?:'|\\/\\/|Rem\\b).+/i,\n    inside: {\n      'keyword': /^Rem/i\n    }\n  },\n  'string': {\n    pattern: /\"(?:\"\"|[^\"])*\"/,\n    greedy: true\n  },\n  'number': [/(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i, /&[bchou][a-z\\d]+/i],\n  'symbol': /#(?:If|Else|ElseIf|Endif|Pragma)\\b/i,\n  'keyword': /\\b(?:AddHandler|App|Array|As(?:signs)?|By(?:Ref|Val)|Break|Call|Case|Catch|Const|Continue|CurrentMethodName|Declare|Dim|Do(?:wnTo)?|Each|Else(?:If)?|End|Exit|Extends|False|Finally|For|Global|If|In|Lib|Loop|Me|Next|Nil|Optional|ParamArray|Raise(?:Event)?|ReDim|Rem|RemoveHandler|Return|Select|Self|Soft|Static|Step|Super|Then|To|True|Try|Ubound|Until|Using|Wend|While)\\b/i,\n  'operator': /<[=>]?|>=?|[+\\-*\\/\\\\^=]|\\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|Xor|WeakAddressOf)\\b/i,\n  'punctuation': /[.,;:()]/\n};","Prism.languages.xojo = {\n  comment: {\n    pattern: /(?:'|\\/\\/|Rem\\b).+/i,\n    inside: {\n      keyword: /^Rem/i\n    }\n  },\n  string: {\n    pattern: /\"(?:\"\"|[^\"])*\"/,\n    greedy: !0\n  },\n  number: [/(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i, /&[bchou][a-z\\d]+/i],\n  symbol: /#(?:If|Else|ElseIf|Endif|Pragma)\\b/i,\n  keyword: /\\b(?:AddHandler|App|Array|As(?:signs)?|By(?:Ref|Val)|Break|Call|Case|Catch|Const|Continue|CurrentMethodName|Declare|Dim|Do(?:wnTo)?|Each|Else(?:If)?|End|Exit|Extends|False|Finally|For|Global|If|In|Lib|Loop|Me|Next|Nil|Optional|ParamArray|Raise(?:Event)?|ReDim|Rem|RemoveHandler|Return|Select|Self|Soft|Static|Step|Super|Then|To|True|Try|Ubound|Until|Using|Wend|While)\\b/i,\n  operator: /<[=>]?|>=?|[+\\-*\\/\\\\^=]|\\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|Xor|WeakAddressOf)\\b/i,\n  punctuation: /[.,;:()]/\n};","(function (Prism) {\n  Prism.languages.xquery = Prism.languages.extend('markup', {\n    'xquery-comment': {\n      pattern: /\\(:[\\s\\S]*?:\\)/,\n      greedy: true,\n      alias: \"comment\"\n    },\n    'string': {\n      pattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n      greedy: true\n    },\n    'extension': {\n      pattern: /\\(#.+?#\\)/,\n      alias: 'symbol'\n    },\n    'variable': /\\$[\\w-:]+/,\n    'axis': {\n      pattern: /(^|[^-])(?:ancestor(?:-or-self)?|attribute|child|descendant(?:-or-self)?|following(?:-sibling)?|parent|preceding(?:-sibling)?|self)(?=::)/,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    'keyword-operator': {\n      pattern: /(^|[^:-])\\b(?:and|castable as|div|eq|except|ge|gt|idiv|instance of|intersect|is|le|lt|mod|ne|or|union)\\b(?=$|[^:-])/,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    'keyword': {\n      pattern: /(^|[^:-])\\b(?:as|ascending|at|base-uri|boundary-space|case|cast as|collation|construction|copy-namespaces|declare|default|descending|else|empty (?:greatest|least)|encoding|every|external|for|function|if|import|in|inherit|lax|let|map|module|namespace|no-inherit|no-preserve|option|order(?: by|ed|ing)?|preserve|return|satisfies|schema|some|stable|strict|strip|then|to|treat as|typeswitch|unordered|validate|variable|version|where|xquery)\\b(?=$|[^:-])/,\n      lookbehind: true\n    },\n    'function': /[\\w-]+(?::[\\w-]+)*(?=\\s*\\()/,\n    'xquery-element': {\n      pattern: /(element\\s+)[\\w-]+(?::[\\w-]+)*/,\n      lookbehind: true,\n      alias: 'tag'\n    },\n    'xquery-attribute': {\n      pattern: /(attribute\\s+)[\\w-]+(?::[\\w-]+)*/,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    'builtin': {\n      pattern: /(^|[^:-])\\b(?:attribute|comment|document|element|processing-instruction|text|xs:(?:anyAtomicType|anyType|anyURI|base64Binary|boolean|byte|date|dateTime|dayTimeDuration|decimal|double|duration|ENTITIES|ENTITY|float|gDay|gMonth|gMonthDay|gYear|gYearMonth|hexBinary|ID|IDREFS?|int|integer|language|long|Name|NCName|negativeInteger|NMTOKENS?|nonNegativeInteger|nonPositiveInteger|normalizedString|NOTATION|positiveInteger|QName|short|string|time|token|unsigned(?:Byte|Int|Long|Short)|untyped(?:Atomic)?|yearMonthDuration))\\b(?=$|[^:-])/,\n      lookbehind: true\n    },\n    'number': /\\b\\d+(?:\\.\\d+)?(?:E[+-]?\\d+)?/,\n    'operator': [/[+*=?|@]|\\.\\.?|:=|!=|<[=<]?|>[=>]?/, {\n      pattern: /(\\s)-(?=\\s)/,\n      lookbehind: true\n    }],\n    'punctuation': /[[\\](){},;:/]/\n  });\n  Prism.languages.xquery.tag.pattern = /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|{(?!{)(?:{(?:{[^}]*}|[^}])*}|[^}])+}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i;\n  Prism.languages.xquery['tag'].inside['attr-value'].pattern = /=(?:(\"|')(?:\\\\[\\s\\S]|{(?!{)(?:{(?:{[^}]*}|[^}])*}|[^}])+}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i;\n  Prism.languages.xquery['tag'].inside['attr-value'].inside['punctuation'] = /^=\"|\"$/;\n  Prism.languages.xquery['tag'].inside['attr-value'].inside['expression'] = {\n    // Allow for two levels of nesting\n    pattern: /{(?!{)(?:{(?:{[^}]*}|[^}])*}|[^}])+}/,\n    inside: {\n      rest: Prism.languages.xquery\n    },\n    'alias': 'language-xquery'\n  }; // The following will handle plain text inside tags\n\n  var stringifyToken = function stringifyToken(token) {\n    if (typeof token === 'string') {\n      return token;\n    }\n\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n\n    return token.content.map(stringifyToken).join('');\n  };\n\n  var walkTokens = function walkTokens(tokens) {\n    var openedTags = [];\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') {// Autoclosed tag, ignore\n            } else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{' && ( // Ignore `{{`\n        !tokens[i + 1] || tokens[i + 1].type !== 'punctuation' || tokens[i + 1].content !== '{') && (!tokens[i - 1] || tokens[i - 1].type !== 'plain-text' || tokens[i - 1].content !== '{')) {\n          // Here we might have entered an XQuery expression inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left an XQuery expression inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else if (token.type !== 'comment') {\n          notTagNorBrace = true;\n        }\n      }\n\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside an XQuery expression.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n\n          if (/^\\s+$/.test(plainText)) {\n            tokens[i] = plainText;\n          } else {\n            tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n          }\n        }\n      }\n\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'xquery') {\n      return;\n    }\n\n    walkTokens(env.tokens);\n  });\n})(Prism);","!function (r) {\n  r.languages.xquery = r.languages.extend(\"markup\", {\n    \"xquery-comment\": {\n      pattern: /\\(:[\\s\\S]*?:\\)/,\n      greedy: !0,\n      alias: \"comment\"\n    },\n    string: {\n      pattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n      greedy: !0\n    },\n    extension: {\n      pattern: /\\(#.+?#\\)/,\n      alias: \"symbol\"\n    },\n    variable: /\\$[\\w-:]+/,\n    axis: {\n      pattern: /(^|[^-])(?:ancestor(?:-or-self)?|attribute|child|descendant(?:-or-self)?|following(?:-sibling)?|parent|preceding(?:-sibling)?|self)(?=::)/,\n      lookbehind: !0,\n      alias: \"operator\"\n    },\n    \"keyword-operator\": {\n      pattern: /(^|[^:-])\\b(?:and|castable as|div|eq|except|ge|gt|idiv|instance of|intersect|is|le|lt|mod|ne|or|union)\\b(?=$|[^:-])/,\n      lookbehind: !0,\n      alias: \"operator\"\n    },\n    keyword: {\n      pattern: /(^|[^:-])\\b(?:as|ascending|at|base-uri|boundary-space|case|cast as|collation|construction|copy-namespaces|declare|default|descending|else|empty (?:greatest|least)|encoding|every|external|for|function|if|import|in|inherit|lax|let|map|module|namespace|no-inherit|no-preserve|option|order(?: by|ed|ing)?|preserve|return|satisfies|schema|some|stable|strict|strip|then|to|treat as|typeswitch|unordered|validate|variable|version|where|xquery)\\b(?=$|[^:-])/,\n      lookbehind: !0\n    },\n    function: /[\\w-]+(?::[\\w-]+)*(?=\\s*\\()/,\n    \"xquery-element\": {\n      pattern: /(element\\s+)[\\w-]+(?::[\\w-]+)*/,\n      lookbehind: !0,\n      alias: \"tag\"\n    },\n    \"xquery-attribute\": {\n      pattern: /(attribute\\s+)[\\w-]+(?::[\\w-]+)*/,\n      lookbehind: !0,\n      alias: \"attr-name\"\n    },\n    builtin: {\n      pattern: /(^|[^:-])\\b(?:attribute|comment|document|element|processing-instruction|text|xs:(?:anyAtomicType|anyType|anyURI|base64Binary|boolean|byte|date|dateTime|dayTimeDuration|decimal|double|duration|ENTITIES|ENTITY|float|gDay|gMonth|gMonthDay|gYear|gYearMonth|hexBinary|ID|IDREFS?|int|integer|language|long|Name|NCName|negativeInteger|NMTOKENS?|nonNegativeInteger|nonPositiveInteger|normalizedString|NOTATION|positiveInteger|QName|short|string|time|token|unsigned(?:Byte|Int|Long|Short)|untyped(?:Atomic)?|yearMonthDuration))\\b(?=$|[^:-])/,\n      lookbehind: !0\n    },\n    number: /\\b\\d+(?:\\.\\d+)?(?:E[+-]?\\d+)?/,\n    operator: [/[+*=?|@]|\\.\\.?|:=|!=|<[=<]?|>[=>]?/, {\n      pattern: /(\\s)-(?=\\s)/,\n      lookbehind: !0\n    }],\n    punctuation: /[[\\](){},;:/]/\n  }), r.languages.xquery.tag.pattern = /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|{(?!{)(?:{(?:{[^}]*}|[^}])*}|[^}])+}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i, r.languages.xquery.tag.inside[\"attr-value\"].pattern = /=(?:(\"|')(?:\\\\[\\s\\S]|{(?!{)(?:{(?:{[^}]*}|[^}])*}|[^}])+}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i, r.languages.xquery.tag.inside[\"attr-value\"].inside.punctuation = /^=\"|\"$/, r.languages.xquery.tag.inside[\"attr-value\"].inside.expression = {\n    pattern: /{(?!{)(?:{(?:{[^}]*}|[^}])*}|[^}])+}/,\n    inside: {\n      rest: r.languages.xquery\n    },\n    alias: \"language-xquery\"\n  };\n\n  var s = function s(e) {\n    return \"string\" == typeof e ? e : \"string\" == typeof e.content ? e.content : e.content.map(s).join(\"\");\n  },\n      l = function l(e) {\n    for (var t = [], n = 0; n < e.length; n++) {\n      var a = e[n],\n          o = !1;\n\n      if (\"string\" != typeof a && (\"tag\" === a.type && a.content[0] && \"tag\" === a.content[0].type ? \"</\" === a.content[0].content[0].content ? 0 < t.length && t[t.length - 1].tagName === s(a.content[0].content[1]) && t.pop() : \"/>\" === a.content[a.content.length - 1].content || t.push({\n        tagName: s(a.content[0].content[1]),\n        openedBraces: 0\n      }) : !(0 < t.length && \"punctuation\" === a.type && \"{\" === a.content) || e[n + 1] && \"punctuation\" === e[n + 1].type && \"{\" === e[n + 1].content || e[n - 1] && \"plain-text\" === e[n - 1].type && \"{\" === e[n - 1].content ? 0 < t.length && 0 < t[t.length - 1].openedBraces && \"punctuation\" === a.type && \"}\" === a.content ? t[t.length - 1].openedBraces-- : \"comment\" !== a.type && (o = !0) : t[t.length - 1].openedBraces++), (o || \"string\" == typeof a) && 0 < t.length && 0 === t[t.length - 1].openedBraces) {\n        var i = s(a);\n        n < e.length - 1 && (\"string\" == typeof e[n + 1] || \"plain-text\" === e[n + 1].type) && (i += s(e[n + 1]), e.splice(n + 1, 1)), 0 < n && (\"string\" == typeof e[n - 1] || \"plain-text\" === e[n - 1].type) && (i = s(e[n - 1]) + i, e.splice(n - 1, 1), n--), /^\\s+$/.test(i) ? e[n] = i : e[n] = new r.Token(\"plain-text\", i, null, i);\n      }\n\n      a.content && \"string\" != typeof a.content && l(a.content);\n    }\n  };\n\n  r.hooks.add(\"after-tokenize\", function (e) {\n    \"xquery\" === e.language && l(e.tokens);\n  });\n}(Prism);","Prism.languages.yaml = {\n  'scalar': {\n    pattern: /([\\-:]\\s*(?:![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/,\n    lookbehind: true,\n    alias: 'string'\n  },\n  'comment': /#.*/,\n  'key': {\n    pattern: /(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,\n    lookbehind: true,\n    alias: 'atrule'\n  },\n  'directive': {\n    pattern: /(^[ \\t]*)%.+/m,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'datetime': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?)(?=[ \\t]*(?:$|,|]|}))/m,\n    lookbehind: true,\n    alias: 'number'\n  },\n  'boolean': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:true|false)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'null': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:null|~)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'string': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2(?=[ \\t]*(?:$|,|]|}|\\s*#))/m,\n    lookbehind: true,\n    greedy: true\n  },\n  'number': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true\n  },\n  'tag': /![^\\s]+/,\n  'important': /[&*][\\w]+/,\n  'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n};\nPrism.languages.yml = Prism.languages.yaml;","Prism.languages.yaml = {\n  scalar: {\n    pattern: /([\\-:]\\s*(?:![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/,\n    lookbehind: !0,\n    alias: \"string\"\n  },\n  comment: /#.*/,\n  key: {\n    pattern: /(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,\n    lookbehind: !0,\n    alias: \"atrule\"\n  },\n  directive: {\n    pattern: /(^[ \\t]*)%.+/m,\n    lookbehind: !0,\n    alias: \"important\"\n  },\n  datetime: {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?)(?=[ \\t]*(?:$|,|]|}))/m,\n    lookbehind: !0,\n    alias: \"number\"\n  },\n  boolean: {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:true|false)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: !0,\n    alias: \"important\"\n  },\n  null: {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:null|~)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: !0,\n    alias: \"important\"\n  },\n  string: {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2(?=[ \\t]*(?:$|,|]|}|\\s*#))/m,\n    lookbehind: !0,\n    greedy: !0\n  },\n  number: {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: !0\n  },\n  tag: /![^\\s]+/,\n  important: /[&*][\\w]+/,\n  punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n}, Prism.languages.yml = Prism.languages.yaml;","\"use strict\";\n\nrequire(\"core-js/modules/es6.string.starts-with\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _unistBuilder = _interopRequireDefault(require(\"unist-builder\"));\n\nvar _mime = _interopRequireDefault(require(\"mime\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _default = function _default(h, node) {\n  var uri = node.uri,\n      desc = node.desc;\n  var props = {\n    href: uri.raw\n  };\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title;\n  }\n\n  var type = _mime.default.getType(uri.raw);\n\n  if (type && type.startsWith(\"image\")) {\n    props = {\n      src: uri.raw,\n      alt: desc\n    };\n    return h(node, \"img\", props);\n  }\n\n  return h(node, \"a\", props, [(0, _unistBuilder.default)(\"text\", desc)]);\n};\n\nexports.default = _default;","'use strict';\n\nvar Mime = require('./Mime');\n\nmodule.exports = new Mime(require('./types/standard'), require('./types/other'));","'use strict';\n/**\n * @param typeMap [Object] Map of MIME type -> Array[extensions]\n * @param ...\n */\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nfunction Mime() {\n  this._types = Object.create(null);\n  this._extensions = Object.create(null);\n\n  for (var i = 0; i < arguments.length; i++) {\n    this.define(arguments[i]);\n  }\n\n  this.define = this.define.bind(this);\n  this.getType = this.getType.bind(this);\n  this.getExtension = this.getExtension.bind(this);\n}\n/**\n * Define mimetype -> extension mappings.  Each key is a mime-type that maps\n * to an array of extensions associated with the type.  The first extension is\n * used as the default extension for the type.\n *\n * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});\n *\n * If a type declares an extension that has already been defined, an error will\n * be thrown.  To suppress this error and force the extension to be associated\n * with the new type, pass `force`=true.  Alternatively, you may prefix the\n * extension with \"*\" to map the type to extension, without mapping the\n * extension to the type.\n *\n * e.g. mime.define({'audio/wav', ['wav']}, {'audio/x-wav', ['*wav']});\n *\n *\n * @param map (Object) type definitions\n * @param force (Boolean) if true, force overriding of existing definitions\n */\n\n\nMime.prototype.define = function (typeMap, force) {\n  for (var type in typeMap) {\n    var extensions = typeMap[type].map(function (t) {\n      return t.toLowerCase();\n    });\n    type = type.toLowerCase();\n\n    for (var i = 0; i < extensions.length; i++) {\n      var ext = extensions[i]; // '*' prefix = not the preferred type for this extension.  So fixup the\n      // extension, and skip it.\n\n      if (ext[0] == '*') {\n        continue;\n      }\n\n      if (!force && ext in this._types) {\n        throw new Error('Attempt to change mapping for \"' + ext + '\" extension from \"' + this._types[ext] + '\" to \"' + type + '\". Pass `force=true` to allow this, otherwise remove \"' + ext + '\" from the list of extensions for \"' + type + '\".');\n      }\n\n      this._types[ext] = type;\n    } // Use first extension as default\n\n\n    if (force || !this._extensions[type]) {\n      var ext = extensions[0];\n      this._extensions[type] = ext[0] != '*' ? ext : ext.substr(1);\n    }\n  }\n};\n/**\n * Lookup a mime type based on extension\n */\n\n\nMime.prototype.getType = function (path) {\n  path = String(path);\n  var last = path.replace(/^.*[/\\\\]/, '').toLowerCase();\n  var ext = last.replace(/^.*\\./, '').toLowerCase();\n  var hasPath = last.length < path.length;\n  var hasDot = ext.length < last.length - 1;\n  return (hasDot || !hasPath) && this._types[ext] || null;\n};\n/**\n * Return file extension associated with a mime type\n */\n\n\nMime.prototype.getExtension = function (type) {\n  type = /^\\s*([^;\\s]*)/.test(type) && RegExp.$1;\n  return type && this._extensions[type.toLowerCase()] || null;\n};\n\nmodule.exports = Mime;","\"use strict\";\n\nrequire(\"core-js/modules/es6.string.bold\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bold = bold;\nexports.italic = italic;\nexports.code = code;\nexports.underline = underline;\nexports.verbatim = verbatim;\nexports.strikeThrough = strikeThrough;\n\nvar _transform = require(\"../transform\");\n\nfunction bold(h, node) {\n  return h(node, 'strong', (0, _transform.all)(h, node));\n}\n\nfunction italic(h, node) {\n  return h(node, 'i', (0, _transform.all)(h, node));\n}\n\nfunction code(h, node) {\n  return h(node, 'code', (0, _transform.all)(h, node));\n}\n\nfunction underline(h, node) {\n  return h(node, 'u', (0, _transform.all)(h, node));\n}\n\nfunction verbatim(h, node) {\n  return h(node, 'code', (0, _transform.all)(h, node));\n}\n\nfunction strikeThrough(h, node) {\n  return h(node, 'del', (0, _transform.all)(h, node));\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _transform = require(\"../transform\");\n/* Transform a list. */\n\n\nvar _default = function _default(h, node) {\n  var props = {};\n  var name = node.ordered ? 'ol' : 'ul';\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start;\n  }\n\n  return h(node, name, props, (0, _transform.all)(h, node));\n};\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _transform = require(\"../transform\");\n\nvar _default = function _default(h, node) {\n  var props = {};\n  var result = (0, _transform.all)(h, node);\n\n  if (typeof node.checked === \"boolean\") {\n    result.unshift(h(null, 'input', {\n      type: 'checkbox',\n      checked: node.checked,\n      disabled: true\n    }));\n  }\n\n  return h(node, 'li', props, result);\n};\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.table = table;\nexports.tableRow = tableRow;\nexports.tableCell = tableCell;\n\nvar _transform = require(\"../transform\");\n\nfunction table(h, node) {\n  return h(node, 'table', (0, _transform.all)(h, node));\n}\n\nfunction tableRow(h, node) {\n  return h(node, 'tr', (0, _transform.all)(h, node));\n}\n\nfunction tableCell(h, node) {\n  return h(node, 'td', (0, _transform.all)(h, node));\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _default = function _default(h, node) {\n  return h(node, 'hr');\n};\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _unistBuilder = _interopRequireDefault(require(\"unist-builder\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _default = function _default(h, node) {\n  return (0, _unistBuilder.default)('raw', node.value);\n};\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _transform = require(\"../transform\");\n\nvar _default = function _default(h, node) {\n  return h(node, 'p', (0, _transform.all)(h, node));\n};\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.definition = definition;\nexports.reference = reference;\n\nvar _unistBuilder = _interopRequireDefault(require(\"unist-builder\"));\n\nvar _transform = require(\"../transform\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction definition(h, node) {\n  var label = node.label;\n  var props = {\n    id: \"fn-\".concat(label),\n    className: \"footnote\",\n    dataLabel: label\n  };\n  return h(node, \"div\", props, (0, _transform.all)(h, node));\n}\n\nfunction reference(h, node) {\n  var label = node.label;\n  return h(node, \"sup\", {\n    id: \"fnref-\".concat(label)\n  }, [h(node, \"a\", {\n    href: \"#fn-\".concat(label)\n  }, [(0, _unistBuilder.default)(\"text\", label)])]);\n}","'use strict';\n\nmodule.exports = require('./lib');","'use strict';\n\nvar html = require('property-information/html');\n\nvar svg = require('property-information/svg');\n\nvar voids = require('html-void-elements');\n\nvar omission = require('./omission');\n\nvar one = require('./one');\n\nmodule.exports = toHtml;\nvar quotationMark = '\"';\nvar apostrophe = \"'\"; // Stringify the given hast node.\n\nfunction toHtml(node, options) {\n  var settings = options || {};\n  var quote = settings.quote || quotationMark;\n  var alternative = quote === quotationMark ? apostrophe : quotationMark;\n  var smart = settings.quoteSmart;\n\n  if (quote !== quotationMark && quote !== apostrophe) {\n    throw new Error('Invalid quote `' + quote + '`, expected `' + apostrophe + '` or `' + quotationMark + '`');\n  }\n\n  return one({\n    valid: settings.allowParseErrors ? 0 : 1,\n    safe: settings.allowDangerousCharacters ? 0 : 1,\n    schema: settings.space === 'svg' ? svg : html,\n    omit: settings.omitOptionalTags && omission,\n    quote: quote,\n    alternative: smart ? alternative : null,\n    unquoted: Boolean(settings.preferUnquoted),\n    tight: settings.tightAttributes,\n    tightDoctype: Boolean(settings.tightDoctype),\n    tightLists: settings.tightCommaSeparatedLists,\n    tightClose: settings.tightSelfClosing,\n    collapseEmpty: settings.collapseEmptyAttributes,\n    dangerous: settings.allowDangerousHTML,\n    voids: settings.voids || voids.concat(),\n    entities: settings.entities || {},\n    close: settings.closeSelfClosing,\n    closeEmpty: settings.closeEmptyElements\n  }, node);\n}","'use strict';\n\nexports.opening = require('./opening');\nexports.closing = require('./closing');","'use strict';\n\nvar convert = require('unist-util-is/convert');\n\nvar element = require('hast-util-is-element');\n\nvar before = require('./util/siblings').before;\n\nvar first = require('./util/first');\n\nvar place = require('./util/place');\n\nvar whiteSpaceLeft = require('./util/white-space-left');\n\nvar closing = require('./closing');\n\nvar omission = require('./omission');\n\nvar own = {}.hasOwnProperty;\nvar isComment = convert('comment');\nvar uniqueHeadMetadata = ['title', 'base'];\nvar meta = ['meta', 'link', 'script', 'style', 'template'];\nvar tableContainers = ['thead', 'tbody'];\nvar tableRow = 'tr';\nmodule.exports = omission({\n  html: html,\n  head: head,\n  body: body,\n  colgroup: colgroup,\n  tbody: tbody\n}); // Whether to omit `<html>`.\n\nfunction html(node) {\n  var head = first(node);\n  return !head || !isComment(head);\n} // Whether to omit `<head>`.\n\n\nfunction head(node) {\n  var children = node.children;\n  var length = children.length;\n  var map = {};\n  var index = -1;\n  var child;\n  var name;\n\n  while (++index < length) {\n    child = children[index];\n    name = child.tagName;\n\n    if (element(child, uniqueHeadMetadata)) {\n      if (own.call(map, name)) {\n        return false;\n      }\n\n      map[name] = true;\n    }\n  }\n\n  return Boolean(length);\n} // Whether to omit `<body>`.\n\n\nfunction body(node) {\n  var head = first(node, true);\n  return !head || !isComment(head) && !whiteSpaceLeft(head) && !element(head, meta);\n} // Whether to omit `<colgroup>`.\n// The spec describes some logic for the opening tag, but it’s easier to\n// implement in the closing tag, to the same effect, so we handle it there\n// instead.\n\n\nfunction colgroup(node, index, parent) {\n  var prev = before(parent, index);\n  var head = first(node, true); // Previous colgroup was already omitted.\n\n  if (element(prev, 'colgroup') && closing(prev, place(parent, prev), parent)) {\n    return false;\n  }\n\n  return head && element(head, 'col');\n} // Whether to omit `<tbody>`.\n\n\nfunction tbody(node, index, parent) {\n  var prev = before(parent, index);\n  var head = first(node); // Previous table section was already omitted.\n\n  if (element(prev, tableContainers) && closing(prev, place(parent, prev), parent)) {\n    return false;\n  }\n\n  return head && element(head, tableRow);\n}","'use strict';\n\nvar after = require('./siblings').after;\n\nmodule.exports = first; // Get the first child in `parent`.\n\nfunction first(parent, includeWhiteSpace) {\n  return after(parent, -1, includeWhiteSpace);\n}","'use strict';\n\nmodule.exports = place; // Get the position of `node` in `parent`.\n\nfunction place(parent, child) {\n  return parent && parent.children && parent.children.indexOf(child);\n}","'use strict';\n\nmodule.exports = decimal; // Check if the given character code, or the character code at the first\n// character, is decimal.\n\nfunction decimal(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character;\n  return code >= 48 && code <= 57;\n  /* 0-9 */\n}","'use strict';\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar xtend = require('xtend');\n\nvar svg = require('property-information/svg');\n\nvar find = require('property-information/find');\n\nvar spaces = require('space-separated-tokens').stringify;\n\nvar commas = require('comma-separated-tokens').stringify;\n\nvar entities = require('stringify-entities');\n\nvar ccount = require('ccount');\n\nvar all = require('./all');\n\nvar constants = require('./constants');\n\nmodule.exports = element;\nvar space = ' ';\nvar quotationMark = '\"';\nvar apostrophe = \"'\";\nvar equalsTo = '=';\nvar lessThan = '<';\nvar greaterThan = '>';\nvar slash = '/'; // Stringify an element `node`.\n\nfunction element(ctx, node, index, parent) {\n  var parentSchema = ctx.schema;\n  var name = node.tagName;\n  var value = '';\n  var selfClosing;\n  var close;\n  var omit;\n  var root = node;\n  var content;\n  var attrs;\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    ctx.schema = svg;\n  }\n\n  attrs = attributes(ctx, node.properties);\n\n  if (ctx.schema.space === 'svg') {\n    omit = false;\n    close = true;\n    selfClosing = ctx.closeEmpty;\n  } else {\n    omit = ctx.omit;\n    close = ctx.close;\n    selfClosing = ctx.voids.indexOf(name.toLowerCase()) !== -1;\n\n    if (name === 'template') {\n      root = node.content;\n    }\n  }\n\n  content = all(ctx, root); // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n\n  selfClosing = content ? false : selfClosing;\n\n  if (attrs || !omit || !omit.opening(node, index, parent)) {\n    value = lessThan + name + (attrs ? space + attrs : '');\n\n    if (selfClosing && close) {\n      if (!ctx.tightClose || attrs.charAt(attrs.length - 1) === slash) {\n        value += space;\n      }\n\n      value += slash;\n    }\n\n    value += greaterThan;\n  }\n\n  value += content;\n\n  if (!selfClosing && (!omit || !omit.closing(node, index, parent))) {\n    value += lessThan + slash + name + greaterThan;\n  }\n\n  ctx.schema = parentSchema;\n  return value;\n} // Stringify all attributes.\n\n\nfunction attributes(ctx, props) {\n  var values = [];\n  var key;\n  var value;\n  var result;\n  var length;\n  var index;\n  var last;\n\n  for (key in props) {\n    value = props[key];\n\n    if (value == null) {\n      continue;\n    }\n\n    result = attribute(ctx, key, value);\n\n    if (result) {\n      values.push(result);\n    }\n  }\n\n  length = values.length;\n  index = -1;\n\n  while (++index < length) {\n    result = values[index];\n    last = null;\n\n    if (ctx.tight) {\n      last = result.charAt(result.length - 1);\n    } // In tight mode, don’t add a space after quoted attributes.\n\n\n    if (index !== length - 1 && last !== quotationMark && last !== apostrophe) {\n      values[index] = result + space;\n    }\n  }\n\n  return values.join('');\n} // Stringify one attribute.\n\n\nfunction attribute(ctx, key, value) {\n  var schema = ctx.schema;\n  var info = find(schema, key);\n  var name = info.attribute;\n\n  if (info.overloadedBoolean && (value === name || value === '')) {\n    value = true;\n  } else if (info.boolean || info.overloadedBoolean && typeof value !== 'string') {\n    value = Boolean(value);\n  }\n\n  if (value == null || value === false || typeof value === 'number' && isNaN(value)) {\n    return '';\n  }\n\n  name = attributeName(ctx, name);\n\n  if (value === true) {\n    // There is currently only one boolean property in SVG: `[download]` on\n    // `<a>`.\n    // This property does not seem to work in browsers (FF, Sa, Ch), so I can’t\n    // test if dropping the value works.\n    // But I assume that it should:\n    //\n    // ```html\n    // <!doctype html>\n    // <svg viewBox=\"0 0 100 100\">\n    //   <a href=https://example.com download>\n    //     <circle cx=50 cy=40 r=35 />\n    //   </a>\n    // </svg>\n    // ```\n    //\n    // See: <https://github.com/wooorm/property-information/blob/master/lib/svg.js>\n    return name;\n  }\n\n  return name + attributeValue(ctx, key, value, info);\n} // Stringify the attribute name.\n\n\nfunction attributeName(ctx, name) {\n  // Always encode without parse errors in non-HTML.\n  var valid = ctx.schema.space === 'html' ? ctx.valid : 1;\n  var subset = constants.name[valid][ctx.safe];\n  return entities(name, xtend(ctx.entities, {\n    subset: subset\n  }));\n} // Stringify the attribute value.\n\n\nfunction attributeValue(ctx, key, value, info) {\n  var options = ctx.entities;\n  var quote = ctx.quote;\n  var alternative = ctx.alternative;\n  var unquoted;\n  var subset;\n\n  if (typeof value === 'object' && 'length' in value) {\n    // `spaces` doesn’t accept a second argument, but it’s given here just to\n    // keep the code cleaner.\n    value = (info.commaSeparated ? commas : spaces)(value, {\n      padLeft: !ctx.tightLists\n    });\n  }\n\n  value = String(value);\n\n  if (value || !ctx.collapseEmpty) {\n    unquoted = value; // Check unquoted value.\n\n    if (ctx.unquoted) {\n      subset = constants.unquoted[ctx.valid][ctx.safe];\n      unquoted = entities(value, xtend(options, {\n        subset: subset,\n        attribute: true\n      }));\n    } // If `value` contains entities when unquoted…\n\n\n    if (!ctx.unquoted || unquoted !== value) {\n      // If the alternative is less common than `quote`, switch.\n      if (alternative && ccount(value, quote) > ccount(value, alternative)) {\n        quote = alternative;\n      }\n\n      subset = quote === apostrophe ? constants.single : constants.double; // Always encode without parse errors in non-HTML.\n\n      subset = subset[ctx.schema.space === 'html' ? ctx.valid : 1][ctx.safe];\n      value = entities(value, xtend(options, {\n        subset: subset,\n        attribute: true\n      }));\n      value = quote + value + quote;\n    } // Don’t add a `=` for unquoted empties.\n\n\n    value = value ? equalsTo + value : value;\n  }\n\n  return value;\n}","'use strict';\n\nexports.parse = parse;\nexports.stringify = stringify;\n\nvar trim = require('trim');\n\nvar comma = ',';\nvar space = ' ';\nvar empty = '';\n/* Parse comma-separated tokens to an array. */\n\nfunction parse(value) {\n  var values = [];\n  var input = String(value || empty);\n  var index = input.indexOf(comma);\n  var lastIndex = 0;\n  var end = false;\n  var val;\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length;\n      end = true;\n    }\n\n    val = trim(input.slice(lastIndex, index));\n\n    if (val || !end) {\n      values.push(val);\n    }\n\n    lastIndex = index + 1;\n    index = input.indexOf(comma, lastIndex);\n  }\n\n  return values;\n}\n/* Compile an array to comma-separated tokens.\n * `options.padLeft` (default: `true`) pads a space left of each\n * token, and `options.padRight` (default: `false`) pads a space\n * to the right of each token. */\n\n\nfunction stringify(values, options) {\n  var settings = options || {};\n  var left = settings.padLeft === false ? empty : space;\n  var right = settings.padRight ? space : empty;\n  /* Ensure the last empty entry is seen. */\n\n  if (values[values.length - 1] === empty) {\n    values = values.concat(empty);\n  }\n\n  return trim(values.join(right + comma + left));\n}","'use strict'; // Characters.\n\nvar nil = '\\0';\nvar ampersand = '&';\nvar space = ' ';\nvar tab = '\\t';\nvar graveAccent = '`';\nvar quotationMark = '\"';\nvar apostrophe = \"'\";\nvar equalsTo = '=';\nvar lessThan = '<';\nvar greaterThan = '>';\nvar slash = '/';\nvar lineFeed = '\\n';\nvar carriageReturn = '\\r';\nvar formFeed = '\\f';\nvar whitespace = [space, tab, lineFeed, carriageReturn, formFeed]; // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n\nvar name = whitespace.concat(ampersand, slash, greaterThan, equalsTo); // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n\nvar unquoted = whitespace.concat(ampersand, greaterThan);\nvar unquotedSafe = unquoted.concat(nil, quotationMark, apostrophe, lessThan, equalsTo, graveAccent); // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n\nvar singleQuoted = [ampersand, apostrophe]; // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n\nvar doubleQuoted = [ampersand, quotationMark]; // Maps of subsets.\n// Each value is a matrix of tuples.\n// The first value causes parse errors, the second is valid.\n// Of both values, the first value is unsafe, and the second is safe.\n\nmodule.exports = {\n  name: [[name, name.concat(quotationMark, apostrophe, graveAccent)], [name.concat(nil, quotationMark, apostrophe, lessThan), name.concat(nil, quotationMark, apostrophe, lessThan, graveAccent)]],\n  unquoted: [[unquoted, unquotedSafe], [unquotedSafe, unquotedSafe]],\n  single: [[singleQuoted, singleQuoted.concat(quotationMark, graveAccent)], [singleQuoted.concat(nil), singleQuoted.concat(nil, quotationMark, graveAccent)]],\n  double: [[doubleQuoted, doubleQuoted.concat(apostrophe, graveAccent)], [doubleQuoted.concat(nil), doubleQuoted.concat(nil, apostrophe, graveAccent)]]\n};","'use strict';\n\nrequire(\"core-js/modules/es6.function.name\");\n\nmodule.exports = doctype; // Stringify a doctype `node`.\n\nfunction doctype(ctx, node) {\n  var sep = ctx.tightDoctype ? '' : ' ';\n  var name = node.name;\n  var pub = node.public;\n  var sys = node.system;\n  var val = ['<!doctype'];\n\n  if (name) {\n    val.push(sep, name);\n\n    if (pub != null) {\n      val.push(' public', sep, smart(pub));\n    } else if (sys != null) {\n      val.push(' system');\n    }\n\n    if (sys != null) {\n      val.push(sep, smart(sys));\n    }\n  }\n\n  return val.join('') + '>';\n}\n\nfunction smart(value) {\n  var quote = value.indexOf('\"') === -1 ? '\"' : \"'\";\n  return quote + value + quote;\n}","'use strict';\n\nmodule.exports = comment; // Stringify a comment `node`.\n\nfunction comment(ctx, node) {\n  return '<!--' + node.value + '-->';\n}","'use strict';\n\nvar text = require('./text');\n\nmodule.exports = raw; // Stringify `raw`.\n\nfunction raw(ctx, node) {\n  return ctx.dangerous ? node.value : text(ctx, node);\n}","var Parser = require('./parser');\n\nfunction parse(string, options) {\n  if (options === void 0) {\n    options = require('./defaults');\n  }\n\n  var parser = new Parser(options);\n  return parser.parse(string);\n}\n\nmodule.exports = {\n  Parser: Parser,\n  parse: parse\n};","require(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nvar Lexer = require('./lexer');\n\nvar Node = require('./node');\n\nfunction Parser(options) {\n  if (options === void 0) {\n    options = require('./defaults');\n  }\n\n  this.options = options;\n  this.lexer = new Lexer(this.options);\n  this.prefix = [];\n  this._aks = {}; // Affiliated Keywords\n\n  this._cel = 0; // Consecutive Empty Lines\n}\n\nParser.prototype.peek = function () {\n  if (this.prefix.length > 0) return this.prefix[0];\n  return this.getToken(this.cursor + 1);\n};\n\nParser.prototype.hasNext = function () {\n  return this.prefix.length > 0 || this.cursor + 1 < this.lines.length;\n};\n\nParser.prototype.consume = function () {\n  if (this.prefix.length > 0) return this.prefix.shift();\n  this.cursor++;\n  return this.getToken(this.cursor);\n};\n\nParser.prototype.next = function () {\n  return this.consume();\n};\n\nParser.prototype.getToken = function (index) {\n  var self = this;\n\n  if (index >= self.lines.length) {\n    return undefined;\n  }\n\n  if (index >= self.tokens.length) {\n    var start = self.tokens.length;\n\n    for (var i = start; i <= index; i++) {\n      self.tokens.push(self.lexer.tokenize(self.lines[i]));\n    }\n  }\n\n  return self.tokens[index];\n};\n\nParser.prototype.downgradeToLine = function (index) {\n  var raw = this.tokens[index].raw;\n  this.tokens[index] = {\n    name: \"line\",\n    raw: raw,\n    data: {\n      content: raw.trim()\n    }\n  };\n};\n\nParser.prototype.tryTo = function (process) {\n  var restorePoint = this.cursor;\n  var result = process.bind(this)();\n\n  if (result) {\n    return result;\n  }\n\n  this.cursor = restorePoint;\n  return result;\n};\n\nParser.prototype.processor = require('./processors');\n\nParser.prototype.parse = function (string) {\n  var self = this;\n  var document = new Node('root').with({\n    meta: {}\n  });\n  self.cursor = -1;\n  self.lines = string.split('\\n'); // TODO: more robust lines?\n\n  self.tokens = [];\n  return this.parseSection(document);\n};\n/* Total Awareness -- according to Ross */\n\n\nParser.prototype.unagi = function (element) {\n  if (Object.keys(this._aks).length === 0) return element;\n  element.attributes = this._aks;\n  return element;\n};\n\nParser.prototype.parseSection = function (section) {\n  var token = this.peek();\n  if (!token) return section;\n  if (token.name !== \"blank\") this._cel = 0; // reset consecutive empty lines\n\n  var p = this.processor[token.name];\n\n  if (p) {\n    return p.bind(this)(token, section);\n  }\n\n  this.consume();\n  this._aks = {};\n  return this.parseSection(section);\n};\n\nmodule.exports = Parser;","require(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.find-index\");\n\nvar _require = require('./utils'),\n    escape = _require.escape;\n\nfunction Syntax() {\n  this.rules = [];\n}\n\nSyntax.prototype = {\n  define: function define(name, pattern, post) {\n    if (post === void 0) {\n      post = function post() {\n        return {};\n      };\n    }\n\n    this.rules.push({\n      name: name,\n      pattern: pattern,\n      post: post\n    });\n  },\n  update: function update(name, pattern) {\n    var i = this.rules.findIndex(function (r) {\n      return r.name === name;\n    });\n    var newRule = {\n      name: name,\n      post: function post() {}\n    };\n\n    if (i !== -1) {\n      newRule = this.rules.splice(i, 1)[0];\n    }\n\n    newRule.pattern = pattern;\n    this.rules.splice(i, 0, newRule);\n  }\n};\nvar org = new Syntax();\n\nfunction headlinePattern(todos) {\n  if (todos === void 0) {\n    todos = ['TODO', 'DONE'];\n  }\n\n  return RegExp(\"^(\\\\*+)\\\\s+(?:(\" + todos.map(escape).join('|') + \")\\\\s+)?(?:\\\\[#(A|B|C)\\\\]\\\\s+)?(.*?)\\\\s*(:(?:\\\\w+:)+)?$\");\n}\n\norg.define('headline', headlinePattern(), function (m) {\n  var level = m[1].length;\n  var keyword = m[2];\n  var priority = m[3];\n  var content = m[4];\n  var tags = (m[5] || '').split(':').map(function (str) {\n    return str.trim();\n  }).filter(String);\n  return {\n    level: level,\n    keyword: keyword,\n    priority: priority,\n    content: content,\n    tags: tags\n  };\n});\norg.define('keyword', /^\\s*#\\+(\\w+):\\s*(.*)$/, function (m) {\n  var key = m[1];\n  var value = m[2];\n  return {\n    key: key,\n    value: value\n  };\n});\nvar PLANNING_KEYWORDS = ['DEADLINE', 'SCHEDULED', 'CLOSED'];\norg.define('planning', RegExp(\"^\\\\s*(\" + PLANNING_KEYWORDS.join('|') + \"):\\\\s*(.+)$\"), function (m) {\n  var keyword = m[1];\n  var timestamp = m[2];\n  return {\n    keyword: keyword,\n    timestamp: timestamp\n  };\n});\norg.define('block.begin', /^\\s*#\\+begin_(\\w+)(.*)$/i, function (m) {\n  var type = m[1];\n  var params = m[2].split(' ').map(function (str) {\n    return str.trim();\n  }).filter(String);\n  return {\n    type: type,\n    params: params\n  };\n});\norg.define('block.end', /^\\s*#\\+end_(\\w+)$/i, function (m) {\n  var type = m[1];\n  return {\n    type: type\n  };\n});\norg.define('drawer.end', /^\\s*:end:\\s*$/i);\norg.define('drawer.begin', /^\\s*:(\\w+):\\s*$/, function (m) {\n  var type = m[1];\n  return {\n    type: type\n  };\n});\norg.define('list.item', /^(\\s*)([-+]|\\d+[.)])\\s+(?:\\[(x|X|-| )\\])?(.*)$/, function (m) {\n  var indent = m[1].length;\n  var bullet = m[2];\n  var content = m[4];\n  var ordered = true;\n\n  if ([\"-\", \"+\"].includes(bullet)) {\n    ordered = false;\n  }\n\n  var result = {\n    indent: indent,\n    ordered: ordered,\n    content: content\n  };\n\n  if (m[3]) {\n    var checked = m[3] !== ' ';\n    result.checked = checked;\n  }\n\n  return result;\n});\norg.define('table.separator', /^\\s*\\|-/);\norg.define('table.row', /^\\s*\\|(\\s*.+\\|)+\\s*$/, function (m) {\n  var cells = m[1].split('|').map(function (str) {\n    return str.trim();\n  }).filter(String);\n  return {\n    cells: cells\n  };\n});\norg.define('horizontalRule', /^\\s*-{5,}\\s*$/);\norg.define('comment', /^\\s*#\\s.*$/);\norg.define('footnote', /^\\[fn:(\\w+)\\]\\s+(.*)$/, function (m) {\n  var label = m[1];\n  var content = m[2];\n  return {\n    label: label,\n    content: content\n  };\n});\n\nfunction Lexer(options) {\n  if (options === void 0) {\n    options = require('./defaults');\n  }\n\n  this.syntax = org;\n  var _options = options,\n      todos = _options.todos;\n\n  if (todos) {\n    this.updateTODOs(todos);\n  }\n}\n\nLexer.prototype = {\n  tokenize: function tokenize(input) {\n    for (var _iterator = this.syntax.rules, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var _ref2 = _ref,\n          name = _ref2.name,\n          pattern = _ref2.pattern,\n          post = _ref2.post;\n      var m = pattern.exec(input);\n\n      if (!m) {\n        continue;\n      }\n\n      var token = {\n        name: name,\n        raw: input\n      };\n      token.data = post(m);\n      return token;\n    }\n\n    var trimed = input.trim();\n\n    if (trimed === '') {\n      return {\n        name: \"blank\",\n        raw: input\n      };\n    }\n\n    return {\n      name: \"line\",\n      raw: input\n    };\n  },\n  updateTODOs: function updateTODOs(todos) {\n    this.syntax.update(\"headline\", headlinePattern(todos));\n  }\n};\nmodule.exports = Lexer;","'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(6);\nvar KEY = 'findIndex';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","require(\"core-js/modules/es6.regexp.replace\");\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nfunction escape(str) {\n  if (typeof str !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  return str.replace(matchOperatorsRe, '\\\\$&');\n}\n\nmodule.exports = {\n  escape: escape\n};","var keyword = require('./keyword');\n\nvar headline = require('./headline');\n\nvar line = require('./line');\n\nvar block = require('./block');\n\nvar list = require('./list');\n\nvar table = require('./table');\n\nvar horizontalRule = require('./horizontal-rule');\n\nvar footnote = require('./footnote');\n\nvar blank = require('./blank');\n\nmodule.exports = {\n  keyword: keyword,\n  headline: headline,\n  line: line,\n  \"block.begin\": block,\n  \"list.item\": list,\n  \"table.row\": table,\n  horizontalRule: horizontalRule,\n  footnote: footnote,\n  blank: blank\n};","require(\"core-js/modules/es6.regexp.split\");\n\nvar Node = require('../node');\n\nfunction process(token, section) {\n  var _token$data = token.data,\n      key = _token$data.key,\n      value = _token$data.value;\n\n  switch (key) {\n    case \"TODO\":\n      if (section.type !== \"root\") break;\n      var todos = value.split(/\\s|\\|/g).filter(String);\n      section.meta.todos = todos;\n      this.lexer.updateTODOs(todos);\n      break;\n\n    case \"HTML\":\n      section.push(new Node(\"html\").with({\n        value: value\n      }));\n      break;\n\n    case \"CAPTION\":\n    case \"HEADER\":\n    case \"NAME\":\n    case \"PLOT\":\n    case \"RESULTS\":\n      this._aks[key] = value;\n      break;\n\n    default:\n      if (section.type === \"root\") {\n        var field = key.toLowerCase();\n\n        if (!section.meta[field]) {\n          section.meta[field] = value;\n        } else {\n          if (!Array.isArray(section.meta[field])) {\n            var list = [];\n            list.push(section.meta[field]);\n            section.meta[field] = list;\n          }\n\n          section.meta[field].push(value);\n        }\n      }\n\n      break;\n  }\n\n  this.consume();\n  return this.parseSection(section);\n}\n\nmodule.exports = process;","require(\"core-js/modules/es6.function.name\");\n\nvar Node = require('../node');\n\nvar inlineParse = require('../inline').parse;\n\nfunction parsePlanning() {\n  var token = this.next();\n\n  if (!token || token.name !== \"planning\") {\n    return undefined;\n  }\n\n  return new Node('planning').with(token.data);\n}\n\nfunction parseDrawer() {\n  var begin = this.next();\n  var lines = [];\n\n  while (this.hasNext()) {\n    var t = this.next();\n\n    if (t.name === \"headline\") {\n      return undefined;\n    }\n\n    if (t.name === \"drawer.end\") {\n      return new Node('drawer').with({\n        name: begin.data.type,\n        value: lines.join(\"\\n\")\n      });\n    }\n\n    lines.push(t.raw);\n  }\n\n  return undefined;\n}\n\nfunction process(token, section) {\n  if (section.type === \"footnote.definition\") return section; // headline breaks footnote\n\n  var _token$data = token.data,\n      level = _token$data.level,\n      keyword = _token$data.keyword,\n      priority = _token$data.priority,\n      tags = _token$data.tags,\n      content = _token$data.content;\n  var currentLevel = section.level || 0;\n\n  if (level <= currentLevel) {\n    return section;\n  }\n\n  this.consume();\n  var text = inlineParse(content);\n  var headline = new Node('headline', text).with({\n    level: level,\n    keyword: keyword,\n    priority: priority,\n    tags: tags\n  });\n  var planning = this.tryTo(parsePlanning);\n\n  if (planning) {\n    headline.push(planning);\n  }\n\n  while (this.hasNext() && this.peek().name === \"drawer.begin\") {\n    var drawer = this.tryTo(parseDrawer);\n\n    if (!drawer) {\n      // broken drawer\n      this.downgradeToLine(this.cursor + 1);\n      break;\n    }\n\n    headline.push(drawer);\n  }\n\n  var newSection = new Node(\"section\").with({\n    level: level\n  });\n  newSection.push(headline);\n  section.push(this.parseSection(this.unagi(newSection)));\n  this._aks = {};\n  return this.parseSection(section);\n}\n\nmodule.exports = process;","require(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.string.starts-with\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nvar URL_PATTERN = /(?:([a-z][a-z0-9+.-]*):)?(.*)/;\n\nfunction parse(link) {\n  var result = {\n    raw: link\n  };\n  var m = URL_PATTERN.exec(link);\n  if (!m) return result;\n  result.protocol = (m[1] || (isFilePath(m[2]) ? \"file\" : \"internal\")).toLowerCase();\n  result.location = m[2];\n  return processFilePath(result);\n\n  function isFilePath(str) {\n    return str.match(/^\\.{0,2}\\//);\n  }\n}\n\nfunction processFilePath(link) {\n  if (link.protocol !== \"file\") return link; // const pattern = /([^:]*?)(?:::(.*))?/\n\n  var pattern = /(.*?)::(.*)/;\n  var m = pattern.exec(link.location);\n  if (!m) return link;\n\n  if (m[2]) {\n    link.location = m[1];\n    link.query = processQuery(m[2]);\n  }\n\n  return link;\n}\n\nfunction processQuery(q) {\n  var ln = parseInt(q);\n\n  if (ln) {\n    return {\n      ln: ln\n    };\n  }\n\n  if (q.startsWith(\"*\")) {\n    var headline = q.replace(/^\\*+/, '');\n    return {\n      headline: headline\n    };\n  }\n\n  return {\n    text: q\n  };\n}\n\nmodule.exports = parse;","require(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nvar Node = require('../node');\n\nvar inlineParse = require('../inline').parse;\n\nfunction process(token, section) {\n  var nodes = [];\n\n  while (this.hasNext()) {\n    var _token = this.peek(); // also eats broken block/drawer ends\n\n\n    if (![\"line\", \"block.end\", \"drawer.end\"].includes(_token.name)) break;\n    this.consume();\n    push(_token.raw.trim());\n  }\n\n  section.push(new Node(\"paragraph\", nodes));\n  this._aks = {};\n  return this.parseSection(section);\n\n  function push(line) {\n    var newNodes = inlineParse(line); // merge text newNodes\n\n    if (nodes.length > 0 && nodes[nodes.length - 1].type === \"text\" && newNodes.length > 0 && newNodes[0].type === \"text\") {\n      var n = newNodes.shift();\n      var last = nodes.pop();\n      last.value = last.value + \" \" + n.value;\n      nodes.push(last);\n    }\n\n    nodes = [].concat(nodes, newNodes);\n  }\n}\n\nmodule.exports = process;","require(\"core-js/modules/es6.function.name\");\n\nvar Node = require('../node');\n\nfunction parseBlock() {\n  var t = this.next();\n  var _t$data = t.data,\n      type = _t$data.type,\n      params = _t$data.params;\n  var lines = [];\n\n  while (this.hasNext()) {\n    var _t = this.next();\n\n    if (_t.name === \"headline\") {\n      return undefined;\n    }\n\n    if (_t.name === \"block.end\" && _t.data.type.toUpperCase() === type.toUpperCase()) {\n      if (_t.data.type.toUpperCase() === \"EXPORT\") {\n        var format = params[0];\n        return new Node(format).with({\n          value: lines.join(\"\\n\")\n        });\n      }\n\n      return new Node('block').with({\n        name: type.toUpperCase(),\n        params: params,\n        value: lines.join(\"\\n\")\n      });\n    }\n\n    lines.push(_t.raw);\n  }\n\n  return undefined;\n}\n\nfunction process(token, section) {\n  var block = this.tryTo(parseBlock);\n  if (block) section.push(this.unagi(block));else this.downgradeToLine(this.cursor + 1);\n  this._aks = {};\n  return this.parseSection(section);\n}\n\nmodule.exports = process;","require(\"core-js/modules/es6.regexp.search\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar Node = require('../node');\n\nvar inlineParse = require('../inline').parse;\n\nfunction process(token, section) {\n  var self = this;\n\n  var parseListItem = function parseListItem() {\n    var _self$next$data = self.next().data,\n        indent = _self$next$data.indent,\n        content = _self$next$data.content,\n        ordered = _self$next$data.ordered,\n        checked = _self$next$data.checked;\n    var lines = [content];\n    var item = new Node(\"list.item\").with({\n      ordered: ordered\n    });\n\n    if (checked !== undefined) {\n      item.checked = checked;\n    }\n\n    while (self.hasNext()) {\n      var _self$peek = self.peek(),\n          name = _self$peek.name,\n          raw = _self$peek.raw;\n\n      if (name !== \"line\") break;\n      var lineIndent = raw.search(/\\S/);\n      if (lineIndent <= indent) break;\n      lines.push(self.next().raw.trim());\n    }\n\n    item.push(inlineParse(lines.join(\" \")));\n    return item;\n  };\n\n  var parseList = function parseList(level) {\n    var list = new Node(\"list\");\n\n    while (self.hasNext()) {\n      var _token = self.peek();\n\n      if (_token.name !== \"list.item\") break;\n      var indent = _token.data.indent;\n      if (indent <= level) break;\n      var item = parseListItem();\n      item.push(parseList(indent));\n      list.push(item);\n    }\n\n    if (list.children.length > 0) {\n      // list\n      list.ordered = list.children[0].ordered;\n      return list;\n    }\n\n    return undefined;\n  };\n\n  section.push(this.unagi(parseList(-1)));\n  this._aks = {};\n  return this.parseSection(section);\n}\n\nmodule.exports = process;","require(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.string.starts-with\");\n\nvar Node = require('../node');\n\nvar inlineParse = require('../inline').parse;\n\nfunction process(token, section) {\n  var self = this;\n\n  var parseTable = function parseTable() {\n    var table = new Node(\"table\");\n\n    while (self.hasNext()) {\n      var _token = self.peek();\n\n      if (!_token.name.startsWith(\"table.\")) break;\n      self.consume();\n\n      if (_token.name === \"table.separator\") {\n        table.push(new Node(\"table.separator\"));\n        continue;\n      }\n\n      if (_token.name !== \"table.row\") break;\n\n      var cells = _token.data.cells.map(function (c) {\n        return new Node(\"table.cell\", inlineParse(c));\n      });\n\n      var row = new Node(\"table.row\", cells);\n      table.push(row);\n    }\n\n    return table;\n  };\n\n  var table = this.unagi(parseTable());\n  section.push(table);\n  return this.parseSection(section);\n}\n\nmodule.exports = process;","var Node = require('../node');\n\nfunction process(token, section) {\n  this.consume();\n  section.push(new Node(\"horizontalRule\"));\n  this._aks = {};\n  return this.parseSection(section);\n}\n\nmodule.exports = process;","var Node = require('../node');\n\nfunction process(token, section) {\n  if (section.type === \"footnote.definition\") return section; // footnote breaks footnote\n\n  var self = this;\n\n  var parseFootnote = function parseFootnote() {\n    var _self$next$data = self.next().data,\n        label = _self$next$data.label,\n        content = _self$next$data.content;\n    self.prefix = [{\n      name: \"line\",\n      raw: content,\n      data: {\n        content: content.trim()\n      }\n    }];\n    return self.parseSection(new Node(\"footnote.definition\").with({\n      label: label\n    }));\n  };\n\n  section.push(parseFootnote());\n  self._aks = {};\n  return self.parseSection(section);\n}\n\nmodule.exports = process;","function process(token, section) {\n  var self = this;\n  self._cel++;\n  self.consume();\n  if (section.type === \"footnote\" && self._cel > 1) return section;\n  self._aks = {};\n  return self.parseSection(section);\n}\n\nmodule.exports = process;"],"sourceRoot":""}