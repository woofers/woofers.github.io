{"version":3,"sources":["webpack:///./src/components/rotating-text.js","webpack:///./src/pages/index.js","webpack:///./src/components/og-image.js","webpack:///./src/components/title.js","webpack:///./src/components/page.js","webpack:///./src/components/smart-link.js","webpack:///./src/components/button.js","webpack:///./src/components/profile.js"],"names":["withTheme","p","color","theme","colors","link","cursorColor","Object","core_browser_esm","css","transitions","cursor","ReactRotatingText_default","a","_extends","text","fonts","splash","nav","margins","large","small","flex","_ref","Splash","render","_this$props$data$site","this","props","data","site","siteMetadata","about","blog","projects","page","title","gatsby_browser_entry","to","rotating_text","items","typingInterval","deletingInterval","speed","emptyPause","pause","profile","components_button","href","index_es","icon","faNewspaper","faPencilAlt","faUser","Component","pageQuery","url","OgImage","api","Helmet_default","property","content","Title","og_image","children","Page","title_Title","Link","activeClassName","partiallyActive","other","_objectWithoutPropertiesLoose","_public_static_d_4117746482_json__WEBPACK_IMPORTED_MODULE_9__","siteUrl","paths","allSitePage","nodes","map","node","path","urlNoHttps","replace","urlHttp","includes","test","_emotion_core__WEBPACK_IMPORTED_MODULE_8__","gatsby__WEBPACK_IMPORTED_MODULE_11__","gatsby_plugin_google_analytics__WEBPACK_IMPORTED_MODULE_12__","Container","style","align","inline","extraSmall","medium","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Button","_smart_link__WEBPACK_IMPORTED_MODULE_2__","defaultProps","GenericProfile","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","profileRadius","src","img","alt","Profile","AboutProfile","shift"],"mappings":"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","file":"component---src-pages-index-js-466ffefa6f72d4cd49a0.js","sourcesContent":["import React from 'react'\nimport { css } from '@emotion/core'\nimport ReactRotatingText from 'react-rotating-text'\nimport { withTheme } from 'emotion-theming'\n\nconst RotatingText = p => {\n  const color = p.color || p.theme.colors.link\n  const cursorColor = p.cursorColor || color\n  const blink = theme => css`\n    .react-rotating-text-cursor {\n      animation: blinking-cursor ${theme.transitions.cursor} 0s infinite;\n      margin-left: 5px;\n      color: ${cursorColor};\n    }\n\n    @keyframes blinking-cursor {\n      0% {\n        opacity: 0;\n      }\n      50% {\n        opacity: 1;\n      }\n      100% {\n        opacity: 0;\n      }\n    }\n  `\n  return (\n    <span css={blink}>\n      <ReactRotatingText {...p} color={color} />\n    </span>\n  )\n}\n\nexport default withTheme(RotatingText)\n","import React, { Component } from \"react\"\nimport { graphql } from 'gatsby'\nimport RotatingText from '../components/rotating-text'\nimport { Link } from 'gatsby'\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\nimport { faUser, faPencilAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faNewspaper } from '@fortawesome/free-regular-svg-icons'\nimport { css } from '@emotion/core'\nimport { Profile } from '../components/profile'\nimport Button from '../components/button'\nimport { Page } from '../components/page'\n\nconst text = theme => css`\n  h1:first-of-type {\n    font-size: ${theme.fonts.splash}\n  }\n  @media screen and (max-width: 814px) {\n    h1:first-of-type {\n      font-size: 2.5em;\n    }\n  }\n  @media screen and (max-width: 675px) {\n    h1:first-of-type {\n      font-size: 2em;\n    }\n    h1 {\n      font-size: 1.3rem;\n    }\n  }\n`\n\nconst nav = theme => css`\n  margin-top: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  div {\n    font-family: 'Raleway',sans-serif;\n    font-size: 1.25em;\n    text-align: left;\n    margin-right: ${theme.margins.large};\n  }\n  @media screen and (max-width: 502px) {\n    div {\n      margin-bottom: ${theme.margins.small};\n      font-size: 20px;\n    }\n    display: block !important;\n  }\n`\n\nconst flex = theme => css`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  text-align: center;\n  img {\n    margin-right: auto;\n    margin-left: auto;\n  }\n  @media screen and (max-width: 1066px) {\n    h1 {\n      margin-block-start: 2px !important;\n      margin-block-end: 30px !important;\n    }\n    div {\n      width: 100%;\n    }\n  }\n  @media screen and (max-width: 481px) {\n    h1 {\n      margin-block-start: 8px !important;\n      margin-block-end: 10px !important;\n    }\n  }\n`\n\nclass Splash extends Component {\n  render() {\n    const speed = 65\n    const deleteSpeed = speed - 10\n    const stop = 3000\n    const emptyStop = 500\n    const { about, blog, projects } = this.props.data.site.siteMetadata.nav\n    return (\n      <Page title={this.props.data.site.siteMetadata.title}>\n        <div css={flex}>\n          <div css={text}>\n            <h1>Hey I'm{' '}<Link to={about}>Jaxson Van Doorn</Link></h1>\n            <h1>\n              I{' '}\n              <RotatingText items={['build games ðŸŽ®', 'design apps ðŸ–Œ', 'craft tools ðŸ”§']}\n                typingInterval={speed}\n                deletingInterval={deleteSpeed}\n                emptyPause={emptyStop}\n                pause={stop}\n              />\n              {' '}for the modern world\n            </h1>\n          </div>\n          <Profile />\n        </div>\n        <div css={nav}>\n          <Button href={projects}><Icon icon={faNewspaper}/> Check out my Projects</Button>\n          <Button href={blog}><Icon icon={faPencilAlt}/> Read my Blog</Button>\n          <Button href={about}><Icon icon={faUser}/> Learn About me</Button>\n        </div>\n      </Page>\n    )\n  }\n}\n\nexport default Splash\n\nexport const pageQuery = graphql`{ ...Title, ...Nav }`\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\nconst size = 300\nconst url = 'https://opengraph.vandoorn.ca'\nconst image = `${url}/jvd.png`\n\nconst OgImage = p => {\n  const api = `${url}/**${p.title}**.png?&md=1&images=${image}&widths=${size}&heights=${size}`\n  return (\n    <Helmet>\n      <meta property=\"og:image\" content={api} />\n    </Helmet>\n  )\n}\n\nexport default OgImage\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport OgImage from './og-image'\n\nconst makeTitle = (title, site) => {\n  if (!title) return site\n  if (!site) return title\n  return `${title} - ${site}`\n}\n\nexport const Title = p => (\n  <div>\n    <Helmet>\n      <meta property=\"og:title\" content={p.title} />\n      <title>{makeTitle(p.title, p.site)}</title>\n    </Helmet>\n    <OgImage title={p.title} />\n    {p.children}\n  </div>\n)\n","import React from 'react'\nimport { Title } from '../components/title'\n\nexport const Page = p => (\n  <Title title={p.title} site={p.site}>\n    <article>\n      {p.children}\n    </article>\n  </Title>\n)\n","import React from 'react'\nimport { useStaticQuery, Link as GatsbyLink, graphql } from 'gatsby'\nimport { OutboundLink } from 'gatsby-plugin-google-analytics'\n\n// Since DOM elements <a> cannot receive activeClassName\n// and partiallyActive, destructure the prop here and\n// pass it only to GatsbyLink\n// Adapted from: https://www.gatsbyjs.org/docs/gatsby-link/\nconst Link = ({ children, to, activeClassName, partiallyActive, ...other }) => {\n  const data = useStaticQuery(graphql`{ ...Url, ...Pages }`)\n  let link = to\n\n  // Use relative links for jaxson.vandoorn.ca for local development\n  const { siteUrl } = data.site.siteMetadata\n  const paths = data.allSitePage.nodes.map(node => node.path)\n  const urlNoHttps = siteUrl.replace('https://', '')\n  const urlHttp = siteUrl.replace('https://', 'http://')\n\n  link = to.replace(siteUrl, '').replace(urlHttp, '').replace(urlNoHttps, '')\n  if (!link) link = '/'\n\n  if (!paths.includes(link)) {\n    return (\n      <OutboundLink href={to} {...other}>\n        {children}\n      </OutboundLink>\n    )\n  }\n\n  // Tailor the following test to your environment.\n  // This example assumes that any internal link (intended for Gatsby)\n  // will start with exactly one slash, and that anything else is external.\n  const internal = /^\\/(?!\\/)/.test(link)\n\n  // Use Gatsby Link for internal links, and <a> for others\n  if (internal) {\n    return (\n      <GatsbyLink\n        to={link}\n        activeClassName={activeClassName}\n        partiallyActive={partiallyActive}\n        {...other}\n      >\n        {children}\n      </GatsbyLink>\n    )\n  }\n  return (\n    <a href={link} {...other}>\n      {children}\n    </a>\n  )\n}\n\nexport default Link\n","import React from 'react'\nimport { css } from '@emotion/core'\nimport Link from './smart-link'\nimport { withTheme } from 'emotion-theming'\n\nconst Container = p => {\n  const style = theme => css`\n    text-align: ${p.align};\n    display: ${p.inline ? 'inline-block' : 'block'};\n    margin-bottom: ${theme.margins.extraSmall};\n    margin-right: ${p.inline ? theme.margins.large : 0};\n    margin-top: ${p.inline ? theme.margins.medium : 0};\n  `\n  if (p.inline) return (<span css={style}>{p.children}</span>)\n  return (<div css={style}>{p.children}</div>)\n}\n\nconst Button = p => (\n  <Container inline={p.inline} align={p.align}>\n    <Link style={p.style} to={p.href}>{p.children}</Link>\n  </Container>\n)\n\nButton.defaultProps = {\n  align: 'right'\n}\n\nexport default withTheme(Button)\n","import React from 'react'\nimport { css } from '@emotion/core'\n\nconst GenericProfile = p => {\n  const photo = theme => css`\n    border-radius: ${theme.margins.profileRadius} !important;\n    max-width: ${theme.margins.profile};\n    max-height: ${theme.margins.profile};\n  `\n  return (\n    <img css={photo} src={p.img} alt={p.alt} />\n  )\n}\n\nexport const Profile = p => (\n  <GenericProfile img=\"https://avatars3.githubusercontent.com/u/7284672?s=460&v=4\"\n                  alt=\"Jaxson Van Doorn\"\n                  {...p} />\n)\n\nexport const AboutProfile = p => {\n  const shift = css`\n    float: right;\n    display: block;\n    @media screen and (max-width: 700px) {\n      float: none;\n      margin: 1em auto !important;\n      text-align: center;\n    }\n  `\n  return <span css={shift}><Profile {...p} />{p.children}</span>\n}\n"],"sourceRoot":""}