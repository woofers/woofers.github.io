{"componentChunkName":"component---src-templates-github-js","path":"/projects/react-yat/","result":{"data":{"site":{"siteMetadata":{"exclude":[["discord-jam-2","DOGE: BOIS"],["woofers3d","Woofers 3D"],["ludum-dare-44","ALIEN, e x p a n s i o n ."],["react-pico-8","React PICO-8"],["react-yat","React YAT"],["opengraph-api"],["org-invoice-template"],["react-ludum-dare"],["woofers.github.io"],["kangaroo-country"],["battlesnake"],["woofers3d"],["use-eye-dropper"],["chess"],["resume"],["java-formatter"],["battlesnake-2018"],["battlesnake-java-template"],["libgdx-tools-installer"],["challenger-deep-rofi"],["dotfiles"],["k9-krew"],["course-codes-bugs"],["noto-emoji-react"],["react-chameleon-theme-color"],["qmk-indicator"],["quefrency-case"]]}},"repositories":{"name":"react-yat","description":"ðŸŒ€ ðŸ”  ðŸ“œ Yet Another Typer component for React","url":"https://github.com/woofers/react-yat","homepage":"","stars":{"totalCount":2},"license":{"name":"MIT License"},"topics":{"nodes":[]},"readme":{"text":"\n\n# React Yet Another Typer\n\n[![img](https://github.com/woofers/react-yat/workflows/build/badge.svg)](https://github.com/woofers/react-yat/actions) [![img](https://img.shields.io/david/woofers/react-yat)](https://www.npmjs.com/package/react-yat) [![img](https://badge.fury.io/js/react-yat.svg)](https://www.npmjs.com/package/react-yat) [![img](https://img.shields.io/npm/dt/react-yat.svg)](https://www.npmjs.com/package/react-yat) [![img](https://badgen.net/bundlephobia/minzip/react-yat)](https://bundlephobia.com/result?p=react-yat) [![img](https://img.shields.io/npm/l/react-yat.svg)](https://github.com/woofers/react-yat/blob/master/LICENSE)\n\n`react-yat` is yet another typer component for React.\n\n\n# Why?\n\nWhile many other React typer components exists, `react-yat`\naims to be the most accessible and simplest to use.\n\nThis is achieved by allowing users to pass React children to the typer\nrather than a list of strings.  This allows visual content\nto be properly described by way of `ARIA` attributes.\nIt also comes with the advantage that many elements can\nbe wrapped to form a single token to be typed out as one\nor styling each text token differently.\n\nAdditionally `react-yat` uses a visually hidden\n`aria-live` region which contains the complete\ntyped out value which is read by screenreaders.\n\n\n# Installation\n\n**Yarn**\n\n    yarn add react-yat\n\n**npm**\n\n    npm install react-yat\n\n\n# Usage\n\n```jsx\nimport React from 'react'\nimport { Typer, TyperElement } from 'react-yat'\n\nconst App = () => {\n  return (\n    <h4>\n      <Typer prefix=\"I\" cursorWidth={3.9}>\n        <TyperElement>build games <span role=\"img\" aria-label=\"controller\">ðŸŽ®</span></TyperElement>\n        <TyperElement>design apps <span role=\"img\" aria-label=\"paintbrush\">ðŸ–Œ</span></TyperElement>\n        <TyperElement>craft tools <span role=\"img\" aria-label=\"wrench\">ðŸ”§</span></TyperElement>\n        <TyperElement>have fun <span role=\"img\" aria-label=\"smile\">:)</span></TyperElement>\n        <TyperElement><span>stick</span> <span>toghther</span></TyperElement>\n      </Typer>\n    </h4>\n  )\n}\n\nexport default App\n```\n\nSimply add the component to the React application using JSX.\n\n\n## Props\n\n\n### Children\n\nThe elements to typed out. **Required**\n\nEach direct child of `Typer` must be of type `TyperElement`.\n\n\n### Prefix\n\n`prefix` is appended to the start of the typed out values. **Default:** None\n\nCan be any value of type `ReactNode`.\n\n\n### Cursor\n\n`cursor` indicates if the cursor is displayed. **Default:** `true`\n\n\n### Cursor Delay\n\n`cursorDelay` indicates the time it takes for the cursor to blink in seconds. **Default:** `2`\n\n\n### Cursor Width\n\n`cursorWidth` is a scale factor applied to the width of the cursor. **Default:** `1.75`\n\n\n### Type Delay\n\n`typeDelay` indicates the time it takes for a single token to be added in milliseconds. **Default:** `65`\n\n\n### Delete Delay\n\n`deleteDelay` indicates the time it takes for a single token to be deleted in milliseconds. **Default:** `55`\n\n\n### Completed Delay\n\n`completedDelay` indicates how long the typer waits when it is finished typing in milliseconds. **Default:** `3000`\n\n\n### Empty Delay\n\n`emptyDelay` indicates how long the typer waits when it is empty in milliseconds. **Default:** `1000`\n"},"readmeOrg":{"text":"\n#+TITLE:    React Yet Another Typer\n#+AUTHOR:\tJaxson Van Doorn\n#+EMAIL:\tjaxson.vandoorn@gmail.com\n#+OPTIONS:  num:nil toc:nil\n\n* React Yet Another Typer\n\n\n[[https://github.com/woofers/react-yat/actions][https://github.com/woofers/react-yat/workflows/build/badge.svg]] [[https://www.npmjs.com/package/react-yat][https://img.shields.io/david/woofers/react-yat]] [[https://www.npmjs.com/package/react-yat][https://badge.fury.io/js/react-yat.svg]] [[https://www.npmjs.com/package/react-yat][https://img.shields.io/npm/dt/react-yat.svg]] [[https://bundlephobia.com/result?p=react-yat][https://badgen.net/bundlephobia/minzip/react-yat]] [[https://github.com/woofers/react-yat/blob/master/LICENSE][https://img.shields.io/npm/l/react-yat.svg]]\n\n~react-yat~ is yet another typer component for React.\n\n* Why?\n\nWhile many other React typer components exists, ~react-yat~\naims to be the most accessible and simplest to use.\n\nThis is achieved by allowing users to pass React children to the typer\nrather than a list of strings.  This allows visual content\nto be properly described by way of ~ARIA~ attributes.\nIt also comes with the advantage that many elements can\nbe wrapped to form a single token to be typed out as one\nor styling each text token differently.\n\nAdditionally ~react-yat~ uses a visually hidden\n~aria-live~ region which contains the complete\ntyped out value which is read by screenreaders.\n\n* Installation\n\n*Yarn*\n#+BEGIN_SRC\nyarn add react-yat\n#+END_SRC\n\n*npm*\n#+BEGIN_SRC\nnpm install react-yat\n#+END_SRC\n\n* Usage\n\n#+BEGIN_SRC js\nimport React from 'react'\nimport { Typer, TyperElement } from 'react-yat'\n\nconst App = () => {\n  return (\n    <h4>\n      <Typer prefix=\"I\" cursorWidth={3.9}>\n        <TyperElement>build games <span role=\"img\" aria-label=\"controller\">ðŸŽ®</span></TyperElement>\n        <TyperElement>design apps <span role=\"img\" aria-label=\"paintbrush\">ðŸ–Œ</span></TyperElement>\n        <TyperElement>craft tools <span role=\"img\" aria-label=\"wrench\">ðŸ”§</span></TyperElement>\n        <TyperElement>have fun <span role=\"img\" aria-label=\"smile\">:)</span></TyperElement>\n        <TyperElement><span>stick</span> <span>toghther</span></TyperElement>\n      </Typer>\n    </h4>\n  )\n}\n\nexport default App\n#+END_SRC\n\nSimply add the component to the React application using JSX.\n\n** Props\n*** Children\nThe elements to typed out. *Required*\n\nEach direct child of ~Typer~ must be of type ~TyperElement~.\n\n*** Prefix\n~prefix~ is appended to the start of the typed out values. *Default:* None\n\nCan be any value of type ~ReactNode~.\n\n*** Cursor\n\n~cursor~ indicates if the cursor is displayed. *Default:* ~true~\n*** Cursor Delay\n\n~cursorDelay~ indicates the time it takes for the cursor to blink in seconds. *Default:* ~2~\n*** Cursor Width\n\n~cursorWidth~ is a scale factor applied to the width of the cursor. *Default:* ~1.75~\n*** Type Delay\n\n~typeDelay~ indicates the time it takes for a single token to be added in milliseconds. *Default:* ~65~\n\n*** Delete Delay\n\n~deleteDelay~ indicates the time it takes for a single token to be deleted in milliseconds. *Default:* ~55~\n*** Completed Delay\n\n~completedDelay~ indicates how long the typer waits when it is finished typing in milliseconds. *Default:* ~3000~\n\n*** Empty Delay\n\n~emptyDelay~ indicates how long the typer waits when it is empty in milliseconds. *Default:* ~1000~\n"}}},"pageContext":{"repo":"react-yat"}},"staticQueryHashes":["2033956373","3784074786"]}