{"componentChunkName":"component---src-templates-github-js","path":"/projects/react-wavify/","result":{"data":{"site":{"siteMetadata":{"title":"Jaxson Van Doorn","nav":{"projects":"/projects/","blog":"/blog/","about":"/about/"},"exclude":[["discord-jam-2","DOGE: BOIS"],["woofers3d","Woofers 3D"],["ludum-dare-44","ALIEN, e x p a n s i o n ."],["react-pico-8","React PICO-8"],["opengraph-api"],["react-ludum-dare"],["woofers.github.io"],["kangaroo-country"],["chess"],["resume"],["java-formatter"],["battlesnake-java-template"],["libgdx-tools-installer"],["challenger-deep-rofi"],["dotfiles"],["k9-krew"],["course-codes-bugs"]]}},"repositories":{"name":"react-wavify","description":"🏝️ 🌊  Animated wave component for React ","url":"https://github.com/woofers/react-wavify","homepage":"https://jaxson.vandoorn.ca/react-wavify/","stars":{"totalCount":29},"license":{"name":"MIT License"},"topics":{"nodes":[{"topic":{"name":"react"}},{"topic":{"name":"reactjs"}},{"topic":{"name":"component"}},{"topic":{"name":"svg"}},{"topic":{"name":"animation"}},{"topic":{"name":"wave"}}]},"readme":{"text":"\n\n# React Wavify\n\n[![img](https://github.com/woofers/react-wavify/workflows/build/badge.svg)](https://github.com/woofers/react-wavify/actions) [![img](https://david-dm.org/woofers/react-wavify.svg)](https://www.npmjs.com/package/react-wavify) [![img](https://badge.fury.io/js/react-wavify.svg)](https://www.npmjs.com/package/react-wavify) [![img](https://img.shields.io/npm/dt/react-wavify.svg)](https://www.npmjs.com/package/react-wavify) [![img](https://img.shields.io/npm/l/react-wavify.svg)](https://github.com/woofers/react-wavify/blob/master/License.txt)\n\nA simple React component which creates an animated wave.\n\n**[Live Demo](https://jaxson.vandoorn.ca/react-wavify/)**\n\nThis component is heavily adapted from [Mikołaj Stolarski](https://github.com/grimor)'s awesome [Codepen](https://codepen.io/grimor/pen/qbXLdN)\nand is functionally similar to [Benjamin Grauwin](http://benjamin.grauwin.me/)'s [Wavify](https://github.com/peacepostman/wavify) plug-in.\n\n![img](./screenshots/wave.gif \"Wave\")\n\n\n# Installation\n\n**Yarn**\n\n    yarn add react-wavify\n\n**npm**\n\n    npm install react-wavify\n\n\n# Usage\n\n```jsx\nimport React from 'react'\nimport Wave from 'react-wavify'\n\nconst App = () => (\n  <Wave fill='#f79902'\n        paused={false}\n        options={{\n          height: 20,\n          amplitude: 20,\n          speed: 0.15,\n          points: 3\n        }}\n  />\n)\n```\n\nSimply add the Wave component to the React application using JSX.\n\nThe wave's width will scale to fit the parent container.\n\n\n## Props\n\n\n### Fill\n\nThe `fill` property can be set to anything that a SVG path can accept (usually gradients or colors). **Default:** `#FFF`\n\n\n### Paused\n\nThe `paused` property controls the play state of the animation. **Default:** `false`\n\nIf set to `true` the wave animation will pause.\n\n\n### Options\n\nThe component supports a variety of options to affect how the wave is rendered.\n\nAny omitted options will be set to the default value.\n\n-   `height` - Height of the wave relative to the SVG element. **Default:** `20`\n-   `amplitude` - Amplitude of the rendered wave. **Default:** `20`\n-   `speed` - Speed that the wave animation plays at. **Default:** `0.15`\n-   `points` - Amount of points used to form the wave.\n    Can not be less than `1`. **Default:** `3`\n\n\n### Pass Through Props\n\nAny other props such as `id`, `className` or `style` will be passed through to the root of the component.\n\nOther props such as `opacity` or `stroke` will be passed to the SVG path element.\n\nAny other elements can be passed inside the SVG component itself.\n\nInner `<defs>` elements can be used to add gradients, clipping paths, or masks.\n\n##### Using a Gradient\n\n```jsx\n<Wave fill=\"url(#gradient)\">\n  <defs>\n    <linearGradient id=\"gradient\" gradientTransform=\"rotate(90)\">\n      <stop offset=\"10%\"  stopColor=\"#d4af37\" />\n      <stop offset=\"90%\" stopColor=\"#f00\" />\n    </linearGradient>\n  </defs>\n</Wave>\n```\n\n![img](./screenshots/wave-grad.gif \"Gradient Wave\")\n\n##### Using a Clipping Path\n\n```jsx\n<Wave fill=\"#e62315\" mask=\"url(#mask)\" options={{ points: 20, speed: 0.2, amplitude: 40 }}>\n  {/* Example adapted from https://developer.mozilla.org/en-US/docs/Web/SVG/Element/mask */}\n  <mask id=\"mask\">\n    <path d=\"M10,35 A20,20,0,0,1,50,35 A20,20,0,0,1,90,35 Q90,65,50,95 Q10,65,10,35 Z\" fill=\"white\" />\n  </mask>\n</Wave>\n```\n\n![img](./screenshots/wave-heart.gif \"Clipping Path Wave\")\n\n##### Using a Mask\n\n```jsx\n<Wave mask=\"url(#mask)\" fill=\"#1277b0\" >\n  <defs>\n    <linearGradient id=\"gradient\" gradientTransform=\"rotate(90)\">\n      <stop offset=\"0\" stopColor=\"white\" />\n      <stop offset=\"0.5\" stopColor=\"black\" />\n    </linearGradient>\n    <mask id=\"mask\">\n      <rect x=\"0\" y=\"0\" width=\"2000\" height=\"200\" fill=\"url(#gradient)\"  />\n    </mask>\n  </defs>\n</Wave>\n```\n\n![img](./screenshots/wave-mask.gif \"Mask Wave\")\n"},"readmeOrg":{"text":"\n#+TITLE:    React Wavify\n#+AUTHOR:\tJaxson Van Doorn\n#+EMAIL:\tjaxson.vandoorn@gmail.com\n#+OPTIONS:  num:nil toc:nil\n\n* React Wavify\n\n[[https://github.com/woofers/react-wavify/actions][https://github.com/woofers/react-wavify/workflows/build/badge.svg]] [[https://www.npmjs.com/package/react-wavify][https://david-dm.org/woofers/react-wavify.svg]] [[https://www.npmjs.com/package/react-wavify][https://badge.fury.io/js/react-wavify.svg]] [[https://www.npmjs.com/package/react-wavify][https://img.shields.io/npm/dt/react-wavify.svg]] [[https://github.com/woofers/react-wavify/blob/master/License.txt][https://img.shields.io/npm/l/react-wavify.svg]]\n\nA simple React component which creates an animated wave.\n\n*[[https://jaxson.vandoorn.ca/react-wavify/][Live Demo]]*\n\nThis component is heavily adapted from [[https://github.com/grimor][Mikołaj Stolarski]]'s awesome [[https://codepen.io/grimor/pen/qbXLdN][Codepen]]\nand is functionally similar to [[http://benjamin.grauwin.me/][Benjamin Grauwin]]'s [[https://github.com/peacepostman/wavify][Wavify]] plug-in.\n\n#+CAPTION: Wave\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\n[[./screenshots/wave.gif]]\n\n* Installation\n\n*Yarn*\n#+BEGIN_SRC\nyarn add react-wavify\n#+END_SRC\n\n*npm*\n#+BEGIN_SRC\nnpm install react-wavify\n#+END_SRC\n\n* Usage\n\n#+BEGIN_SRC js\nimport React from 'react'\nimport Wave from 'react-wavify'\n\nconst App = () => (\n  <Wave fill='#f79902'\n        paused={false}\n        options={{\n          height: 20,\n          amplitude: 20,\n          speed: 0.15,\n          points: 3\n        }}\n  />\n)\n#+END_SRC\n\nSimply add the Wave component to the React application using JSX.\n\nThe wave's width will scale to fit the parent container.\n** Props\n*** Fill\nThe ~fill~ property can be set to anything that a SVG path can accept (usually gradients or colors). *Default:* ~#FFF~\n*** Paused\n\nThe ~paused~ property controls the play state of the animation. *Default:* ~false~\n\nIf set to ~true~ the wave animation will pause.\n*** Options\nThe component supports a variety of options to affect how the wave is rendered.\n\nAny omitted options will be set to the default value.\n\n- ~height~ - Height of the wave relative to the SVG element. *Default:* ~20~\n- ~amplitude~ - Amplitude of the rendered wave. *Default:* ~20~\n- ~speed~ - Speed that the wave animation plays at. *Default:* ~0.15~\n- ~points~ - Amount of points used to form the wave.\n             Can not be less than ~1~. *Default:* ~3~\n*** Pass Through Props\nAny other props such as ~id~, ~className~ or ~style~ will be passed through to the root of the component.\n\nOther props such as ~opacity~ or ~stroke~ will be passed to the SVG path element.\n\nAny other elements can be passed inside the SVG component itself.\n\nInner ~<defs>~ elements can be used to add gradients, clipping paths, or masks.\n**** Using a Gradient\n\n#+BEGIN_SRC js\n<Wave fill=\"url(#gradient)\">\n  <defs>\n    <linearGradient id=\"gradient\" gradientTransform=\"rotate(90)\">\n      <stop offset=\"10%\"  stopColor=\"#d4af37\" />\n      <stop offset=\"90%\" stopColor=\"#f00\" />\n    </linearGradient>\n  </defs>\n</Wave>\n#+END_SRC\n\n#+CAPTION: Gradient Wave\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\n[[./screenshots/wave-grad.gif]]\n\n**** Using a Clipping Path\n\n#+BEGIN_SRC js\n<Wave fill=\"#e62315\" mask=\"url(#mask)\" options={{ points: 20, speed: 0.2, amplitude: 40 }}>\n  {/* Example adapted from https://developer.mozilla.org/en-US/docs/Web/SVG/Element/mask */}\n  <mask id=\"mask\">\n    <path d=\"M10,35 A20,20,0,0,1,50,35 A20,20,0,0,1,90,35 Q90,65,50,95 Q10,65,10,35 Z\" fill=\"white\" />\n  </mask>\n</Wave>\n#+END_SRC\n\n#+CAPTION: Clipping Path Wave\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\n[[./screenshots/wave-heart.gif]]\n\n**** Using a Mask\n\n#+BEGIN_SRC js\n<Wave mask=\"url(#mask)\" fill=\"#1277b0\" >\n  <defs>\n    <linearGradient id=\"gradient\" gradientTransform=\"rotate(90)\">\n      <stop offset=\"0\" stopColor=\"white\" />\n      <stop offset=\"0.5\" stopColor=\"black\" />\n    </linearGradient>\n    <mask id=\"mask\">\n      <rect x=\"0\" y=\"0\" width=\"2000\" height=\"200\" fill=\"url(#gradient)\"  />\n    </mask>\n  </defs>\n</Wave>\n#+END_SRC\n\n#+CAPTION: Mask Wave\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\n[[./screenshots/wave-mask.gif]]\n"}}},"pageContext":{"repo":"react-wavify"}}}