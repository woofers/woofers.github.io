{"componentChunkName":"component---src-templates-post-js","path":"/blog/yaml-github-actions/","result":{"data":{"site":{"siteMetadata":{"social":{"github":{"name":"GitHub","link":"//github.com/woofers"},"stackoverflow":{"name":"Stack Overflow","link":"//stackoverflow.com/users/9129020/jvandoorn"},"email":{"name":"Email","link":"mailto:jaxson.vandoorn@gmail.com"}}}},"orgContent":{"html":"<p>Recently <a href=\"http://github.com\">GitHub</a> announced that <a href=\"https://github.com/features/actions\">GitHub Actions</a> will be <a href=\"https://github.blog/2019-08-08-github-actions-now-supports-ci-cd/\">moving away</a> from the original <a href=\"https://github.com/hashicorp/hcl\">HCL</a> syntax in-favour of a <a href=\"https://yaml.org/\">YAML</a> format similar to <a href=\"https://travis-ci.org/\">Travis CI</a> and <a href=\"https://bitbucket.org/product/features/pipelines\">Bitbucket Pipelines</a>.  This means that <a href=\"https://github.com/hashicorp/hcl\">HCL</a> style actions will no longer work <a href=\"https://developer.github.com/actions/\">after September 30, 2019</a>.  It is possible to migrate using a <a href=\"https://help.github.com/en/articles/migrating-github-actions-from-hcl-syntax-to-yaml-syntax\">migration script</a> however in-some cases it may be required to reconfigure.</p><p>This particular issue occurred to me as actions which return a neutral result seem to fail the whole build with the <a href=\"https://yaml.org/\">YAML</a> format.  This means that using <a href=\"https://github.com/actions/bin/tree/master/filter/bin\">actions/bin/filter</a> to trigger a deploy would fail the build unless a release tag was found.  With this in mind, reconfiguring my <a href=\"https://github.com/features/actions\">GitHub Actions</a> seemed like the best choice.</p><div class=\"section\"><h3>Desired Behaviour</h3><p>My particular use of <a href=\"https://github.com/features/actions\">GitHub Actions</a> is for deploying my small <a href=\"https://docs.npmjs.com/creating-node-js-modules\">NPM packages</a>.</p><p>To keep it simple I wanted the following to occur:</p><ul><li>Install dependencies, Build and Test package on each commit</li><li>Publish package if a release tag was created</li></ul></div><div class=\"section\"><h3>Creating the Action Configuration</h3><p>Create the file <code>.github/workflows/workflow.yml</code></p><div class=\"section\"><h4>Checking for Tag</h4><p>This method simply builds and tests the package on any commit.</p><p>Then if it finds a tag starting with <strong>v</strong>, it will trigger a deploy.</p><p>So if a <a href=\"https://help.github.com/en/articles/creating-releases\">GitHub Release</a> is created with the tag <strong>v2.3.4</strong>, it will trigger a deploy.</p><p>This is a bit naive however for my purposes I usually don't tag unless its a release.</p><p>One advantage of checking for a tag this way is that it cuts down on unneeded builds as a whole build can only ever run 1 or 2 times (2 in the case a build is deployed).</p><p>The <a href=\"https://github.com/features/actions\">GitHub Actions</a> docs mentions being able to <a href=\"https://help.github.com/en/articles/workflow-syntax-for-github-actions#example-restricting-the-workflow-run-to-specific-refs-and-paths\">restrict actions</a> to certain branches or tags however I could not get this to work.</p><pre><code class=\"hljs language-yaml\"><span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">build</span> <span class=\"hljs-comment\"># Name Action Build</span>\n\n<span class=\"hljs-attr\">on:</span> [<span class=\"hljs-string\">push</span>]  <span class=\"hljs-comment\"># Trigger on push</span>\n\n<span class=\"hljs-attr\">jobs:</span>\n  <span class=\"hljs-attr\">run:</span>\n    <span class=\"hljs-attr\">runs-on:</span> <span class=\"hljs-string\">ubuntu-latest</span>                         <span class=\"hljs-comment\"># Run on Ubuntu Docker image</span>\n    <span class=\"hljs-attr\">steps:</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Checkout</span> <span class=\"hljs-string\">Repo</span>                          <span class=\"hljs-comment\"># Checkout repo</span>\n      <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/checkout@v1</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Use</span> <span class=\"hljs-string\">Node.js</span>                            <span class=\"hljs-comment\"># Configure Node.js</span>\n      <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/setup-node@v1</span>\n      <span class=\"hljs-attr\">with:</span>\n        <span class=\"hljs-attr\">node-version:</span> <span class=\"hljs-string\">'12.9'</span>                       <span class=\"hljs-comment\"># Set Node.js Version</span>\n        <span class=\"hljs-attr\">registry-url:</span> <span class=\"hljs-string\">'https://registry.npmjs.org'</span> <span class=\"hljs-comment\"># Set Node.js reigistry</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Deploy</span> <span class=\"hljs-string\">Info</span>                            <span class=\"hljs-comment\"># Print GitHub Deploy info</span>\n      <span class=\"hljs-attr\">env:</span>\n        <span class=\"hljs-attr\">GITHUB_CONTEXT:</span> <span class=\"hljs-string\">${{</span> <span class=\"hljs-string\">toJson(github)</span> <span class=\"hljs-string\">}}</span>\n      <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">echo</span> <span class=\"hljs-string\">\"$GITHUB_CONTEXT\"</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Install</span>                                <span class=\"hljs-comment\"># Install dependancies</span>\n      <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">install</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Build</span>                                  <span class=\"hljs-comment\"># Build app if needed</span>\n      <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">run</span> <span class=\"hljs-string\">build</span> <span class=\"hljs-string\">--if-present</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Test</span>\n      <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">run</span> <span class=\"hljs-string\">test</span> <span class=\"hljs-string\">--if-present</span>               <span class=\"hljs-comment\"># Run tests if needed</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Publish</span>\n      <span class=\"hljs-attr\">if:</span> <span class=\"hljs-string\">startsWith(github.ref,</span> <span class=\"hljs-string\">'refs/tags/v'</span><span class=\"hljs-string\">)</span>    <span class=\"hljs-comment\"># Check if publish step should run</span>\n      <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">publish</span> <span class=\"hljs-string\">--access</span> <span class=\"hljs-string\">public</span>             <span class=\"hljs-comment\"># Publish package</span>\n      <span class=\"hljs-attr\">env:</span>\n        <span class=\"hljs-attr\">NODE_AUTH_TOKEN:</span> <span class=\"hljs-string\">${{</span> <span class=\"hljs-string\">secrets.NPM_AUTH_TOKEN</span> <span class=\"hljs-string\">}}</span> <span class=\"hljs-comment\"># Set NPM auth token from GitHub Secrets</span></code></pre></div><div class=\"section\"><h4>Checking for a Release</h4><p>If you found the previous method too naive, you may want to check for a <a href=\"https://help.github.com/en/articles/creating-releases\">GitHub Release</a> before triggering a deploy.</p><p>The drawback to this is that a few extraneous builds will be triggered as the <code>release</code> event will fire both when the release is <code>created</code> and <code>published</code>.  As far as I am aware this can not be restricted using the <code>on</code> property.</p><p>To ensure we only deploy once, we will indicate to only run the <strong>Publish</strong> step when a release is <code>published</code>.</p><pre><code class=\"hljs language-yaml\"><span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">build</span>\n\n<span class=\"hljs-attr\">on:</span>\n  <span class=\"hljs-attr\">push:</span>     <span class=\"hljs-comment\"># Run build on push (commit in most cases)</span>\n    <span class=\"hljs-attr\">tag:</span> [] <span class=\"hljs-comment\"># Only run build if not tagged</span>\n  <span class=\"hljs-attr\">release:</span>  <span class=\"hljs-comment\"># Run build on release</span>\n    <span class=\"hljs-attr\">tag:</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">v*</span>    <span class=\"hljs-comment\"># Check for release tag</span>\n\n<span class=\"hljs-attr\">jobs:</span>\n  <span class=\"hljs-attr\">run:</span>\n    <span class=\"hljs-attr\">runs-on:</span> <span class=\"hljs-string\">ubuntu-latest</span>                         <span class=\"hljs-comment\"># Run on Ubuntu Docker image</span>\n    <span class=\"hljs-attr\">steps:</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Checkout</span> <span class=\"hljs-string\">Repo</span>                          <span class=\"hljs-comment\"># Checkout repo</span>\n      <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/checkout@v1</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Use</span> <span class=\"hljs-string\">Node.js</span>                            <span class=\"hljs-comment\"># Configure Node.js</span>\n      <span class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\">actions/setup-node@v1</span>\n      <span class=\"hljs-attr\">with:</span>\n        <span class=\"hljs-attr\">node-version:</span> <span class=\"hljs-string\">'12.9'</span>                       <span class=\"hljs-comment\"># Set Node.js Version</span>\n        <span class=\"hljs-attr\">registry-url:</span> <span class=\"hljs-string\">'https://registry.npmjs.org'</span> <span class=\"hljs-comment\"># Set Node.js reigistry</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Deploy</span> <span class=\"hljs-string\">Info</span>                            <span class=\"hljs-comment\"># Print GitHub Deploy info</span>\n      <span class=\"hljs-attr\">env:</span>\n        <span class=\"hljs-attr\">GITHUB_CONTEXT:</span> <span class=\"hljs-string\">${{</span> <span class=\"hljs-string\">toJson(github)</span> <span class=\"hljs-string\">}}</span>\n      <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">echo</span> <span class=\"hljs-string\">\"$GITHUB_CONTEXT\"</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Install</span>                                <span class=\"hljs-comment\"># Install dependancies</span>\n      <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">install</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Build</span>                                  <span class=\"hljs-comment\"># Build app if needed</span>\n      <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">run</span> <span class=\"hljs-string\">build</span> <span class=\"hljs-string\">--if-present</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Test</span>\n      <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">run</span> <span class=\"hljs-string\">test</span> <span class=\"hljs-string\">--if-present</span>               <span class=\"hljs-comment\"># Run tests if needed</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Publish</span>\n      <span class=\"hljs-attr\">if:</span> <span class=\"hljs-string\">github.event_name</span> <span class=\"hljs-string\">==</span> <span class=\"hljs-string\">'release'</span> <span class=\"hljs-string\">&#x26;&#x26;</span> <span class=\"hljs-string\">github.event.action</span> <span class=\"hljs-string\">==</span> <span class=\"hljs-string\">'published'</span> <span class=\"hljs-comment\"># Check if publish step should run</span>\n      <span class=\"hljs-attr\">run:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">publish</span> <span class=\"hljs-string\">--access</span> <span class=\"hljs-string\">public</span>             <span class=\"hljs-comment\"># Publish package</span>\n      <span class=\"hljs-attr\">env:</span>\n        <span class=\"hljs-attr\">NODE_AUTH_TOKEN:</span> <span class=\"hljs-string\">${{</span> <span class=\"hljs-string\">secrets.NPM_AUTH_TOKEN</span> <span class=\"hljs-string\">}}</span> <span class=\"hljs-comment\"># Set NPM auth token from GitHub Secrets</span></code></pre></div></div><div class=\"section\"><h3>Setting NPM Auth Token Secret</h3><p>Simply go to your repo <strong>Settings</strong> and select the <strong>Secrets</strong> tab.</p><p>Then <strong>Add a new secret</strong> with the <strong>Name</strong> of <code>NPM_AUTH_TOKEN</code> and set the <strong>Value</strong> to your <a href=\"https://docs.npmjs.com/creating-and-viewing-authentication-tokens\">NPM token</a>.</p></div><div class=\"section\"><h3>Adding the GitHub Actions badge</h3><p><a href=\"http://github.com\">GitHub</a> now offers an undocumented API which will return nice <a href=\"https://travis-ci.org/\">Travis CI</a> like status badge.</p><p>An example can be seen on the <a href=\"https://github.com/actions/toolkit\">actions/toolkit</a> repo.</p><p>The format for the API is as follows:</p><pre><code class=\"hljs language-bash\">https://github.com/&#x3C;user|org>/&#x3C;repo>/&#x3C;action_name>/badge.svg</code></pre><p>The <code>action_name</code> propery is the <code>name</code> field in the <a href=\"https://yaml.org/\">YAML</a> which in this case is <code>build</code>.</p><p>An example of this would be:</p><pre><code class=\"hljs language-bash\">https://github.com/woofers/ludum-dare-badges/workflows/build/badge.svg</code></pre><p>To make it even nicer we can link the badge to our repo's actions page:</p><pre><code class=\"hljs language-markdown\">[<span class=\"hljs-string\">![img</span>](<span class=\"hljs-link\">https://github.com/woofers/ludum-dare-badges/workflows/build/badge.svg</span>)](<span class=\"hljs-link\">https://github.com/woofers/ludum-dare-badges/actions</span>)</code></pre><p>It will look something like this:</p><a style=\"color: rgba(0,0,0,0); box-shadow: none;\" href=\"https://github.com/woofers/ludum-dare-badges/actions\">\n  <img style=\"border-radius: 0\" src=\"https://github.com/woofers/ludum-dare-badges/workflows/build/badge.svg\" alt=\"GitHub Actions build\" />\n</a></div>","metadata":{"date":"2019-08-21T00:00:00.000Z","title":"NPM package deployment using YAML GitHub Actions","icon":null,"type":null,"icon_mode":null,"icon_type":null,"ludum_dare":null,"placeholder":null,"game":null,"landscape":null,"lang":null},"fields":{"slug":"/blog/yaml-github-actions/"},"slug":"/yaml-github-actions"}},"pageContext":{"slug":"/yaml-github-actions"}},"staticQueryHashes":["2033956373","3784074786"]}