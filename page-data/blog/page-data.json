{"componentChunkName":"component---src-pages-blog-js","path":"/blog/","result":{"data":{"site":{"siteMetadata":{"title":"Jaxson Van Doorn","tagline":"I create software in **Victoria, BC**.","nav":{"blog":"/blog/","about":"/about/"}}},"allOrgContent":{"edges":[{"node":{"html":"<p>I enjoy doing both <i>frontend</i> &#x26; <i>backend</i> web design work as-well as the occasional <i>game</i> for fun.</p><p>Most of my open-source projects these days are with <a href=\"https://reactjs.org/\">React</a> + <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript\">JavaScript</a>, <a href=\"https://www.java.com\">Java</a> or <a href=\"https://www.lua.org/\">Lua</a>.</p><p>Currently studying my <strong>3rd</strong> year of <i>Computer Science</i> at <a href=\"https://uvic.ca\">University of Victoria</a>.</p><p>You can find some of my <a href=\"/\">projects</a> on this site.</p><p>More projects can be found on my <a href=\"https://github.com/woofers\">GitHub</a>, along with my <a href=\"https://jaxson.vandoorn.ca/resume/jaxsonvd-resume.pdf\">resume</a>.</p><p>If you need to get in touch or have any question regarding the content on this site, I can be contacted through <a href=\"mailto:jaxson.vandoorn@gmail.com\">jaxson.vandoorn@gmail.com</a>.</p>","metadata":{"title":"Hey I'm Jaxson","date":null,"icon":null,"type":"about","icon_mode":null,"icon_type":null,"ludum_dare":null,"placeholder":null,"game":null,"landscape":null,"lang":null},"fields":{"slug":"/about/"}}},{"node":{"html":"<p>Using <a href=\"https://daringfireball.net/projects/markdown/syntax\">Markdown</a> to write content is a joy; gone are the days of clunky and <a href=\"https://support.microsoft.com/en-ca/help/918793/how-to-optimize-word-2007-and-word-2010\">slow word processors</a>.  Leveraging <i>HTML</i> tags for complete control over your document when needed and falling back to a simple and constant syntax for simpler operations works great.  Most <a href=\"https://en.wikipedia.org/wiki/Version_control\">VCS</a> hosting platforms will recognize the extension and render it. For larger documents typically organizing sections using a table of contents with anchors is an easy and streamlined process.</p><div class=\"section\"><h1>Leveraging HTML Anchors</h1><p>In most documents I find myself doing something like this:</p><pre><code class=\"language-markdown\"><span class=\"token title important\"><span class=\"token punctuation\">#</span> Table of Contents</span>\n\n<span class=\"token list punctuation\">-</span> <span class=\"token url\">[<span class=\"token content\">Battle Snake 2019</span>](#orgf9ab559)</span>\n    <span class=\"token list punctuation\">-</span>   <span class=\"token url\">[<span class=\"token content\">Strategy</span>](#org889b147)</span>\n        <span class=\"token list punctuation\">-</span>   <span class=\"token url\">[<span class=\"token content\">Drawbacks</span>](#orgfb85c54)</span>\n    <span class=\"token list punctuation\">-</span>   <span class=\"token url\">[<span class=\"token content\">Battle History</span>](#orgcfa9a90)</span>\n    <span class=\"token list punctuation\">-</span>   <span class=\"token url\">[<span class=\"token content\">Screenshots</span>](#orgc2991ca)</span>\n    <span class=\"token list punctuation\">-</span>   <span class=\"token url\">[<span class=\"token content\">Usage</span>](#org7bfc615)</span>\n        <span class=\"token list punctuation\">-</span>   <span class=\"token url\">[<span class=\"token content\">Prerequisites</span>](#orge6d4f36)</span>\n        <span class=\"token list punctuation\">-</span>   <span class=\"token url\">[<span class=\"token content\">Test Server</span>](#orgf8ef52a)</span>\n        <span class=\"token list punctuation\">-</span>   <span class=\"token url\">[<span class=\"token content\">Run Locally</span>](#org73d091b)</span>\n        <span class=\"token list punctuation\">-</span>   <span class=\"token url\">[<span class=\"token content\">Deployment</span>](#org3a27619)</span>\n    <span class=\"token list punctuation\">-</span>   <span class=\"token url\">[<span class=\"token content\">Acknowledgments</span>](#org4a0f7fb)</span></code></pre><p>And then later on linking the header to an <i>HTML</i> anchor:</p><pre><code class=\"language-markdown\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>org889b147<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">##</span> Strategy</span></code></pre><p>Then any other place you want to refer to a section can be done using that ID:</p><pre><code class=\"language-markdown\">Another drawback of our <span class=\"token url\">[<span class=\"token content\">strategy</span>](#org889b147)</span> was ...</code></pre><p>This renders great in <a href=\"https://github.com/woofers/battle-snake-2018/blob/master/README.md#table-of-contents\">Github</a> and is done automatically when using <a href=\"https://orgmode.org/\">Org mode</a>'s Markdown exporter.</p></div><div class=\"section\"><h1>This Should Work in Bitbucket Cloud Right?</h1><h4 style='padding-left: 35px'><i class=\"fas fa-exclamation-triangle\"></i> You would be wrong</h4><p>Bitbucket Cloud very closely follows <a href=\"https://daringfireball.net/projects/markdown/syntax\">John Gruber</a>'s original Markdown specification with the exception of <i>HTML</i> tags.  Attempting to use <i>HTML</i> anchors will simply display the escaped <i>HTML</i> along with broken links.</p><div class=\"section\"><h2>Why?</h2><p>Straight from <a href=\"https://confluence.atlassian.com/bitbucket/readme-content-221449772.html#READMEcontent-ExtensionsandLanguages\">Atlassian</a>:</p><blockquote>We don't support arbitrary HTML in Markdown, for example &#x3C;table> tags.</blockquote><p>Bitbucket Cloud uses <a href=\"https://github.com/Python-Markdown/markdown\">Python Markdown</a> to render its Markdown files with the <a href=\"https://github.com/Python-Markdown/markdown/blob/b62ddeda02fadcd09def9354eb2ef46a7562a106/docs/reference.md#the-details\">Safe Mode</a> option <strong>escape</strong> enabled.  This option simply escapes all <i>HTML</i> tags to <code>plain text</code>.</p><p>This is inconvenient as it greatly limits the customizability of Bitbucket Markdown documents however it prevents Bitbucket from needing to worry about malicious <i>HTML</i> and <i>scripts</i> being injected.</p><p>I have seen <a href=\"https://confluence.atlassian.com/bitbucketserver/markdown-syntax-guide-776639995.html#Markdownsyntaxguide-readmeREADMEfiles\">claims</a> that <i>HTML</i> tags on the self-hosted Bitbucket Server are enabled however I am not able to confirm this.</p></div></div><div class=\"section\"><h1>How Does Github Handle It Then?</h1><p>Github uses <a href=\"https://github.com/gjtorikian/commonmarker\">CommonMarker</a> which is a Ruby wrapper of <a href=\"https://github.com/commonmark/cmark\">cmark</a>, a C implementation of the <a href=\"https://commonmark.org/\">CommonMark</a> spec which whitelists <a href=\"https://spec.commonmark.org/0.21/#raw-html\">some HTML tags</a>.</p><p>You won't be able to <a href=\"https://stackoverflow.com/a/14945782\">embed Youtube videos</a> however the spec for Github's markup rendering is <a href=\"https://github.com/github/markup\">documented</a> to a much greater extent than that of Bitbucket.</p></div><div class=\"section\"><h1>Exploiting HTML IDs</h1><p>While there is no solution to allow the use of raw <i>HTML</i> in Bitbucket documents, anchors to headers and table of contents can still be displayed in Bitbucket Cloud.</p><div class=\"section\"><h2>Anchors</h2><p>This can be done by utilizing the fact that all Markdown headers when rendered in Bitbucket will contain an <i>HTML ID</i> in the form:</p><p><code>markdown-header-[kebab-case-header]</code></p><p>For example anchoring to this section in Bitbucket would be done with:</p><p><code>markdown-header-anchors</code></p><p>All <strong>spaces</strong> will be replaced with <strong>hyphens</strong> and all <strong>special characters</strong> (<i>including dots</i>) will be <strong>removed</strong>.  The ID will also be all <strong>lower-case</strong>.</p><p>Linking to the <strong>strategy</strong> section from our previous example would look like:</p><pre><code class=\"language-markdown\">Another drawback of our <span class=\"token url\">[<span class=\"token content\">strategy</span>](#markdown-header-strategy)</span> was ...</code></pre><p>This is not ideal as it won't work in other Markdown renderers however it does allow the use of anchors for those who plan to display content exclusively in Bitbucket.  An <i>HTML</i> anchor tag can't be enterted for compatibility since Bitbucket will render it as plain-text.</p></div><div class=\"section\"><h2>Table of Contents</h2><p>While the above technique of using anchors could be employed to manually generate a table of contents, a better solution does exist.  By simply inserting the TOC directive as follows, a table of contents should be generated in-place:</p><pre><code class=\"language-markdown\">[TOC]</code></pre></div><div class=\"section\"><h2>Why Does This Work?</h2><p>The short answer is that the <a href=\"https://confluence.atlassian.com/bitbucket/add-a-table-of-contents-to-a-wiki-221451163.html\">Bitbucket Wiki</a> documents this directive.  The more in-depth answer is that the Python Markdown extension <a href=\"https://github.com/Python-Markdown/markdown/blob/master/docs/extensions/toc.md\">TOC</a> is being used.  This means that this solution will only work for any renderers powered by Python Markdown.</p></div></div><div class=\"section\"><h1>Too Much Trouble for Anchors?</h1><p>For those who were hoping Markdown would be the one true universal format, <strong>its not there</strong> <i>yet</i>.  For now to avoid all of this craziness I would recommend simply using Github.  However if you are really stuck with the Bitbucket ecosystem, <i>as I am at work</i>, the following should do the trick.</p></div>","metadata":{"title":"Using Anchors in Bitbucket Markdown Documents","date":"October 23, 2018","icon":null,"type":null,"icon_mode":null,"icon_type":null,"ludum_dare":null,"placeholder":null,"game":null,"landscape":null,"lang":null},"fields":{"slug":"/blog/anchors-in-bitbucket/"}}},{"node":{"html":"<p>Recently <a href=\"http://github.com\">GitHub</a> announced that <a href=\"https://github.com/features/actions\">GitHub Actions</a> will be <a href=\"https://github.blog/2019-08-08-github-actions-now-supports-ci-cd/\">moving away</a> from the original <a href=\"https://github.com/hashicorp/hcl\">HCL</a> syntax in-favour of a <a href=\"https://yaml.org/\">YAML</a> format similar to <a href=\"https://travis-ci.org/\">Travis CI</a> and <a href=\"https://bitbucket.org/product/features/pipelines\">Bitbucket Pipelines</a>.  This means that <a href=\"https://github.com/hashicorp/hcl\">HCL</a> style actions will no longer work <a href=\"https://developer.github.com/actions/\">after September 30, 2019</a>.  It is possible to migrate using a <a href=\"https://help.github.com/en/articles/migrating-github-actions-from-hcl-syntax-to-yaml-syntax\">migration script</a> however in-some cases it may be required to reconfigure.</p><p>This particular issue occurred to me as actions which return a neutral result seem to fail the whole build with the <a href=\"https://yaml.org/\">YAML</a> format.  This means that using <a href=\"https://github.com/actions/bin/tree/master/filter/bin\">actions/bin/filter</a> to trigger a deploy would fail the build unless a release tag was found.  With this in mind, reconfiguring my <a href=\"https://github.com/features/actions\">GitHub Actions</a> seemed like the best choice.</p><div class=\"section\"><h1>Desired Behaviour</h1><p>My particular use of <a href=\"https://github.com/features/actions\">GitHub Actions</a> is for deploying my small <a href=\"https://docs.npmjs.com/creating-node-js-modules\">NPM packages</a>.</p><p>To keep it simple I wanted the following to occur:</p><ul><li>Install dependencies, Build and Test package on each commit</li><li>Publish package if a release tag was created</li></ul></div><div class=\"section\"><h1>Creating the Action Configuration</h1><p>Create the file <code>.github/workflows/workflow.yml</code></p><div class=\"section\"><h2>Checking for Tag</h2><p>This method simply builds and tests the package on any commit.</p><p>Then if it finds a tag starting with <strong>v</strong>, it will trigger a deploy.</p><p>So if a <a href=\"https://help.github.com/en/articles/creating-releases\">GitHub Release</a> is created with the tag <strong>v2.3.4</strong>, it will trigger a deploy.</p><p>This is a bit naive however for my purposes I usually don't tag unless its a release.</p><p>One advantage of checking for a tag this way is that it cuts down on unneeded builds as a whole build can only ever run 1 or 2 times (2 in the case a build is deployed).</p><p>The <a href=\"https://github.com/features/actions\">GitHub Actions</a> docs mentions being able to <a href=\"https://help.github.com/en/articles/workflow-syntax-for-github-actions#example-restricting-the-workflow-run-to-specific-refs-and-paths\">restrict actions</a> to certain branches or tags however I could not get this to work.</p><pre><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> build <span class=\"token comment\"># Name Action Build</span>\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>push<span class=\"token punctuation\">]</span>  <span class=\"token comment\"># Trigger on push</span>\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest                         <span class=\"token comment\"># Run on Ubuntu Docker image</span>\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout Repo                          <span class=\"token comment\"># Checkout repo</span>\n      <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v1\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Use Node.js                            <span class=\"token comment\"># Configure Node.js</span>\n      <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v1\n      <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'12.9'</span>                       <span class=\"token comment\"># Set Node.js Version</span>\n        <span class=\"token key atrule\">registry-url</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'https://registry.npmjs.org'</span> <span class=\"token comment\"># Set Node.js reigistry</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy Info                            <span class=\"token comment\"># Print GitHub Deploy info</span>\n      <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">GITHUB_CONTEXT</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> toJson(github) <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> echo \"$GITHUB_CONTEXT\"\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install                                <span class=\"token comment\"># Install dependancies</span>\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm install\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build                                  <span class=\"token comment\"># Build app if needed</span>\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run build <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>if<span class=\"token punctuation\">-</span>present\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Test\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run test <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>if<span class=\"token punctuation\">-</span>present               <span class=\"token comment\"># Run tests if needed</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Publish\n      <span class=\"token key atrule\">if</span><span class=\"token punctuation\">:</span> startsWith(github.ref<span class=\"token punctuation\">,</span> 'refs/tags/v')    <span class=\"token comment\"># Check if publish step should run</span>\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm publish <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>access public             <span class=\"token comment\"># Publish package</span>\n      <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">NODE_AUTH_TOKEN</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.NPM_AUTH_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token comment\"># Set NPM auth token from GitHub Secrets</span></code></pre></div><div class=\"section\"><h2>Checking for a Release</h2><p>If you found the previous method too naive, you may want to check for a <a href=\"https://help.github.com/en/articles/creating-releases\">GitHub Release</a> before triggering a deploy.</p><p>The drawback to this is that a few extraneous builds will be triggered as the <code>release</code> event will fire both when the release is <code>created</code> and <code>published</code>.  As far as I am aware this can not be restricted using the <code>on</code> property.</p><p>To ensure we only deploy once, we will indicate to only run the <strong>Publish</strong> step when a release is <code>published</code>.</p><pre><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> build\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>     <span class=\"token comment\"># Run build on push (commit in most cases)</span>\n    <span class=\"token key atrule\">tag</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># Only run build if not tagged</span>\n  <span class=\"token key atrule\">release</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># Run build on release</span>\n    <span class=\"token key atrule\">tag</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> v*    <span class=\"token comment\"># Check for release tag</span>\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest                         <span class=\"token comment\"># Run on Ubuntu Docker image</span>\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout Repo                          <span class=\"token comment\"># Checkout repo</span>\n      <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v1\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Use Node.js                            <span class=\"token comment\"># Configure Node.js</span>\n      <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v1\n      <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'12.9'</span>                       <span class=\"token comment\"># Set Node.js Version</span>\n        <span class=\"token key atrule\">registry-url</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'https://registry.npmjs.org'</span> <span class=\"token comment\"># Set Node.js reigistry</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy Info                            <span class=\"token comment\"># Print GitHub Deploy info</span>\n      <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">GITHUB_CONTEXT</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> toJson(github) <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> echo \"$GITHUB_CONTEXT\"\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install                                <span class=\"token comment\"># Install dependancies</span>\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm install\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build                                  <span class=\"token comment\"># Build app if needed</span>\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run build <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>if<span class=\"token punctuation\">-</span>present\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Test\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run test <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>if<span class=\"token punctuation\">-</span>present               <span class=\"token comment\"># Run tests if needed</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Publish\n      <span class=\"token key atrule\">if</span><span class=\"token punctuation\">:</span> github.event_name == 'release' &amp;&amp; github.event.action == 'published' <span class=\"token comment\"># Check if publish step should run</span>\n      <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm publish <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>access public             <span class=\"token comment\"># Publish package</span>\n      <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">NODE_AUTH_TOKEN</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.NPM_AUTH_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token comment\"># Set NPM auth token from GitHub Secrets</span></code></pre></div></div><div class=\"section\"><h1>Setting NPM Auth Token Secret</h1><p>Simply go to your repo <strong>Settings</strong> and select the <strong>Secrets</strong> tab.</p><p>Then <strong>Add a new secret</strong> with the <strong>Name</strong> of <code>NPM_AUTH_TOKEN</code> and set the <strong>Value</strong> to your <a href=\"https://docs.npmjs.com/creating-and-viewing-authentication-tokens\">NPM token</a>.</p></div><div class=\"section\"><h1>Adding the GitHub Actions badge</h1><p><a href=\"http://github.com\">GitHub</a> now offers an undocumented API which will return nice <a href=\"https://travis-ci.org/\">Travis CI</a> like status badge.</p><p>An example can be seen on the <a href=\"https://github.com/actions/toolkit\">actions/toolkit</a> repo.</p><p>The format for the API is as follows:</p><pre><code class=\"language-bash\">https://github.com/<span class=\"token operator\">&lt;</span>user<span class=\"token operator\">|</span>org<span class=\"token operator\">></span>/<span class=\"token operator\">&lt;</span>repo<span class=\"token operator\">></span>/<span class=\"token operator\">&lt;</span>action_name<span class=\"token operator\">></span>/badge.svg</code></pre><p>The <code>action_name</code> propery is the <code>name</code> field in the <a href=\"https://yaml.org/\">YAML</a> which in this case is <code>build</code>.</p><p>An example of this would be:</p><pre><code class=\"language-bash\">https://github.com/woofers/ludum-dare-badges/workflows/build/badge.svg</code></pre><p>To make it even nicer we can link the badge to our repo's actions page:</p><pre><code class=\"language-markdown\"><span class=\"token url\">[<span class=\"token content\">![img</span>](https://github.com/woofers/ludum-dare-badges/workflows/build/badge.svg)</span>](https://github.com/woofers/ludum-dare-badges/actions)</code></pre><p>It will look something like this:</p><a style=\"color: rgba(0,0,0,0)\" href=\"https://github.com/woofers/ludum-dare-badges/actions\">\n  <img style=\"border-radius: 0\" src=\"https://github.com/woofers/ludum-dare-badges/workflows/build/badge.svg\" />\n</a></div>","metadata":{"title":"NPM package deployment using YAML GitHub Actions","date":"August 21, 2019","icon":null,"type":null,"icon_mode":null,"icon_type":null,"ludum_dare":null,"placeholder":null,"game":null,"landscape":null,"lang":null},"fields":{"slug":"/blog/yaml-github-actions/"}}},{"node":{"html":"<div class=\"section\"><h1>Instructions</h1><p>Play as a fox who has <i>super digging abilities</i> and dig through a world invaded by robot crocodiles to reach the end of the level.</p><div class=\"section\"><h2>Hints</h2><ul><li>Totem poles will save your progress.</li><li>Rock tiles will block your fox from digging.</li><li>Digging up on un-suspecting enemies will <i>disable them</i> however tread lightly as they may start following you.</li></ul></div><div class=\"section\"><h2>Controls</h2><ul>\n  <li><strong>A</strong> and <strong>D</strong> to move <strong>left</strong> and <strong>right</strong> respectivly.</li>\n  <li><strong>W</strong> and <strong>S</strong> to dig <strong>up</strong> and <strong>down</strong> respectivly.</li>\n  <li><strong>R</strong> to perform a kick-flip attack.</li>\n  <li><strong>Space</strong> to jump.</li>\n  <li><i class=\"fas fa-arrow-up\"></i>\n      <i class=\"fas fa-arrow-left\"></i>\n      <i class=\"fas fa-arrow-down\"></i>\n      <i class=\"fas fa-arrow-right\"></i> to navigate menus.</li>\n\n  <li><strong>Escape</strong> <i class=\"far fa-times-circle\"></i> to pause or return to the previous menu page.</li>\n  <li><strong>Enter</strong> <i class=\"far fa-check-circle\"></i> to select the active menu item.</li>\n</ul></div></div>","metadata":{"title":"Fox Hole","date":null,"icon":"game/assets/images/favicon.png","type":"game","icon_mode":"pixelated","icon_type":"rounded","ludum_dare":null,"placeholder":null,"game":"game/index.html","landscape":null,"lang":"frame"},"fields":{"slug":"/projects/fox-hole/"}}},{"node":{"html":"<div class=\"section\"><h1>Instructions</h1><p>Play as an alien bounty hunter attempting to amass a small fortune by capturing human manned ships using a state-of-the-art vortex laser.</p><p>You will be payed by some of the galaxies top scientists who aim to study these humans.</p><p>Be careful as hitting human ships will deplete your life meter and more importantly will lead to unwarranted attention and hence will detract from your score/pay.</p><p>However capturing a human will restore a small amount of life and the increase your score.  Additionally flying past human ships will also add to your score.</p><p>Capture as many ships as possible to achieve a high payday and satisfy the scientists.</p><div class=\"section\"><h2>Controls</h2><ul><li><strong>Arrows Keys</strong> - Control your ship</li><li><strong>X Key</strong> - Fire vortex laser / Advance menus</li><li><strong>Z Key</strong> - Change camera settings (menu)</li></ul></div><div class=\"section\"><h2>About</h2><p>Small game created in under 48 hours for <a href=\"https://ldjam.com/events/ludum-dare/44\">Ludum Dare 44</a> with the theme of <strong>Your life is currency</strong>.</p><p>Game is built using <a href=\"https://www.lua.org/\">Lua</a> and <a href=\"https://moonscript.org/\">MoonScript</a>, with the <a href=\"https://www.lexaloffle.com/pico-8.php\">PICO-8</a> Fantasy Console.</p><p>Entered as a <a href=\"https://ldjam.com/events/ludum-dare/44\">Ludum Dare 44</a> <strong>compo</strong> game.</p></div></div>","metadata":{"title":"ALIEN, e x p a n s i o n .","date":null,"icon":"game/favicon.png","type":"game","icon_mode":"pixelated","icon_type":"normal","ludum_dare":"44/alien-e-x-p-a-n-s-i-o-n","placeholder":"game/placeholder.png","game":"game/index.js","landscape":"nil","lang":"pico"},"fields":{"slug":"/projects/ludum-dare-44/"}}},{"node":{"html":"<div class=\"section\"><h1>Instructions</h1><p>Dodge eels and crabs to obtain a high-score.</p><div class=\"section\"><h2>Scoring</h2><ul><li>Lobsters are worth <strong>7 points</strong>.</li><li>Eeels count towards <strong>15 points</strong>.</li></ul></div><div class=\"section\"><h2>Controls</h2><ul>\n  <li>\n    <strong>A</strong> and <strong>D</strong> or <i class=\"fa fa-arrow-left\"></i>\n    and <i class=\"fa fa-arrow-right\"></i> to dodge enemies.\n  </li>\n</ul></div></div>","metadata":{"title":"Whale","date":null,"icon":"game/assets/images/icon.png","type":"game","icon_mode":"auto","icon_type":"rounded","ludum_dare":null,"placeholder":null,"game":"game/index.html","landscape":"nil","lang":"frame"},"fields":{"slug":"/projects/whale/"}}},{"node":{"html":"<div class=\"section\"><h1>Story</h1><p>Commander DB (Dog Bonez) is in a pickle. He left his Nano-Bulbous-Gravitron-Phaser v3, a cosmic dog toy, at home. His issue is that his home, the kennel planet, is on the other side of the galaxy 5 000 000 dog years away.</p><p>Using nearby planets' gravitational pull, DB aims to use the power of ORBITing gravity to make it home a couple of dog years shorter.</p></div><div class=\"section\"><h1>Instructions</h1><p>Hop to the orbit of the next planet using the <strong>SPACE</strong> key. The tip of the ship should be pointed at the planet you intend to move to. If you miscalculate the trajectory of the planet, you will orbit in-space forever and need to restart. You can not move to planets in the opposite direction of travel as the gravitational force is moving strongly to the right and attempting to move against it will result in the shuttle doing a flip.</p><div class=\"section\"><h2>Controls</h2><ul><li><strong>Space</strong> - Jump planets / menu</li></ul></div><div class=\"section\"><h2>About</h2><p><strong>DOGE: BOIS</strong> - Dangerous Orbit Genesis: Endgame; Beyond our Intergalactic Space</p><p>Small game created in under 48 hours for <a href=\"https://itch.io/jam/discord-jam-2\">Discord Jam 2</a> with the theme of <strong>Space</strong>.</p><p>Our game takes place in <strong>space</strong> and is controlled only using the <strong>SPACE</strong> key.</p><p>Game is built using <a href=\"https://www.lua.org/\">Lua</a>, with the <a href=\"https://www.lexaloffle.com/pico-8.php\">PICO-8</a> Fantasy Console.</p></div></div>","metadata":{"title":"DOGE: BOIS","date":null,"icon":"game/favicon.png","type":"game","icon_mode":"pixelated","icon_type":"normal","ludum_dare":null,"placeholder":"game/placeholder.png","game":"game/index.js","landscape":"nil","lang":"pico"},"fields":{"slug":"/projects/discord-jam-2/"}}}]}},"pageContext":{}}}