{"version":3,"sources":["webpack:///./src/components/profile.js","webpack:///./src/templates/about.js","webpack:///./src/components/title.js","webpack:///./src/components/page.js","webpack:///./src/components/content.js"],"names":["Profile","p","photo","css","width","height","Object","core_browser_esm","src","img","alt","AboutTemplate","render","post","this","props","data","orgContent","profile","meta","profile_alt","page","title","site","siteMetadata","profile_Profile","margins","content","html","hideTitle","Component","pageQuery","Title","Helmet_default","a","property","children","Page","title_Title","hide","name","styles","org","small","Content","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","dangerouslySetInnerHTML","__html"],"mappings":"sJAGaA,EAAU,SAAAC,GACrB,IAAMC,EAAQC,YAAH,aACIF,EAAEG,MADN,eAEKH,EAAEI,OAFP,oHAWX,OACEC,OAAAC,EAAA,EAAAD,CAAA,WACEA,OAAAC,EAAA,EAAAD,CAAA,OAAKH,IAAKD,EAAOM,IAAKP,EAAEQ,IAAKC,IAAKT,EAAES,2DCVpCC,4FACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,WACrBC,EAAYL,EAAKM,KAAjBD,QACFR,EAAMG,EAAKM,KAAKC,YACtB,OACEd,OAAAC,EAAA,EAAAD,CAACe,EAAA,EAAD,CAAMC,MAAOT,EAAKM,KAAKG,MAAOC,KAAMT,KAAKC,MAAMC,KAAKO,KAAKC,aAAaF,OACpEhB,OAAAC,EAAA,EAAAD,CAACmB,EAAD,CAASrB,MAAOsB,IAAQR,QAASb,OAAQqB,IAAQR,QAAST,IAAKS,EAASR,IAAKA,IAC7EJ,OAAAC,EAAA,EAAAD,CAACqB,EAAA,EAAD,CAASC,KAAMf,EAAKe,KAAMC,WAAW,SARjBC,aAgBfC,GAFEpB,YAEO,mFCfTqB,EAAQ,SAAA/B,GAAC,OACpBK,OAAAC,EAAA,EAAAD,CAAA,WACEA,OAAAC,EAAA,EAAAD,CAAC2B,EAAAC,EAAD,KACE5B,OAAAC,EAAA,EAAAD,CAAA,QAAM6B,SAAS,WAAWR,QAAS1B,EAAEqB,QACrChB,OAAAC,EAAA,EAAAD,CAAA,cATagB,EASKrB,EAAEqB,MATAC,EASOtB,EAAEsB,KAR5BD,EACKA,EAAV,MAAqBC,EADFA,KAUhBtB,EAAEmC,UAXW,IAACd,EAAOC,mCCAnB,IAAMc,EAAO,SAAApC,GAAC,OACnBK,OAAAC,EAAA,EAAAD,CAACgC,EAAD,CAAOhB,MAAOrB,EAAEqB,MAAOC,KAAMtB,EAAEsB,MAC7BjB,OAAAC,EAAA,EAAAD,CAAA,eACGL,EAAEmC,6GCFHG,EAAI,CAAAC,KAAA,SAAAC,OAAA,qCAMJC,EAAMvC,YAAH,qBAEYuB,IAAQiB,MAFpB,wBAOIC,EAAU,SAAA3C,GAAC,OACtBK,OAAAuC,EAAA,EAAAvC,CAAA,OAAKH,IAAKF,EAAE4B,UAAY,CAACa,EAAKH,GAAQG,EACjCI,wBAAyB,CAAEC,OAAQ9C,EAAE2B","file":"component---src-templates-about-js-8d862ab972045e228bc0.js","sourcesContent":["import React from 'react'\nimport { css } from '@emotion/core'\n\nexport const Profile = p => {\n  const photo = css`\n    max-width: ${p.width};\n    max-height: ${p.height};\n    float: right;\n    display: block;\n    @media screen and (max-width: 700px) {\n      float: none;\n      margin: 1em auto !important;\n      width: 50%;\n    }\n  `\n  return (\n    <div>\n      <img css={photo} src={p.img} alt={p.alt} />\n    </div>\n  )\n}\n","import React, { Component } from \"react\"\nimport { Content } from '../components/content'\nimport { Page } from '../components/page'\nimport { Profile } from '../components/profile'\nimport { margins } from '../components/globals'\nimport { graphql } from 'gatsby'\n\nclass AboutTemplate extends Component {\n  render() {\n    const post = this.props.data.orgContent\n    const { profile } = post.meta\n    const alt = post.meta.profile_alt\n    return (\n      <Page title={post.meta.title} site={this.props.data.site.siteMetadata.title}>\n        <Profile width={margins.profile} height={margins.profile} img={profile} alt={alt} />\n        <Content html={post.html} hideTitle={true} />\n      </Page>\n    )\n  }\n}\n\nexport default AboutTemplate\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    ...Title\n    orgContent(fields: {slug: {eq: $slug}}) {\n      ...Content\n    }\n  }\n`\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\nconst makeTitle = (title, site) => {\n  if (!title) return site\n  return `${title} - ${site}`\n}\n\nexport const Title = p => (\n  <div>\n    <Helmet>\n      <meta property=\"og:title\" content={p.title} />\n      <title>{makeTitle(p.title, p.site)}</title>\n    </Helmet>\n    {p.children}\n  </div>\n)\n","import React from 'react'\nimport { Title } from '../components/title'\n\nexport const Page = p => (\n  <Title title={p.title} site={p.site}>\n    <article>\n      {p.children}\n    </article>\n  </Title>\n)\n","import React from 'react'\nimport { margins } from '../components/globals'\nimport { css } from '@emotion/core'\n\nconst hide = css`\n  div:first-child h1 {\n    display: none;\n  }\n`\n\nconst org = css`\n  div {\n    margin-bottom: ${margins.small};\n    text-align: 'left';\n  }\n`\n\nexport const Content = p => (\n  <div css={p.hideTitle ? [org, hide] : org}\n       dangerouslySetInnerHTML={{ __html: p.html }} />\n)\n"],"sourceRoot":""}