{"version":3,"sources":["webpack:///./node_modules/oast-to-hast/lib/transform.js","webpack:///./node_modules/orga/src/node.js","webpack:///./node_modules/oast-to-hast/node_modules/unist-builder/index.js","webpack:///./node_modules/orga/src/inline.js","webpack:///./node_modules/hast-util-to-html/node_modules/unist-util-is/convert.js","webpack:///./node_modules/hast-util-to-html/lib/omission/util/siblings.js","webpack:///./node_modules/orga/src/defaults.js","webpack:///./node_modules/hast-util-is-element/index.js","webpack:///./node_modules/hast-util-whitespace/index.js","webpack:///./node_modules/hast-util-to-html/lib/omission/util/white-space-left.js","webpack:///./node_modules/hast-util-to-html/lib/omission/closing.js","webpack:///./node_modules/hast-util-to-html/lib/omission/omission.js","webpack:///./node_modules/hast-util-to-html/lib/one.js","webpack:///./node_modules/hast-util-to-html/lib/all.js","webpack:///./node_modules/hast-util-to-html/lib/text.js","webpack:///./node_modules/hast-util-to-html/node_modules/stringify-entities/index.js","webpack:///./node_modules/oast-to-hast/lib/index.js","webpack:///./node_modules/oast-to-hast/lib/handlers/index.js","webpack:///./node_modules/oast-to-hast/lib/handlers/root.js","webpack:///./node_modules/oast-to-hast/lib/handlers/section.js","webpack:///./node_modules/oast-to-hast/lib/handlers/headline.js","webpack:///./node_modules/oast-to-hast/lib/handlers/block.js","webpack:///./node_modules/oast-to-hast/lib/handlers/_highlight.js","webpack:///./node_modules/oast-to-hast/lib/handlers/_load-prism-language.js","webpack:///./node_modules/oast-to-hast/lib/prism-language-dependencies.js","webpack:///./node_modules/prismjs/components/prism-abap.js","webpack:///./node_modules/prismjs/components/prism-abap.min.js","webpack:///./node_modules/prismjs/components/prism-abnf.js","webpack:///./node_modules/prismjs/components/prism-abnf.min.js","webpack:///./node_modules/prismjs/components/prism-actionscript.js","webpack:///./node_modules/prismjs/components/prism-actionscript.min.js","webpack:///./node_modules/prismjs/components/prism-ada.js","webpack:///./node_modules/prismjs/components/prism-ada.min.js","webpack:///./node_modules/prismjs/components/prism-apacheconf.js","webpack:///./node_modules/prismjs/components/prism-apacheconf.min.js","webpack:///./node_modules/prismjs/components/prism-apl.js","webpack:///./node_modules/prismjs/components/prism-apl.min.js","webpack:///./node_modules/prismjs/components/prism-applescript.js","webpack:///./node_modules/prismjs/components/prism-applescript.min.js","webpack:///./node_modules/prismjs/components/prism-arduino.js","webpack:///./node_modules/prismjs/components/prism-arduino.min.js","webpack:///./node_modules/prismjs/components/prism-arff.js","webpack:///./node_modules/prismjs/components/prism-arff.min.js","webpack:///./node_modules/prismjs/components/prism-asciidoc.js","webpack:///./node_modules/prismjs/components/prism-asciidoc.min.js","webpack:///./node_modules/prismjs/components/prism-asm6502.js","webpack:///./node_modules/prismjs/components/prism-asm6502.min.js","webpack:///./node_modules/prismjs/components/prism-aspnet.js","webpack:///./node_modules/prismjs/components/prism-aspnet.min.js","webpack:///./node_modules/prismjs/components/prism-autohotkey.js","webpack:///./node_modules/prismjs/components/prism-autohotkey.min.js","webpack:///./node_modules/prismjs/components/prism-autoit.js","webpack:///./node_modules/prismjs/components/prism-autoit.min.js","webpack:///./node_modules/prismjs/components/prism-bash.js","webpack:///./node_modules/prismjs/components/prism-bash.min.js","webpack:///./node_modules/prismjs/components/prism-basic.js","webpack:///./node_modules/prismjs/components/prism-basic.min.js","webpack:///./node_modules/prismjs/components/prism-batch.js","webpack:///./node_modules/prismjs/components/prism-batch.min.js","webpack:///./node_modules/prismjs/components/prism-bison.js","webpack:///./node_modules/prismjs/components/prism-bison.min.js","webpack:///./node_modules/prismjs/components/prism-bnf.js","webpack:///./node_modules/prismjs/components/prism-bnf.min.js","webpack:///./node_modules/prismjs/components/prism-brainfuck.js","webpack:///./node_modules/prismjs/components/prism-brainfuck.min.js","webpack:///./node_modules/prismjs/components/prism-bro.js","webpack:///./node_modules/prismjs/components/prism-bro.min.js","webpack:///./node_modules/prismjs/components/prism-c.js","webpack:///./node_modules/prismjs/components/prism-c.min.js","webpack:///./node_modules/prismjs/components/prism-cil.js","webpack:///./node_modules/prismjs/components/prism-cil.min.js","webpack:///./node_modules/prismjs/components/prism-clike.js","webpack:///./node_modules/prismjs/components/prism-clike.min.js","webpack:///./node_modules/prismjs/components/prism-clojure.js","webpack:///./node_modules/prismjs/components/prism-clojure.min.js","webpack:///./node_modules/prismjs/components/prism-cmake.js","webpack:///./node_modules/prismjs/components/prism-cmake.min.js","webpack:///./node_modules/prismjs/components/prism-coffeescript.js","webpack:///./node_modules/prismjs/components/prism-coffeescript.min.js","webpack:///./node_modules/prismjs/components/prism-core.js","webpack:///./node_modules/prismjs/components/prism-core.min.js","webpack:///./node_modules/prismjs/components/prism-cpp.js","webpack:///./node_modules/prismjs/components/prism-cpp.min.js","webpack:///./node_modules/prismjs/components/prism-crystal.js","webpack:///./node_modules/prismjs/components/prism-crystal.min.js","webpack:///./node_modules/prismjs/components/prism-csharp.js","webpack:///./node_modules/prismjs/components/prism-csharp.min.js","webpack:///./node_modules/prismjs/components/prism-csp.js","webpack:///./node_modules/prismjs/components/prism-csp.min.js","webpack:///./node_modules/prismjs/components/prism-css-extras.js","webpack:///./node_modules/prismjs/components/prism-css-extras.min.js","webpack:///./node_modules/prismjs/components/prism-css.js","webpack:///./node_modules/prismjs/components/prism-css.min.js","webpack:///./node_modules/prismjs/components/prism-d.js","webpack:///./node_modules/prismjs/components/prism-d.min.js","webpack:///./node_modules/prismjs/components/prism-dart.js","webpack:///./node_modules/prismjs/components/prism-dart.min.js","webpack:///./node_modules/prismjs/components/prism-diff.js","webpack:///./node_modules/prismjs/components/prism-diff.min.js","webpack:///./node_modules/prismjs/components/prism-django.js","webpack:///./node_modules/prismjs/components/prism-django.min.js","webpack:///./node_modules/prismjs/components/prism-docker.js","webpack:///./node_modules/prismjs/components/prism-docker.min.js","webpack:///./node_modules/prismjs/components/prism-ebnf.js","webpack:///./node_modules/prismjs/components/prism-ebnf.min.js","webpack:///./node_modules/prismjs/components/prism-eiffel.js","webpack:///./node_modules/prismjs/components/prism-eiffel.min.js","webpack:///./node_modules/prismjs/components/prism-ejs.js","webpack:///./node_modules/prismjs/components/prism-ejs.min.js","webpack:///./node_modules/prismjs/components/prism-elixir.js","webpack:///./node_modules/prismjs/components/prism-elixir.min.js","webpack:///./node_modules/prismjs/components/prism-elm.js","webpack:///./node_modules/prismjs/components/prism-elm.min.js","webpack:///./node_modules/prismjs/components/prism-erb.js","webpack:///./node_modules/prismjs/components/prism-erb.min.js","webpack:///./node_modules/prismjs/components/prism-erlang.js","webpack:///./node_modules/prismjs/components/prism-erlang.min.js","webpack:///./node_modules/prismjs/components/prism-flow.js","webpack:///./node_modules/prismjs/components/prism-flow.min.js","webpack:///./node_modules/prismjs/components/prism-fortran.js","webpack:///./node_modules/prismjs/components/prism-fortran.min.js","webpack:///./node_modules/prismjs/components/prism-fsharp.js","webpack:///./node_modules/prismjs/components/prism-fsharp.min.js","webpack:///./node_modules/prismjs/components/prism-gcode.js","webpack:///./node_modules/prismjs/components/prism-gcode.min.js","webpack:///./node_modules/prismjs/components/prism-gedcom.js","webpack:///./node_modules/prismjs/components/prism-gedcom.min.js","webpack:///./node_modules/prismjs/components/prism-gherkin.js","webpack:///./node_modules/prismjs/components/prism-gherkin.min.js","webpack:///./node_modules/prismjs/components/prism-git.js","webpack:///./node_modules/prismjs/components/prism-git.min.js","webpack:///./node_modules/prismjs/components/prism-glsl.js","webpack:///./node_modules/prismjs/components/prism-glsl.min.js","webpack:///./node_modules/prismjs/components/prism-gml.js","webpack:///./node_modules/prismjs/components/prism-gml.min.js","webpack:///./node_modules/prismjs/components/prism-go.js","webpack:///./node_modules/prismjs/components/prism-go.min.js","webpack:///./node_modules/prismjs/components/prism-graphql.js","webpack:///./node_modules/prismjs/components/prism-graphql.min.js","webpack:///./node_modules/prismjs/components/prism-groovy.js","webpack:///./node_modules/prismjs/components/prism-groovy.min.js","webpack:///./node_modules/prismjs/components/prism-haml.js","webpack:///./node_modules/prismjs/components/prism-haml.min.js","webpack:///./node_modules/prismjs/components/prism-handlebars.js","webpack:///./node_modules/prismjs/components/prism-handlebars.min.js","webpack:///./node_modules/prismjs/components/prism-haskell.js","webpack:///./node_modules/prismjs/components/prism-haskell.min.js","webpack:///./node_modules/prismjs/components/prism-haxe.js","webpack:///./node_modules/prismjs/components/prism-haxe.min.js","webpack:///./node_modules/prismjs/components/prism-hcl.js","webpack:///./node_modules/prismjs/components/prism-hcl.min.js","webpack:///./node_modules/prismjs/components/prism-hpkp.js","webpack:///./node_modules/prismjs/components/prism-hpkp.min.js","webpack:///./node_modules/prismjs/components/prism-hsts.js","webpack:///./node_modules/prismjs/components/prism-hsts.min.js","webpack:///./node_modules/prismjs/components/prism-http.js","webpack:///./node_modules/prismjs/components/prism-http.min.js","webpack:///./node_modules/prismjs/components/prism-ichigojam.js","webpack:///./node_modules/prismjs/components/prism-ichigojam.min.js","webpack:///./node_modules/prismjs/components/prism-icon.js","webpack:///./node_modules/prismjs/components/prism-icon.min.js","webpack:///./node_modules/prismjs/components/prism-inform7.js","webpack:///./node_modules/prismjs/components/prism-inform7.min.js","webpack:///./node_modules/prismjs/components/prism-ini.js","webpack:///./node_modules/prismjs/components/prism-ini.min.js","webpack:///./node_modules/prismjs/components/prism-io.js","webpack:///./node_modules/prismjs/components/prism-io.min.js","webpack:///./node_modules/prismjs/components/prism-j.js","webpack:///./node_modules/prismjs/components/prism-j.min.js","webpack:///./node_modules/prismjs/components/prism-java.js","webpack:///./node_modules/prismjs/components/prism-java.min.js","webpack:///./node_modules/prismjs/components/prism-javadoc.js","webpack:///./node_modules/prismjs/components/prism-javadoc.min.js","webpack:///./node_modules/prismjs/components/prism-javadoclike.js","webpack:///./node_modules/prismjs/components/prism-javadoclike.min.js","webpack:///./node_modules/prismjs/components/prism-javascript.js","webpack:///./node_modules/prismjs/components/prism-javascript.min.js","webpack:///./node_modules/prismjs/components/prism-javastacktrace.js","webpack:///./node_modules/prismjs/components/prism-javastacktrace.min.js","webpack:///./node_modules/prismjs/components/prism-jolie.js","webpack:///./node_modules/prismjs/components/prism-jolie.min.js","webpack:///./node_modules/prismjs/components/prism-js-extras.js","webpack:///./node_modules/prismjs/components/prism-js-extras.min.js","webpack:///./node_modules/prismjs/components/prism-jsdoc.js","webpack:///./node_modules/prismjs/components/prism-jsdoc.min.js","webpack:///./node_modules/prismjs/components/prism-json.js","webpack:///./node_modules/prismjs/components/prism-json.min.js","webpack:///./node_modules/prismjs/components/prism-json5.js","webpack:///./node_modules/prismjs/components/prism-json5.min.js","webpack:///./node_modules/prismjs/components/prism-jsonp.js","webpack:///./node_modules/prismjs/components/prism-jsonp.min.js","webpack:///./node_modules/prismjs/components/prism-jsx.min.js","webpack:///./node_modules/prismjs/components/prism-julia.js","webpack:///./node_modules/prismjs/components/prism-julia.min.js","webpack:///./node_modules/prismjs/components/prism-keyman.js","webpack:///./node_modules/prismjs/components/prism-keyman.min.js","webpack:///./node_modules/prismjs/components/prism-kotlin.js","webpack:///./node_modules/prismjs/components/prism-kotlin.min.js","webpack:///./node_modules/prismjs/components/prism-latex.js","webpack:///./node_modules/prismjs/components/prism-latex.min.js","webpack:///./node_modules/prismjs/components/prism-less.js","webpack:///./node_modules/prismjs/components/prism-less.min.js","webpack:///./node_modules/prismjs/components/prism-liquid.js","webpack:///./node_modules/prismjs/components/prism-liquid.min.js","webpack:///./node_modules/prismjs/components/prism-lisp.js","webpack:///./node_modules/prismjs/components/prism-lisp.min.js","webpack:///./node_modules/prismjs/components/prism-livescript.js","webpack:///./node_modules/prismjs/components/prism-livescript.min.js","webpack:///./node_modules/prismjs/components/prism-lolcode.js","webpack:///./node_modules/prismjs/components/prism-lolcode.min.js","webpack:///./node_modules/prismjs/components/prism-lua.js","webpack:///./node_modules/prismjs/components/prism-lua.min.js","webpack:///./node_modules/prismjs/components/prism-makefile.js","webpack:///./node_modules/prismjs/components/prism-makefile.min.js","webpack:///./node_modules/prismjs/components/prism-markdown.js","webpack:///./node_modules/prismjs/components/prism-markdown.min.js","webpack:///./node_modules/prismjs/components/prism-markup-templating.js","webpack:///./node_modules/prismjs/components/prism-markup-templating.min.js","webpack:///./node_modules/prismjs/components/prism-markup.js","webpack:///./node_modules/prismjs/components/prism-markup.min.js","webpack:///./node_modules/prismjs/components/prism-matlab.js","webpack:///./node_modules/prismjs/components/prism-matlab.min.js","webpack:///./node_modules/prismjs/components/prism-mel.js","webpack:///./node_modules/prismjs/components/prism-mel.min.js","webpack:///./node_modules/prismjs/components/prism-mizar.js","webpack:///./node_modules/prismjs/components/prism-mizar.min.js","webpack:///./node_modules/prismjs/components/prism-monkey.js","webpack:///./node_modules/prismjs/components/prism-monkey.min.js","webpack:///./node_modules/prismjs/components/prism-n1ql.js","webpack:///./node_modules/prismjs/components/prism-n1ql.min.js","webpack:///./node_modules/prismjs/components/prism-n4js.js","webpack:///./node_modules/prismjs/components/prism-n4js.min.js","webpack:///./node_modules/prismjs/components/prism-nand2tetris-hdl.js","webpack:///./node_modules/prismjs/components/prism-nand2tetris-hdl.min.js","webpack:///./node_modules/prismjs/components/prism-nasm.js","webpack:///./node_modules/prismjs/components/prism-nasm.min.js","webpack:///./node_modules/prismjs/components/prism-nginx.js","webpack:///./node_modules/prismjs/components/prism-nginx.min.js","webpack:///./node_modules/prismjs/components/prism-nim.js","webpack:///./node_modules/prismjs/components/prism-nim.min.js","webpack:///./node_modules/prismjs/components/prism-nix.js","webpack:///./node_modules/prismjs/components/prism-nix.min.js","webpack:///./node_modules/prismjs/components/prism-nsis.js","webpack:///./node_modules/prismjs/components/prism-nsis.min.js","webpack:///./node_modules/prismjs/components/prism-objectivec.js","webpack:///./node_modules/prismjs/components/prism-objectivec.min.js","webpack:///./node_modules/prismjs/components/prism-ocaml.js","webpack:///./node_modules/prismjs/components/prism-ocaml.min.js","webpack:///./node_modules/prismjs/components/prism-opencl.js","webpack:///./node_modules/prismjs/components/prism-opencl.min.js","webpack:///./node_modules/prismjs/components/prism-oz.js","webpack:///./node_modules/prismjs/components/prism-oz.min.js","webpack:///./node_modules/prismjs/components/prism-parigp.js","webpack:///./node_modules/prismjs/components/prism-parigp.min.js","webpack:///./node_modules/prismjs/components/prism-parser.js","webpack:///./node_modules/prismjs/components/prism-parser.min.js","webpack:///./node_modules/prismjs/components/prism-pascal.js","webpack:///./node_modules/prismjs/components/prism-pascal.min.js","webpack:///./node_modules/prismjs/components/prism-perl.js","webpack:///./node_modules/prismjs/components/prism-perl.min.js","webpack:///./node_modules/prismjs/components/prism-php-extras.js","webpack:///./node_modules/prismjs/components/prism-php-extras.min.js","webpack:///./node_modules/prismjs/components/prism-php.js","webpack:///./node_modules/prismjs/components/prism-php.min.js","webpack:///./node_modules/prismjs/components/prism-phpdoc.js","webpack:///./node_modules/prismjs/components/prism-phpdoc.min.js","webpack:///./node_modules/prismjs/components/prism-plsql.js","webpack:///./node_modules/prismjs/components/prism-plsql.min.js","webpack:///./node_modules/prismjs/components/prism-powershell.js","webpack:///./node_modules/prismjs/components/prism-powershell.min.js","webpack:///./node_modules/prismjs/components/prism-processing.js","webpack:///./node_modules/prismjs/components/prism-processing.min.js","webpack:///./node_modules/prismjs/components/prism-prolog.js","webpack:///./node_modules/prismjs/components/prism-prolog.min.js","webpack:///./node_modules/prismjs/components/prism-properties.js","webpack:///./node_modules/prismjs/components/prism-properties.min.js","webpack:///./node_modules/prismjs/components/prism-protobuf.js","webpack:///./node_modules/prismjs/components/prism-protobuf.min.js","webpack:///./node_modules/prismjs/components/prism-pug.js","webpack:///./node_modules/prismjs/components/prism-pug.min.js","webpack:///./node_modules/prismjs/components/prism-puppet.js","webpack:///./node_modules/prismjs/components/prism-puppet.min.js","webpack:///./node_modules/prismjs/components/prism-pure.js","webpack:///./node_modules/prismjs/components/prism-pure.min.js","webpack:///./node_modules/prismjs/components/prism-python.js","webpack:///./node_modules/prismjs/components/prism-python.min.js","webpack:///./node_modules/prismjs/components/prism-q.js","webpack:///./node_modules/prismjs/components/prism-q.min.js","webpack:///./node_modules/prismjs/components/prism-qore.js","webpack:///./node_modules/prismjs/components/prism-qore.min.js","webpack:///./node_modules/prismjs/components/prism-r.js","webpack:///./node_modules/prismjs/components/prism-r.min.js","webpack:///./node_modules/prismjs/components/prism-reason.js","webpack:///./node_modules/prismjs/components/prism-reason.min.js","webpack:///./node_modules/prismjs/components/prism-regex.js","webpack:///./node_modules/prismjs/components/prism-regex.min.js","webpack:///./node_modules/prismjs/components/prism-renpy.js","webpack:///./node_modules/prismjs/components/prism-renpy.min.js","webpack:///./node_modules/prismjs/components/prism-rest.js","webpack:///./node_modules/prismjs/components/prism-rest.min.js","webpack:///./node_modules/prismjs/components/prism-rip.js","webpack:///./node_modules/prismjs/components/prism-rip.min.js","webpack:///./node_modules/prismjs/components/prism-roboconf.js","webpack:///./node_modules/prismjs/components/prism-roboconf.min.js","webpack:///./node_modules/prismjs/components/prism-ruby.js","webpack:///./node_modules/prismjs/components/prism-ruby.min.js","webpack:///./node_modules/prismjs/components/prism-rust.js","webpack:///./node_modules/prismjs/components/prism-rust.min.js","webpack:///./node_modules/prismjs/components/prism-sas.js","webpack:///./node_modules/prismjs/components/prism-sas.min.js","webpack:///./node_modules/prismjs/components/prism-sass.js","webpack:///./node_modules/prismjs/components/prism-sass.min.js","webpack:///./node_modules/prismjs/components/prism-scala.js","webpack:///./node_modules/prismjs/components/prism-scala.min.js","webpack:///./node_modules/prismjs/components/prism-scheme.js","webpack:///./node_modules/prismjs/components/prism-scheme.min.js","webpack:///./node_modules/prismjs/components/prism-scss.js","webpack:///./node_modules/prismjs/components/prism-scss.min.js","webpack:///./node_modules/prismjs/components/prism-smalltalk.js","webpack:///./node_modules/prismjs/components/prism-smalltalk.min.js","webpack:///./node_modules/prismjs/components/prism-smarty.js","webpack:///./node_modules/prismjs/components/prism-smarty.min.js","webpack:///./node_modules/prismjs/components/prism-soy.js","webpack:///./node_modules/prismjs/components/prism-soy.min.js","webpack:///./node_modules/prismjs/components/prism-sql.js","webpack:///./node_modules/prismjs/components/prism-sql.min.js","webpack:///./node_modules/prismjs/components/prism-stylus.js","webpack:///./node_modules/prismjs/components/prism-stylus.min.js","webpack:///./node_modules/prismjs/components/prism-swift.js","webpack:///./node_modules/prismjs/components/prism-swift.min.js","webpack:///./node_modules/prismjs/components/prism-t4-cs.js","webpack:///./node_modules/prismjs/components/prism-t4-cs.min.js","webpack:///./node_modules/prismjs/components/prism-t4-templating.js","webpack:///./node_modules/prismjs/components/prism-t4-templating.min.js","webpack:///./node_modules/prismjs/components/prism-t4-vb.js","webpack:///./node_modules/prismjs/components/prism-t4-vb.min.js","webpack:///./node_modules/prismjs/components/prism-tap.js","webpack:///./node_modules/prismjs/components/prism-tap.min.js","webpack:///./node_modules/prismjs/components/prism-tcl.js","webpack:///./node_modules/prismjs/components/prism-tcl.min.js","webpack:///./node_modules/prismjs/components/prism-textile.js","webpack:///./node_modules/prismjs/components/prism-textile.min.js","webpack:///./node_modules/prismjs/components/prism-toml.js","webpack:///./node_modules/prismjs/components/prism-toml.min.js","webpack:///./node_modules/prismjs/components/prism-tsx.js","webpack:///./node_modules/prismjs/components/prism-tsx.min.js","webpack:///./node_modules/prismjs/components/prism-tt2.js","webpack:///./node_modules/prismjs/components/prism-tt2.min.js","webpack:///./node_modules/prismjs/components/prism-twig.js","webpack:///./node_modules/prismjs/components/prism-twig.min.js","webpack:///./node_modules/prismjs/components/prism-typescript.js","webpack:///./node_modules/prismjs/components/prism-typescript.min.js","webpack:///./node_modules/prismjs/components/prism-vala.js","webpack:///./node_modules/prismjs/components/prism-vala.min.js","webpack:///./node_modules/prismjs/components/prism-vbnet.js","webpack:///./node_modules/prismjs/components/prism-vbnet.min.js","webpack:///./node_modules/prismjs/components/prism-velocity.js","webpack:///./node_modules/prismjs/components/prism-velocity.min.js","webpack:///./node_modules/prismjs/components/prism-verilog.js","webpack:///./node_modules/prismjs/components/prism-verilog.min.js","webpack:///./node_modules/prismjs/components/prism-vhdl.js","webpack:///./node_modules/prismjs/components/prism-vhdl.min.js","webpack:///./node_modules/prismjs/components/prism-vim.js","webpack:///./node_modules/prismjs/components/prism-vim.min.js","webpack:///./node_modules/prismjs/components/prism-visual-basic.js","webpack:///./node_modules/prismjs/components/prism-visual-basic.min.js","webpack:///./node_modules/prismjs/components/prism-wasm.js","webpack:///./node_modules/prismjs/components/prism-wasm.min.js","webpack:///./node_modules/prismjs/components/prism-wiki.js","webpack:///./node_modules/prismjs/components/prism-wiki.min.js","webpack:///./node_modules/prismjs/components/prism-xeora.js","webpack:///./node_modules/prismjs/components/prism-xeora.min.js","webpack:///./node_modules/prismjs/components/prism-xojo.js","webpack:///./node_modules/prismjs/components/prism-xojo.min.js","webpack:///./node_modules/prismjs/components/prism-xquery.js","webpack:///./node_modules/prismjs/components/prism-xquery.min.js","webpack:///./node_modules/prismjs/components/prism-yaml.js","webpack:///./node_modules/prismjs/components/prism-yaml.min.js","webpack:///./node_modules/oast-to-hast/lib/handlers/link.js","webpack:///./node_modules/oast-to-hast/node_modules/mime/index.js","webpack:///./node_modules/oast-to-hast/node_modules/mime/Mime.js","webpack:///./node_modules/oast-to-hast/lib/handlers/emphasis.js","webpack:///./node_modules/oast-to-hast/lib/handlers/list.js","webpack:///./node_modules/oast-to-hast/lib/handlers/listItem.js","webpack:///./node_modules/oast-to-hast/lib/handlers/table.js","webpack:///./node_modules/oast-to-hast/lib/handlers/horizontal-rule.js","webpack:///./node_modules/oast-to-hast/lib/handlers/html.js","webpack:///./node_modules/oast-to-hast/lib/handlers/paragraph.js","webpack:///./node_modules/oast-to-hast/lib/handlers/footnote.js","webpack:///./node_modules/hast-util-to-html/index.js","webpack:///./node_modules/hast-util-to-html/lib/index.js","webpack:///./node_modules/hast-util-to-html/lib/omission/index.js","webpack:///./node_modules/hast-util-to-html/lib/omission/opening.js","webpack:///./node_modules/hast-util-to-html/lib/omission/util/first.js","webpack:///./node_modules/hast-util-to-html/lib/omission/util/place.js","webpack:///./node_modules/hast-util-to-html/node_modules/is-decimal/index.js","webpack:///./node_modules/hast-util-to-html/lib/element.js","webpack:///./node_modules/comma-separated-tokens/index.js","webpack:///./node_modules/hast-util-to-html/lib/constants.js","webpack:///./node_modules/hast-util-to-html/lib/doctype.js","webpack:///./node_modules/hast-util-to-html/lib/comment.js","webpack:///./node_modules/hast-util-to-html/lib/raw.js","webpack:///./node_modules/orga/src/index.js","webpack:///./node_modules/orga/src/parser.js","webpack:///./node_modules/orga/src/lexer.js","webpack:///./node_modules/orga/src/utils.js","webpack:///./node_modules/orga/src/processors/index.js","webpack:///./node_modules/orga/src/processors/keyword.js","webpack:///./node_modules/orga/src/processors/headline.js","webpack:///./node_modules/orga/src/uri.js","webpack:///./node_modules/orga/src/processors/line.js","webpack:///./node_modules/orga/src/processors/block.js","webpack:///./node_modules/orga/src/processors/list.js","webpack:///./node_modules/orga/src/processors/table.js","webpack:///./node_modules/orga/src/processors/horizontal-rule.js","webpack:///./node_modules/orga/src/processors/footnote.js","webpack:///./node_modules/orga/src/processors/blank.js"],"names":["obj","_unistBuilder","__webpack_require__","__esModule","default","transform","h","node","parent","type","fn","handlers","hasOwnProperty","Error","data","text","value","all","result","nodes","children","length","values","index","concat","module","exports","Node","this","push","prototype","with","Object","assign","Array","isArray","n","newNode","props","String","uri","LINK_PATTERN","FOOTNOTE_PATTERN","PRE","POST","BORDER","markup","marker","RegExp","_parse","pattern","post","m","exec","shift","before","after","pop","reduce","parse","captures","desc","label","markups","name","convert","test","Boolean","typeFactory","ok","tests","checks","results","convertAll","apply","arguments","key","whiteSpace","siblings","increment","includeWhiteSpace","next","todos","tagNames","tagName","indexOf","replace","re","isText","charAt","element","whiteSpaceLeft","omission","isComment","optionGroup","options","dataListItem","listItem","menuContent","ruby","tableContainer","tableRow","tableCell","confusingParagraphParent","clearParagraphSibling","headOrColgroupOrCaption","rubyElement","cells","html","head","body","p","li","dt","dd","rt","rp","optgroup","option","menuitem","colgroup","caption","thead","tbody","tfoot","tr","td","th","own","call","ctx","root","doctype","comment","raw","one","join","xtend","entities","isLiteral","subset","legacy","hexadecimal","decimal","alphanumerical","dangerous","encode","escape","escapeOnly","useNamedReferences","characters","chars","construct","defaultEscapes","toExpression","surrogatePair","bmp","settings","set","omit","omitOptionalSemicolons","pair","pos","val","toHexReference","charCodeAt","char","named","code","numeric","shortest","useShortestReferences","attribute","toNamed","toDecimalReference","toString","toUpperCase","_handlers","_transform","_typeof","Symbol","iterator","constructor","properties","tree","meta","footnoteSection","eTags","exclude_tags","excludeTags","split","sTags","select_tags","selectTags","highlight","_root","_interopRequireDefault","_section","_headline","_block","_link","_emphasis","_list","_listItem","_table","_horizontalRule","_html","_paragraph","_footnote","section","headline","paragraph","block","link","bold","italic","underline","verbatim","strikeThrough","list","list.item","table","table.row","table.cell","horizontalRule","footnote.definition","definition","footnote.reference","reference","drawer","defineProperty","match","left","right","some","e","includes","tags","shouldExclude","find","className","level","_highlight","lang","params","toLowerCase","highlighted","src","quote","center","_prismjs","_loadPrismLanguage","language","languages","_prismLanguageDependencies","_default","loadPrismLanguage","languageData","require","forEach","path","noCSS","examplesPath","addCheckAll","title","aliasTitles","xml","svg","mathml","css","clike","javascript","abap","owner","actionscript","ada","apacheconf","apl","applescript","arduino","asciidoc","asm6502","aspnet","autohotkey","autoit","bash","basic","batch","bison","brainfuck","bro","c","csharp","cpp","coffeescript","crystal","csp","css-extras","d","dart","diff","django","docker","eiffel","elixir","elm","erlang","fsharp","flow","fortran","gherkin","git","glsl","go","graphql","groovy","haml","handlebars","haskell","haxe","http","hpkp","hsts","ichigojam","icon","inform7","ini","io","j","java","jolie","json","julia","keyman","kotlin","latex","less","livescript","lolcode","lua","makefile","markdown","matlab","mel","mizar","monkey","n4js","nasm","nginx","nim","nix","nsis","objectivec","ocaml","opencl","oz","parigp","parser","pascal","perl","php","php-extras","powershell","processing","prolog","protobuf","pug","puppet","pure","python","q","qore","r","jsx","tsx","renpy","reason","rest","rip","roboconf","rust","sas","sass","scss","scala","scheme","smalltalk","smarty","sql","stylus","swift","tcl","textile","twig","typescript","vbnet","verilog","vhdl","vim","wiki","xeora","xojo","yaml","Prism","string","string-template","lookbehind","alias","eol-comment","keyword","number","operator","string-operator","token-operator","punctuation","coreRules","abnf","greedy","inside","range","terminal","repetition","core-rule","rule","i","extend","insertBefore","attr-name","boolean","variable","directive-inline","directive-block","directive-block-parameter","directive-flags","regex","statement","system-function","constant","function","monadic-operator","dyadic-operator","assignment","dfn","class","builtin","arff","attributes","quoted","interpreted","attr-value","comment-block","specifiers","passthrough-block","literal-block","other-block","list-punctuation","list-label","indented-block","attribute-entry","hr","page-break","admonition","callout","macro","inline","url","attribute-ref","replacement","entity","line-continuation","copyFromAsciiDoc","keys","o","l","hooks","add","env","content","adoc","t","a","directive","opcode","hexnumber","binarynumber","decimalnumber","register","page-directive tag","tag","directive tag","asp comment","asp script","selector","symbol","important","insideString","shebang","shell","parameter","command","delimiter","bison-variable","property","bnf","rbnf","pointer","decrement","branching","class-name","cil","clojure","cmake","interpolation","namespace","inserted","class-member","multiline-comment","block-regex","inline-javascript","multiline-string","coffee","global","_self","uniqueId","_","manual","disableWorkerMessageHandler","util","tokens","Token","map","slice","objId","clone","deepClone","visited","id","v","redef","insert","grammar","ret","token","newToken","old","DFS","callback","propertyType","plugins","highlightAll","async","highlightAllUnder","document","container","run","elements","querySelectorAll","highlightElement","parentNode","nodeName","textContent","insertHighlightedCode","highlightedCode","innerHTML","Worker","worker","filename","onmessage","evt","postMessage","JSON","stringify","immediateClose","tokenize","matchGrammar","strarr","startPos","oneshot","target","patterns","lookbehindLength","flags","source","str","lastIndex","from","to","k","len","delNum","args","wrapped","splice","callbacks","matchedStr","classes","aliases","addEventListener","message","close","script","currentScript","getElementsByTagName","hasAttribute","readyState","window","requestAnimationFrame","setTimeout","WorkerGlobalScope","self","g","C","M","__id","s","u","f","y","x","b","w","A","P","O","N","S","E","raw-string","expansion","generic-method","preprocessor","dotnet","safe","unsafe","pseudo-element","pseudo-class","case-sensitivity","n-th","hexcode","unit","atrule","addInlined","style-attr","token-string","metadata","coord","deleted","filter","markupTemplating","buildPlaceholders","tokenizePlaceholders","jinja2","dockerfile","ebnf","special","ejs","language-javascript","atom","capture","argument","import_statement","hvariable","erb","quoted-function","quoted-atom","flow-punctuation","unshift","quoted-number","computation-expression","annotation","annotation-content","gcode","checksum","gedcom","line-value","pystring","feature","scenario","table-body","outline","table-head","commit_sha1","gamemakerlanguage","gml","fragment","spock-block","expression","multiline-code","filter-name","filters","all_filters","brackets","hs","reification","hcl","heredoc","request-line","response-status","header-name","langs","httpLanguages","application/javascript","application/json","application/xml","text/xml","text/html","text/css","suffixTypes","getSuffixPattern","contentType","suffix","T","builtin-keyword","substitution","verb","position","triple-quoted-string","adverb","conjunction","keywords","generics","codeLines","javadoc","code-section","javadoclike","addSupport","javaDocLike","docLanguage","doc-comment","docCommentSupport","function-variable","template-string","interpolation-punctuation","js","javastacktrace","summary","exceptions","stack-frame","file","line-number","more","aggregates","withExtension","redirects","method-variable","method","known-class-name","spread","arrow","property-access","maybe-class-name","dom","console","maybeClassNameTokens","parameterPrefix","jsdoc","optional-parameter","example","null","json5","jsonp","script-punctuation","openedBraces","funcPattern","insideEqu","equation-command","cdata","equation","mixin-usage","liquid","simple_form","primitive","par","heading","quoted-symbol","lisp-property","declare","interactive","defvar","defun","lambda","car","arg","lisp-marker","varform","forms","arglist","rest-vars","other-marker-vars","sublist","lisp","elisp","emacs","interpolated-string","keyword-operator","identifier","blockquote","code-block","code-language","url-reference","strike","walkTokens","codeLang","codeBlock","trim","cls","md","getPlaceholder","defineProperties","placeholderPattern","replaceFilter","tokenStack","placeholder","substring","middle","includedCdataInside","included-cdata","def","flag","type-char","n1ql","n4jsd","ignore","antiquotation","function-opencl-kernel","constant-opencl-kernel","type-opencl-host","boolean-opencl-host","constant-opencl-host","function-opencl-host","parser-comment","parser-punctuation","objectpascal","filehandle","vstring","scope","shell-comment","package","string_interpolation","nowdoc-string","heredoc-string","single-quoted-string","double-quoted-string","typeExpression","phpdoc","plsql","R","stringInside","multiline-script","multiline-plain-text","flow-control","each","branch","mixin","plain-text","filter_pattern","extended-regex","double-quoted","datatype","short-variable","inline-lang","inlineLanguageRe","string-interpolation","format-spec","conversion-option","decorator","py","datetime","percent-operator","ellipsis","character","specialEscape","charClass","rangeChar","groupName","backreference","group-name","charset","charset-negation","charset-punctuation","range-punctuation","special-escape","charclass","anchor","group","quantifier","alternation","regex-flags","regex-delimiter","language-regex","substitution-def","link-target","field","command-line-option","literal-block-punctuation","quoted-literal-block","list-bullet","doctest-block","inline-literal","role","interpreted-text","date","time","component","optional","wildcard","method-definition","rb","lifetime-annotation","macro-rules","closure-params","datalines","atrule-line","variable-line","property-line","block-arguments","temporary-variables","smartyLitteralMode","stringPattern","numberPattern","soy","command-arg","soyLitteralMode","func","atrule-declaration","variable-declaration","property-declaration","t4","createT4","createBlock","prefix","contentAlias","insideLang","class-feature","standard","tap","fail","pass","pragma","bailout","version","plan","subtest","yamlish","modifierRegex","modifierTokens","class-id","phrase","block-tag","modifier","cite","span","link-ref","image","footnote","acronym","mark","phraseInside","nestedPatterns","phraseInlineInside","phraseTableInside","toml","tt2","ld","rd","other","ts","vala","velocity","unparsed","velocity-comment","vhdl-vectors","vb","wasm","block-comment","emphasis","bold italic","table-tag","table-bar","nowiki","function-inline","function-block","directive-block-open","directive-block-separator","directive-block-close","xeoracube","xquery","xquery-comment","extension","axis","xquery-element","xquery-attribute","stringifyToken","openedTags","notTagNorBrace","plainText","scalar","yml","_mime","href","undefined","getType","startsWith","alt","Mime","_types","create","_extensions","define","bind","getExtension","typeMap","force","extensions","ext","substr","last","hasPath","$1","ordered","start","checked","disabled","dataLabel","voids","quotationMark","alternative","apostrophe","smart","quoteSmart","valid","allowParseErrors","allowDangerousCharacters","schema","space","omitOptionalTags","unquoted","preferUnquoted","tight","tightAttributes","tightDoctype","tightLists","tightCommaSeparatedLists","tightClose","tightSelfClosing","collapseEmpty","collapseEmptyAttributes","allowDangerousHTML","closeSelfClosing","closeEmpty","closeEmptyElements","opening","closing","first","place","uniqueHeadMetadata","tableContainers","child","prev","spaces","commas","ccount","constants","selfClosing","attrs","parentSchema","lessThan","slash","greaterThan","equalsTo","info","overloadedBoolean","isNaN","attributeName","commaSeparated","padLeft","single","double","attributeValue","input","empty","comma","end","padRight","whitespace","unquotedSafe","singleQuoted","doubleQuoted","sep","pub","public","sys","system","Parser","Lexer","lexer","_aks","_cel","peek","getToken","cursor","hasNext","lines","consume","downgradeToLine","tryTo","process","restorePoint","processor","parseSection","unagi","Syntax","rules","update","findIndex","newRule","org","headlinePattern","priority","syntax","updateTODOs","timestamp","indent","bullet","matchOperatorsRe","TypeError","line","blank","block.begin","inlineParse","parsePlanning","parseDrawer","begin","planning","newSection","URL_PATTERN","protocol","location","query","ln","parseInt","processQuery","processFilePath","newNodes","parseBlock","format","parseListItem","item","search","parseList","row","parseTable","parseFootnote"],"mappings":"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","file":"13-48a0efa22e64701ee30c.js","sourcesContent":["\"use strict\";\n\nvar _unistBuilder = _interopRequireDefault(require(\"unist-builder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = {\n  transform: transform,\n  all: all\n};\n\nfunction unknown(h, node) {\n  if (text(node)) {\n    return (0, _unistBuilder.default)('text', node.value);\n  }\n\n  return h(node, 'div', all(h, node));\n}\n\nfunction transform(h, node, parent) {\n  var type = node && node.type;\n  var fn = h.handlers.hasOwnProperty(type) ? h.handlers[type] : null;\n  /* Fail on non-nodes. */\n\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`');\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent);\n}\n\nfunction all(h, parent) {\n  var nodes = parent.children || [];\n  var length = nodes.length;\n  var values = [];\n  var index = -1;\n  var result;\n\n  while (++index < length) {\n    result = transform(h, nodes[index], parent);\n\n    if (result) {\n      values = values.concat(result);\n    }\n  }\n\n  return values;\n}\n\nfunction text(node) {\n  var data = node.data || {};\n\n  if (data.hasOwnProperty('hName') || data.hasOwnProperty('hProperties') || data.hasOwnProperty('hChildren')) {\n    return false;\n  }\n\n  return 'value' in node;\n}","function Node(type, children = []) {\n  this.type = type\n  this.children = []\n  this.push(children)\n}\n\nNode.prototype = {\n  with: function(data) {\n    var newNode = this\n    newNode = Object.assign(this, data)\n    return newNode\n  },\n\n  push: function(node) {\n    if (Array.isArray(node)) {\n      for (const n of node) {\n        this.push(n)\n      }\n    } else if (node instanceof Node) {\n      node.parent = this\n      this.children.push(node)\n    } else if (typeof node === `string`) {\n      var newNode = new Node(`text`).with({ value: node })\n      newNode.parent = this\n      this.children.push(newNode)\n    }\n  },\n}\n\nmodule.exports = Node\n","'use strict'\n\nvar assign = require('object-assign')\n\nmodule.exports = u\n\nfunction u(type, props, value) {\n  var node\n\n  if (\n    (value === null || value === undefined) &&\n    (typeof props !== 'object' || Array.isArray(props))\n  ) {\n    value = props\n    props = {}\n  }\n\n  node = assign({type: String(type)}, props)\n\n  if (Array.isArray(value)) {\n    node.children = value\n  } else if (value !== null && value !== undefined) {\n    node.value = String(value)\n  }\n\n  return node\n}\n","const Node = require('./node')\nconst uri = require('./uri')\n\nconst LINK_PATTERN = /(.*?)\\[\\[([^\\]]*)\\](?:\\[([^\\]]*)\\])?\\](.*)/m; // \\1 => link, \\2 => text\nconst FOOTNOTE_PATTERN = /(.*?)\\[fn:(\\w+)\\](.*)/\n\nconst PRE = `(?:[\\\\s\\\\({'\"]|^)`\nconst POST = `(?:[\\\\s-\\\\.,:!?'\\\\)}]|$)`\nconst BORDER = `[^,'\"\\\\s]`\n\nfunction markup(marker) {\n  return RegExp(`(.*?${PRE})${marker}(${BORDER}(?:.*?(?:${BORDER}))?)${marker}(${POST}.*)`, 'm')\n}\n\nfunction parse(text) {\n  text = _parse(LINK_PATTERN, text, (captures) => {\n    return new Node(`link`)\n      .with({ uri: uri(captures[0]), desc: captures[1] })\n  })\n\n  text = _parse(FOOTNOTE_PATTERN, text, (captures) => {\n    return new Node(`footnote.reference`)\n      .with({ label: captures[0] })\n  })\n\n  const markups = [\n    { name: `bold`, marker: `\\\\*` },\n    { name: `verbatim`, marker: `=` },\n    { name: `italic`, marker: `/` },\n    { name: `strikeThrough`, marker: `\\\\+` },\n    { name: `underline`, marker: `_` },\n    { name: `code`, marker: `~` },\n  ]\n  for (const { name, marker } of markups) {\n    text = _parse(markup(marker), text, (captures) => {\n      return new Node(name, captures[0])\n    })\n  }\n  return text\n}\n\n\nfunction _parse(pattern, text, post) {\n  if (typeof text === `string`) {\n    var m = pattern.exec(text)\n    if (!m) return [new Node(`text`).with({ value: text })]\n    m.shift()\n    let before = m.shift()\n    let after = m.pop()\n    var nodes = []\n    if ( before.length > 0 ) {\n      nodes.push(new Node(`text`).with({ value: before }))\n    }\n    if (m.length > 0) {\n      nodes.push(post(m))\n      // nodes.push(new Node(name).with({ value: match }))\n    }\n    if (after) {\n      nodes = nodes.concat(_parse(pattern, after, post))\n    }\n    return nodes\n  }\n\n  if (Array.isArray(text)) {\n    return text.reduce((all, node) => {\n      if (node.hasOwnProperty(`type`) && node.type !== `text`) {\n        return all.concat(node)\n      }\n      return all.concat(_parse(pattern, node, post))\n    }, [])\n  }\n\n  if (typeof text.value === `string`) {\n    return _parse(pattern, text.value, post)\n  }\n  return undefined\n}\n\nmodule.exports = {\n  parse,\n}\n","'use strict'\n\nmodule.exports = convert\n\nfunction convert(test) {\n  if (typeof test === 'string') {\n    return typeFactory(test)\n  }\n\n  if (test === null || test === undefined) {\n    return ok\n  }\n\n  if (typeof test === 'object') {\n    return ('length' in test ? anyFactory : matchesFactory)(test)\n  }\n\n  if (typeof test === 'function') {\n    return test\n  }\n\n  throw new Error('Expected function, string, or object as test')\n}\n\nfunction convertAll(tests) {\n  var results = []\n  var length = tests.length\n  var index = -1\n\n  while (++index < length) {\n    results[index] = convert(tests[index])\n  }\n\n  return results\n}\n\n// Utility assert each property in `test` is represented in `node`, and each\n// values are strictly equal.\nfunction matchesFactory(test) {\n  return matches\n\n  function matches(node) {\n    var key\n\n    for (key in test) {\n      if (node[key] !== test[key]) {\n        return false\n      }\n    }\n\n    return true\n  }\n}\n\nfunction anyFactory(tests) {\n  var checks = convertAll(tests)\n  var length = checks.length\n\n  return matches\n\n  function matches() {\n    var index = -1\n\n    while (++index < length) {\n      if (checks[index].apply(this, arguments)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n// Utility to convert a string into a function which checks a given node’s type\n// for said string.\nfunction typeFactory(test) {\n  return type\n\n  function type(node) {\n    return Boolean(node && node.type === test)\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","'use strict'\n\nvar whiteSpace = require('hast-util-whitespace')\n\nexports.before = siblings(-1)\nexports.after = siblings(1)\n\n// Factory to check siblings in a direction.\nfunction siblings(increment) {\n  return sibling\n\n  // Find applicable siblings in a direction.\n  function sibling(parent, index, includeWhiteSpace) {\n    var siblings = parent && parent.children\n    var next\n\n    index += increment\n    next = siblings && siblings[index]\n\n    if (!includeWhiteSpace) {\n      while (next && whiteSpace(next)) {\n        index += increment\n        next = siblings[index]\n      }\n    }\n\n    return next\n  }\n}\n","exports = {\n  todos: [`TODO`, `DONE`]\n}\n","'use strict'\n\nmodule.exports = isElement\n\n/* Check if, whether `tagNames` is given, a node is an element\n * or an element matching `tagNames`. */\nfunction isElement(node, tagNames) {\n  var name\n\n  if (\n    !(\n      tagNames === null ||\n      tagNames === undefined ||\n      typeof tagNames === 'string' ||\n      (typeof tagNames === 'object' && tagNames.length !== 0)\n    )\n  ) {\n    throw new Error(\n      'Expected `string` or `Array.<string>` for `tagNames`, not `' +\n        tagNames +\n        '`'\n    )\n  }\n\n  if (\n    !node ||\n    typeof node !== 'object' ||\n    node.type !== 'element' ||\n    typeof node.tagName !== 'string'\n  ) {\n    return false\n  }\n\n  if (tagNames === null || tagNames === undefined) {\n    return true\n  }\n\n  name = node.tagName\n\n  if (typeof tagNames === 'string') {\n    return name === tagNames\n  }\n\n  return tagNames.indexOf(name) !== -1\n}\n","'use strict'\n\nmodule.exports = interElementWhiteSpace\n\n/* HTML white-space expression.\n * See <https://html.spec.whatwg.org/#space-character>. */\nvar re = /[ \\t\\n\\f\\r]/g\n\n/* Check if `node` is a inter-element white-space. */\nfunction interElementWhiteSpace(node) {\n  var value\n\n  if (node && typeof node === 'object' && node.type === 'text') {\n    value = node.value || ''\n  } else if (typeof node === 'string') {\n    value = node\n  } else {\n    return false\n  }\n\n  return value.replace(re, '') === ''\n}\n","'use strict'\n\nvar convert = require('unist-util-is/convert')\nvar whiteSpace = require('hast-util-whitespace')\n\nmodule.exports = whiteSpaceLeft\n\nvar isText = convert('text')\n\n// Check if `node` starts with white-space.\nfunction whiteSpaceLeft(node) {\n  return isText(node) && whiteSpace(node.value.charAt(0))\n}\n","'use strict'\n\nvar convert = require('unist-util-is/convert')\nvar element = require('hast-util-is-element')\nvar whiteSpaceLeft = require('./util/white-space-left')\nvar after = require('./util/siblings').after\nvar omission = require('./omission')\n\nvar isComment = convert('comment')\n\nvar optionGroup = 'optgroup'\nvar options = ['option'].concat(optionGroup)\nvar dataListItem = ['dt', 'dd']\nvar listItem = 'li'\nvar menuContent = ['menuitem', 'hr', 'menu']\nvar ruby = ['rp', 'rt']\nvar tableContainer = ['tbody', 'tfoot']\nvar tableRow = 'tr'\nvar tableCell = ['td', 'th']\n\nvar confusingParagraphParent = [\n  'a',\n  'audio',\n  'del',\n  'ins',\n  'map',\n  'noscript',\n  'video'\n]\n\nvar clearParagraphSibling = [\n  'address',\n  'article',\n  'aside',\n  'blockquote',\n  'details',\n  'div',\n  'dl',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'header',\n  'hgroup',\n  'hr',\n  'main',\n  'menu',\n  'nav',\n  'ol',\n  'p',\n  'pre',\n  'section',\n  'table',\n  'ul'\n]\n\nmodule.exports = omission({\n  html: html,\n  head: headOrColgroupOrCaption,\n  body: body,\n  p: p,\n  li: li,\n  dt: dt,\n  dd: dd,\n  rt: rubyElement,\n  rp: rubyElement,\n  optgroup: optgroup,\n  option: option,\n  menuitem: menuitem,\n  colgroup: headOrColgroupOrCaption,\n  caption: headOrColgroupOrCaption,\n  thead: thead,\n  tbody: tbody,\n  tfoot: tfoot,\n  tr: tr,\n  td: cells,\n  th: cells\n})\n\n// Macro for `</head>`, `</colgroup>`, and `</caption>`.\nfunction headOrColgroupOrCaption(node, index, parent) {\n  var next = after(parent, index, true)\n  return !next || (!isComment(next) && !whiteSpaceLeft(next))\n}\n\n// Whether to omit `</html>`.\nfunction html(node, index, parent) {\n  var next = after(parent, index)\n  return !next || !isComment(next)\n}\n\n// Whether to omit `</body>`.\nfunction body(node, index, parent) {\n  var next = after(parent, index)\n  return !next || !isComment(next)\n}\n\n// Whether to omit `</p>`.\nfunction p(node, index, parent) {\n  var next = after(parent, index)\n  return next\n    ? element(next, clearParagraphSibling)\n    : !parent || !element(parent, confusingParagraphParent)\n}\n\n// Whether to omit `</li>`.\nfunction li(node, index, parent) {\n  var next = after(parent, index)\n  return !next || element(next, listItem)\n}\n\n// Whether to omit `</dt>`.\nfunction dt(node, index, parent) {\n  var next = after(parent, index)\n  return next && element(next, dataListItem)\n}\n\n// Whether to omit `</dd>`.\nfunction dd(node, index, parent) {\n  var next = after(parent, index)\n  return !next || element(next, dataListItem)\n}\n\n// Whether to omit `</rt>` or `</rp>`.\nfunction rubyElement(node, index, parent) {\n  var next = after(parent, index)\n  return !next || element(next, ruby)\n}\n\n// Whether to omit `</optgroup>`.\nfunction optgroup(node, index, parent) {\n  var next = after(parent, index)\n  return !next || element(next, optionGroup)\n}\n\n// Whether to omit `</option>`.\nfunction option(node, index, parent) {\n  var next = after(parent, index)\n  return !next || element(next, options)\n}\n\n// Whether to omit `</menuitem>`.\nfunction menuitem(node, index, parent) {\n  var next = after(parent, index)\n  return !next || element(next, menuContent)\n}\n\n// Whether to omit `</thead>`.\nfunction thead(node, index, parent) {\n  var next = after(parent, index)\n  return next && element(next, tableContainer)\n}\n\n// Whether to omit `</tbody>`.\nfunction tbody(node, index, parent) {\n  var next = after(parent, index)\n  return !next || element(next, tableContainer)\n}\n\n// Whether to omit `</tfoot>`.\nfunction tfoot(node, index, parent) {\n  return !after(parent, index)\n}\n\n// Whether to omit `</tr>`.\nfunction tr(node, index, parent) {\n  var next = after(parent, index)\n  return !next || element(next, tableRow)\n}\n\n// Whether to omit `</td>` or `</th>`.\nfunction cells(node, index, parent) {\n  var next = after(parent, index)\n  return !next || element(next, tableCell)\n}\n","'use strict'\n\nmodule.exports = omission\n\nvar own = {}.hasOwnProperty\n\n// Factory to check if a given node can have a tag omitted.\nfunction omission(handlers) {\n  return omit\n\n  // Check if a given node can have a tag omitted.\n  function omit(node, index, parent) {\n    var name = node.tagName\n    var fn = own.call(handlers, name) ? handlers[name] : false\n\n    return fn ? fn(node, index, parent) : false\n  }\n}\n","'use strict'\n\nmodule.exports = one\n\nvar own = {}.hasOwnProperty\n\nvar handlers = {}\n\nhandlers.root = require('./all')\nhandlers.text = require('./text')\nhandlers.element = require('./element')\nhandlers.doctype = require('./doctype')\nhandlers.comment = require('./comment')\nhandlers.raw = require('./raw')\n\n// Stringify `node`.\nfunction one(ctx, node, index, parent) {\n  var type = node && node.type\n\n  if (!type) {\n    throw new Error('Expected node, not `' + node + '`')\n  }\n\n  if (!own.call(handlers, type)) {\n    throw new Error('Cannot compile unknown node `' + type + '`')\n  }\n\n  return handlers[type](ctx, node, index, parent)\n}\n","'use strict'\n\nvar one = require('./one')\n\nmodule.exports = all\n\n// Stringify all children of `parent`.\nfunction all(ctx, parent) {\n  var children = parent && parent.children\n  var length = children && children.length\n  var index = -1\n  var results = []\n\n  while (++index < length) {\n    results[index] = one(ctx, children[index], index, parent)\n  }\n\n  return results.join('')\n}\n","'use strict'\n\nvar xtend = require('xtend')\nvar entities = require('stringify-entities')\n\nmodule.exports = text\n\n// Stringify `text`.\nfunction text(ctx, node, index, parent) {\n  var value = node.value\n\n  return isLiteral(parent)\n    ? value\n    : entities(value, xtend(ctx.entities, {subset: ['<', '&']}))\n}\n\n// Check if content of `node` should be escaped.\nfunction isLiteral(node) {\n  return node && (node.tagName === 'script' || node.tagName === 'style')\n}\n","'use strict'\n\nvar entities = require('character-entities-html4')\nvar legacy = require('character-entities-legacy')\nvar hexadecimal = require('is-hexadecimal')\nvar decimal = require('is-decimal')\nvar alphanumerical = require('is-alphanumerical')\nvar dangerous = require('./dangerous.json')\n\nmodule.exports = encode\nencode.escape = escape\n\nvar own = {}.hasOwnProperty\n\n// List of enforced escapes.\nvar escapes = ['\"', \"'\", '<', '>', '&', '`']\n\n// Map of characters to names.\nvar characters = construct()\n\n// Default escapes.\nvar defaultEscapes = toExpression(escapes)\n\n// Surrogate pairs.\nvar surrogatePair = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g\n\n// Non-ASCII characters.\n// eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\nvar bmp = /[\\x01-\\t\\x0B\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g\n\n// Encode special characters in `value`.\nfunction encode(value, options) {\n  var settings = options || {}\n  var subset = settings.subset\n  var set = subset ? toExpression(subset) : defaultEscapes\n  var escapeOnly = settings.escapeOnly\n  var omit = settings.omitOptionalSemicolons\n\n  value = value.replace(set, replace)\n\n  if (subset || escapeOnly) {\n    return value\n  }\n\n  return value\n    .replace(surrogatePair, replaceSurrogatePair)\n    .replace(bmp, replace)\n\n  function replaceSurrogatePair(pair, pos, val) {\n    return toHexReference(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      val.charAt(pos + 2),\n      omit\n    )\n  }\n\n  function replace(char, pos, val) {\n    return one(char, val.charAt(pos + 1), settings)\n  }\n}\n\n// Shortcut to escape special characters in HTML.\nfunction escape(value) {\n  return encode(value, {escapeOnly: true, useNamedReferences: true})\n}\n\n// Encode `char` according to `options`.\nfunction one(char, next, options) {\n  var shortest = options.useShortestReferences\n  var omit = options.omitOptionalSemicolons\n  var named\n  var code\n  var numeric\n  var decimal\n\n  if ((shortest || options.useNamedReferences) && own.call(characters, char)) {\n    named = toNamed(characters[char], next, omit, options.attribute)\n  }\n\n  if (shortest || !named) {\n    code = char.charCodeAt(0)\n    numeric = toHexReference(code, next, omit)\n\n    // Use the shortest numeric reference when requested.\n    // A simple algorithm would use decimal for all code points under 100, as\n    // those are shorter than hexadecimal:\n    //\n    // * `&#99;` vs `&#x63;` (decimal shorter)\n    // * `&#100;` vs `&#x64;` (equal)\n    //\n    // However, because we take `next` into consideration when `omit` is used,\n    // And it would be possible that decimals are shorter on bigger values as\n    // well if `next` is hexadecimal but not decimal, we instead compare both.\n    if (shortest) {\n      decimal = toDecimalReference(code, next, omit)\n\n      if (decimal.length < numeric.length) {\n        numeric = decimal\n      }\n    }\n  }\n\n  if (named && (!shortest || named.length < numeric.length)) {\n    return named\n  }\n\n  return numeric\n}\n\n// Transform `code` into an entity.\nfunction toNamed(name, next, omit, attribute) {\n  var value = '&' + name\n\n  if (\n    omit &&\n    own.call(legacy, name) &&\n    dangerous.indexOf(name) === -1 &&\n    (!attribute || (next && next !== '=' && !alphanumerical(next)))\n  ) {\n    return value\n  }\n\n  return value + ';'\n}\n\n// Transform `code` into a hexadecimal character reference.\nfunction toHexReference(code, next, omit) {\n  var value = '&#x' + code.toString(16).toUpperCase()\n  return omit && next && !hexadecimal(next) ? value : value + ';'\n}\n\n// Transform `code` into a decimal character reference.\nfunction toDecimalReference(code, next, omit) {\n  var value = '&#' + String(code)\n  return omit && next && !decimal(next) ? value : value + ';'\n}\n\n// Create an expression for `characters`.\nfunction toExpression(characters) {\n  return new RegExp('[' + characters.join('') + ']', 'g')\n}\n\n// Construct the map.\nfunction construct() {\n  var chars = {}\n  var name\n\n  for (name in entities) {\n    chars[entities[name]] = name\n  }\n\n  return chars\n}\n","\"use strict\";\n\nvar _handlers = _interopRequireDefault(require(\"./handlers\"));\n\nvar _transform = require(\"./transform\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nmodule.exports = toHAST;\n\nfunction h(node, tagName, props, children) {\n  if ((children === undefined || children === null) && _typeof(props) === 'object' && 'length' in props) {\n    children = props;\n    props = {};\n  }\n\n  return {\n    type: 'element',\n    tagName: tagName,\n    properties: props || {},\n    children: children || []\n  };\n}\n\nfunction toHAST(tree, options) {\n  var settings = options || {};\n  var meta = tree.meta || {};\n  h.handlers = Object.assign(_handlers.default, settings.handlers || {});\n  h.footnoteSection = settings.footnoteSection || \"footnotes\";\n  var eTags = meta.exclude_tags;\n\n  if (eTags) {\n    h.excludeTags = eTags.split(/\\s+/);\n  } else {\n    h.excludeTags = settings.excludeTags || [\"noexport\"];\n  }\n\n  var sTags = meta.select_tags;\n\n  if (sTags) {\n    h.selectTags = sTags.split(/\\s+/);\n  } else {\n    h.selectTags = settings.selectTags || [];\n  }\n\n  h.highlight = settings.highlight || false;\n  return (0, _transform.transform)(h, tree);\n}","\"use strict\";\n\nvar _root = _interopRequireDefault(require(\"./root\"));\n\nvar _section = _interopRequireDefault(require(\"./section\"));\n\nvar _headline = _interopRequireDefault(require(\"./headline\"));\n\nvar _block = _interopRequireDefault(require(\"./block\"));\n\nvar _link = _interopRequireDefault(require(\"./link\"));\n\nvar _emphasis = require(\"./emphasis\");\n\nvar _list = _interopRequireDefault(require(\"./list\"));\n\nvar _listItem = _interopRequireDefault(require(\"./listItem\"));\n\nvar _table = require(\"./table\");\n\nvar _horizontalRule = _interopRequireDefault(require(\"./horizontal-rule\"));\n\nvar _html = _interopRequireDefault(require(\"./html\"));\n\nvar _paragraph = _interopRequireDefault(require(\"./paragraph\"));\n\nvar _footnote = require(\"./footnote\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = {\n  root: _root.default,\n  section: _section.default,\n  headline: _headline.default,\n  paragraph: _paragraph.default,\n  block: _block.default,\n  link: _link.default,\n  bold: _emphasis.bold,\n  italic: _emphasis.italic,\n  code: _emphasis.code,\n  underline: _emphasis.underline,\n  verbatim: _emphasis.verbatim,\n  strikeThrough: _emphasis.strikeThrough,\n  list: _list.default,\n  \"list.item\": _listItem.default,\n  table: _table.table,\n  \"table.row\": _table.tableRow,\n  \"table.cell\": _table.tableCell,\n  horizontalRule: _horizontalRule.default,\n  html: _html.default,\n  \"footnote.definition\": _footnote.definition,\n  \"footnote.reference\": _footnote.reference,\n  drawer: function drawer() {\n    return undefined;\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _unistBuilder = _interopRequireDefault(require(\"unist-builder\"));\n\nvar _transform = require(\"../transform\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = function _default(h, node) {\n  return (0, _unistBuilder.default)('root', (0, _transform.all)(h, node));\n};\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _transform = require(\"../transform\");\n\nvar match = function match(left, right) {\n  return left.some(function (e) {\n    return right.includes(e);\n  });\n};\n\nvar _default = function _default(h, node) {\n  var props = {\n    className: \"section\"\n  };\n  var headline = node.children.find(function (n) {\n    return n.type === \"headline\";\n  });\n\n  function shouldExclude(headline) {\n    if (!headline) return false;\n\n    if (h.selectTags.length > 0) {\n      return !match(headline.tags, h.selectTags);\n    }\n\n    return match(headline.tags, h.excludeTags);\n  }\n\n  if (shouldExclude(headline)) return undefined;\n  return h(node, \"div\", props, (0, _transform.all)(h, node));\n};\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _transform = require(\"../transform\");\n\nvar _default = function _default(h, node) {\n  var level = node.level;\n  return h(node, \"h\".concat(level), (0, _transform.all)(h, node));\n};\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _unistBuilder = _interopRequireDefault(require(\"unist-builder\"));\n\nvar _highlight = _interopRequireDefault(require(\"./_highlight\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = function _default(h, node) {\n  var name = node.name.toUpperCase();\n\n  switch (name) {\n    case \"SRC\":\n      return src(h, node);\n\n    case \"QUOTE\":\n      return quote(h, node);\n\n    case \"COMMENT\":\n      return undefined;\n\n    case \"CENTER\":\n      return center(h, node);\n\n    default:\n      var props = {\n        className: name.toLowerCase()\n      };\n      return h(node, \"pre\", props, [(0, _unistBuilder.default)('text', node.value || '')]);\n  }\n};\n\nexports.default = _default;\n\nfunction quote(h, node) {\n  return h(node, \"blockquote\", [(0, _unistBuilder.default)(\"text\", node.value)]);\n}\n\nfunction center(h, node) {\n  return h(node, \"center\", [(0, _unistBuilder.default)(\"text\", node.value)]);\n}\n\nfunction src(h, node) {\n  var lang = node.params[0].toLowerCase();\n  var props = {};\n\n  if (lang) {\n    props.className = ['language-' + lang];\n  }\n\n  var code = node.value;\n  var body = (0, _unistBuilder.default)(\"text\", code);\n\n  if (h.highlight) {\n    var highlighted = (0, _highlight.default)(lang, code);\n    body = (0, _unistBuilder.default)(\"raw\", highlighted);\n  }\n\n  return h(node, \"pre\", [h(node, \"code\", props, [body])]);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _prismjs = _interopRequireDefault(require(\"prismjs\"));\n\nvar _loadPrismLanguage = _interopRequireDefault(require(\"./_load-prism-language\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = function _default(language, code) {\n  if (!_prismjs.default.languages[language]) {\n    try {\n      (0, _loadPrismLanguage.default)(language);\n    } catch (e) {\n      // Language wasn't loaded so let's bail.\n      return code;\n    }\n  }\n\n  var lang = _prismjs.default.languages[language];\n\n  var highlighted = _prismjs.default.highlight(code, lang);\n\n  return highlighted;\n};\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _prismjs = _interopRequireDefault(require(\"prismjs\"));\n\nvar _prismLanguageDependencies = _interopRequireDefault(require(\"../prism-language-dependencies\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction loadPrismLanguage(language) {\n  if (_prismjs.default.languages[language]) {\n    // Don't load already loaded language\n    return;\n  }\n\n  var languageData = _prismLanguageDependencies.default[language];\n\n  if (!languageData) {\n    throw new Error(\"Prism doesn't support language '\".concat(language, \"'.\"));\n  }\n\n  if (languageData.option === \"default\") {\n    // Default language has already been loaded by Prism\n    return;\n  }\n\n  if (languageData.require) {\n    // Load the required language first\n    if (Array.isArray(languageData.require)) {\n      languageData.require.forEach(loadPrismLanguage);\n    } else {\n      loadPrismLanguage(languageData.require);\n    }\n  }\n\n  require(\"prismjs/components/prism-\".concat(language, \".js\"));\n}\n\nvar _default = loadPrismLanguage;\nexports.default = _default;","\"use strict\";\n\n// From \"https://raw.githubusercontent.com/PrismJS/prism/v1.11.0/components.js\"\nmodule.exports = {\n  \"meta\": {\n    \"path\": \"components/prism-{id}\",\n    \"noCSS\": true,\n    \"examplesPath\": \"examples/prism-{id}\",\n    \"addCheckAll\": true\n  },\n  \"markup\": {\n    \"title\": \"Markup\",\n    \"aliasTitles\": {\n      \"html\": \"HTML\",\n      \"xml\": \"XML\",\n      \"svg\": \"SVG\",\n      \"mathml\": \"MathML\"\n    },\n    \"option\": \"default\"\n  },\n  \"css\": {\n    \"title\": \"CSS\",\n    \"option\": \"default\"\n  },\n  \"clike\": {\n    \"title\": \"C-like\",\n    \"option\": \"default\"\n  },\n  \"javascript\": {\n    \"title\": \"JavaScript\",\n    \"option\": \"default\",\n    \"require\": \"clike\"\n  },\n  \"abap\": {\n    \"title\": \"ABAP\",\n    \"owner\": \"dellagustin\"\n  },\n  \"actionscript\": {\n    \"title\": \"ActionScript\",\n    \"require\": \"javascript\",\n    \"owner\": \"Golmote\"\n  },\n  \"ada\": {\n    \"title\": \"Ada\",\n    \"owner\": \"Lucretia\"\n  },\n  \"apacheconf\": {\n    \"title\": \"Apache Configuration\",\n    \"owner\": \"GuiTeK\"\n  },\n  \"apl\": {\n    \"title\": \"APL\",\n    \"owner\": \"ngn\"\n  },\n  \"applescript\": {\n    \"title\": \"AppleScript\",\n    \"owner\": \"Golmote\"\n  },\n  \"arduino\": {\n    \"title\": \"Arduino\",\n    \"require\": \"cpp\",\n    \"owner\": \"eisbehr-\"\n  },\n  \"asciidoc\": {\n    \"title\": \"AsciiDoc\",\n    \"owner\": \"Golmote\"\n  },\n  \"asm6502\": {\n    \"title\": \"6502 Assembly\",\n    \"owner\": \"kzurawel\"\n  },\n  \"aspnet\": {\n    \"title\": \"ASP.NET (C#)\",\n    \"require\": \"markup\",\n    \"owner\": \"nauzilus\"\n  },\n  \"autohotkey\": {\n    \"title\": \"AutoHotkey\",\n    \"owner\": \"aviaryan\"\n  },\n  \"autoit\": {\n    \"title\": \"AutoIt\",\n    \"owner\": \"Golmote\"\n  },\n  \"bash\": {\n    \"title\": \"Bash\",\n    \"owner\": \"zeitgeist87\"\n  },\n  \"basic\": {\n    \"title\": \"BASIC\",\n    \"owner\": \"Golmote\"\n  },\n  \"batch\": {\n    \"title\": \"Batch\",\n    \"owner\": \"Golmote\"\n  },\n  \"bison\": {\n    \"title\": \"Bison\",\n    \"require\": \"c\",\n    \"owner\": \"Golmote\"\n  },\n  \"brainfuck\": {\n    \"title\": \"Brainfuck\",\n    \"owner\": \"Golmote\"\n  },\n  \"bro\": {\n    \"title\": \"Bro\",\n    \"owner\": \"wayward710\"\n  },\n  \"c\": {\n    \"title\": \"C\",\n    \"require\": \"clike\",\n    \"owner\": \"zeitgeist87\"\n  },\n  \"csharp\": {\n    \"title\": \"C#\",\n    \"require\": \"clike\",\n    \"owner\": \"mvalipour\"\n  },\n  \"cpp\": {\n    \"title\": \"C++\",\n    \"require\": \"c\",\n    \"owner\": \"zeitgeist87\"\n  },\n  \"coffeescript\": {\n    \"title\": \"CoffeeScript\",\n    \"require\": \"javascript\",\n    \"owner\": \"R-osey\"\n  },\n  \"crystal\": {\n    \"title\": \"Crystal\",\n    \"require\": \"ruby\",\n    \"owner\": \"MakeNowJust\"\n  },\n  \"csp\": {\n    \"title\": \"Content-Security-Policy\",\n    \"owner\": \"ScottHelme\"\n  },\n  \"css-extras\": {\n    \"title\": \"CSS Extras\",\n    \"require\": \"css\",\n    \"owner\": \"milesj\"\n  },\n  \"d\": {\n    \"title\": \"D\",\n    \"require\": \"clike\",\n    \"owner\": \"Golmote\"\n  },\n  \"dart\": {\n    \"title\": \"Dart\",\n    \"require\": \"clike\",\n    \"owner\": \"Golmote\"\n  },\n  \"diff\": {\n    \"title\": \"Diff\",\n    \"owner\": \"uranusjr\"\n  },\n  \"django\": {\n    \"title\": \"Django/Jinja2\",\n    \"require\": \"markup\",\n    \"owner\": \"romanvm\"\n  },\n  \"docker\": {\n    \"title\": \"Docker\",\n    \"owner\": \"JustinBeckwith\"\n  },\n  \"eiffel\": {\n    \"title\": \"Eiffel\",\n    \"owner\": \"Conaclos\"\n  },\n  \"elixir\": {\n    \"title\": \"Elixir\",\n    \"owner\": \"Golmote\"\n  },\n  \"elm\": {\n    \"title\": \"Elm\",\n    \"owner\": \"zwilias\"\n  },\n  \"erlang\": {\n    \"title\": \"Erlang\",\n    \"owner\": \"Golmote\"\n  },\n  \"fsharp\": {\n    \"title\": \"F#\",\n    \"require\": \"clike\",\n    \"owner\": \"simonreynolds7\"\n  },\n  \"flow\": {\n    \"title\": \"Flow\",\n    \"require\": \"javascript\",\n    \"owner\": \"Golmote\"\n  },\n  \"fortran\": {\n    \"title\": \"Fortran\",\n    \"owner\": \"Golmote\"\n  },\n  \"gherkin\": {\n    \"title\": \"Gherkin\",\n    \"owner\": \"hason\"\n  },\n  \"git\": {\n    \"title\": \"Git\",\n    \"owner\": \"lgiraudel\"\n  },\n  \"glsl\": {\n    \"title\": \"GLSL\",\n    \"require\": \"clike\",\n    \"owner\": \"Golmote\"\n  },\n  \"go\": {\n    \"title\": \"Go\",\n    \"require\": \"clike\",\n    \"owner\": \"arnehormann\"\n  },\n  \"graphql\": {\n    \"title\": \"GraphQL\",\n    \"owner\": \"Golmote\"\n  },\n  \"groovy\": {\n    \"title\": \"Groovy\",\n    \"require\": \"clike\",\n    \"owner\": \"robfletcher\"\n  },\n  \"haml\": {\n    \"title\": \"Haml\",\n    \"require\": \"ruby\",\n    \"owner\": \"Golmote\"\n  },\n  \"handlebars\": {\n    \"title\": \"Handlebars\",\n    \"require\": \"markup\",\n    \"owner\": \"Golmote\"\n  },\n  \"haskell\": {\n    \"title\": \"Haskell\",\n    \"owner\": \"bholst\"\n  },\n  \"haxe\": {\n    \"title\": \"Haxe\",\n    \"require\": \"clike\",\n    \"owner\": \"Golmote\"\n  },\n  \"http\": {\n    \"title\": \"HTTP\",\n    \"owner\": \"danielgtaylor\"\n  },\n  \"hpkp\": {\n    \"title\": \"HTTP Public-Key-Pins\",\n    \"owner\": \"ScottHelme\"\n  },\n  \"hsts\": {\n    \"title\": \"HTTP Strict-Transport-Security\",\n    \"owner\": \"ScottHelme\"\n  },\n  \"ichigojam\": {\n    \"title\": \"IchigoJam\",\n    \"owner\": \"BlueCocoa\"\n  },\n  \"icon\": {\n    \"title\": \"Icon\",\n    \"owner\": \"Golmote\"\n  },\n  \"inform7\": {\n    \"title\": \"Inform 7\",\n    \"owner\": \"Golmote\"\n  },\n  \"ini\": {\n    \"title\": \"Ini\",\n    \"owner\": \"aviaryan\"\n  },\n  \"io\": {\n    \"title\": \"Io\",\n    \"owner\": \"AlesTsurko\"\n  },\n  \"j\": {\n    \"title\": \"J\",\n    \"owner\": \"Golmote\"\n  },\n  \"java\": {\n    \"title\": \"Java\",\n    \"require\": \"clike\",\n    \"owner\": \"sherblot\"\n  },\n  \"jolie\": {\n    \"title\": \"Jolie\",\n    \"require\": \"clike\",\n    \"owner\": \"thesave\"\n  },\n  \"json\": {\n    \"title\": \"JSON\",\n    \"owner\": \"CupOfTea696\"\n  },\n  \"julia\": {\n    \"title\": \"Julia\",\n    \"owner\": \"cdagnino\"\n  },\n  \"keyman\": {\n    \"title\": \"Keyman\",\n    \"owner\": \"mcdurdin\"\n  },\n  \"kotlin\": {\n    \"title\": \"Kotlin\",\n    \"require\": \"clike\",\n    \"owner\": \"Golmote\"\n  },\n  \"latex\": {\n    \"title\": \"LaTeX\",\n    \"owner\": \"japborst\"\n  },\n  \"less\": {\n    \"title\": \"Less\",\n    \"require\": \"css\",\n    \"owner\": \"Golmote\"\n  },\n  \"livescript\": {\n    \"title\": \"LiveScript\",\n    \"owner\": \"Golmote\"\n  },\n  \"lolcode\": {\n    \"title\": \"LOLCODE\",\n    \"owner\": \"Golmote\"\n  },\n  \"lua\": {\n    \"title\": \"Lua\",\n    \"owner\": \"Golmote\"\n  },\n  \"makefile\": {\n    \"title\": \"Makefile\",\n    \"owner\": \"Golmote\"\n  },\n  \"markdown\": {\n    \"title\": \"Markdown\",\n    \"require\": \"markup\",\n    \"owner\": \"Golmote\"\n  },\n  \"matlab\": {\n    \"title\": \"MATLAB\",\n    \"owner\": \"Golmote\"\n  },\n  \"mel\": {\n    \"title\": \"MEL\",\n    \"owner\": \"Golmote\"\n  },\n  \"mizar\": {\n    \"title\": \"Mizar\",\n    \"owner\": \"Golmote\"\n  },\n  \"monkey\": {\n    \"title\": \"Monkey\",\n    \"owner\": \"Golmote\"\n  },\n  \"n4js\": {\n    \"title\": \"N4JS\",\n    \"require\": \"javascript\",\n    \"owner\": \"bsmith-n4\"\n  },\n  \"nasm\": {\n    \"title\": \"NASM\",\n    \"owner\": \"rbmj\"\n  },\n  \"nginx\": {\n    \"title\": \"nginx\",\n    \"owner\": \"westonganger\",\n    \"require\": \"clike\"\n  },\n  \"nim\": {\n    \"title\": \"Nim\",\n    \"owner\": \"Golmote\"\n  },\n  \"nix\": {\n    \"title\": \"Nix\",\n    \"owner\": \"Golmote\"\n  },\n  \"nsis\": {\n    \"title\": \"NSIS\",\n    \"owner\": \"idleberg\"\n  },\n  \"objectivec\": {\n    \"title\": \"Objective-C\",\n    \"require\": \"c\",\n    \"owner\": \"uranusjr\"\n  },\n  \"ocaml\": {\n    \"title\": \"OCaml\",\n    \"owner\": \"Golmote\"\n  },\n  \"opencl\": {\n    \"title\": \"OpenCL\",\n    \"require\": \"cpp\",\n    \"owner\": \"Milania1\"\n  },\n  \"oz\": {\n    \"title\": \"Oz\",\n    \"owner\": \"Golmote\"\n  },\n  \"parigp\": {\n    \"title\": \"PARI/GP\",\n    \"owner\": \"Golmote\"\n  },\n  \"parser\": {\n    \"title\": \"Parser\",\n    \"require\": \"markup\",\n    \"owner\": \"Golmote\"\n  },\n  \"pascal\": {\n    \"title\": \"Pascal\",\n    \"owner\": \"Golmote\"\n  },\n  \"perl\": {\n    \"title\": \"Perl\",\n    \"owner\": \"Golmote\"\n  },\n  \"php\": {\n    \"title\": \"PHP\",\n    \"require\": \"clike\",\n    \"owner\": \"milesj\"\n  },\n  \"php-extras\": {\n    \"title\": \"PHP Extras\",\n    \"require\": \"php\",\n    \"owner\": \"milesj\"\n  },\n  \"powershell\": {\n    \"title\": \"PowerShell\",\n    \"owner\": \"nauzilus\"\n  },\n  \"processing\": {\n    \"title\": \"Processing\",\n    \"require\": \"clike\",\n    \"owner\": \"Golmote\"\n  },\n  \"prolog\": {\n    \"title\": \"Prolog\",\n    \"owner\": \"Golmote\"\n  },\n  \"properties\": {\n    \"title\": \".properties\",\n    \"owner\": \"Golmote\"\n  },\n  \"protobuf\": {\n    \"title\": \"Protocol Buffers\",\n    \"require\": \"clike\",\n    \"owner\": \"just-boris\"\n  },\n  \"pug\": {\n    \"title\": \"Pug\",\n    \"require\": \"javascript\",\n    \"owner\": \"Golmote\"\n  },\n  \"puppet\": {\n    \"title\": \"Puppet\",\n    \"owner\": \"Golmote\"\n  },\n  \"pure\": {\n    \"title\": \"Pure\",\n    \"owner\": \"Golmote\"\n  },\n  \"python\": {\n    \"title\": \"Python\",\n    \"owner\": \"multipetros\"\n  },\n  \"q\": {\n    \"title\": \"Q\",\n    \"owner\": \"Golmote\"\n  },\n  \"qore\": {\n    \"title\": \"Qore\",\n    \"require\": \"clike\",\n    \"owner\": \"temnroegg\"\n  },\n  \"r\": {\n    \"title\": \"R\",\n    \"owner\": \"Golmote\"\n  },\n  \"jsx\": {\n    \"title\": \"React JSX\",\n    \"require\": [\"markup\", \"javascript\"],\n    \"owner\": \"vkbansal\"\n  },\n  \"tsx\": {\n    \"title\": \"React TSX\",\n    \"require\": [\"jsx\", \"typescript\"]\n  },\n  \"renpy\": {\n    \"title\": \"Ren'py\",\n    \"owner\": \"HyuchiaDiego\"\n  },\n  \"reason\": {\n    \"title\": \"Reason\",\n    \"require\": \"clike\",\n    \"owner\": \"Golmote\"\n  },\n  \"rest\": {\n    \"title\": \"reST (reStructuredText)\",\n    \"owner\": \"Golmote\"\n  },\n  \"rip\": {\n    \"title\": \"Rip\",\n    \"owner\": \"ravinggenius\"\n  },\n  \"roboconf\": {\n    \"title\": \"Roboconf\",\n    \"owner\": \"Golmote\"\n  },\n  \"ruby\": {\n    \"title\": \"Ruby\",\n    \"require\": \"clike\",\n    \"owner\": \"samflores\"\n  },\n  \"rust\": {\n    \"title\": \"Rust\",\n    \"owner\": \"Golmote\"\n  },\n  \"sas\": {\n    \"title\": \"SAS\",\n    \"owner\": \"Golmote\"\n  },\n  \"sass\": {\n    \"title\": \"Sass (Sass)\",\n    \"require\": \"css\",\n    \"owner\": \"Golmote\"\n  },\n  \"scss\": {\n    \"title\": \"Sass (Scss)\",\n    \"require\": \"css\",\n    \"owner\": \"MoOx\"\n  },\n  \"scala\": {\n    \"title\": \"Scala\",\n    \"require\": \"java\",\n    \"owner\": \"jozic\"\n  },\n  \"scheme\": {\n    \"title\": \"Scheme\",\n    \"owner\": \"bacchus123\"\n  },\n  \"smalltalk\": {\n    \"title\": \"Smalltalk\",\n    \"owner\": \"Golmote\"\n  },\n  \"smarty\": {\n    \"title\": \"Smarty\",\n    \"require\": \"markup\",\n    \"owner\": \"Golmote\"\n  },\n  \"sql\": {\n    \"title\": \"SQL\",\n    \"owner\": \"multipetros\"\n  },\n  \"stylus\": {\n    \"title\": \"Stylus\",\n    \"owner\": \"vkbansal\"\n  },\n  \"swift\": {\n    \"title\": \"Swift\",\n    \"require\": \"clike\",\n    \"owner\": \"chrischares\"\n  },\n  \"tcl\": {\n    \"title\": \"Tcl\",\n    \"owner\": \"PeterChaplin\"\n  },\n  \"textile\": {\n    \"title\": \"Textile\",\n    \"require\": \"markup\",\n    \"owner\": \"Golmote\"\n  },\n  \"twig\": {\n    \"title\": \"Twig\",\n    \"require\": \"markup\",\n    \"owner\": \"brandonkelly\"\n  },\n  \"typescript\": {\n    \"title\": \"TypeScript\",\n    \"require\": \"javascript\",\n    \"owner\": \"vkbansal\"\n  },\n  \"vbnet\": {\n    \"title\": \"VB.Net\",\n    \"require\": \"basic\",\n    \"owner\": \"Bigsby\"\n  },\n  \"verilog\": {\n    \"title\": \"Verilog\",\n    \"owner\": \"a-rey\"\n  },\n  \"vhdl\": {\n    \"title\": \"VHDL\",\n    \"owner\": \"a-rey\"\n  },\n  \"vim\": {\n    \"title\": \"vim\",\n    \"owner\": \"westonganger\"\n  },\n  \"wiki\": {\n    \"title\": \"Wiki markup\",\n    \"require\": \"markup\",\n    \"owner\": \"Golmote\"\n  },\n  \"xeora\": {\n    \"title\": \"Xeora\",\n    \"require\": \"markup\",\n    \"owner\": \"freakmaxi\"\n  },\n  \"xojo\": {\n    \"title\": \"Xojo (REALbasic)\",\n    \"owner\": \"Golmote\"\n  },\n  \"yaml\": {\n    \"title\": \"YAML\",\n    \"owner\": \"hason\"\n  }\n};","Prism.languages.abap = {\n\t'comment': /^\\*.*/m,\n\t'string' : /(`|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n\t'string-template': {\n\t\tpattern: /([|}])(?:\\\\.|[^\\\\|{\\r\\n])*(?=[|{])/,\n\t\tlookbehind: true,\n\t\talias: 'string'\n\t},\n\t/* End Of Line comments should not interfere with strings when the  \n\tquote character occurs within them. We assume a string being highlighted\n\tinside an EOL comment is more acceptable than the opposite.\n\t*/\n\t'eol-comment': {\n\t\tpattern: /(^|\\s)\".*/m,\n\t\tlookbehind: true,\n\t\talias: 'comment'\n\t},\n\t'keyword' : {\n\t\tpattern: /(\\s|\\.|^)(?:SCIENTIFIC_WITH_LEADING_ZERO|SCALE_PRESERVING_SCIENTIFIC|RMC_COMMUNICATION_FAILURE|END-ENHANCEMENT-SECTION|MULTIPLY-CORRESPONDING|SUBTRACT-CORRESPONDING|VERIFICATION-MESSAGE|DIVIDE-CORRESPONDING|ENHANCEMENT-SECTION|CURRENCY_CONVERSION|RMC_SYSTEM_FAILURE|START-OF-SELECTION|MOVE-CORRESPONDING|RMC_INVALID_STATUS|CUSTOMER-FUNCTION|END-OF-DEFINITION|ENHANCEMENT-POINT|SYSTEM-EXCEPTIONS|ADD-CORRESPONDING|SCALE_PRESERVING|SELECTION-SCREEN|CURSOR-SELECTION|END-OF-SELECTION|LOAD-OF-PROGRAM|SCROLL-BOUNDARY|SELECTION-TABLE|EXCEPTION-TABLE|IMPLEMENTATIONS|PARAMETER-TABLE|RIGHT-JUSTIFIED|UNIT_CONVERSION|AUTHORITY-CHECK|LIST-PROCESSING|SIGN_AS_POSTFIX|COL_BACKGROUND|IMPLEMENTATION|INTERFACE-POOL|TRANSFORMATION|IDENTIFICATION|ENDENHANCEMENT|LINE-SELECTION|INITIALIZATION|LEFT-JUSTIFIED|SELECT-OPTIONS|SELECTION-SETS|COMMUNICATION|CORRESPONDING|DECIMAL_SHIFT|PRINT-CONTROL|VALUE-REQUEST|CHAIN-REQUEST|FUNCTION-POOL|FIELD-SYMBOLS|FUNCTIONALITY|INVERTED-DATE|SELECTION-SET|CLASS-METHODS|OUTPUT-LENGTH|CLASS-CODING|COL_NEGATIVE|ERRORMESSAGE|FIELD-GROUPS|HELP-REQUEST|NO-EXTENSION|NO-TOPOFPAGE|REDEFINITION|DISPLAY-MODE|ENDINTERFACE|EXIT-COMMAND|FIELD-SYMBOL|NO-SCROLLING|SHORTDUMP-ID|ACCESSPOLICY|CLASS-EVENTS|COL_POSITIVE|DECLARATIONS|ENHANCEMENTS|FILTER-TABLE|SWITCHSTATES|SYNTAX-CHECK|TRANSPORTING|ASYNCHRONOUS|SYNTAX-TRACE|TOKENIZATION|USER-COMMAND|WITH-HEADING|ABAP-SOURCE|BREAK-POINT|CHAIN-INPUT|COMPRESSION|FIXED-POINT|NEW-SECTION|NON-UNICODE|OCCURRENCES|RESPONSIBLE|SYSTEM-CALL|TRACE-TABLE|ABBREVIATED|CHAR-TO-HEX|END-OF-FILE|ENDFUNCTION|ENVIRONMENT|ASSOCIATION|COL_HEADING|EDITOR-CALL|END-OF-PAGE|ENGINEERING|IMPLEMENTED|INTENSIFIED|RADIOBUTTON|SYSTEM-EXIT|TOP-OF-PAGE|TRANSACTION|APPLICATION|CONCATENATE|DESTINATION|ENHANCEMENT|IMMEDIATELY|NO-GROUPING|PRECOMPILED|REPLACEMENT|TITLE-LINES|ACTIVATION|BYTE-ORDER|CLASS-POOL|CONNECTION|CONVERSION|DEFINITION|DEPARTMENT|EXPIRATION|INHERITING|MESSAGE-ID|NO-HEADING|PERFORMING|QUEUE-ONLY|RIGHTSPACE|SCIENTIFIC|STATUSINFO|STRUCTURES|SYNCPOINTS|WITH-TITLE|ATTRIBUTES|BOUNDARIES|CLASS-DATA|COL_NORMAL|DD\\/MM\\/YYYY|DESCENDING|INTERFACES|LINE-COUNT|MM\\/DD\\/YYYY|NON-UNIQUE|PRESERVING|SELECTIONS|STATEMENTS|SUBROUTINE|TRUNCATION|TYPE-POOLS|ARITHMETIC|BACKGROUND|ENDPROVIDE|EXCEPTIONS|IDENTIFIER|INDEX-LINE|OBLIGATORY|PARAMETERS|PERCENTAGE|PUSHBUTTON|RESOLUTION|COMPONENTS|DEALLOCATE|DISCONNECT|DUPLICATES|FIRST-LINE|HEAD-LINES|NO-DISPLAY|OCCURRENCE|RESPECTING|RETURNCODE|SUBMATCHES|TRACE-FILE|ASCENDING|BYPASSING|ENDMODULE|EXCEPTION|EXCLUDING|EXPORTING|INCREMENT|MATCHCODE|PARAMETER|PARTIALLY|PREFERRED|REFERENCE|REPLACING|RETURNING|SELECTION|SEPARATED|SPECIFIED|STATEMENT|TIMESTAMP|TYPE-POOL|ACCEPTING|APPENDAGE|ASSIGNING|COL_GROUP|COMPARING|CONSTANTS|DANGEROUS|IMPORTING|INSTANCES|LEFTSPACE|LOG-POINT|QUICKINFO|READ-ONLY|SCROLLING|SQLSCRIPT|STEP-LOOP|TOP-LINES|TRANSLATE|APPENDING|AUTHORITY|CHARACTER|COMPONENT|CONDITION|DIRECTORY|DUPLICATE|MESSAGING|RECEIVING|SUBSCREEN|ACCORDING|COL_TOTAL|END-LINES|ENDMETHOD|ENDSELECT|EXPANDING|EXTENSION|INCLUDING|INFOTYPES|INTERFACE|INTERVALS|LINE-SIZE|PF-STATUS|PROCEDURE|PROTECTED|REQUESTED|RESUMABLE|RIGHTPLUS|SAP-SPOOL|SECONDARY|STRUCTURE|SUBSTRING|TABLEVIEW|NUMOFCHAR|ADJACENT|ANALYSIS|ASSIGNED|BACKWARD|CHANNELS|CHECKBOX|CONTINUE|CRITICAL|DATAINFO|DD\\/MM\\/YY|DURATION|ENCODING|ENDCLASS|FUNCTION|LEFTPLUS|LINEFEED|MM\\/DD\\/YY|OVERFLOW|RECEIVED|SKIPPING|SORTABLE|STANDARD|SUBTRACT|SUPPRESS|TABSTRIP|TITLEBAR|TRUNCATE|UNASSIGN|WHENEVER|ANALYZER|COALESCE|COMMENTS|CONDENSE|DECIMALS|DEFERRED|ENDWHILE|EXPLICIT|KEYWORDS|MESSAGES|POSITION|PRIORITY|RECEIVER|RENAMING|TIMEZONE|TRAILING|ALLOCATE|CENTERED|CIRCULAR|CONTROLS|CURRENCY|DELETING|DESCRIBE|DISTANCE|ENDCATCH|EXPONENT|EXTENDED|GENERATE|IGNORING|INCLUDES|INTERNAL|MAJOR-ID|MODIFIER|NEW-LINE|OPTIONAL|PROPERTY|ROLLBACK|STARTING|SUPPLIED|ABSTRACT|CHANGING|CONTEXTS|CREATING|CUSTOMER|DATABASE|DAYLIGHT|DEFINING|DISTINCT|DIVISION|ENABLING|ENDCHAIN|ESCAPING|HARMLESS|IMPLICIT|INACTIVE|LANGUAGE|MINOR-ID|MULTIPLY|NEW-PAGE|NO-TITLE|POS_HIGH|SEPARATE|TEXTPOOL|TRANSFER|SELECTOR|DBMAXLEN|ITERATOR|SELECTOR|ARCHIVE|BIT-XOR|BYTE-CO|COLLECT|COMMENT|CURRENT|DEFAULT|DISPLAY|ENDFORM|EXTRACT|LEADING|LISTBOX|LOCATOR|MEMBERS|METHODS|NESTING|POS_LOW|PROCESS|PROVIDE|RAISING|RESERVE|SECONDS|SUMMARY|VISIBLE|BETWEEN|BIT-AND|BYTE-CS|CLEANUP|COMPUTE|CONTROL|CONVERT|DATASET|ENDCASE|FORWARD|HEADERS|HOTSPOT|INCLUDE|INVERSE|KEEPING|NO-ZERO|OBJECTS|OVERLAY|PADDING|PATTERN|PROGRAM|REFRESH|SECTION|SUMMING|TESTING|VERSION|WINDOWS|WITHOUT|BIT-NOT|BYTE-CA|BYTE-NA|CASTING|CONTEXT|COUNTRY|DYNAMIC|ENABLED|ENDLOOP|EXECUTE|FRIENDS|HANDLER|HEADING|INITIAL|\\*-INPUT|LOGFILE|MAXIMUM|MINIMUM|NO-GAPS|NO-SIGN|PRAGMAS|PRIMARY|PRIVATE|REDUCED|REPLACE|REQUEST|RESULTS|UNICODE|WARNING|ALIASES|BYTE-CN|BYTE-NS|CALLING|COL_KEY|COLUMNS|CONNECT|ENDEXEC|ENTRIES|EXCLUDE|FILTERS|FURTHER|HELP-ID|LOGICAL|MAPPING|MESSAGE|NAMETAB|OPTIONS|PACKAGE|PERFORM|RECEIVE|STATICS|VARYING|BINDING|CHARLEN|GREATER|XSTRLEN|ACCEPT|APPEND|DETAIL|ELSEIF|ENDING|ENDTRY|FORMAT|FRAMES|GIVING|HASHED|HEADER|IMPORT|INSERT|MARGIN|MODULE|NATIVE|OBJECT|OFFSET|REMOTE|RESUME|SAVING|SIMPLE|SUBMIT|TABBED|TOKENS|UNIQUE|UNPACK|UPDATE|WINDOW|YELLOW|ACTUAL|ASPECT|CENTER|CURSOR|DELETE|DIALOG|DIVIDE|DURING|ERRORS|EVENTS|EXTEND|FILTER|HANDLE|HAVING|IGNORE|LITTLE|MEMORY|NO-GAP|OCCURS|OPTION|PERSON|PLACES|PUBLIC|REDUCE|REPORT|RESULT|SINGLE|SORTED|SWITCH|SYNTAX|TARGET|VALUES|WRITER|ASSERT|BLOCKS|BOUNDS|BUFFER|CHANGE|COLUMN|COMMIT|CONCAT|COPIES|CREATE|DDMMYY|DEFINE|ENDIAN|ESCAPE|EXPAND|KERNEL|LAYOUT|LEGACY|LEVELS|MMDDYY|NUMBER|OUTPUT|RANGES|READER|RETURN|SCREEN|SEARCH|SELECT|SHARED|SOURCE|STABLE|STATIC|SUBKEY|SUFFIX|TABLES|UNWIND|YYMMDD|ASSIGN|BACKUP|BEFORE|BINARY|BIT-OR|BLANKS|CLIENT|CODING|COMMON|DEMAND|DYNPRO|EXCEPT|EXISTS|EXPORT|FIELDS|GLOBAL|GROUPS|LENGTH|LOCALE|MEDIUM|METHOD|MODIFY|NESTED|OTHERS|REJECT|SCROLL|SUPPLY|SYMBOL|ENDFOR|STRLEN|ALIGN|BEGIN|BOUND|ENDAT|ENTRY|EVENT|FINAL|FLUSH|GRANT|INNER|SHORT|USING|WRITE|AFTER|BLACK|BLOCK|CLOCK|COLOR|COUNT|DUMMY|EMPTY|ENDDO|ENDON|GREEN|INDEX|INOUT|LEAVE|LEVEL|LINES|MODIF|ORDER|OUTER|RANGE|RESET|RETRY|RIGHT|SMART|SPLIT|STYLE|TABLE|THROW|UNDER|UNTIL|UPPER|UTF-8|WHERE|ALIAS|BLANK|CLEAR|CLOSE|EXACT|FETCH|FIRST|FOUND|GROUP|LLANG|LOCAL|OTHER|REGEX|SPOOL|TITLE|TYPES|VALID|WHILE|ALPHA|BOXED|CATCH|CHAIN|CHECK|CLASS|COVER|ENDIF|EQUIV|FIELD|FLOOR|FRAME|INPUT|LOWER|MATCH|NODES|PAGES|PRINT|RAISE|ROUND|SHIFT|SPACE|SPOTS|STAMP|STATE|TASKS|TIMES|TRMAC|ULINE|UNION|VALUE|WIDTH|EQUAL|LOG10|TRUNC|BLOB|CASE|CEIL|CLOB|COND|EXIT|FILE|GAPS|HOLD|INCL|INTO|KEEP|KEYS|LAST|LINE|LONG|LPAD|MAIL|MODE|OPEN|PINK|READ|ROWS|TEST|THEN|ZERO|AREA|BACK|BADI|BYTE|CAST|EDIT|EXEC|FAIL|FIND|FKEQ|FONT|FREE|GKEQ|HIDE|INIT|ITNO|LATE|LOOP|MAIN|MARK|MOVE|NEXT|NULL|RISK|ROLE|UNIT|WAIT|ZONE|BASE|CALL|CODE|DATA|DATE|FKGE|GKGE|HIGH|KIND|LEFT|LIST|MASK|MESH|NAME|NODE|PACK|PAGE|POOL|SEND|SIGN|SIZE|SOME|STOP|TASK|TEXT|TIME|USER|VARY|WITH|WORD|BLUE|CONV|COPY|DEEP|ELSE|FORM|FROM|HINT|ICON|JOIN|LIKE|LOAD|ONLY|PART|SCAN|SKIP|SORT|TYPE|UNIX|VIEW|WHEN|WORK|ACOS|ASIN|ATAN|COSH|EACH|FRAC|LESS|RTTI|SINH|SQRT|TANH|AVG|BIT|DIV|ISO|LET|OUT|PAD|SQL|ALL|CI_|CPI|END|LOB|LPI|MAX|MIN|NEW|OLE|RUN|SET|\\?TO|YES|ABS|ADD|AND|BIG|FOR|HDB|JOB|LOW|NOT|SAP|TRY|VIA|XML|ANY|GET|IDS|KEY|MOD|OFF|PUT|RAW|RED|REF|SUM|TAB|XSD|CNT|COS|EXP|LOG|SIN|TAN|XOR|AT|CO|CP|DO|GT|ID|IF|NS|OR|BT|CA|CS|GE|NA|NB|EQ|IN|LT|NE|NO|OF|ON|PF|TO|AS|BY|CN|IS|LE|NP|UP|E|I|M|O|Z|C|X)\\b/i,\n\t\tlookbehind: true\n\t},\n\t/* Numbers can be only integers. Decimal or Hex appear only as strings */\n\t'number' : /\\b\\d+\\b/,\n\t/* Operators must always be surrounded by whitespace, they cannot be put \n\tadjacent to operands. \n\t*/\n\t'operator' : {\n\t\tpattern: /(\\s)(?:\\*\\*?|<[=>]?|>=?|\\?=|[-+\\/=])(?=\\s)/,\n\t\tlookbehind: true\n\t},\n\t'string-operator' : {\n\t\tpattern: /(\\s)&&?(?=\\s)/,\n\t\tlookbehind: true,\n\t\t/* The official editor highlights */\n\t\talias: \"keyword\"\n\t},\n\t'token-operator' : [{\n\t\t/* Special operators used to access structure components, class methods/attributes, etc. */\n\t\tpattern: /(\\w)(?:->?|=>|[~|{}])(?=\\w)/,\n\t\tlookbehind: true,\n\t\talias: \"punctuation\"\n\t}, {\n\t    /* Special tokens used do delimit string templates */\n\t    pattern: /[|{}]/,\n\t\talias: \"punctuation\"\n\t}],\n\t'punctuation' : /[,.:()]/\n};","Prism.languages.abap={comment:/^\\*.*/m,string:/(`|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\"string-template\":{pattern:/([|}])(?:\\\\.|[^\\\\|{\\r\\n])*(?=[|{])/,lookbehind:!0,alias:\"string\"},\"eol-comment\":{pattern:/(^|\\s)\".*/m,lookbehind:!0,alias:\"comment\"},keyword:{pattern:/(\\s|\\.|^)(?:SCIENTIFIC_WITH_LEADING_ZERO|SCALE_PRESERVING_SCIENTIFIC|RMC_COMMUNICATION_FAILURE|END-ENHANCEMENT-SECTION|MULTIPLY-CORRESPONDING|SUBTRACT-CORRESPONDING|VERIFICATION-MESSAGE|DIVIDE-CORRESPONDING|ENHANCEMENT-SECTION|CURRENCY_CONVERSION|RMC_SYSTEM_FAILURE|START-OF-SELECTION|MOVE-CORRESPONDING|RMC_INVALID_STATUS|CUSTOMER-FUNCTION|END-OF-DEFINITION|ENHANCEMENT-POINT|SYSTEM-EXCEPTIONS|ADD-CORRESPONDING|SCALE_PRESERVING|SELECTION-SCREEN|CURSOR-SELECTION|END-OF-SELECTION|LOAD-OF-PROGRAM|SCROLL-BOUNDARY|SELECTION-TABLE|EXCEPTION-TABLE|IMPLEMENTATIONS|PARAMETER-TABLE|RIGHT-JUSTIFIED|UNIT_CONVERSION|AUTHORITY-CHECK|LIST-PROCESSING|SIGN_AS_POSTFIX|COL_BACKGROUND|IMPLEMENTATION|INTERFACE-POOL|TRANSFORMATION|IDENTIFICATION|ENDENHANCEMENT|LINE-SELECTION|INITIALIZATION|LEFT-JUSTIFIED|SELECT-OPTIONS|SELECTION-SETS|COMMUNICATION|CORRESPONDING|DECIMAL_SHIFT|PRINT-CONTROL|VALUE-REQUEST|CHAIN-REQUEST|FUNCTION-POOL|FIELD-SYMBOLS|FUNCTIONALITY|INVERTED-DATE|SELECTION-SET|CLASS-METHODS|OUTPUT-LENGTH|CLASS-CODING|COL_NEGATIVE|ERRORMESSAGE|FIELD-GROUPS|HELP-REQUEST|NO-EXTENSION|NO-TOPOFPAGE|REDEFINITION|DISPLAY-MODE|ENDINTERFACE|EXIT-COMMAND|FIELD-SYMBOL|NO-SCROLLING|SHORTDUMP-ID|ACCESSPOLICY|CLASS-EVENTS|COL_POSITIVE|DECLARATIONS|ENHANCEMENTS|FILTER-TABLE|SWITCHSTATES|SYNTAX-CHECK|TRANSPORTING|ASYNCHRONOUS|SYNTAX-TRACE|TOKENIZATION|USER-COMMAND|WITH-HEADING|ABAP-SOURCE|BREAK-POINT|CHAIN-INPUT|COMPRESSION|FIXED-POINT|NEW-SECTION|NON-UNICODE|OCCURRENCES|RESPONSIBLE|SYSTEM-CALL|TRACE-TABLE|ABBREVIATED|CHAR-TO-HEX|END-OF-FILE|ENDFUNCTION|ENVIRONMENT|ASSOCIATION|COL_HEADING|EDITOR-CALL|END-OF-PAGE|ENGINEERING|IMPLEMENTED|INTENSIFIED|RADIOBUTTON|SYSTEM-EXIT|TOP-OF-PAGE|TRANSACTION|APPLICATION|CONCATENATE|DESTINATION|ENHANCEMENT|IMMEDIATELY|NO-GROUPING|PRECOMPILED|REPLACEMENT|TITLE-LINES|ACTIVATION|BYTE-ORDER|CLASS-POOL|CONNECTION|CONVERSION|DEFINITION|DEPARTMENT|EXPIRATION|INHERITING|MESSAGE-ID|NO-HEADING|PERFORMING|QUEUE-ONLY|RIGHTSPACE|SCIENTIFIC|STATUSINFO|STRUCTURES|SYNCPOINTS|WITH-TITLE|ATTRIBUTES|BOUNDARIES|CLASS-DATA|COL_NORMAL|DD\\/MM\\/YYYY|DESCENDING|INTERFACES|LINE-COUNT|MM\\/DD\\/YYYY|NON-UNIQUE|PRESERVING|SELECTIONS|STATEMENTS|SUBROUTINE|TRUNCATION|TYPE-POOLS|ARITHMETIC|BACKGROUND|ENDPROVIDE|EXCEPTIONS|IDENTIFIER|INDEX-LINE|OBLIGATORY|PARAMETERS|PERCENTAGE|PUSHBUTTON|RESOLUTION|COMPONENTS|DEALLOCATE|DISCONNECT|DUPLICATES|FIRST-LINE|HEAD-LINES|NO-DISPLAY|OCCURRENCE|RESPECTING|RETURNCODE|SUBMATCHES|TRACE-FILE|ASCENDING|BYPASSING|ENDMODULE|EXCEPTION|EXCLUDING|EXPORTING|INCREMENT|MATCHCODE|PARAMETER|PARTIALLY|PREFERRED|REFERENCE|REPLACING|RETURNING|SELECTION|SEPARATED|SPECIFIED|STATEMENT|TIMESTAMP|TYPE-POOL|ACCEPTING|APPENDAGE|ASSIGNING|COL_GROUP|COMPARING|CONSTANTS|DANGEROUS|IMPORTING|INSTANCES|LEFTSPACE|LOG-POINT|QUICKINFO|READ-ONLY|SCROLLING|SQLSCRIPT|STEP-LOOP|TOP-LINES|TRANSLATE|APPENDING|AUTHORITY|CHARACTER|COMPONENT|CONDITION|DIRECTORY|DUPLICATE|MESSAGING|RECEIVING|SUBSCREEN|ACCORDING|COL_TOTAL|END-LINES|ENDMETHOD|ENDSELECT|EXPANDING|EXTENSION|INCLUDING|INFOTYPES|INTERFACE|INTERVALS|LINE-SIZE|PF-STATUS|PROCEDURE|PROTECTED|REQUESTED|RESUMABLE|RIGHTPLUS|SAP-SPOOL|SECONDARY|STRUCTURE|SUBSTRING|TABLEVIEW|NUMOFCHAR|ADJACENT|ANALYSIS|ASSIGNED|BACKWARD|CHANNELS|CHECKBOX|CONTINUE|CRITICAL|DATAINFO|DD\\/MM\\/YY|DURATION|ENCODING|ENDCLASS|FUNCTION|LEFTPLUS|LINEFEED|MM\\/DD\\/YY|OVERFLOW|RECEIVED|SKIPPING|SORTABLE|STANDARD|SUBTRACT|SUPPRESS|TABSTRIP|TITLEBAR|TRUNCATE|UNASSIGN|WHENEVER|ANALYZER|COALESCE|COMMENTS|CONDENSE|DECIMALS|DEFERRED|ENDWHILE|EXPLICIT|KEYWORDS|MESSAGES|POSITION|PRIORITY|RECEIVER|RENAMING|TIMEZONE|TRAILING|ALLOCATE|CENTERED|CIRCULAR|CONTROLS|CURRENCY|DELETING|DESCRIBE|DISTANCE|ENDCATCH|EXPONENT|EXTENDED|GENERATE|IGNORING|INCLUDES|INTERNAL|MAJOR-ID|MODIFIER|NEW-LINE|OPTIONAL|PROPERTY|ROLLBACK|STARTING|SUPPLIED|ABSTRACT|CHANGING|CONTEXTS|CREATING|CUSTOMER|DATABASE|DAYLIGHT|DEFINING|DISTINCT|DIVISION|ENABLING|ENDCHAIN|ESCAPING|HARMLESS|IMPLICIT|INACTIVE|LANGUAGE|MINOR-ID|MULTIPLY|NEW-PAGE|NO-TITLE|POS_HIGH|SEPARATE|TEXTPOOL|TRANSFER|SELECTOR|DBMAXLEN|ITERATOR|SELECTOR|ARCHIVE|BIT-XOR|BYTE-CO|COLLECT|COMMENT|CURRENT|DEFAULT|DISPLAY|ENDFORM|EXTRACT|LEADING|LISTBOX|LOCATOR|MEMBERS|METHODS|NESTING|POS_LOW|PROCESS|PROVIDE|RAISING|RESERVE|SECONDS|SUMMARY|VISIBLE|BETWEEN|BIT-AND|BYTE-CS|CLEANUP|COMPUTE|CONTROL|CONVERT|DATASET|ENDCASE|FORWARD|HEADERS|HOTSPOT|INCLUDE|INVERSE|KEEPING|NO-ZERO|OBJECTS|OVERLAY|PADDING|PATTERN|PROGRAM|REFRESH|SECTION|SUMMING|TESTING|VERSION|WINDOWS|WITHOUT|BIT-NOT|BYTE-CA|BYTE-NA|CASTING|CONTEXT|COUNTRY|DYNAMIC|ENABLED|ENDLOOP|EXECUTE|FRIENDS|HANDLER|HEADING|INITIAL|\\*-INPUT|LOGFILE|MAXIMUM|MINIMUM|NO-GAPS|NO-SIGN|PRAGMAS|PRIMARY|PRIVATE|REDUCED|REPLACE|REQUEST|RESULTS|UNICODE|WARNING|ALIASES|BYTE-CN|BYTE-NS|CALLING|COL_KEY|COLUMNS|CONNECT|ENDEXEC|ENTRIES|EXCLUDE|FILTERS|FURTHER|HELP-ID|LOGICAL|MAPPING|MESSAGE|NAMETAB|OPTIONS|PACKAGE|PERFORM|RECEIVE|STATICS|VARYING|BINDING|CHARLEN|GREATER|XSTRLEN|ACCEPT|APPEND|DETAIL|ELSEIF|ENDING|ENDTRY|FORMAT|FRAMES|GIVING|HASHED|HEADER|IMPORT|INSERT|MARGIN|MODULE|NATIVE|OBJECT|OFFSET|REMOTE|RESUME|SAVING|SIMPLE|SUBMIT|TABBED|TOKENS|UNIQUE|UNPACK|UPDATE|WINDOW|YELLOW|ACTUAL|ASPECT|CENTER|CURSOR|DELETE|DIALOG|DIVIDE|DURING|ERRORS|EVENTS|EXTEND|FILTER|HANDLE|HAVING|IGNORE|LITTLE|MEMORY|NO-GAP|OCCURS|OPTION|PERSON|PLACES|PUBLIC|REDUCE|REPORT|RESULT|SINGLE|SORTED|SWITCH|SYNTAX|TARGET|VALUES|WRITER|ASSERT|BLOCKS|BOUNDS|BUFFER|CHANGE|COLUMN|COMMIT|CONCAT|COPIES|CREATE|DDMMYY|DEFINE|ENDIAN|ESCAPE|EXPAND|KERNEL|LAYOUT|LEGACY|LEVELS|MMDDYY|NUMBER|OUTPUT|RANGES|READER|RETURN|SCREEN|SEARCH|SELECT|SHARED|SOURCE|STABLE|STATIC|SUBKEY|SUFFIX|TABLES|UNWIND|YYMMDD|ASSIGN|BACKUP|BEFORE|BINARY|BIT-OR|BLANKS|CLIENT|CODING|COMMON|DEMAND|DYNPRO|EXCEPT|EXISTS|EXPORT|FIELDS|GLOBAL|GROUPS|LENGTH|LOCALE|MEDIUM|METHOD|MODIFY|NESTED|OTHERS|REJECT|SCROLL|SUPPLY|SYMBOL|ENDFOR|STRLEN|ALIGN|BEGIN|BOUND|ENDAT|ENTRY|EVENT|FINAL|FLUSH|GRANT|INNER|SHORT|USING|WRITE|AFTER|BLACK|BLOCK|CLOCK|COLOR|COUNT|DUMMY|EMPTY|ENDDO|ENDON|GREEN|INDEX|INOUT|LEAVE|LEVEL|LINES|MODIF|ORDER|OUTER|RANGE|RESET|RETRY|RIGHT|SMART|SPLIT|STYLE|TABLE|THROW|UNDER|UNTIL|UPPER|UTF-8|WHERE|ALIAS|BLANK|CLEAR|CLOSE|EXACT|FETCH|FIRST|FOUND|GROUP|LLANG|LOCAL|OTHER|REGEX|SPOOL|TITLE|TYPES|VALID|WHILE|ALPHA|BOXED|CATCH|CHAIN|CHECK|CLASS|COVER|ENDIF|EQUIV|FIELD|FLOOR|FRAME|INPUT|LOWER|MATCH|NODES|PAGES|PRINT|RAISE|ROUND|SHIFT|SPACE|SPOTS|STAMP|STATE|TASKS|TIMES|TRMAC|ULINE|UNION|VALUE|WIDTH|EQUAL|LOG10|TRUNC|BLOB|CASE|CEIL|CLOB|COND|EXIT|FILE|GAPS|HOLD|INCL|INTO|KEEP|KEYS|LAST|LINE|LONG|LPAD|MAIL|MODE|OPEN|PINK|READ|ROWS|TEST|THEN|ZERO|AREA|BACK|BADI|BYTE|CAST|EDIT|EXEC|FAIL|FIND|FKEQ|FONT|FREE|GKEQ|HIDE|INIT|ITNO|LATE|LOOP|MAIN|MARK|MOVE|NEXT|NULL|RISK|ROLE|UNIT|WAIT|ZONE|BASE|CALL|CODE|DATA|DATE|FKGE|GKGE|HIGH|KIND|LEFT|LIST|MASK|MESH|NAME|NODE|PACK|PAGE|POOL|SEND|SIGN|SIZE|SOME|STOP|TASK|TEXT|TIME|USER|VARY|WITH|WORD|BLUE|CONV|COPY|DEEP|ELSE|FORM|FROM|HINT|ICON|JOIN|LIKE|LOAD|ONLY|PART|SCAN|SKIP|SORT|TYPE|UNIX|VIEW|WHEN|WORK|ACOS|ASIN|ATAN|COSH|EACH|FRAC|LESS|RTTI|SINH|SQRT|TANH|AVG|BIT|DIV|ISO|LET|OUT|PAD|SQL|ALL|CI_|CPI|END|LOB|LPI|MAX|MIN|NEW|OLE|RUN|SET|\\?TO|YES|ABS|ADD|AND|BIG|FOR|HDB|JOB|LOW|NOT|SAP|TRY|VIA|XML|ANY|GET|IDS|KEY|MOD|OFF|PUT|RAW|RED|REF|SUM|TAB|XSD|CNT|COS|EXP|LOG|SIN|TAN|XOR|AT|CO|CP|DO|GT|ID|IF|NS|OR|BT|CA|CS|GE|NA|NB|EQ|IN|LT|NE|NO|OF|ON|PF|TO|AS|BY|CN|IS|LE|NP|UP|E|I|M|O|Z|C|X)\\b/i,lookbehind:!0},number:/\\b\\d+\\b/,operator:{pattern:/(\\s)(?:\\*\\*?|<[=>]?|>=?|\\?=|[-+\\/=])(?=\\s)/,lookbehind:!0},\"string-operator\":{pattern:/(\\s)&&?(?=\\s)/,lookbehind:!0,alias:\"keyword\"},\"token-operator\":[{pattern:/(\\w)(?:->?|=>|[~|{}])(?=\\w)/,lookbehind:!0,alias:\"punctuation\"},{pattern:/[|{}]/,alias:\"punctuation\"}],punctuation:/[,.:()]/};","(function (Prism) {\n\n\tvar coreRules = '(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)';\n\n\tPrism.languages.abnf = {\n\t\t'comment': /;.*/,\n\t\t'string': {\n\t\t\tpattern: /(?:%[is])?\"[^\"\\n\\r]*\"/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^%[is]/\n\t\t\t}\n\t\t},\n\t\t'range': {\n\t\t\tpattern: /%(?:b[01]+-[01]+|d\\d+-\\d+|x[A-F\\d]+-[A-F\\d]+)/i,\n\t\t\talias: 'number'\n\t\t},\n\t\t'terminal': {\n\t\t\tpattern: /%(?:b[01]+(?:\\.[01]+)*|d\\d+(?:\\.\\d+)*|x[A-F\\d]+(?:\\.[A-F\\d]+)*)/i,\n\t\t\talias: 'number'\n\t\t},\n\t\t'repetition': {\n\t\t\tpattern: /(^|[^\\w-])(?:\\d*\\*\\d*|\\d+)/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'operator'\n\t\t},\n\t\t'definition': {\n\t\t\tpattern: /(^[ \\t]*)(?:[a-z][\\w-]*|<[^>\\r\\n]*>)(?=\\s*=)/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'keyword',\n\t\t\tinside: {\n\t\t\t\t'punctuation': /<|>/\n\t\t\t}\n\t\t},\n\t\t'core-rule': {\n\t\t\tpattern: RegExp('(?:(^|[^<\\\\w-])' + coreRules + '|<' + coreRules + '>)(?![\\\\w-])', 'i'),\n\t\t\tlookbehind: true,\n\t\t\talias: ['rule', 'constant'],\n\t\t\tinside: {\n\t\t\t\t'punctuation': /<|>/\n\t\t\t}\n\t\t},\n\t\t'rule': {\n\t\t\tpattern: /(^|[^<\\w-])[a-z][\\w-]*|<[^>\\r\\n]*>/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /<|>/\n\t\t\t}\n\t\t},\n\t\t'operator': /=\\/?|\\//,\n\t\t'punctuation': /[()\\[\\]]/\n\t};\n\n})(Prism);\n","!function(n){var i=\"(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)\";Prism.languages.abnf={comment:/;.*/,string:{pattern:/(?:%[is])?\"[^\"\\n\\r]*\"/,greedy:!0,inside:{punctuation:/^%[is]/}},range:{pattern:/%(?:b[01]+-[01]+|d\\d+-\\d+|x[A-F\\d]+-[A-F\\d]+)/i,alias:\"number\"},terminal:{pattern:/%(?:b[01]+(?:\\.[01]+)*|d\\d+(?:\\.\\d+)*|x[A-F\\d]+(?:\\.[A-F\\d]+)*)/i,alias:\"number\"},repetition:{pattern:/(^|[^\\w-])(?:\\d*\\*\\d*|\\d+)/,lookbehind:!0,alias:\"operator\"},definition:{pattern:/(^[ \\t]*)(?:[a-z][\\w-]*|<[^>\\r\\n]*>)(?=\\s*=)/m,lookbehind:!0,alias:\"keyword\",inside:{punctuation:/<|>/}},\"core-rule\":{pattern:RegExp(\"(?:(^|[^<\\\\w-])\"+i+\"|<\"+i+\">)(?![\\\\w-])\",\"i\"),lookbehind:!0,alias:[\"rule\",\"constant\"],inside:{punctuation:/<|>/}},rule:{pattern:/(^|[^<\\w-])[a-z][\\w-]*|<[^>\\r\\n]*>/i,lookbehind:!0,inside:{punctuation:/<|>/}},operator:/=\\/?|\\//,punctuation:/[()\\[\\]]/}}();","Prism.languages.actionscript = Prism.languages.extend('javascript',  {\n\t'keyword': /\\b(?:as|break|case|catch|class|const|default|delete|do|else|extends|finally|for|function|if|implements|import|in|instanceof|interface|internal|is|native|new|null|package|private|protected|public|return|super|switch|this|throw|try|typeof|use|var|void|while|with|dynamic|each|final|get|include|namespace|native|override|set|static)\\b/,\n\t'operator': /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n});\nPrism.languages.actionscript['class-name'].alias = 'function';\n\nif (Prism.languages.markup) {\n\tPrism.languages.insertBefore('actionscript', 'string', {\n\t\t'xml': {\n\t\t\tpattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\trest: Prism.languages.markup\n\t\t\t}\n\t\t}\n\t});\n}","Prism.languages.actionscript=Prism.languages.extend(\"javascript\",{keyword:/\\b(?:as|break|case|catch|class|const|default|delete|do|else|extends|finally|for|function|if|implements|import|in|instanceof|interface|internal|is|native|new|null|package|private|protected|public|return|super|switch|this|throw|try|typeof|use|var|void|while|with|dynamic|each|final|get|include|namespace|native|override|set|static)\\b/,operator:/\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/}),Prism.languages.actionscript[\"class-name\"].alias=\"function\",Prism.languages.markup&&Prism.languages.insertBefore(\"actionscript\",\"string\",{xml:{pattern:/(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,lookbehind:!0,inside:{rest:Prism.languages.markup}}});","Prism.languages.ada = {\n\t'comment': /--.*/,\n\t'string': /\"(?:\"\"|[^\"\\r\\f\\n])*\"/i,\n\t'number': [\n\t\t{\n\t\t\tpattern: /\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i\n\t\t},\n\t\t{\n\t\t\tpattern: /\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i\n\t\t}\n\t],\n\t'attr-name': /\\b'\\w+/i,\n\t'keyword': /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|new|return|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\n\t'boolean': /\\b(?:true|false)\\b/i,\n\t'operator': /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,\n\t'punctuation': /\\.\\.?|[,;():]/,\n\t'char': /'.'/,\n\t'variable': /\\b[a-z](?:[_a-z\\d])*\\b/i\n};","Prism.languages.ada={comment:/--.*/,string:/\"(?:\"\"|[^\"\\r\\f\\n])*\"/i,number:[{pattern:/\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i},{pattern:/\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i}],\"attr-name\":/\\b'\\w+/i,keyword:/\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|new|return|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,boolean:/\\b(?:true|false)\\b/i,operator:/<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,punctuation:/\\.\\.?|[,;():]/,char:/'.'/,variable:/\\b[a-z](?:[_a-z\\d])*\\b/i};","Prism.languages.apacheconf = {\n\t'comment': /#.*/,\n\t'directive-inline': {\n\t\tpattern: /(^\\s*)\\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|Add(?:Alt|AltByEncoding|AltByType|Charset|DefaultCharset|Description|Encoding|Handler|Icon|IconByEncoding|IconByType|InputFilter|Language|ModuleInfo|OutputFilter|OutputFilterByType|Type)|Alias|AliasMatch|Allow(?:CONNECT|EncodedSlashes|Methods|Override|OverrideList)?|Anonymous(?:_LogEmail|_MustGiveEmail|_NoUserID|_VerifyEmail)?|AsyncRequestWorkerFactor|Auth(?:BasicAuthoritative|BasicFake|BasicProvider|BasicUseDigestAlgorithm|DBDUserPWQuery|DBDUserRealmQuery|DBMGroupFile|DBMType|DBMUserFile|Digest(?:Algorithm|Domain|NonceLifetime|Provider|Qop|ShmemSize)|Form(?:Authoritative|Body|DisableNoStore|FakeBasicAuth|Location|LoginRequiredLocation|LoginSuccessLocation|LogoutLocation|Method|Mimetype|Password|Provider|SitePassphrase|Size|Username)|GroupFile|LDAP(?:AuthorizePrefix|BindAuthoritative|BindDN|BindPassword|CharsetConfig|CompareAsUser|CompareDNOnServer|DereferenceAliases|GroupAttribute|GroupAttributeIsDN|InitialBindAsUser|InitialBindPattern|MaxSubGroupDepth|RemoteUserAttribute|RemoteUserIsDN|SearchAsUser|SubGroupAttribute|SubGroupClass|Url)|Merging|Name|Type|UserFile|nCache(?:Context|Enable|ProvideFor|SOCache|Timeout)|nzFcgiCheckAuthnProvider|nzFcgiDefineProvider|zDBDLoginToReferer|zDBDQuery|zDBDRedirectQuery|zDBMType|zSendForbiddenOnFailure)|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferSize|BufferedLogs|CGIDScriptTimeout|CGIMapExtension|Cache(?:DefaultExpire|DetailHeader|DirLength|DirLevels|Disable|Enable|File|Header|IgnoreCacheControl|IgnoreHeaders|IgnoreNoLastMod|IgnoreQueryString|IgnoreURLSessionIdentifiers|KeyBaseURL|LastModifiedFactor|Lock|LockMaxAge|LockPath|MaxExpire|MaxFileSize|MinExpire|MinFileSize|NegotiatedDocs|QuickHandler|ReadSize|ReadTime|Root|Socache(?:MaxSize|MaxTime|MinTime|ReadSize|ReadTime)?|StaleOnError|StoreExpired|StoreNoStore|StorePrivate)|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DTracePrivileges|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|Deflate(?:BufferSize|CompressionLevel|FilterNote|InflateLimitRequestBody|InflateRatio(?:Burst|Limit)|MemLevel|WindowSize)|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtFilterDefine|ExtFilterOptions|ExtendedStatus|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|Heartbeat(?:Address|Listen|MaxServers|Storage)|HostnameLookups|ISAPI(?:AppendLogToErrors|AppendLogToQuery|CacheFile|FakeAsync|LogNotSupported|ReadAheadBuffer)|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|Index(?:HeadInsert|Ignore|IgnoreReset|Options|OrderDefault|StyleSheet)|InputSed|KeepAlive|KeepAliveTimeout|KeptBodySize|LDAP(?:CacheEntries|CacheTTL|ConnectionPoolTTL|ConnectionTimeout|LibraryDebug|OpCacheEntries|OpCacheTTL|ReferralHopLimit|Referrals|Retries|RetryDelay|SharedCacheFile|SharedCacheSize|Timeout|TrustedClientCert|TrustedGlobalCert|TrustedMode|VerifyServerCert)|LanguagePriority|Limit(?:InternalRecursion|Request(?:Body|FieldSize|Fields|Line)|XMLRequestBody)|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|Lua(?:Hook(?:AccessChecker|AuthChecker|CheckUserID|Fixups|InsertFilter|Log|MapToStorage|TranslateName|TypeChecker)|Inherit|InputFilter|MapHandler|OutputFilter|PackageCPath|PackagePath|QuickHandler|Root|Scope)|MMapFile|Max(?:ConnectionsPerChild|KeepAliveRequests|MemFree|RangeOverlaps|RangeReversals|Ranges|RequestWorkers|SpareServers|SpareThreads|Threads)|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|ModMimeUsePathInfo|ModemStandard|MultiviewsMatch|Mutex|NWSSLTrustedCerts|NWSSLUpgradeable|NameVirtualHost|NoProxy|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|Proxy(?:AddHeaders|BadHeader|Block|Domain|ErrorOverride|ExpressDBMFile|ExpressDBMType|ExpressEnable|FtpDirCharset|FtpEscapeWildcards|FtpListOnWildcard|HTML(?:BufSize|CharsetOut|DocType|Enable|Events|Extended|Fixups|Interp|Links|Meta|StripComments|URLMap)|IOBufferSize|MaxForwards|Pass(?:Inherit|InterpolateEnv|Match|Reverse|ReverseCookieDomain|ReverseCookiePath)?|PreserveHost|ReceiveBufferSize|Remote|RemoteMatch|Requests|SCGIInternalRedirect|SCGISendfile|Set|SourceAddress|Status|Timeout|Via)|RLimitCPU|RLimitMEM|RLimitNPROC|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIP(?:Header|InternalProxy|InternalProxyList|ProxiesHeader|TrustedProxy|TrustedProxyList)|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|Rewrite(?:Base|Cond|Engine|Map|Options|Rule)|SSIETag|SSIEndTag|SSIErrorMsg|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSL(?:CACertificateFile|CACertificatePath|CADNRequestFile|CADNRequestPath|CARevocationCheck|CARevocationFile|CARevocationPath|CertificateChainFile|CertificateFile|CertificateKeyFile|CipherSuite|Compression|CryptoDevice|Engine|FIPS|HonorCipherOrder|InsecureRenegotiation|OCSP(?:DefaultResponder|Enable|OverrideResponder|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|UseRequestNonce)|OpenSSLConfCmd|Options|PassPhraseDialog|Protocol|Proxy(?:CACertificateFile|CACertificatePath|CARevocation(?:Check|File|Path)|CheckPeer(?:CN|Expire|Name)|CipherSuite|Engine|MachineCertificate(?:ChainFile|File|Path)|Protocol|Verify|VerifyDepth)|RandomSeed|RenegBufferSize|Require|RequireSSL|SRPUnknownUserSeed|SRPVerifierFile|Session(?:Cache|CacheTimeout|TicketKeyFile|Tickets)|Stapling(?:Cache|ErrorCacheTimeout|FakeTryLater|ForceURL|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|ReturnResponderErrors|StandardCacheTimeout)|StrictSNIVHostCheck|UseStapling|UserName|VerifyClient|VerifyDepth)|Satisfy|ScoreBoardFile|Script(?:Alias|AliasMatch|InterpreterSource|Log|LogBuffer|LogLength|Sock)?|SecureListen|SeeRequestTail|SendBufferSize|Server(?:Admin|Alias|Limit|Name|Path|Root|Signature|Tokens)|Session(?:Cookie(?:Name|Name2|Remove)|Crypto(?:Cipher|Driver|Passphrase|PassphraseFile)|DBD(?:CookieName|CookieName2|CookieRemove|DeleteLabel|InsertLabel|PerUser|SelectLabel|UpdateLabel)|Env|Exclude|Header|Include|MaxAge)?|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadStackSize|ThreadsPerChild|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|Virtual(?:DocumentRoot|ScriptAlias)(?:IP)?|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\\b/im,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n\t'directive-block': {\n\t\tpattern: /<\\/?\\b(?:Auth[nz]ProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|Require(?:All|Any|None)|VirtualHost)\\b *.*>/i,\n\t\tinside: {\n\t\t\t'directive-block': {\n\t\t\t\tpattern: /^<\\/?\\w+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/\n\t\t\t\t},\n\t\t\t\talias: 'tag'\n\t\t\t},\n\t\t\t'directive-block-parameter': {\n\t\t\t\tpattern: /.*[^>]/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /:/,\n\t\t\t\t\t'string': {\n\t\t\t\t\t\tpattern: /(\"|').*\\1/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'variable': /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talias: 'attr-value'\n\t\t\t},\n\t\t\t'punctuation': />/\n\t\t},\n\t\talias: 'tag'\n\t},\n\t'directive-flags': {\n\t\tpattern: /\\[(?:\\w,?)+\\]/,\n\t\talias: 'keyword'\n\t},\n\t'string': {\n\t\tpattern: /(\"|').*\\1/,\n\t\tinside: {\n\t\t\t'variable': /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n\t\t}\n\t},\n\t'variable': /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/,\n\t'regex': /\\^?.*\\$|\\^.*\\$?/\n};\n","Prism.languages.apacheconf={comment:/#.*/,\"directive-inline\":{pattern:/(^\\s*)\\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|Add(?:Alt|AltByEncoding|AltByType|Charset|DefaultCharset|Description|Encoding|Handler|Icon|IconByEncoding|IconByType|InputFilter|Language|ModuleInfo|OutputFilter|OutputFilterByType|Type)|Alias|AliasMatch|Allow(?:CONNECT|EncodedSlashes|Methods|Override|OverrideList)?|Anonymous(?:_LogEmail|_MustGiveEmail|_NoUserID|_VerifyEmail)?|AsyncRequestWorkerFactor|Auth(?:BasicAuthoritative|BasicFake|BasicProvider|BasicUseDigestAlgorithm|DBDUserPWQuery|DBDUserRealmQuery|DBMGroupFile|DBMType|DBMUserFile|Digest(?:Algorithm|Domain|NonceLifetime|Provider|Qop|ShmemSize)|Form(?:Authoritative|Body|DisableNoStore|FakeBasicAuth|Location|LoginRequiredLocation|LoginSuccessLocation|LogoutLocation|Method|Mimetype|Password|Provider|SitePassphrase|Size|Username)|GroupFile|LDAP(?:AuthorizePrefix|BindAuthoritative|BindDN|BindPassword|CharsetConfig|CompareAsUser|CompareDNOnServer|DereferenceAliases|GroupAttribute|GroupAttributeIsDN|InitialBindAsUser|InitialBindPattern|MaxSubGroupDepth|RemoteUserAttribute|RemoteUserIsDN|SearchAsUser|SubGroupAttribute|SubGroupClass|Url)|Merging|Name|Type|UserFile|nCache(?:Context|Enable|ProvideFor|SOCache|Timeout)|nzFcgiCheckAuthnProvider|nzFcgiDefineProvider|zDBDLoginToReferer|zDBDQuery|zDBDRedirectQuery|zDBMType|zSendForbiddenOnFailure)|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferSize|BufferedLogs|CGIDScriptTimeout|CGIMapExtension|Cache(?:DefaultExpire|DetailHeader|DirLength|DirLevels|Disable|Enable|File|Header|IgnoreCacheControl|IgnoreHeaders|IgnoreNoLastMod|IgnoreQueryString|IgnoreURLSessionIdentifiers|KeyBaseURL|LastModifiedFactor|Lock|LockMaxAge|LockPath|MaxExpire|MaxFileSize|MinExpire|MinFileSize|NegotiatedDocs|QuickHandler|ReadSize|ReadTime|Root|Socache(?:MaxSize|MaxTime|MinTime|ReadSize|ReadTime)?|StaleOnError|StoreExpired|StoreNoStore|StorePrivate)|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DTracePrivileges|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|Deflate(?:BufferSize|CompressionLevel|FilterNote|InflateLimitRequestBody|InflateRatio(?:Burst|Limit)|MemLevel|WindowSize)|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtFilterDefine|ExtFilterOptions|ExtendedStatus|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|Heartbeat(?:Address|Listen|MaxServers|Storage)|HostnameLookups|ISAPI(?:AppendLogToErrors|AppendLogToQuery|CacheFile|FakeAsync|LogNotSupported|ReadAheadBuffer)|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|Index(?:HeadInsert|Ignore|IgnoreReset|Options|OrderDefault|StyleSheet)|InputSed|KeepAlive|KeepAliveTimeout|KeptBodySize|LDAP(?:CacheEntries|CacheTTL|ConnectionPoolTTL|ConnectionTimeout|LibraryDebug|OpCacheEntries|OpCacheTTL|ReferralHopLimit|Referrals|Retries|RetryDelay|SharedCacheFile|SharedCacheSize|Timeout|TrustedClientCert|TrustedGlobalCert|TrustedMode|VerifyServerCert)|LanguagePriority|Limit(?:InternalRecursion|Request(?:Body|FieldSize|Fields|Line)|XMLRequestBody)|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|Lua(?:Hook(?:AccessChecker|AuthChecker|CheckUserID|Fixups|InsertFilter|Log|MapToStorage|TranslateName|TypeChecker)|Inherit|InputFilter|MapHandler|OutputFilter|PackageCPath|PackagePath|QuickHandler|Root|Scope)|MMapFile|Max(?:ConnectionsPerChild|KeepAliveRequests|MemFree|RangeOverlaps|RangeReversals|Ranges|RequestWorkers|SpareServers|SpareThreads|Threads)|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|ModMimeUsePathInfo|ModemStandard|MultiviewsMatch|Mutex|NWSSLTrustedCerts|NWSSLUpgradeable|NameVirtualHost|NoProxy|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|Proxy(?:AddHeaders|BadHeader|Block|Domain|ErrorOverride|ExpressDBMFile|ExpressDBMType|ExpressEnable|FtpDirCharset|FtpEscapeWildcards|FtpListOnWildcard|HTML(?:BufSize|CharsetOut|DocType|Enable|Events|Extended|Fixups|Interp|Links|Meta|StripComments|URLMap)|IOBufferSize|MaxForwards|Pass(?:Inherit|InterpolateEnv|Match|Reverse|ReverseCookieDomain|ReverseCookiePath)?|PreserveHost|ReceiveBufferSize|Remote|RemoteMatch|Requests|SCGIInternalRedirect|SCGISendfile|Set|SourceAddress|Status|Timeout|Via)|RLimitCPU|RLimitMEM|RLimitNPROC|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIP(?:Header|InternalProxy|InternalProxyList|ProxiesHeader|TrustedProxy|TrustedProxyList)|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|Rewrite(?:Base|Cond|Engine|Map|Options|Rule)|SSIETag|SSIEndTag|SSIErrorMsg|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSL(?:CACertificateFile|CACertificatePath|CADNRequestFile|CADNRequestPath|CARevocationCheck|CARevocationFile|CARevocationPath|CertificateChainFile|CertificateFile|CertificateKeyFile|CipherSuite|Compression|CryptoDevice|Engine|FIPS|HonorCipherOrder|InsecureRenegotiation|OCSP(?:DefaultResponder|Enable|OverrideResponder|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|UseRequestNonce)|OpenSSLConfCmd|Options|PassPhraseDialog|Protocol|Proxy(?:CACertificateFile|CACertificatePath|CARevocation(?:Check|File|Path)|CheckPeer(?:CN|Expire|Name)|CipherSuite|Engine|MachineCertificate(?:ChainFile|File|Path)|Protocol|Verify|VerifyDepth)|RandomSeed|RenegBufferSize|Require|RequireSSL|SRPUnknownUserSeed|SRPVerifierFile|Session(?:Cache|CacheTimeout|TicketKeyFile|Tickets)|Stapling(?:Cache|ErrorCacheTimeout|FakeTryLater|ForceURL|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|ReturnResponderErrors|StandardCacheTimeout)|StrictSNIVHostCheck|UseStapling|UserName|VerifyClient|VerifyDepth)|Satisfy|ScoreBoardFile|Script(?:Alias|AliasMatch|InterpreterSource|Log|LogBuffer|LogLength|Sock)?|SecureListen|SeeRequestTail|SendBufferSize|Server(?:Admin|Alias|Limit|Name|Path|Root|Signature|Tokens)|Session(?:Cookie(?:Name|Name2|Remove)|Crypto(?:Cipher|Driver|Passphrase|PassphraseFile)|DBD(?:CookieName|CookieName2|CookieRemove|DeleteLabel|InsertLabel|PerUser|SelectLabel|UpdateLabel)|Env|Exclude|Header|Include|MaxAge)?|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadStackSize|ThreadsPerChild|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|Virtual(?:DocumentRoot|ScriptAlias)(?:IP)?|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\\b/im,lookbehind:!0,alias:\"property\"},\"directive-block\":{pattern:/<\\/?\\b(?:Auth[nz]ProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|Require(?:All|Any|None)|VirtualHost)\\b *.*>/i,inside:{\"directive-block\":{pattern:/^<\\/?\\w+/,inside:{punctuation:/^<\\/?/},alias:\"tag\"},\"directive-block-parameter\":{pattern:/.*[^>]/,inside:{punctuation:/:/,string:{pattern:/(\"|').*\\1/,inside:{variable:/[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/}}},alias:\"attr-value\"},punctuation:/>/},alias:\"tag\"},\"directive-flags\":{pattern:/\\[(?:\\w,?)+\\]/,alias:\"keyword\"},string:{pattern:/(\"|').*\\1/,inside:{variable:/[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/}},variable:/[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/,regex:/\\^?.*\\$|\\^.*\\$?/};","Prism.languages.apl = {\n\t'comment': /(?:⍝|#[! ]).*$/m,\n\t'string': {\n\t\tpattern: /'(?:[^'\\r\\n]|'')*'/,\n\t\tgreedy: true\n\t},\n\t'number': /¯?(?:\\d*\\.?\\d+(?:e[+¯]?\\d+)?|¯|∞)(?:j¯?(?:\\d*\\.?\\d+(?:e[+¯]?\\d+)?|¯|∞))?/i,\n\t'statement': /:[A-Z][a-z][A-Za-z]*\\b/,\n\t'system-function': {\n\t\tpattern: /⎕[A-Z]+/i,\n\t\talias: 'function'\n\t},\n\t'constant': /[⍬⌾#⎕⍞]/,\n\t'function': /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,\n\t'monadic-operator': {\n\t\tpattern: /[\\\\\\/⌿⍀¨⍨⌶&∥]/,\n\t\talias: 'operator'\n\t},\n\t'dyadic-operator': {\n\t\tpattern: /[.⍣⍠⍤∘⌸@⌺]/,\n\t\talias: 'operator'\n\t},\n\t'assignment': {\n\t\tpattern: /←/,\n\t\talias: 'keyword'\n\t},\n\t'punctuation': /[\\[;\\]()◇⋄]/,\n\t'dfn': {\n\t\tpattern: /[{}⍺⍵⍶⍹∇⍫:]/,\n\t\talias: 'builtin'\n\t}\n};","Prism.languages.apl={comment:/(?:⍝|#[! ]).*$/m,string:{pattern:/'(?:[^'\\r\\n]|'')*'/,greedy:!0},number:/¯?(?:\\d*\\.?\\d+(?:e[+¯]?\\d+)?|¯|∞)(?:j¯?(?:\\d*\\.?\\d+(?:e[+¯]?\\d+)?|¯|∞))?/i,statement:/:[A-Z][a-z][A-Za-z]*\\b/,\"system-function\":{pattern:/⎕[A-Z]+/i,alias:\"function\"},constant:/[⍬⌾#⎕⍞]/,function:/[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,\"monadic-operator\":{pattern:/[\\\\\\/⌿⍀¨⍨⌶&∥]/,alias:\"operator\"},\"dyadic-operator\":{pattern:/[.⍣⍠⍤∘⌸@⌺]/,alias:\"operator\"},assignment:{pattern:/←/,alias:\"keyword\"},punctuation:/[\\[;\\]()◇⋄]/,dfn:{pattern:/[{}⍺⍵⍶⍹∇⍫:]/,alias:\"builtin\"}};","Prism.languages.applescript = {\n\t'comment': [\n\t\t// Allow one level of nesting\n\t\t/\\(\\*(?:\\(\\*[\\s\\S]*?\\*\\)|[\\s\\S])*?\\*\\)/,\n\t\t/--.+/,\n\t\t/#.+/\n\t],\n\t'string': /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n\t'number': /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e-?\\d+)?\\b/i,\n\t'operator': [\n\t\t/[&=≠≤≥*+\\-\\/÷^]|[<>]=?/,\n\t\t/\\b(?:(?:start|begin|end)s? with|(?:(?:does not|doesn't) contain|contains?)|(?:is|isn't|is not) (?:in|contained by)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:(?:does not|doesn't) come|comes) (?:before|after)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equals|equal to|isn't|is not)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|or|div|mod|as|not))\\b/\n\t],\n\t'keyword': /\\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\\b/,\n\t'class': {\n\t\tpattern: /\\b(?:alias|application|boolean|class|constant|date|file|integer|list|number|POSIX file|real|record|reference|RGB color|script|text|centimetres|centimeters|feet|inches|kilometres|kilometers|metres|meters|miles|yards|square feet|square kilometres|square kilometers|square metres|square meters|square miles|square yards|cubic centimetres|cubic centimeters|cubic feet|cubic inches|cubic metres|cubic meters|cubic yards|gallons|litres|liters|quarts|grams|kilograms|ounces|pounds|degrees Celsius|degrees Fahrenheit|degrees Kelvin)\\b/,\n\t\talias: 'builtin'\n\t},\n\t'punctuation': /[{}():,¬«»《》]/\n};","Prism.languages.applescript={comment:[/\\(\\*(?:\\(\\*[\\s\\S]*?\\*\\)|[\\s\\S])*?\\*\\)/,/--.+/,/#.+/],string:/\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,number:/(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e-?\\d+)?\\b/i,operator:[/[&=≠≤≥*+\\-\\/÷^]|[<>]=?/,/\\b(?:(?:start|begin|end)s? with|(?:(?:does not|doesn't) contain|contains?)|(?:is|isn't|is not) (?:in|contained by)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:(?:does not|doesn't) come|comes) (?:before|after)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equals|equal to|isn't|is not)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|or|div|mod|as|not))\\b/],keyword:/\\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\\b/,class:{pattern:/\\b(?:alias|application|boolean|class|constant|date|file|integer|list|number|POSIX file|real|record|reference|RGB color|script|text|centimetres|centimeters|feet|inches|kilometres|kilometers|metres|meters|miles|yards|square feet|square kilometres|square kilometers|square metres|square meters|square miles|square yards|cubic centimetres|cubic centimeters|cubic feet|cubic inches|cubic metres|cubic meters|cubic yards|gallons|litres|liters|quarts|grams|kilograms|ounces|pounds|degrees Celsius|degrees Fahrenheit|degrees Kelvin)\\b/,alias:\"builtin\"},punctuation:/[{}():,¬«»《》]/};","Prism.languages.arduino = Prism.languages.extend('cpp', {\n\t'keyword': /\\b(?:setup|if|else|while|do|for|return|in|instanceof|default|function|loop|goto|switch|case|new|try|throw|catch|finally|null|break|continue|boolean|bool|void|byte|word|string|String|array|int|long|integer|double)\\b/,\n\t'builtin': /\\b(?:KeyboardController|MouseController|SoftwareSerial|EthernetServer|EthernetClient|LiquidCrystal|LiquidCrystal_I2C|RobotControl|GSMVoiceCall|EthernetUDP|EsploraTFT|HttpClient|RobotMotor|WiFiClient|GSMScanner|FileSystem|Scheduler|GSMServer|YunClient|YunServer|IPAddress|GSMClient|GSMModem|Keyboard|Ethernet|Console|GSMBand|Esplora|Stepper|Process|WiFiUDP|GSM_SMS|Mailbox|USBHost|Firmata|PImage|Client|Server|GSMPIN|FileIO|Bridge|Serial|EEPROM|Stream|Mouse|Audio|Servo|File|Task|GPRS|WiFi|Wire|TFT|GSM|SPI|SD|runShellCommandAsynchronously|analogWriteResolution|retrieveCallingNumber|printFirmwareVersion|analogReadResolution|sendDigitalPortPair|noListenOnLocalhost|readJoystickButton|setFirmwareVersion|readJoystickSwitch|scrollDisplayRight|getVoiceCallStatus|scrollDisplayLeft|writeMicroseconds|delayMicroseconds|beginTransmission|getSignalStrength|runAsynchronously|getAsynchronously|listenOnLocalhost|getCurrentCarrier|readAccelerometer|messageAvailable|sendDigitalPorts|lineFollowConfig|countryNameWrite|runShellCommand|readStringUntil|rewindDirectory|readTemperature|setClockDivider|readLightSensor|endTransmission|analogReference|detachInterrupt|countryNameRead|attachInterrupt|encryptionType|readBytesUntil|robotNameWrite|readMicrophone|robotNameRead|cityNameWrite|userNameWrite|readJoystickY|readJoystickX|mouseReleased|openNextFile|scanNetworks|noInterrupts|digitalWrite|beginSpeaker|mousePressed|isActionDone|mouseDragged|displayLogos|noAutoscroll|addParameter|remoteNumber|getModifiers|keyboardRead|userNameRead|waitContinue|processInput|parseCommand|printVersion|readNetworks|writeMessage|blinkVersion|cityNameRead|readMessage|setDataMode|parsePacket|isListening|setBitOrder|beginPacket|isDirectory|motorsWrite|drawCompass|digitalRead|clearScreen|serialEvent|rightToLeft|setTextSize|leftToRight|requestFrom|keyReleased|compassRead|analogWrite|interrupts|WiFiServer|disconnect|playMelody|parseFloat|autoscroll|getPINUsed|setPINUsed|setTimeout|sendAnalog|readSlider|analogRead|beginWrite|createChar|motorsStop|keyPressed|tempoWrite|readButton|subnetMask|debugPrint|macAddress|writeGreen|randomSeed|attachGPRS|readString|sendString|remotePort|releaseAll|mouseMoved|background|getXChange|getYChange|answerCall|getResult|voiceCall|endPacket|constrain|getSocket|writeJSON|getButton|available|connected|findUntil|readBytes|exitValue|readGreen|writeBlue|startLoop|IPAddress|isPressed|sendSysex|pauseMode|gatewayIP|setCursor|getOemKey|tuneWrite|noDisplay|loadImage|switchPIN|onRequest|onReceive|changePIN|playFile|noBuffer|parseInt|overflow|checkPIN|knobRead|beginTFT|bitClear|updateIR|bitWrite|position|writeRGB|highByte|writeRed|setSpeed|readBlue|noStroke|remoteIP|transfer|shutdown|hangCall|beginSMS|endWrite|attached|maintain|noCursor|checkReg|checkPUK|shiftOut|isValid|shiftIn|pulseIn|connect|println|localIP|pinMode|getIMEI|display|noBlink|process|getBand|running|beginSD|drawBMP|lowByte|setBand|release|bitRead|prepare|pointTo|readRed|setMode|noFill|remove|listen|stroke|detach|attach|noTone|exists|buffer|height|bitSet|circle|config|cursor|random|IRread|setDNS|endSMS|getKey|micros|millis|begin|print|write|ready|flush|width|isPIN|blink|clear|press|mkdir|rmdir|close|point|yield|image|BSSID|click|delay|read|text|move|peek|beep|rect|line|open|seek|fill|size|turn|stop|home|find|step|tone|sqrt|RSSI|SSID|end|bit|tan|cos|sin|pow|map|abs|max|min|get|run|put)\\b/,\n\t'constant': /\\b(?:DIGITAL_MESSAGE|FIRMATA_STRING|ANALOG_MESSAGE|REPORT_DIGITAL|REPORT_ANALOG|INPUT_PULLUP|SET_PIN_MODE|INTERNAL2V56|SYSTEM_RESET|LED_BUILTIN|INTERNAL1V1|SYSEX_START|INTERNAL|EXTERNAL|DEFAULT|OUTPUT|INPUT|HIGH|LOW)\\b/\n});\n","Prism.languages.arduino=Prism.languages.extend(\"cpp\",{keyword:/\\b(?:setup|if|else|while|do|for|return|in|instanceof|default|function|loop|goto|switch|case|new|try|throw|catch|finally|null|break|continue|boolean|bool|void|byte|word|string|String|array|int|long|integer|double)\\b/,builtin:/\\b(?:KeyboardController|MouseController|SoftwareSerial|EthernetServer|EthernetClient|LiquidCrystal|LiquidCrystal_I2C|RobotControl|GSMVoiceCall|EthernetUDP|EsploraTFT|HttpClient|RobotMotor|WiFiClient|GSMScanner|FileSystem|Scheduler|GSMServer|YunClient|YunServer|IPAddress|GSMClient|GSMModem|Keyboard|Ethernet|Console|GSMBand|Esplora|Stepper|Process|WiFiUDP|GSM_SMS|Mailbox|USBHost|Firmata|PImage|Client|Server|GSMPIN|FileIO|Bridge|Serial|EEPROM|Stream|Mouse|Audio|Servo|File|Task|GPRS|WiFi|Wire|TFT|GSM|SPI|SD|runShellCommandAsynchronously|analogWriteResolution|retrieveCallingNumber|printFirmwareVersion|analogReadResolution|sendDigitalPortPair|noListenOnLocalhost|readJoystickButton|setFirmwareVersion|readJoystickSwitch|scrollDisplayRight|getVoiceCallStatus|scrollDisplayLeft|writeMicroseconds|delayMicroseconds|beginTransmission|getSignalStrength|runAsynchronously|getAsynchronously|listenOnLocalhost|getCurrentCarrier|readAccelerometer|messageAvailable|sendDigitalPorts|lineFollowConfig|countryNameWrite|runShellCommand|readStringUntil|rewindDirectory|readTemperature|setClockDivider|readLightSensor|endTransmission|analogReference|detachInterrupt|countryNameRead|attachInterrupt|encryptionType|readBytesUntil|robotNameWrite|readMicrophone|robotNameRead|cityNameWrite|userNameWrite|readJoystickY|readJoystickX|mouseReleased|openNextFile|scanNetworks|noInterrupts|digitalWrite|beginSpeaker|mousePressed|isActionDone|mouseDragged|displayLogos|noAutoscroll|addParameter|remoteNumber|getModifiers|keyboardRead|userNameRead|waitContinue|processInput|parseCommand|printVersion|readNetworks|writeMessage|blinkVersion|cityNameRead|readMessage|setDataMode|parsePacket|isListening|setBitOrder|beginPacket|isDirectory|motorsWrite|drawCompass|digitalRead|clearScreen|serialEvent|rightToLeft|setTextSize|leftToRight|requestFrom|keyReleased|compassRead|analogWrite|interrupts|WiFiServer|disconnect|playMelody|parseFloat|autoscroll|getPINUsed|setPINUsed|setTimeout|sendAnalog|readSlider|analogRead|beginWrite|createChar|motorsStop|keyPressed|tempoWrite|readButton|subnetMask|debugPrint|macAddress|writeGreen|randomSeed|attachGPRS|readString|sendString|remotePort|releaseAll|mouseMoved|background|getXChange|getYChange|answerCall|getResult|voiceCall|endPacket|constrain|getSocket|writeJSON|getButton|available|connected|findUntil|readBytes|exitValue|readGreen|writeBlue|startLoop|IPAddress|isPressed|sendSysex|pauseMode|gatewayIP|setCursor|getOemKey|tuneWrite|noDisplay|loadImage|switchPIN|onRequest|onReceive|changePIN|playFile|noBuffer|parseInt|overflow|checkPIN|knobRead|beginTFT|bitClear|updateIR|bitWrite|position|writeRGB|highByte|writeRed|setSpeed|readBlue|noStroke|remoteIP|transfer|shutdown|hangCall|beginSMS|endWrite|attached|maintain|noCursor|checkReg|checkPUK|shiftOut|isValid|shiftIn|pulseIn|connect|println|localIP|pinMode|getIMEI|display|noBlink|process|getBand|running|beginSD|drawBMP|lowByte|setBand|release|bitRead|prepare|pointTo|readRed|setMode|noFill|remove|listen|stroke|detach|attach|noTone|exists|buffer|height|bitSet|circle|config|cursor|random|IRread|setDNS|endSMS|getKey|micros|millis|begin|print|write|ready|flush|width|isPIN|blink|clear|press|mkdir|rmdir|close|point|yield|image|BSSID|click|delay|read|text|move|peek|beep|rect|line|open|seek|fill|size|turn|stop|home|find|step|tone|sqrt|RSSI|SSID|end|bit|tan|cos|sin|pow|map|abs|max|min|get|run|put)\\b/,constant:/\\b(?:DIGITAL_MESSAGE|FIRMATA_STRING|ANALOG_MESSAGE|REPORT_DIGITAL|REPORT_ANALOG|INPUT_PULLUP|SET_PIN_MODE|INTERNAL2V56|SYSTEM_RESET|LED_BUILTIN|INTERNAL1V1|SYSEX_START|INTERNAL|EXTERNAL|DEFAULT|OUTPUT|INPUT|HIGH|LOW)\\b/});","Prism.languages.arff = {\n\t'comment': /%.*/,\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'keyword': /@(?:attribute|data|end|relation)\\b/i,\n\t'number': /\\b\\d+(?:\\.\\d+)?\\b/,\n\t'punctuation': /[{},]/\n};","Prism.languages.arff={comment:/%.*/,string:{pattern:/([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},keyword:/@(?:attribute|data|end|relation)\\b/i,number:/\\b\\d+(?:\\.\\d+)?\\b/,punctuation:/[{},]/};","(function (Prism) {\n\n\tvar attributes = {\n\t\tpattern: /(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\]\\\\]|\\\\.)*\\]|[^\\]\\\\]|\\\\.)*\\]/m,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'quoted': {\n\t\t\t\tpattern: /([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^[$`]|[$`]$/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'interpreted': {\n\t\t\t\tpattern: /'(?:[^'\\\\]|\\\\.)*'/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^'|'$/\n\t\t\t\t\t// See rest below\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /\"(?:[^\"\\\\]|\\\\.)*\"/,\n\t\t\t'variable': /\\w+(?==)/,\n\t\t\t'punctuation': /^\\[|\\]$|,/,\n\t\t\t'operator': /=/,\n\t\t\t// The negative look-ahead prevents blank matches\n\t\t\t'attr-value': /(?!^\\s+$).+/\n\t\t}\n\t};\n\n\tvar asciidoc = Prism.languages.asciidoc = {\n\t\t'comment-block': {\n\t\t\tpattern: /^(\\/{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1/m,\n\t\t\talias: 'comment'\n\t\t},\n\t\t'table': {\n\t\t\tpattern: /^\\|={3,}(?:(?:\\r?\\n|\\r).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,\n\t\t\tinside: {\n\t\t\t\t'specifiers': {\n\t\t\t\t\tpattern: /(?!\\|)(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*])?(?:[<^>](?:\\.[<^>])?|\\.[<^>])?[a-z]*)(?=\\|)/,\n\t\t\t\t\talias: 'attr-value'\n\t\t\t\t},\n\t\t\t\t'punctuation': {\n\t\t\t\t\tpattern: /(^|[^\\\\])[|!]=*/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\n\t\t'passthrough-block': {\n\t\t\tpattern: /^(\\+{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^\\++|\\++$/\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t// Literal blocks and listing blocks\n\t\t'literal-block': {\n\t\t\tpattern: /^(-{4,}|\\.{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^(?:-+|\\.+)|(?:-+|\\.+)$/\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t// Sidebar blocks, quote blocks, example blocks and open blocks\n\t\t'other-block': {\n\t\t\tpattern: /^(--|\\*{4,}|_{4,}|={4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\n\t\t// list-punctuation and list-label must appear before indented-block\n\t\t'list-punctuation': {\n\t\t\tpattern: /(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,\n\t\t\tlookbehind: true,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'list-label': {\n\t\t\tpattern: /(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,\n\t\t\tlookbehind: true,\n\t\t\talias: 'symbol'\n\t\t},\n\t\t'indented-block': {\n\t\t\tpattern: /((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,\n\t\t\tlookbehind: true\n\t\t},\n\n\t\t'comment': /^\\/\\/.*/m,\n\t\t'title': {\n\t\t\tpattern: /^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} +.+|^\\.(?![\\s.]).*/m,\n\t\t\talias: 'important',\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'attribute-entry': {\n\t\t\tpattern: /^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,\n\t\t\talias: 'tag'\n\t\t},\n\t\t'attributes': attributes,\n\t\t'hr': {\n\t\t\tpattern: /^'{3,}$/m,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'page-break': {\n\t\t\tpattern: /^<{3,}$/m,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'admonition': {\n\t\t\tpattern: /^(?:TIP|NOTE|IMPORTANT|WARNING|CAUTION):/m,\n\t\t\talias: 'keyword'\n\t\t},\n\t\t'callout': [\n\t\t\t{\n\t\t\t\tpattern: /(^[ \\t]*)<?\\d*>/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'symbol'\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /<\\d+>/,\n\t\t\t\talias: 'symbol'\n\t\t\t}\n\t\t],\n\t\t'macro': {\n\t\t\tpattern: /\\b[a-z\\d][a-z\\d-]*::?(?:(?:\\S+)??\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n\t\t\tinside: {\n\t\t\t\t'function': /^[a-z\\d-]+(?=:)/,\n\t\t\t\t'punctuation': /^::?/,\n\t\t\t\t'attributes': {\n\t\t\t\t\tpattern: /(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n\t\t\t\t\tinside: attributes.inside\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'inline': {\n\t\t\t/*\n\t\t\tThe initial look-behind prevents the highlighting of escaped quoted text.\n\n\t\t\tQuoted text can be multi-line but cannot span an empty line.\n\t\t\tAll quoted text can have attributes before [foobar, 'foobar', baz=\"bar\"].\n\n\t\t\tFirst, we handle the constrained quotes.\n\t\t\tThose must be bounded by non-word chars and cannot have spaces between the delimiter and the first char.\n\t\t\tThey are, in order: _emphasis_, ``double quotes'', `single quotes', `monospace`, 'emphasis', *strong*, +monospace+ and #unquoted#\n\n\t\t\tThen we handle the unconstrained quotes.\n\t\t\tThose do not have the restrictions of the constrained quotes.\n\t\t\tThey are, in order: __emphasis__, **strong**, ++monospace++, +++passthrough+++, ##unquoted##, $$passthrough$$, ~subscript~, ^superscript^, {attribute-reference}, [[anchor]], [[[bibliography anchor]]], <<xref>>, (((indexes))) and ((indexes))\n\t\t\t */\n\t\t\tpattern: /(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?: ['`]|.)+?(?:(?:\\r?\\n|\\r)(?: ['`]|.)+?)*['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attributes': attributes,\n\t\t\t\t'url': {\n\t\t\t\t\tpattern: /^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'attribute-ref': {\n\t\t\t\t\tpattern: /^\\{.+\\}$/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'variable': {\n\t\t\t\t\t\t\tpattern: /(^\\{)[a-z\\d,+_-]+/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'operator': /^[=?!#%@$]|!(?=[:}])/,\n\t\t\t\t\t\t'punctuation': /^\\{|\\}$|::?/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'italic': {\n\t\t\t\t\tpattern: /^(['_])[\\s\\S]+\\1$/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^(?:''?|__?)|(?:''?|__?)$/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'bold': {\n\t\t\t\t\tpattern: /^\\*[\\s\\S]+\\*$/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\tpunctuation: /^\\*\\*?|\\*\\*?$/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'punctuation': /^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/\n\t\t\t}\n\t\t},\n\t\t'replacement': {\n\t\t\tpattern: /\\((?:C|TM|R)\\)/,\n\t\t\talias: 'builtin'\n\t\t},\n\t\t'entity': /&#?[\\da-z]{1,8};/i,\n\t\t'line-continuation': {\n\t\t\tpattern: /(^| )\\+$/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'punctuation'\n\t\t}\n\t};\n\n\n\t// Allow some nesting. There is no recursion though, so cloning should not be needed.\n\n\tfunction copyFromAsciiDoc(keys) {\n\t\tkeys = keys.split(' ');\n\n\t\tvar o = {};\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\to[keys[i]] = asciidoc[keys[i]];\n\t\t}\n\t\treturn o;\n\t}\n\n\tattributes.inside['interpreted'].inside.rest = copyFromAsciiDoc('macro inline replacement entity');\n\n\tasciidoc['passthrough-block'].inside.rest = copyFromAsciiDoc('macro');\n\n\tasciidoc['literal-block'].inside.rest = copyFromAsciiDoc('callout');\n\n\tasciidoc['table'].inside.rest = copyFromAsciiDoc('comment-block passthrough-block literal-block other-block list-punctuation indented-block comment title attribute-entry attributes hr page-break admonition list-label callout macro inline replacement entity line-continuation');\n\n\tasciidoc['other-block'].inside.rest = copyFromAsciiDoc('table list-punctuation indented-block comment attribute-entry attributes hr page-break admonition list-label macro inline replacement entity line-continuation');\n\n\tasciidoc['title'].inside.rest = copyFromAsciiDoc('macro inline replacement entity');\n\n\n\t// Plugin to make entity title show the real entity, idea by Roman Komarov\n\tPrism.hooks.add('wrap', function (env) {\n\t\tif (env.type === 'entity') {\n\t\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t\t}\n\t});\n\n\tPrism.languages.adoc = Prism.languages.asciidoc;\n}(Prism));\n","!function(t){var n={pattern:/(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\]\\\\]|\\\\.)*\\]|[^\\]\\\\]|\\\\.)*\\]/m,lookbehind:!0,inside:{quoted:{pattern:/([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,inside:{punctuation:/^[$`]|[$`]$/}},interpreted:{pattern:/'(?:[^'\\\\]|\\\\.)*'/,inside:{punctuation:/^'|'$/}},string:/\"(?:[^\"\\\\]|\\\\.)*\"/,variable:/\\w+(?==)/,punctuation:/^\\[|\\]$|,/,operator:/=/,\"attr-value\":/(?!^\\s+$).+/}},a=t.languages.asciidoc={\"comment-block\":{pattern:/^(\\/{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1/m,alias:\"comment\"},table:{pattern:/^\\|={3,}(?:(?:\\r?\\n|\\r).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,inside:{specifiers:{pattern:/(?!\\|)(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*])?(?:[<^>](?:\\.[<^>])?|\\.[<^>])?[a-z]*)(?=\\|)/,alias:\"attr-value\"},punctuation:{pattern:/(^|[^\\\\])[|!]=*/,lookbehind:!0}}},\"passthrough-block\":{pattern:/^(\\+{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,inside:{punctuation:/^\\++|\\++$/}},\"literal-block\":{pattern:/^(-{4,}|\\.{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,inside:{punctuation:/^(?:-+|\\.+)|(?:-+|\\.+)$/}},\"other-block\":{pattern:/^(--|\\*{4,}|_{4,}|={4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,inside:{punctuation:/^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/}},\"list-punctuation\":{pattern:/(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,lookbehind:!0,alias:\"punctuation\"},\"list-label\":{pattern:/(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,lookbehind:!0,alias:\"symbol\"},\"indented-block\":{pattern:/((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,lookbehind:!0},comment:/^\\/\\/.*/m,title:{pattern:/^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} +.+|^\\.(?![\\s.]).*/m,alias:\"important\",inside:{punctuation:/^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/}},\"attribute-entry\":{pattern:/^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,alias:\"tag\"},attributes:n,hr:{pattern:/^'{3,}$/m,alias:\"punctuation\"},\"page-break\":{pattern:/^<{3,}$/m,alias:\"punctuation\"},admonition:{pattern:/^(?:TIP|NOTE|IMPORTANT|WARNING|CAUTION):/m,alias:\"keyword\"},callout:[{pattern:/(^[ \\t]*)<?\\d*>/m,lookbehind:!0,alias:\"symbol\"},{pattern:/<\\d+>/,alias:\"symbol\"}],macro:{pattern:/\\b[a-z\\d][a-z\\d-]*::?(?:(?:\\S+)??\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,inside:{function:/^[a-z\\d-]+(?=:)/,punctuation:/^::?/,attributes:{pattern:/(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,inside:n.inside}}},inline:{pattern:/(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?: ['`]|.)+?(?:(?:\\r?\\n|\\r)(?: ['`]|.)+?)*['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,lookbehind:!0,inside:{attributes:n,url:{pattern:/^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,inside:{punctuation:/^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/}},\"attribute-ref\":{pattern:/^\\{.+\\}$/,inside:{variable:{pattern:/(^\\{)[a-z\\d,+_-]+/,lookbehind:!0},operator:/^[=?!#%@$]|!(?=[:}])/,punctuation:/^\\{|\\}$|::?/}},italic:{pattern:/^(['_])[\\s\\S]+\\1$/,inside:{punctuation:/^(?:''?|__?)|(?:''?|__?)$/}},bold:{pattern:/^\\*[\\s\\S]+\\*$/,inside:{punctuation:/^\\*\\*?|\\*\\*?$/}},punctuation:/^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/}},replacement:{pattern:/\\((?:C|TM|R)\\)/,alias:\"builtin\"},entity:/&#?[\\da-z]{1,8};/i,\"line-continuation\":{pattern:/(^| )\\+$/m,lookbehind:!0,alias:\"punctuation\"}};function i(t){for(var n={},i=0,e=(t=t.split(\" \")).length;i<e;i++)n[t[i]]=a[t[i]];return n}n.inside.interpreted.inside.rest=i(\"macro inline replacement entity\"),a[\"passthrough-block\"].inside.rest=i(\"macro\"),a[\"literal-block\"].inside.rest=i(\"callout\"),a.table.inside.rest=i(\"comment-block passthrough-block literal-block other-block list-punctuation indented-block comment title attribute-entry attributes hr page-break admonition list-label callout macro inline replacement entity line-continuation\"),a[\"other-block\"].inside.rest=i(\"table list-punctuation indented-block comment attribute-entry attributes hr page-break admonition list-label macro inline replacement entity line-continuation\"),a.title.inside.rest=i(\"macro inline replacement entity\"),t.hooks.add(\"wrap\",function(t){\"entity\"===t.type&&(t.attributes.title=t.content.replace(/&amp;/,\"&\"))}),t.languages.adoc=t.languages.asciidoc}(Prism);","Prism.languages.asm6502 = {\n\t'comment': /;.*/,\n\t'directive': {\n\t\tpattern: /\\.\\w+(?= )/,\n\t\talias: 'keyword'\n\t},\n\t'string': /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t'opcode': {\n    pattern: /\\b(?:adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya|ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA)\\b/,\n\t\talias: 'property'\n\t},\n\t'hexnumber': {\n\t\tpattern: /#?\\$[\\da-f]{2,4}/i,\n\t\talias: 'string'\n\t},\n\t'binarynumber': {\n\t\tpattern: /#?%[01]+/,\n\t\talias: 'string'\n\t},\n\t'decimalnumber': {\n\t\tpattern: /#?\\d+/,\n\t\talias: 'string'\n\t},\n\t'register': {\n\t\tpattern: /\\b[xya]\\b/i,\n\t\talias: 'variable'\n\t}\n};\n","Prism.languages.asm6502={comment:/;.*/,directive:{pattern:/\\.\\w+(?= )/,alias:\"keyword\"},string:/([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,opcode:{pattern:/\\b(?:adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya|ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA)\\b/,alias:\"property\"},hexnumber:{pattern:/#?\\$[\\da-f]{2,4}/i,alias:\"string\"},binarynumber:{pattern:/#?%[01]+/,alias:\"string\"},decimalnumber:{pattern:/#?\\d+/,alias:\"string\"},register:{pattern:/\\b[xya]\\b/i,alias:\"variable\"}};","Prism.languages.aspnet = Prism.languages.extend('markup', {\n\t'page-directive tag': {\n\t\tpattern: /<%\\s*@.*%>/i,\n\t\tinside: {\n\t\t\t'page-directive tag': /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n\t\t\trest: Prism.languages.markup.tag.inside\n\t\t}\n\t},\n\t'directive tag': {\n\t\tpattern: /<%.*%>/i,\n\t\tinside: {\n\t\t\t'directive tag': /<%\\s*?[$=%#:]{0,2}|%>/i,\n\t\t\trest: Prism.languages.csharp\n\t\t}\n\t}\n});\n// Regexp copied from prism-markup, with a negative look-ahead added\nPrism.languages.aspnet.tag.pattern = /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i;\n\n// match directives of attribute value foo=\"<% Bar %>\"\nPrism.languages.insertBefore('inside', 'punctuation', {\n\t'directive tag': Prism.languages.aspnet['directive tag']\n}, Prism.languages.aspnet.tag.inside[\"attr-value\"]);\n\nPrism.languages.insertBefore('aspnet', 'comment', {\n\t'asp comment': /<%--[\\s\\S]*?--%>/\n});\n\n// script runat=\"server\" contains csharp, not javascript\nPrism.languages.insertBefore('aspnet', Prism.languages.javascript ? 'script' : 'tag', {\n\t'asp script': {\n\t\tpattern: /(<script(?=.*runat=['\"]?server['\"]?)[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n\t\tlookbehind: true,\n\t\tinside: Prism.languages.csharp || {}\n\t}\n});","Prism.languages.aspnet=Prism.languages.extend(\"markup\",{\"page-directive tag\":{pattern:/<%\\s*@.*%>/i,inside:{\"page-directive tag\":/<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,rest:Prism.languages.markup.tag.inside}},\"directive tag\":{pattern:/<%.*%>/i,inside:{\"directive tag\":/<%\\s*?[$=%#:]{0,2}|%>/i,rest:Prism.languages.csharp}}}),Prism.languages.aspnet.tag.pattern=/<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,Prism.languages.insertBefore(\"inside\",\"punctuation\",{\"directive tag\":Prism.languages.aspnet[\"directive tag\"]},Prism.languages.aspnet.tag.inside[\"attr-value\"]),Prism.languages.insertBefore(\"aspnet\",\"comment\",{\"asp comment\":/<%--[\\s\\S]*?--%>/}),Prism.languages.insertBefore(\"aspnet\",Prism.languages.javascript?\"script\":\"tag\",{\"asp script\":{pattern:/(<script(?=.*runat=['\"]?server['\"]?)[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,lookbehind:!0,inside:Prism.languages.csharp||{}}});","// NOTES - follows first-first highlight method, block is locked after highlight, different from SyntaxHl\nPrism.languages.autohotkey= {\n\t'comment': {\n\t\tpattern: /(^[^\";\\n]*(\"[^\"\\n]*?\"[^\"\\n]*?)*)(?:;.*$|^\\s*\\/\\*[\\s\\S]*\\n\\*\\/)/m,\n\t\tlookbehind: true\n\t},\n\t'string': /\"(?:[^\"\\n\\r]|\"\")*\"/m,\n\t'function': /[^(); \\t,\\n+*\\-=?>:\\\\\\/<&%\\[\\]]+?(?=\\()/m,  //function - don't use .*\\) in the end bcoz string locks it\n\t'tag': /^[ \\t]*[^\\s:]+?(?=:(?:[^:]|$))/m,  //labels\n\t'variable': /%\\w+%/,\n\t'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n\t'operator': /\\?|\\/\\/?=?|:=|\\|[=|]?|&[=&]?|\\+[=+]?|-[=-]?|\\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\\b(?:AND|NOT|OR)\\b/,\n\t'punctuation': /[{}[\\]():,]/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\n\t'selector': /\\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\\b/i,\n\n\t'constant': /\\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_formatfloat|a_formatinteger|a_gui|a_guievent|a_guicontrol|a_guicontrolevent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|programfiles|a_programfiles|a_programs|a_programscommon|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel)\\b/i,\n\n\t'builtin': /\\b(?:abs|acos|asc|asin|atan|ceil|chr|class|cos|dllcall|exp|fileexist|Fileopen|floor|il_add|il_create|il_destroy|instr|substr|isfunc|islabel|IsObject|ln|log|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|onmessage|numget|numput|registercallback|regexmatch|regexreplace|round|sin|tan|sqrt|strlen|sb_seticon|sb_setparts|sb_settext|strsplit|tv_add|tv_delete|tv_getchild|tv_getcount|tv_getnext|tv_get|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__New|__Call|__Get|__Set)\\b/i,\n\n\t'symbol': /\\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\\b/i,\n\n\t'important': /#\\b(?:AllowSameLineComments|ClipboardTimeout|CommentFlag|ErrorStdOut|EscapeChar|HotkeyInterval|HotkeyModifierTimeout|Hotstring|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Include|IncludeAgain|InstallKeybdHook|InstallMouseHook|KeyHistory|LTrim|MaxHotkeysPerInterval|MaxMem|MaxThreads|MaxThreadsBuffer|MaxThreadsPerHotkey|NoEnv|NoTrayIcon|Persistent|SingleInstance|UseHook|WinActivateForce)\\b/i,\n\n\t'keyword': /\\b(?:Abort|AboveNormal|Add|ahk_class|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Region|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|TryAgain|Type|UnCheck|underline|Unicode|Unlock|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\\b/i\n};","Prism.languages.autohotkey={comment:{pattern:/(^[^\";\\n]*(\"[^\"\\n]*?\"[^\"\\n]*?)*)(?:;.*$|^\\s*\\/\\*[\\s\\S]*\\n\\*\\/)/m,lookbehind:!0},string:/\"(?:[^\"\\n\\r]|\"\")*\"/m,function:/[^(); \\t,\\n+*\\-=?>:\\\\\\/<&%\\[\\]]+?(?=\\()/m,tag:/^[ \\t]*[^\\s:]+?(?=:(?:[^:]|$))/m,variable:/%\\w+%/,number:/\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,operator:/\\?|\\/\\/?=?|:=|\\|[=|]?|&[=&]?|\\+[=+]?|-[=-]?|\\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\\b(?:AND|NOT|OR)\\b/,punctuation:/[{}[\\]():,]/,boolean:/\\b(?:true|false)\\b/,selector:/\\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\\b/i,constant:/\\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_formatfloat|a_formatinteger|a_gui|a_guievent|a_guicontrol|a_guicontrolevent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|programfiles|a_programfiles|a_programs|a_programscommon|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel)\\b/i,builtin:/\\b(?:abs|acos|asc|asin|atan|ceil|chr|class|cos|dllcall|exp|fileexist|Fileopen|floor|il_add|il_create|il_destroy|instr|substr|isfunc|islabel|IsObject|ln|log|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|onmessage|numget|numput|registercallback|regexmatch|regexreplace|round|sin|tan|sqrt|strlen|sb_seticon|sb_setparts|sb_settext|strsplit|tv_add|tv_delete|tv_getchild|tv_getcount|tv_getnext|tv_get|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__New|__Call|__Get|__Set)\\b/i,symbol:/\\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\\b/i,important:/#\\b(?:AllowSameLineComments|ClipboardTimeout|CommentFlag|ErrorStdOut|EscapeChar|HotkeyInterval|HotkeyModifierTimeout|Hotstring|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Include|IncludeAgain|InstallKeybdHook|InstallMouseHook|KeyHistory|LTrim|MaxHotkeysPerInterval|MaxMem|MaxThreads|MaxThreadsBuffer|MaxThreadsPerHotkey|NoEnv|NoTrayIcon|Persistent|SingleInstance|UseHook|WinActivateForce)\\b/i,keyword:/\\b(?:Abort|AboveNormal|Add|ahk_class|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Region|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|TryAgain|Type|UnCheck|underline|Unicode|Unlock|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\\b/i};","Prism.languages.autoit = {\n\t\"comment\": [\n\t\t/;.*/,\n\t\t{\n\t\t\t// The multi-line comments delimiters can actually be commented out with \";\"\n\t\t\tpattern: /(^\\s*)#(?:comments-start|cs)[\\s\\S]*?^\\s*#(?:comments-end|ce)/m,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t\"url\": {\n\t\tpattern: /(^\\s*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,\n\t\tlookbehind: true\n\t},\n\t\"string\": {\n\t\tpattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t\"variable\": /([%$@])\\w+\\1/\n\t\t}\n\t},\n\t\"directive\": {\n\t\tpattern: /(^\\s*)#\\w+/m,\n\t\tlookbehind: true,\n\t\talias: 'keyword'\n\t},\n\t\"function\": /\\b\\w+(?=\\()/,\n\t// Variables and macros\n\t\"variable\": /[$@]\\w+/,\n\t\"keyword\": /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,\n\t\"number\": /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n\t\"boolean\": /\\b(?:True|False)\\b/i,\n\t\"operator\": /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Or|Not)\\b/i,\n\t\"punctuation\": /[\\[\\]().,:]/\n};","Prism.languages.autoit={comment:[/;.*/,{pattern:/(^\\s*)#(?:comments-start|cs)[\\s\\S]*?^\\s*#(?:comments-end|ce)/m,lookbehind:!0}],url:{pattern:/(^\\s*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,lookbehind:!0},string:{pattern:/([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,greedy:!0,inside:{variable:/([%$@])\\w+\\1/}},directive:{pattern:/(^\\s*)#\\w+/m,lookbehind:!0,alias:\"keyword\"},function:/\\b\\w+(?=\\()/,variable:/[$@]\\w+/,keyword:/\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,number:/\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,boolean:/\\b(?:True|False)\\b/i,operator:/<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Or|Not)\\b/i,punctuation:/[\\[\\]().,:]/};","(function(Prism) {\n\tvar insideString = {\n\t\tvariable: [\n\t\t\t// Arithmetic Environment\n\t\t\t{\n\t\t\t\tpattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n\t\t\t\tinside: {\n\t\t\t\t\t// If there is a $ sign at the beginning highlight $(( and )) as variable\n\t\t\t\t\tvariable: [{\n\t\t\t\t\t\t\tpattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/^\\$\\(\\(/\n\t\t\t\t\t],\n\t\t\t\t\tnumber: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n\t\t\t\t\t// Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n\t\t\t\t\toperator: /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n\t\t\t\t\t// If there is no $ sign at the beginning highlight (( and )) as punctuation\n\t\t\t\t\tpunctuation: /\\(\\(?|\\)\\)?|,|;/\n\t\t\t\t}\n\t\t\t},\n\t\t\t// Command Substitution\n\t\t\t{\n\t\t\t\tpattern: /\\$\\([^)]+\\)|`[^`]+`/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\tvariable: /^\\$\\(|^`|\\)$|`$/\n\t\t\t\t}\n\t\t\t},\n\t\t\t/\\$(?:[\\w#?*!@]+|\\{[^}]+\\})/i\n\t\t]\n\t};\n\n\tPrism.languages.bash = {\n\t\t'shebang': {\n\t\t\tpattern: /^#!\\s*\\/bin\\/bash|^#!\\s*\\/bin\\/sh/,\n\t\t\talias: 'important'\n\t\t},\n\t\t'comment': {\n\t\t\tpattern: /(^|[^\"{\\\\])#.*/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': [\n\t\t\t//Support for Here-Documents https://en.wikipedia.org/wiki/Here_document\n\t\t\t{\n\t\t\t\tpattern: /((?:^|[^<])<<\\s*)[\"']?(\\w+?)[\"']?\\s*\\r?\\n(?:[\\s\\S])*?\\r?\\n\\2/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: insideString\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: insideString\n\t\t\t}\n\t\t],\n\t\t'variable': insideString.variable,\n\t\t// Originally based on http://ss64.com/bash/\n\t\t'function': {\n\t\t\tpattern: /(^|[\\s;|&])(?:add|alias|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|builtin|bzip2|cal|cat|cd|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|comm|command|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|enable|env|ethtool|eval|exec|expand|expect|export|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|getopts|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|hash|head|help|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logout|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|printf|ps|pushd|pv|pwd|quota|quotacheck|quotactl|ram|rar|rcp|read|readarray|readonly|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|shift|shopt|shutdown|sleep|slocate|sort|source|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tail|tar|tee|test|time|timeout|times|top|touch|tr|traceroute|trap|tsort|tty|type|ulimit|umask|umount|unalias|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zip|zypper)(?=$|[\\s;|&])/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'keyword': {\n\t\t\tpattern: /(^|[\\s;|&])(?:let|:|\\.|if|then|else|elif|fi|for|break|continue|while|in|case|function|select|do|done|until|echo|exit|return|set|declare)(?=$|[\\s;|&])/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'boolean': {\n\t\t\tpattern: /(^|[\\s;|&])(?:true|false)(?=$|[\\s;|&])/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'operator': /&&?|\\|\\|?|==?|!=?|<<<?|>>|<=?|>=?|=~/,\n\t\t'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];]/\n\t};\n\n\tvar inside = insideString.variable[1].inside;\n\tinside.string = Prism.languages.bash.string;\n\tinside['function'] = Prism.languages.bash['function'];\n\tinside.keyword = Prism.languages.bash.keyword;\n\tinside['boolean'] = Prism.languages.bash['boolean'];\n\tinside.operator = Prism.languages.bash.operator;\n\tinside.punctuation = Prism.languages.bash.punctuation;\n\n\tPrism.languages.shell = Prism.languages.bash;\n})(Prism);\n","!function(e){var a={variable:[{pattern:/\\$?\\(\\([\\s\\S]+?\\)\\)/,inside:{variable:[{pattern:/(^\\$\\(\\([\\s\\S]+)\\)\\)/,lookbehind:!0},/^\\$\\(\\(/],number:/\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,operator:/--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,punctuation:/\\(\\(?|\\)\\)?|,|;/}},{pattern:/\\$\\([^)]+\\)|`[^`]+`/,greedy:!0,inside:{variable:/^\\$\\(|^`|\\)$|`$/}},/\\$(?:[\\w#?*!@]+|\\{[^}]+\\})/i]};e.languages.bash={shebang:{pattern:/^#!\\s*\\/bin\\/bash|^#!\\s*\\/bin\\/sh/,alias:\"important\"},comment:{pattern:/(^|[^\"{\\\\])#.*/,lookbehind:!0},string:[{pattern:/((?:^|[^<])<<\\s*)[\"']?(\\w+?)[\"']?\\s*\\r?\\n(?:[\\s\\S])*?\\r?\\n\\2/,lookbehind:!0,greedy:!0,inside:a},{pattern:/([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/,greedy:!0,inside:a}],variable:a.variable,function:{pattern:/(^|[\\s;|&])(?:add|alias|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|builtin|bzip2|cal|cat|cd|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|comm|command|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|enable|env|ethtool|eval|exec|expand|expect|export|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|getopts|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|hash|head|help|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logout|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|printf|ps|pushd|pv|pwd|quota|quotacheck|quotactl|ram|rar|rcp|read|readarray|readonly|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|shift|shopt|shutdown|sleep|slocate|sort|source|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tail|tar|tee|test|time|timeout|times|top|touch|tr|traceroute|trap|tsort|tty|type|ulimit|umask|umount|unalias|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zip|zypper)(?=$|[\\s;|&])/,lookbehind:!0},keyword:{pattern:/(^|[\\s;|&])(?:let|:|\\.|if|then|else|elif|fi|for|break|continue|while|in|case|function|select|do|done|until|echo|exit|return|set|declare)(?=$|[\\s;|&])/,lookbehind:!0},boolean:{pattern:/(^|[\\s;|&])(?:true|false)(?=$|[\\s;|&])/,lookbehind:!0},operator:/&&?|\\|\\|?|==?|!=?|<<<?|>>|<=?|>=?|=~/,punctuation:/\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];]/};var t=a.variable[1].inside;t.string=e.languages.bash.string,t.function=e.languages.bash.function,t.keyword=e.languages.bash.keyword,t.boolean=e.languages.bash.boolean,t.operator=e.languages.bash.operator,t.punctuation=e.languages.bash.punctuation,e.languages.shell=e.languages.bash}(Prism);","Prism.languages.basic = {\n\t'comment': {\n\t\tpattern: /(?:!|REM\\b).+/i,\n\t\tinside: {\n\t\t\t'keyword': /^REM/i\n\t\t}\n\t},\n\t'string': {\n\t\tpattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^_ +\\-.A-Z\\d])*\"/i,\n\t\tgreedy: true\n\t},\n\t'number': /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n\t'keyword': /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SHARED|SINGLE|SELECT CASE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,\n\t'function': /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,\n\t'operator': /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,\n\t'punctuation': /[,;:()]/\n};","Prism.languages.basic={comment:{pattern:/(?:!|REM\\b).+/i,inside:{keyword:/^REM/i}},string:{pattern:/\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^_ +\\-.A-Z\\d])*\"/i,greedy:!0},number:/(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,keyword:/\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SHARED|SINGLE|SELECT CASE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,function:/\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,operator:/<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,punctuation:/[,;:()]/};","(function (Prism) {\n\tvar variable = /%%?[~:\\w]+%?|!\\S+!/;\n\tvar parameter = {\n\t\tpattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n\t\talias: 'attr-name',\n\t\tinside: {\n\t\t\t'punctuation': /:/\n\t\t}\n\t};\n\tvar string = /\"[^\"]*\"/;\n\tvar number = /(?:\\b|-)\\d+\\b/;\n\n\tPrism.languages.batch = {\n\t\t'comment': [\n\t\t\t/^::.*/m,\n\t\t\t{\n\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'label': {\n\t\t\tpattern: /^:.*/m,\n\t\t\talias: 'property'\n\t\t},\n\t\t'command': [\n\t\t\t{\n\t\t\t\t// FOR command\n\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)for(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* \\S+ in \\([^)]+\\) do/im,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^for\\b|\\b(?:in|do)\\b/i,\n\t\t\t\t\t'string': string,\n\t\t\t\t\t'parameter': parameter,\n\t\t\t\t\t'variable': variable,\n\t\t\t\t\t'number': number,\n\t\t\t\t\t'punctuation': /[()',]/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t// IF command\n\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)if(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|\\S+)?(?:==| (?:equ|neq|lss|leq|gtr|geq) )(?:\"[^\"]*\"|\\S+))/im,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^if\\b|\\b(?:not|cmdextversion|defined|errorlevel|exist)\\b/i,\n\t\t\t\t\t'string': string,\n\t\t\t\t\t'parameter': parameter,\n\t\t\t\t\t'variable': variable,\n\t\t\t\t\t'number': number,\n\t\t\t\t\t'operator': /\\^|==|\\b(?:equ|neq|lss|leq|gtr|geq)\\b/i\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t// ELSE command\n\t\t\t\tpattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^else\\b/i\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t// SET command\n\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)set(?: ?\\/[a-z](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^set\\b/i,\n\t\t\t\t\t'string': string,\n\t\t\t\t\t'parameter': parameter,\n\t\t\t\t\t'variable': [\n\t\t\t\t\t\tvariable,\n\t\t\t\t\t\t/\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/\n\t\t\t\t\t],\n\t\t\t\t\t'number': number,\n\t\t\t\t\t'operator': /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n\t\t\t\t\t'punctuation': /[()',]/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t// Other commands\n\t\t\t\tpattern: /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^\\w+\\b/i,\n\t\t\t\t\t'string': string,\n\t\t\t\t\t'parameter': parameter,\n\t\t\t\t\t'label': {\n\t\t\t\t\t\tpattern: /(^\\s*):\\S+/m,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\talias: 'property'\n\t\t\t\t\t},\n\t\t\t\t\t'variable': variable,\n\t\t\t\t\t'number': number,\n\t\t\t\t\t'operator': /\\^/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'operator': /[&@]/,\n\t\t'punctuation': /[()']/\n\t};\n}(Prism));","!function(e){var r=/%%?[~:\\w]+%?|!\\S+!/,t={pattern:/\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,alias:\"attr-name\",inside:{punctuation:/:/}},n=/\"[^\"]*\"/,i=/(?:\\b|-)\\d+\\b/;Prism.languages.batch={comment:[/^::.*/m,{pattern:/((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,lookbehind:!0}],label:{pattern:/^:.*/m,alias:\"property\"},command:[{pattern:/((?:^|[&(])[ \\t]*)for(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* \\S+ in \\([^)]+\\) do/im,lookbehind:!0,inside:{keyword:/^for\\b|\\b(?:in|do)\\b/i,string:n,parameter:t,variable:r,number:i,punctuation:/[()',]/}},{pattern:/((?:^|[&(])[ \\t]*)if(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|\\S+)?(?:==| (?:equ|neq|lss|leq|gtr|geq) )(?:\"[^\"]*\"|\\S+))/im,lookbehind:!0,inside:{keyword:/^if\\b|\\b(?:not|cmdextversion|defined|errorlevel|exist)\\b/i,string:n,parameter:t,variable:r,number:i,operator:/\\^|==|\\b(?:equ|neq|lss|leq|gtr|geq)\\b/i}},{pattern:/((?:^|[&()])[ \\t]*)else\\b/im,lookbehind:!0,inside:{keyword:/^else\\b/i}},{pattern:/((?:^|[&(])[ \\t]*)set(?: ?\\/[a-z](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,lookbehind:!0,inside:{keyword:/^set\\b/i,string:n,parameter:t,variable:[r,/\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],number:i,operator:/[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,punctuation:/[()',]/}},{pattern:/((?:^|[&(])[ \\t]*@?)\\w+\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,lookbehind:!0,inside:{keyword:/^\\w+\\b/i,string:n,parameter:t,label:{pattern:/(^\\s*):\\S+/m,lookbehind:!0,alias:\"property\"},variable:r,number:i,operator:/\\^/}}],operator:/[&@]/,punctuation:/[()']/}}();","Prism.languages.bison = Prism.languages.extend('c', {});\n\nPrism.languages.insertBefore('bison', 'comment', {\n\t'bison': {\n\t\t// This should match all the beginning of the file\n\t\t// including the prologue(s), the bison declarations and\n\t\t// the grammar rules.\n\t\tpattern: /^[\\s\\S]*?%%[\\s\\S]*?%%/,\n\t\tinside: {\n\t\t\t'c': {\n\t\t\t\t// Allow for one level of nested braces\n\t\t\t\tpattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,\n\t\t\t\tinside: {\n\t\t\t\t\t'delimiter': {\n\t\t\t\t\t\tpattern: /^%?\\{|%?\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\t'bison-variable': {\n\t\t\t\t\t\tpattern: /[$@](?:<[^\\s>]+>)?[\\w$]+/,\n\t\t\t\t\t\talias: 'variable',\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'punctuation': /<|>/\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.c\n\t\t\t\t}\n\t\t\t},\n\t\t\t'comment': Prism.languages.c.comment,\n\t\t\t'string': Prism.languages.c.string,\n\t\t\t'property': /\\S+(?=:)/,\n\t\t\t'keyword': /%\\w+/,\n\t\t\t'number': {\n\t\t\t\tpattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'punctuation': /%[%?]|[|:;\\[\\]<>]/\n\t\t}\n\t}\n});","Prism.languages.bison=Prism.languages.extend(\"c\",{}),Prism.languages.insertBefore(\"bison\",\"comment\",{bison:{pattern:/^[\\s\\S]*?%%[\\s\\S]*?%%/,inside:{c:{pattern:/%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,inside:{delimiter:{pattern:/^%?\\{|%?\\}$/,alias:\"punctuation\"},\"bison-variable\":{pattern:/[$@](?:<[^\\s>]+>)?[\\w$]+/,alias:\"variable\",inside:{punctuation:/<|>/}},rest:Prism.languages.c}},comment:Prism.languages.c.comment,string:Prism.languages.c.string,property:/\\S+(?=:)/,keyword:/%\\w+/,number:{pattern:/(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,lookbehind:!0},punctuation:/%[%?]|[|:;\\[\\]<>]/}}});","Prism.languages.bnf = {\n\t'string': {\n\t\tpattern: /\"[^\\r\\n\"]*\"|'[^\\r\\n']*'/\n\t},\n\t'definition': {\n\t\tpattern: /<[^<>\\r\\n\\t]+>(?=\\s*::=)/,\n\t\talias: ['rule', 'keyword'],\n\t\tinside: {\n\t\t\t'punctuation': /^<|>$/\n\t\t}\n\t},\n\t'rule': {\n\t\tpattern: /<[^<>\\r\\n\\t]+>/,\n\t\tinside: {\n\t\t\t'punctuation': /^<|>$/\n\t\t}\n\t},\n\t'operator': /::=|[|()[\\]{}*+?]|\\.{3}/\n};\n\nPrism.languages.rbnf = Prism.languages.bnf;\n","Prism.languages.bnf={string:{pattern:/\"[^\\r\\n\"]*\"|'[^\\r\\n']*'/},definition:{pattern:/<[^<>\\r\\n\\t]+>(?=\\s*::=)/,alias:[\"rule\",\"keyword\"],inside:{punctuation:/^<|>$/}},rule:{pattern:/<[^<>\\r\\n\\t]+>/,inside:{punctuation:/^<|>$/}},operator:/::=|[|()[\\]{}*+?]|\\.{3}/},Prism.languages.rbnf=Prism.languages.bnf;","Prism.languages.brainfuck = {\n\t'pointer': {\n\t\tpattern: /<|>/,\n\t\talias: 'keyword'\n\t},\n\t'increment': {\n\t\tpattern: /\\+/,\n\t\talias: 'inserted'\n\t},\n\t'decrement': {\n\t\tpattern: /-/,\n\t\talias: 'deleted'\n\t},\n\t'branching': {\n\t\tpattern: /\\[|\\]/,\n\t\talias: 'important'\n\t},\n\t'operator': /[.,]/,\n\t'comment': /\\S+/\n};","Prism.languages.brainfuck={pointer:{pattern:/<|>/,alias:\"keyword\"},increment:{pattern:/\\+/,alias:\"inserted\"},decrement:{pattern:/-/,alias:\"deleted\"},branching:{pattern:/\\[|\\]/,alias:\"important\"},operator:/[.,]/,comment:/\\S+/};","Prism.languages.bro = {\n\n\t'comment': {\n\t\tpattern: /(^|[^\\\\$])#.*/,\n\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'italic':  /\\b(?:TODO|FIXME|XXX)\\b/\n\t\t}\n\t},\n\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\n\t'boolean': /\\b[TF]\\b/,\n\n\t'function': {\n\t\tpattern: /(?:function|hook|event) \\w+(?:::\\w+)?/,\n\t\tinside: {\n\t\t\tkeyword: /^(?:function|hook|event)/\n\t\t}\n\t},\n\n\t'variable':\t{\n\t\tpattern: /(?:global|local) \\w+/i,\n\t\tinside: {\n\t\t\tkeyword: /(?:global|local)/\n\t\t}\n\t},\n\n\t'builtin': /(?:@(?:load(?:-(?:sigs|plugin))?|unload|prefixes|ifn?def|else|(?:end)?if|DIR|FILENAME))|(?:&?(?:redef|priority|log|optional|default|add_func|delete_func|expire_func|read_expire|write_expire|create_expire|synchronized|persistent|rotate_interval|rotate_size|encrypt|raw_output|mergeable|group|error_handler|type_column))/,\n\n\t'constant': {\n\t\tpattern: /const \\w+/i,\n\t\tinside: {\n\t\t\tkeyword: /const/\n\t\t}\n\t},\n\n\t'keyword': /\\b(?:break|next|continue|alarm|using|of|add|delete|export|print|return|schedule|when|timeout|addr|any|bool|count|double|enum|file|int|interval|pattern|opaque|port|record|set|string|subnet|table|time|vector|for|if|else|in|module|function)\\b/,\n\n\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\n\t'punctuation': /[{}[\\];(),.:]/\n};\n","Prism.languages.bro={comment:{pattern:/(^|[^\\\\$])#.*/,lookbehind:!0,inside:{italic:/\\b(?:TODO|FIXME|XXX)\\b/}},string:{pattern:/([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},boolean:/\\b[TF]\\b/,function:{pattern:/(?:function|hook|event) \\w+(?:::\\w+)?/,inside:{keyword:/^(?:function|hook|event)/}},variable:{pattern:/(?:global|local) \\w+/i,inside:{keyword:/(?:global|local)/}},builtin:/(?:@(?:load(?:-(?:sigs|plugin))?|unload|prefixes|ifn?def|else|(?:end)?if|DIR|FILENAME))|(?:&?(?:redef|priority|log|optional|default|add_func|delete_func|expire_func|read_expire|write_expire|create_expire|synchronized|persistent|rotate_interval|rotate_size|encrypt|raw_output|mergeable|group|error_handler|type_column))/,constant:{pattern:/const \\w+/i,inside:{keyword:/const/}},keyword:/\\b(?:break|next|continue|alarm|using|of|add|delete|export|print|return|schedule|when|timeout|addr|any|bool|count|double|enum|file|int|interval|pattern|opaque|port|record|set|string|subnet|table|time|vector|for|if|else|in|module|function)\\b/,operator:/--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,number:/\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,punctuation:/[{}[\\];(),.:]/};","Prism.languages.c = Prism.languages.extend('clike', {\n\t'class-name': {\n\t\tpattern: /(\\b(?:enum|struct)\\s+)\\w+/,\n\t\tlookbehind: true\n\t},\n\t'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n\t'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/,\n\t'number': /(?:\\b0x(?:[\\da-f]+\\.?[\\da-f]*|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i\n});\n\nPrism.languages.insertBefore('c', 'string', {\n\t'macro': {\n\t\t// allow for multiline macro definitions\n\t\t// spaces after the # character compile fine with gcc\n\t\tpattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n\t\tlookbehind: true,\n\t\talias: 'property',\n\t\tinside: {\n\t\t\t// highlight the path of the include statement as a string\n\t\t\t'string': {\n\t\t\t\tpattern: /(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t// highlight macro directives as keywords\n\t\t\t'directive': {\n\t\t\t\tpattern: /(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'keyword'\n\t\t\t}\n\t\t}\n\t},\n\t// highlight predefined macros as constants\n\t'constant': /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n});\n\ndelete Prism.languages.c['boolean'];\n","Prism.languages.c=Prism.languages.extend(\"clike\",{\"class-name\":{pattern:/(\\b(?:enum|struct)\\s+)\\w+/,lookbehind:!0},keyword:/\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,operator:/>>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/,number:/(?:\\b0x(?:[\\da-f]+\\.?[\\da-f]*|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i}),Prism.languages.insertBefore(\"c\",\"string\",{macro:{pattern:/(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,lookbehind:!0,alias:\"property\",inside:{string:{pattern:/(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,lookbehind:!0},directive:{pattern:/(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,lookbehind:!0,alias:\"keyword\"}}},constant:/\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/}),delete Prism.languages.c.boolean;","Prism.languages.cil = {\n\t'comment': /\\/\\/.*/,\n\t\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t\n\t'directive': {\n\t\tpattern: /(^|\\W)\\.[a-z]+(?=\\s)/,\n\t\tlookbehind: true,\n\t\talias: 'class-name'\n\t},\n\t\n\t// Actually an assembly reference\n\t'variable': /\\[[\\w\\.]+\\]/,\n\t\n\t\n\t'keyword': /\\b(?:abstract|ansi|assembly|auto|autochar|beforefieldinit|bool|bstr|byvalstr|catch|char|cil|class|currency|date|decimal|default|enum|error|explicit|extends|extern|famandassem|family|famorassem|final(?:ly)?|float32|float64|hidebysig|iant|idispatch|implements|import|initonly|instance|u?int(?:8|16|32|64)?|interface|iunknown|literal|lpstr|lpstruct|lptstr|lpwstr|managed|method|native(?:Type)?|nested|newslot|object(?:ref)?|pinvokeimpl|private|privatescope|public|reqsecobj|rtspecialname|runtime|sealed|sequential|serializable|specialname|static|string|struct|syschar|tbstr|unicode|unmanagedexp|unsigned|value(?:type)?|variant|virtual|void)\\b/,\n\t\n\t'function': /\\b(?:(?:constrained|unaligned|volatile|readonly|tail|no)\\.)?(?:conv\\.(?:[iu][1248]?|ovf\\.[iu][1248]?(?:\\.un)?|r\\.un|r4|r8)|ldc\\.(?:i4(?:\\.[0-9]+|\\.[mM]1|\\.s)?|i8|r4|r8)|ldelem(?:\\.[iu][1248]?|\\.r[48]|\\.ref|a)?|ldind\\.(?:[iu][1248]?|r[48]|ref)|stelem\\.?(?:i[1248]?|r[48]|ref)?|stind\\.(i[1248]?|r[48]|ref)?|end(?:fault|filter|finally)|ldarg(?:\\.[0-3s]|a(?:\\.s)?)?|ldloc(?:\\.[0-9]+|\\.s)?|sub(?:\\.ovf(?:\\.un)?)?|mul(?:\\.ovf(?:\\.un)?)?|add(?:\\.ovf(?:\\.un)?)?|stloc(?:\\.[0-3s])?|refany(?:type|val)|blt(?:\\.un)?(?:\\.s)?|ble(?:\\.un)?(?:\\.s)?|bgt(?:\\.un)?(?:\\.s)?|bge(?:\\.un)?(?:\\.s)?|unbox(?:\\.any)?|init(?:blk|obj)|call(?:i|virt)?|brfalse(?:\\.s)?|bne\\.un(?:\\.s)?|ldloca(?:\\.s)?|brzero(?:\\.s)?|brtrue(?:\\.s)?|brnull(?:\\.s)?|brinst(?:\\.s)?|starg(?:\\.s)?|leave(?:\\.s)?|shr(?:\\.un)?|rem(?:\\.un)?|div(?:\\.un)?|clt(?:\\.un)?|alignment|ldvirtftn|castclass|beq(?:\\.s)?|mkrefany|localloc|ckfinite|rethrow|ldtoken|ldsflda|cgt\\.un|arglist|switch|stsfld|sizeof|newobj|newarr|ldsfld|ldnull|ldflda|isinst|throw|stobj|stloc|stfld|ldstr|ldobj|ldlen|ldftn|ldfld|cpobj|cpblk|break|br\\.s|xor|shl|ret|pop|not|nop|neg|jmp|dup|clt|cgt|ceq|box|and|or|br)\\b/,\n\t\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'number': /\\b-?(?:0x[0-9a-fA-F]+|[0-9]+)(?:\\.[0-9a-fA-F]+)?\\b/i,\n\t\n\t'punctuation': /[{}[\\];(),:=]|IL_[0-9A-Za-z]+/\n}\n","Prism.languages.cil={comment:/\\/\\/.*/,string:{pattern:/([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},directive:{pattern:/(^|\\W)\\.[a-z]+(?=\\s)/,lookbehind:!0,alias:\"class-name\"},variable:/\\[[\\w\\.]+\\]/,keyword:/\\b(?:abstract|ansi|assembly|auto|autochar|beforefieldinit|bool|bstr|byvalstr|catch|char|cil|class|currency|date|decimal|default|enum|error|explicit|extends|extern|famandassem|family|famorassem|final(?:ly)?|float32|float64|hidebysig|iant|idispatch|implements|import|initonly|instance|u?int(?:8|16|32|64)?|interface|iunknown|literal|lpstr|lpstruct|lptstr|lpwstr|managed|method|native(?:Type)?|nested|newslot|object(?:ref)?|pinvokeimpl|private|privatescope|public|reqsecobj|rtspecialname|runtime|sealed|sequential|serializable|specialname|static|string|struct|syschar|tbstr|unicode|unmanagedexp|unsigned|value(?:type)?|variant|virtual|void)\\b/,function:/\\b(?:(?:constrained|unaligned|volatile|readonly|tail|no)\\.)?(?:conv\\.(?:[iu][1248]?|ovf\\.[iu][1248]?(?:\\.un)?|r\\.un|r4|r8)|ldc\\.(?:i4(?:\\.[0-9]+|\\.[mM]1|\\.s)?|i8|r4|r8)|ldelem(?:\\.[iu][1248]?|\\.r[48]|\\.ref|a)?|ldind\\.(?:[iu][1248]?|r[48]|ref)|stelem\\.?(?:i[1248]?|r[48]|ref)?|stind\\.(i[1248]?|r[48]|ref)?|end(?:fault|filter|finally)|ldarg(?:\\.[0-3s]|a(?:\\.s)?)?|ldloc(?:\\.[0-9]+|\\.s)?|sub(?:\\.ovf(?:\\.un)?)?|mul(?:\\.ovf(?:\\.un)?)?|add(?:\\.ovf(?:\\.un)?)?|stloc(?:\\.[0-3s])?|refany(?:type|val)|blt(?:\\.un)?(?:\\.s)?|ble(?:\\.un)?(?:\\.s)?|bgt(?:\\.un)?(?:\\.s)?|bge(?:\\.un)?(?:\\.s)?|unbox(?:\\.any)?|init(?:blk|obj)|call(?:i|virt)?|brfalse(?:\\.s)?|bne\\.un(?:\\.s)?|ldloca(?:\\.s)?|brzero(?:\\.s)?|brtrue(?:\\.s)?|brnull(?:\\.s)?|brinst(?:\\.s)?|starg(?:\\.s)?|leave(?:\\.s)?|shr(?:\\.un)?|rem(?:\\.un)?|div(?:\\.un)?|clt(?:\\.un)?|alignment|ldvirtftn|castclass|beq(?:\\.s)?|mkrefany|localloc|ckfinite|rethrow|ldtoken|ldsflda|cgt\\.un|arglist|switch|stsfld|sizeof|newobj|newarr|ldsfld|ldnull|ldflda|isinst|throw|stobj|stloc|stfld|ldstr|ldobj|ldlen|ldftn|ldfld|cpobj|cpblk|break|br\\.s|xor|shl|ret|pop|not|nop|neg|jmp|dup|clt|cgt|ceq|box|and|or|br)\\b/,boolean:/\\b(?:true|false)\\b/,number:/\\b-?(?:0x[0-9a-fA-F]+|[0-9]+)(?:\\.[0-9a-fA-F]+)?\\b/i,punctuation:/[{}[\\];(),:=]|IL_[0-9A-Za-z]+/};","Prism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\tpunctuation: /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n","Prism.languages.clike={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,lookbehind:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},\"class-name\":{pattern:/((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\\\]/}},keyword:/\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,boolean:/\\b(?:true|false)\\b/,function:/\\w+(?=\\()/,number:/\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,operator:/--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,punctuation:/[{}[\\];(),.:]/};","// Copied from https://github.com/jeluard/prism-clojure\nPrism.languages.clojure = {\n\tcomment: /;+.*/,\n\tstring: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n\toperator: /(?:::|[:|'])\\b[a-z][\\w*+!?-]*\\b/i, //used for symbols and keywords\n\tkeyword: {\n\t\tpattern: /([^\\w+*'?-])(?:def|if|do|let|\\.\\.|quote|var|->>|->|fn|loop|recur|throw|try|monitor-enter|\\.|new|set!|def\\-|defn|defn\\-|defmacro|defmulti|defmethod|defstruct|defonce|declare|definline|definterface|defprotocol|==|defrecord|>=|deftype|<=|defproject|ns|\\*|\\+|\\-|\\/|<|=|>|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|conj|cons|constantly|cond|if-not|construct-proxy|contains\\?|count|create-ns|create-struct|cycle|dec|deref|difference|disj|dissoc|distinct|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\\?|ensure|eval|every\\?|false\\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|for|fnseq|frest|gensym|get-proxy-class|get|hash-map|hash-set|identical\\?|identity|if-let|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\\?|last|lazy-cat|lazy-cons|left|lefts|line-seq|list\\*|list|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|name|namespace|neg\\?|new|newline|next|nil\\?|node|not|not-any\\?|not-every\\?|not=|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\\?|set|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\\?|split-at|split-with|str|string\\?|struct|struct-map|subs|subvec|symbol|symbol\\?|sync|take|take-nth|take-while|test|time|to-array|to-array-2d|tree-seq|true\\?|union|up|update-proxy|val|vals|var-get|var-set|var\\?|vector|vector-zip|vector\\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\\?|zipmap|zipper)(?=[^\\w+*'?-])/,\n\t\tlookbehind: true\n\t},\n\tboolean: /\\b(?:true|false|nil)\\b/,\n\tnumber: /\\b[0-9A-Fa-f]+\\b/,\n\tpunctuation: /[{}\\[\\](),]/\n};\n","Prism.languages.clojure={comment:/;+.*/,string:/\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,operator:/(?:::|[:|'])\\b[a-z][\\w*+!?-]*\\b/i,keyword:{pattern:/([^\\w+*'?-])(?:def|if|do|let|\\.\\.|quote|var|->>|->|fn|loop|recur|throw|try|monitor-enter|\\.|new|set!|def\\-|defn|defn\\-|defmacro|defmulti|defmethod|defstruct|defonce|declare|definline|definterface|defprotocol|==|defrecord|>=|deftype|<=|defproject|ns|\\*|\\+|\\-|\\/|<|=|>|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|conj|cons|constantly|cond|if-not|construct-proxy|contains\\?|count|create-ns|create-struct|cycle|dec|deref|difference|disj|dissoc|distinct|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\\?|ensure|eval|every\\?|false\\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|for|fnseq|frest|gensym|get-proxy-class|get|hash-map|hash-set|identical\\?|identity|if-let|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\\?|last|lazy-cat|lazy-cons|left|lefts|line-seq|list\\*|list|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|name|namespace|neg\\?|new|newline|next|nil\\?|node|not|not-any\\?|not-every\\?|not=|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\\?|set|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\\?|split-at|split-with|str|string\\?|struct|struct-map|subs|subvec|symbol|symbol\\?|sync|take|take-nth|take-while|test|time|to-array|to-array-2d|tree-seq|true\\?|union|up|update-proxy|val|vals|var-get|var-set|var\\?|vector|vector-zip|vector\\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\\?|zipmap|zipper)(?=[^\\w+*'?-])/,lookbehind:!0},boolean:/\\b(?:true|false|nil)\\b/,number:/\\b[0-9A-Fa-f]+\\b/,punctuation:/[{}\\[\\](),]/};","Prism.languages.cmake = {\n\t'comment': /#.*/,\n\t'string': {\n\t\tpattern: /\"(?:[^\\\\\"]|\\\\.)*\"/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /\\${(?:[^{}$]|\\${[^{}$]*})*}/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\${|}/,\n\t\t\t\t\t'variable': /\\w+/\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t'variable': /\\b(?:CMAKE_\\w+|\\w+_(?:VERSION(?:_MAJOR|_MINOR|_PATCH|_TWEAK)?|(?:BINARY|SOURCE)_DIR|DESCRIPTION|HOMEPAGE_URL|ROOT)|(?:CTEST_CUSTOM_(?:MAXIMUM_(?:(?:FAIL|PASS)ED_TEST_OUTPUT_SIZE|NUMBER_OF_(?:ERROR|WARNING)S)|ERROR_(?:P(?:OST|RE)_CONTEXT|EXCEPTION|MATCH)|P(?:OST|RE)_MEMCHECK|WARNING_(?:EXCEPTION|MATCH)|(?:MEMCHECK|TESTS)_IGNORE|P(?:OST|RE)_TEST|COVERAGE_EXCLUDE)|ANDROID|APPLE|BORLAND|BUILD_SHARED_LIBS|CACHE|CPACK_(?:ABSOLUTE_DESTINATION_FILES|COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY|ERROR_ON_ABSOLUTE_INSTALL_DESTINATION|INCLUDE_TOPLEVEL_DIRECTORY|INSTALL_DEFAULT_DIRECTORY_PERMISSIONS|INSTALL_SCRIPT|PACKAGING_INSTALL_PREFIX|SET_DESTDIR|WARN_ON_ABSOLUTE_INSTALL_DESTINATION)|CTEST_(?:BINARY_DIRECTORY|BUILD_COMMAND|BUILD_NAME|BZR_COMMAND|BZR_UPDATE_OPTIONS|CHANGE_ID|CHECKOUT_COMMAND|CONFIGURATION_TYPE|CONFIGURE_COMMAND|COVERAGE_COMMAND|COVERAGE_EXTRA_FLAGS|CURL_OPTIONS|CUSTOM_(?:COVERAGE_EXCLUDE|ERROR_EXCEPTION|ERROR_MATCH|ERROR_POST_CONTEXT|ERROR_PRE_CONTEXT|MAXIMUM_FAILED_TEST_OUTPUT_SIZE|MAXIMUM_NUMBER_OF_(?:ERRORS|WARNINGS)|MAXIMUM_PASSED_TEST_OUTPUT_SIZE|MEMCHECK_IGNORE|POST_MEMCHECK|POST_TEST|PRE_MEMCHECK|PRE_TEST|TESTS_IGNORE|WARNING_EXCEPTION|WARNING_MATCH)|CVS_CHECKOUT|CVS_COMMAND|CVS_UPDATE_OPTIONS|DROP_LOCATION|DROP_METHOD|DROP_SITE|DROP_SITE_CDASH|DROP_SITE_PASSWORD|DROP_SITE_USER|EXTRA_COVERAGE_GLOB|GIT_COMMAND|GIT_INIT_SUBMODULES|GIT_UPDATE_CUSTOM|GIT_UPDATE_OPTIONS|HG_COMMAND|HG_UPDATE_OPTIONS|LABELS_FOR_SUBPROJECTS|MEMORYCHECK_(?:COMMAND|COMMAND_OPTIONS|SANITIZER_OPTIONS|SUPPRESSIONS_FILE|TYPE)|NIGHTLY_START_TIME|P4_CLIENT|P4_COMMAND|P4_OPTIONS|P4_UPDATE_OPTIONS|RUN_CURRENT_SCRIPT|SCP_COMMAND|SITE|SOURCE_DIRECTORY|SUBMIT_URL|SVN_COMMAND|SVN_OPTIONS|SVN_UPDATE_OPTIONS|TEST_LOAD|TEST_TIMEOUT|TRIGGER_SITE|UPDATE_COMMAND|UPDATE_OPTIONS|UPDATE_VERSION_ONLY|USE_LAUNCHERS)|CYGWIN|ENV|EXECUTABLE_OUTPUT_PATH|GHS-MULTI|IOS|LIBRARY_OUTPUT_PATH|MINGW|MSVC(?:10|11|12|14|60|70|71|80|90|_IDE|_TOOLSET_VERSION|_VERSION)?|MSYS|PROJECT_(?:BINARY_DIR|DESCRIPTION|HOMEPAGE_URL|NAME|SOURCE_DIR|VERSION|VERSION_(?:MAJOR|MINOR|PATCH|TWEAK))|UNIX|WIN32|WINCE|WINDOWS_PHONE|WINDOWS_STORE|XCODE|XCODE_VERSION))\\b/,\n\t'property': /\\b(?:cxx_\\w+|(?:ARCHIVE_OUTPUT_(?:DIRECTORY|NAME)|COMPILE_DEFINITIONS|COMPILE_PDB_NAME|COMPILE_PDB_OUTPUT_DIRECTORY|EXCLUDE_FROM_DEFAULT_BUILD|IMPORTED_(?:IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_LANGUAGES|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|NO_SONAME|OBJECTS|SONAME)|INTERPROCEDURAL_OPTIMIZATION|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINK_FLAGS|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|MAP_IMPORTED_CONFIG|OSX_ARCHITECTURES|OUTPUT_NAME|PDB_NAME|PDB_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|STATIC_LIBRARY_FLAGS|VS_CSHARP|VS_DOTNET_REFERENCEPROP|VS_DOTNET_REFERENCE|VS_GLOBAL_SECTION_POST|VS_GLOBAL_SECTION_PRE|VS_GLOBAL|XCODE_ATTRIBUTE)_\\w+|\\w+_(?:CLANG_TIDY|COMPILER_LAUNCHER|CPPCHECK|CPPLINT|INCLUDE_WHAT_YOU_USE|OUTPUT_NAME|POSTFIX|VISIBILITY_PRESET)|ABSTRACT|ADDITIONAL_MAKE_CLEAN_FILES|ADVANCED|ALIASED_TARGET|ALLOW_DUPLICATE_CUSTOM_TARGETS|ANDROID_(?:ANT_ADDITIONAL_OPTIONS|API|API_MIN|ARCH|ASSETS_DIRECTORIES|GUI|JAR_DEPENDENCIES|NATIVE_LIB_DEPENDENCIES|NATIVE_LIB_DIRECTORIES|PROCESS_MAX|PROGUARD|PROGUARD_CONFIG_PATH|SECURE_PROPS_PATH|SKIP_ANT_STEP|STL_TYPE)|ARCHIVE_OUTPUT_DIRECTORY|ARCHIVE_OUTPUT_NAME|ATTACHED_FILES|ATTACHED_FILES_ON_FAIL|AUTOGEN_(?:BUILD_DIR|ORIGIN_DEPENDS|PARALLEL|SOURCE_GROUP|TARGETS_FOLDER|TARGET_DEPENDS)|AUTOMOC|AUTOMOC_(?:COMPILER_PREDEFINES|DEPEND_FILTERS|EXECUTABLE|MACRO_NAMES|MOC_OPTIONS|SOURCE_GROUP|TARGETS_FOLDER)|AUTORCC|AUTORCC_EXECUTABLE|AUTORCC_OPTIONS|AUTORCC_SOURCE_GROUP|AUTOUIC|AUTOUIC_EXECUTABLE|AUTOUIC_OPTIONS|AUTOUIC_SEARCH_PATHS|BINARY_DIR|BUILDSYSTEM_TARGETS|BUILD_RPATH|BUILD_RPATH_USE_ORIGIN|BUILD_WITH_INSTALL_NAME_DIR|BUILD_WITH_INSTALL_RPATH|BUNDLE|BUNDLE_EXTENSION|CACHE_VARIABLES|CLEAN_NO_CUSTOM|COMMON_LANGUAGE_RUNTIME|COMPATIBLE_INTERFACE_(?:BOOL|NUMBER_MAX|NUMBER_MIN|STRING)|COMPILE_(?:DEFINITIONS|FEATURES|FLAGS|OPTIONS|PDB_NAME|PDB_OUTPUT_DIRECTORY)|COST|CPACK_DESKTOP_SHORTCUTS|CPACK_NEVER_OVERWRITE|CPACK_PERMANENT|CPACK_STARTUP_SHORTCUTS|CPACK_START_MENU_SHORTCUTS|CPACK_WIX_ACL|CROSSCOMPILING_EMULATOR|CUDA_EXTENSIONS|CUDA_PTX_COMPILATION|CUDA_RESOLVE_DEVICE_SYMBOLS|CUDA_SEPARABLE_COMPILATION|CUDA_STANDARD|CUDA_STANDARD_REQUIRED|CXX_EXTENSIONS|CXX_STANDARD|CXX_STANDARD_REQUIRED|C_EXTENSIONS|C_STANDARD|C_STANDARD_REQUIRED|DEBUG_CONFIGURATIONS|DEBUG_POSTFIX|DEFINE_SYMBOL|DEFINITIONS|DEPENDS|DEPLOYMENT_ADDITIONAL_FILES|DEPLOYMENT_REMOTE_DIRECTORY|DISABLED|DISABLED_FEATURES|ECLIPSE_EXTRA_CPROJECT_CONTENTS|ECLIPSE_EXTRA_NATURES|ENABLED_FEATURES|ENABLED_LANGUAGES|ENABLE_EXPORTS|ENVIRONMENT|EXCLUDE_FROM_ALL|EXCLUDE_FROM_DEFAULT_BUILD|EXPORT_NAME|EXPORT_PROPERTIES|EXTERNAL_OBJECT|EchoString|FAIL_REGULAR_EXPRESSION|FIND_LIBRARY_USE_LIB32_PATHS|FIND_LIBRARY_USE_LIB64_PATHS|FIND_LIBRARY_USE_LIBX32_PATHS|FIND_LIBRARY_USE_OPENBSD_VERSIONING|FIXTURES_CLEANUP|FIXTURES_REQUIRED|FIXTURES_SETUP|FOLDER|FRAMEWORK|Fortran_FORMAT|Fortran_MODULE_DIRECTORY|GENERATED|GENERATOR_FILE_NAME|GENERATOR_IS_MULTI_CONFIG|GHS_INTEGRITY_APP|GHS_NO_SOURCE_GROUP_FILE|GLOBAL_DEPENDS_DEBUG_MODE|GLOBAL_DEPENDS_NO_CYCLES|GNUtoMS|HAS_CXX|HEADER_FILE_ONLY|HELPSTRING|IMPLICIT_DEPENDS_INCLUDE_TRANSFORM|IMPORTED|IMPORTED_(?:COMMON_LANGUAGE_RUNTIME|CONFIGURATIONS|GLOBAL|IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_(?:LANGUAGES|LIBRARIES|MULTIPLICITY)|LOCATION|NO_SONAME|OBJECTS|SONAME)|IMPORT_PREFIX|IMPORT_SUFFIX|INCLUDE_DIRECTORIES|INCLUDE_REGULAR_EXPRESSION|INSTALL_NAME_DIR|INSTALL_RPATH|INSTALL_RPATH_USE_LINK_PATH|INTERFACE_(?:AUTOUIC_OPTIONS|COMPILE_DEFINITIONS|COMPILE_FEATURES|COMPILE_OPTIONS|INCLUDE_DIRECTORIES|LINK_DEPENDS|LINK_DIRECTORIES|LINK_LIBRARIES|LINK_OPTIONS|POSITION_INDEPENDENT_CODE|SOURCES|SYSTEM_INCLUDE_DIRECTORIES)|INTERPROCEDURAL_OPTIMIZATION|IN_TRY_COMPILE|IOS_INSTALL_COMBINED|JOB_POOLS|JOB_POOL_COMPILE|JOB_POOL_LINK|KEEP_EXTENSION|LABELS|LANGUAGE|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINKER_LANGUAGE|LINK_(?:DEPENDS|DEPENDS_NO_SHARED|DIRECTORIES|FLAGS|INTERFACE_LIBRARIES|INTERFACE_MULTIPLICITY|LIBRARIES|OPTIONS|SEARCH_END_STATIC|SEARCH_START_STATIC|WHAT_YOU_USE)|LISTFILE_STACK|LOCATION|MACOSX_BUNDLE|MACOSX_BUNDLE_INFO_PLIST|MACOSX_FRAMEWORK_INFO_PLIST|MACOSX_PACKAGE_LOCATION|MACOSX_RPATH|MACROS|MANUALLY_ADDED_DEPENDENCIES|MEASUREMENT|MODIFIED|NAME|NO_SONAME|NO_SYSTEM_FROM_IMPORTED|OBJECT_DEPENDS|OBJECT_OUTPUTS|OSX_ARCHITECTURES|OUTPUT_NAME|PACKAGES_FOUND|PACKAGES_NOT_FOUND|PARENT_DIRECTORY|PASS_REGULAR_EXPRESSION|PDB_NAME|PDB_OUTPUT_DIRECTORY|POSITION_INDEPENDENT_CODE|POST_INSTALL_SCRIPT|PREDEFINED_TARGETS_FOLDER|PREFIX|PRE_INSTALL_SCRIPT|PRIVATE_HEADER|PROCESSORS|PROCESSOR_AFFINITY|PROJECT_LABEL|PUBLIC_HEADER|REPORT_UNDEFINED_PROPERTIES|REQUIRED_FILES|RESOURCE|RESOURCE_LOCK|RULE_LAUNCH_COMPILE|RULE_LAUNCH_CUSTOM|RULE_LAUNCH_LINK|RULE_MESSAGES|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|RUN_SERIAL|SKIP_AUTOGEN|SKIP_AUTOMOC|SKIP_AUTORCC|SKIP_AUTOUIC|SKIP_BUILD_RPATH|SKIP_RETURN_CODE|SOURCES|SOURCE_DIR|SOVERSION|STATIC_LIBRARY_FLAGS|STATIC_LIBRARY_OPTIONS|STRINGS|SUBDIRECTORIES|SUFFIX|SYMBOLIC|TARGET_ARCHIVES_MAY_BE_SHARED_LIBS|TARGET_MESSAGES|TARGET_SUPPORTS_SHARED_LIBS|TESTS|TEST_INCLUDE_FILE|TEST_INCLUDE_FILES|TIMEOUT|TIMEOUT_AFTER_MATCH|TYPE|USE_FOLDERS|VALUE|VARIABLES|VERSION|VISIBILITY_INLINES_HIDDEN|VS_(?:CONFIGURATION_TYPE|COPY_TO_OUT_DIR|DEBUGGER_(?:COMMAND|COMMAND_ARGUMENTS|ENVIRONMENT|WORKING_DIRECTORY)|DEPLOYMENT_CONTENT|DEPLOYMENT_LOCATION|DOTNET_REFERENCES|DOTNET_REFERENCES_COPY_LOCAL|GLOBAL_KEYWORD|GLOBAL_PROJECT_TYPES|GLOBAL_ROOTNAMESPACE|INCLUDE_IN_VSIX|IOT_STARTUP_TASK|KEYWORD|RESOURCE_GENERATOR|SCC_AUXPATH|SCC_LOCALPATH|SCC_PROJECTNAME|SCC_PROVIDER|SDK_REFERENCES|SHADER_(?:DISABLE_OPTIMIZATIONS|ENABLE_DEBUG|ENTRYPOINT|FLAGS|MODEL|OBJECT_FILE_NAME|OUTPUT_HEADER_FILE|TYPE|VARIABLE_NAME)|STARTUP_PROJECT|TOOL_OVERRIDE|USER_PROPS|WINRT_COMPONENT|WINRT_EXTENSIONS|WINRT_REFERENCES|XAML_TYPE)|WILL_FAIL|WIN32_EXECUTABLE|WINDOWS_EXPORT_ALL_SYMBOLS|WORKING_DIRECTORY|WRAP_EXCLUDE|XCODE_(?:EMIT_EFFECTIVE_PLATFORM_NAME|EXPLICIT_FILE_TYPE|FILE_ATTRIBUTES|LAST_KNOWN_FILE_TYPE|PRODUCT_TYPE|SCHEME_(?:ADDRESS_SANITIZER|ADDRESS_SANITIZER_USE_AFTER_RETURN|ARGUMENTS|DISABLE_MAIN_THREAD_CHECKER|DYNAMIC_LIBRARY_LOADS|DYNAMIC_LINKER_API_USAGE|ENVIRONMENT|EXECUTABLE|GUARD_MALLOC|MAIN_THREAD_CHECKER_STOP|MALLOC_GUARD_EDGES|MALLOC_SCRIBBLE|MALLOC_STACK|THREAD_SANITIZER(?:_STOP)?|UNDEFINED_BEHAVIOUR_SANITIZER(?:_STOP)?|ZOMBIE_OBJECTS))|XCTEST)\\b/,\n\t'keyword': /\\b(?:add_compile_definitions|add_compile_options|add_custom_command|add_custom_target|add_definitions|add_dependencies|add_executable|add_library|add_link_options|add_subdirectory|add_test|aux_source_directory|break|build_command|build_name|cmake_host_system_information|cmake_minimum_required|cmake_parse_arguments|cmake_policy|configure_file|continue|create_test_sourcelist|ctest_build|ctest_configure|ctest_coverage|ctest_empty_binary_directory|ctest_memcheck|ctest_read_custom_files|ctest_run_script|ctest_sleep|ctest_start|ctest_submit|ctest_test|ctest_update|ctest_upload|define_property|else|elseif|enable_language|enable_testing|endforeach|endfunction|endif|endmacro|endwhile|exec_program|execute_process|export|export_library_dependencies|file|find_file|find_library|find_package|find_path|find_program|fltk_wrap_ui|foreach|function|get_cmake_property|get_directory_property|get_filename_component|get_property|get_source_file_property|get_target_property|get_test_property|if|include|include_directories|include_external_msproject|include_guard|include_regular_expression|install|install_files|install_programs|install_targets|link_directories|link_libraries|list|load_cache|load_command|macro|make_directory|mark_as_advanced|math|message|option|output_required_files|project|qt_wrap_cpp|qt_wrap_ui|remove|remove_definitions|return|separate_arguments|set|set_directory_properties|set_property|set_source_files_properties|set_target_properties|set_tests_properties|site_name|source_group|string|subdir_depends|subdirs|target_compile_definitions|target_compile_features|target_compile_options|target_include_directories|target_link_directories|target_link_libraries|target_link_options|target_sources|try_compile|try_run|unset|use_mangled_mesa|utility_source|variable_requires|variable_watch|while|write_file)(?=\\s*\\()\\b/,\n\t'boolean': /\\b(?:ON|OFF|TRUE|FALSE)\\b/,\n\t'namespace': /\\b(?:PROPERTIES|SHARED|PRIVATE|STATIC|PUBLIC|INTERFACE|TARGET_OBJECTS)\\b/,\n\t'operator': /\\b(?:NOT|AND|OR|MATCHES|LESS|GREATER|EQUAL|STRLESS|STRGREATER|STREQUAL|VERSION_LESS|VERSION_EQUAL|VERSION_GREATER|DEFINED)\\b/,\n\t'inserted': {\n\t\tpattern: /\\b\\w+::\\w+\\b/,\n\t\talias: 'class-name'\n\t},\n\t'number': /\\b\\d+(?:\\.\\d+)*\\b/,\n\t'function': /\\b[a-z_]\\w*(?=\\s*\\()\\b/i,\n\t'punctuation': /[()>}]|\\$[<{]/\n};\n","Prism.languages.cmake={comment:/#.*/,string:{pattern:/\"(?:[^\\\\\"]|\\\\.)*\"/,greedy:!0,inside:{interpolation:{pattern:/\\${(?:[^{}$]|\\${[^{}$]*})*}/,inside:{punctuation:/\\${|}/,variable:/\\w+/}}}},variable:/\\b(?:CMAKE_\\w+|\\w+_(?:VERSION(?:_MAJOR|_MINOR|_PATCH|_TWEAK)?|(?:BINARY|SOURCE)_DIR|DESCRIPTION|HOMEPAGE_URL|ROOT)|(?:CTEST_CUSTOM_(?:MAXIMUM_(?:(?:FAIL|PASS)ED_TEST_OUTPUT_SIZE|NUMBER_OF_(?:ERROR|WARNING)S)|ERROR_(?:P(?:OST|RE)_CONTEXT|EXCEPTION|MATCH)|P(?:OST|RE)_MEMCHECK|WARNING_(?:EXCEPTION|MATCH)|(?:MEMCHECK|TESTS)_IGNORE|P(?:OST|RE)_TEST|COVERAGE_EXCLUDE)|ANDROID|APPLE|BORLAND|BUILD_SHARED_LIBS|CACHE|CPACK_(?:ABSOLUTE_DESTINATION_FILES|COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY|ERROR_ON_ABSOLUTE_INSTALL_DESTINATION|INCLUDE_TOPLEVEL_DIRECTORY|INSTALL_DEFAULT_DIRECTORY_PERMISSIONS|INSTALL_SCRIPT|PACKAGING_INSTALL_PREFIX|SET_DESTDIR|WARN_ON_ABSOLUTE_INSTALL_DESTINATION)|CTEST_(?:BINARY_DIRECTORY|BUILD_COMMAND|BUILD_NAME|BZR_COMMAND|BZR_UPDATE_OPTIONS|CHANGE_ID|CHECKOUT_COMMAND|CONFIGURATION_TYPE|CONFIGURE_COMMAND|COVERAGE_COMMAND|COVERAGE_EXTRA_FLAGS|CURL_OPTIONS|CUSTOM_(?:COVERAGE_EXCLUDE|ERROR_EXCEPTION|ERROR_MATCH|ERROR_POST_CONTEXT|ERROR_PRE_CONTEXT|MAXIMUM_FAILED_TEST_OUTPUT_SIZE|MAXIMUM_NUMBER_OF_(?:ERRORS|WARNINGS)|MAXIMUM_PASSED_TEST_OUTPUT_SIZE|MEMCHECK_IGNORE|POST_MEMCHECK|POST_TEST|PRE_MEMCHECK|PRE_TEST|TESTS_IGNORE|WARNING_EXCEPTION|WARNING_MATCH)|CVS_CHECKOUT|CVS_COMMAND|CVS_UPDATE_OPTIONS|DROP_LOCATION|DROP_METHOD|DROP_SITE|DROP_SITE_CDASH|DROP_SITE_PASSWORD|DROP_SITE_USER|EXTRA_COVERAGE_GLOB|GIT_COMMAND|GIT_INIT_SUBMODULES|GIT_UPDATE_CUSTOM|GIT_UPDATE_OPTIONS|HG_COMMAND|HG_UPDATE_OPTIONS|LABELS_FOR_SUBPROJECTS|MEMORYCHECK_(?:COMMAND|COMMAND_OPTIONS|SANITIZER_OPTIONS|SUPPRESSIONS_FILE|TYPE)|NIGHTLY_START_TIME|P4_CLIENT|P4_COMMAND|P4_OPTIONS|P4_UPDATE_OPTIONS|RUN_CURRENT_SCRIPT|SCP_COMMAND|SITE|SOURCE_DIRECTORY|SUBMIT_URL|SVN_COMMAND|SVN_OPTIONS|SVN_UPDATE_OPTIONS|TEST_LOAD|TEST_TIMEOUT|TRIGGER_SITE|UPDATE_COMMAND|UPDATE_OPTIONS|UPDATE_VERSION_ONLY|USE_LAUNCHERS)|CYGWIN|ENV|EXECUTABLE_OUTPUT_PATH|GHS-MULTI|IOS|LIBRARY_OUTPUT_PATH|MINGW|MSVC(?:10|11|12|14|60|70|71|80|90|_IDE|_TOOLSET_VERSION|_VERSION)?|MSYS|PROJECT_(?:BINARY_DIR|DESCRIPTION|HOMEPAGE_URL|NAME|SOURCE_DIR|VERSION|VERSION_(?:MAJOR|MINOR|PATCH|TWEAK))|UNIX|WIN32|WINCE|WINDOWS_PHONE|WINDOWS_STORE|XCODE|XCODE_VERSION))\\b/,property:/\\b(?:cxx_\\w+|(?:ARCHIVE_OUTPUT_(?:DIRECTORY|NAME)|COMPILE_DEFINITIONS|COMPILE_PDB_NAME|COMPILE_PDB_OUTPUT_DIRECTORY|EXCLUDE_FROM_DEFAULT_BUILD|IMPORTED_(?:IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_LANGUAGES|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|NO_SONAME|OBJECTS|SONAME)|INTERPROCEDURAL_OPTIMIZATION|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINK_FLAGS|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|MAP_IMPORTED_CONFIG|OSX_ARCHITECTURES|OUTPUT_NAME|PDB_NAME|PDB_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|STATIC_LIBRARY_FLAGS|VS_CSHARP|VS_DOTNET_REFERENCEPROP|VS_DOTNET_REFERENCE|VS_GLOBAL_SECTION_POST|VS_GLOBAL_SECTION_PRE|VS_GLOBAL|XCODE_ATTRIBUTE)_\\w+|\\w+_(?:CLANG_TIDY|COMPILER_LAUNCHER|CPPCHECK|CPPLINT|INCLUDE_WHAT_YOU_USE|OUTPUT_NAME|POSTFIX|VISIBILITY_PRESET)|ABSTRACT|ADDITIONAL_MAKE_CLEAN_FILES|ADVANCED|ALIASED_TARGET|ALLOW_DUPLICATE_CUSTOM_TARGETS|ANDROID_(?:ANT_ADDITIONAL_OPTIONS|API|API_MIN|ARCH|ASSETS_DIRECTORIES|GUI|JAR_DEPENDENCIES|NATIVE_LIB_DEPENDENCIES|NATIVE_LIB_DIRECTORIES|PROCESS_MAX|PROGUARD|PROGUARD_CONFIG_PATH|SECURE_PROPS_PATH|SKIP_ANT_STEP|STL_TYPE)|ARCHIVE_OUTPUT_DIRECTORY|ARCHIVE_OUTPUT_NAME|ATTACHED_FILES|ATTACHED_FILES_ON_FAIL|AUTOGEN_(?:BUILD_DIR|ORIGIN_DEPENDS|PARALLEL|SOURCE_GROUP|TARGETS_FOLDER|TARGET_DEPENDS)|AUTOMOC|AUTOMOC_(?:COMPILER_PREDEFINES|DEPEND_FILTERS|EXECUTABLE|MACRO_NAMES|MOC_OPTIONS|SOURCE_GROUP|TARGETS_FOLDER)|AUTORCC|AUTORCC_EXECUTABLE|AUTORCC_OPTIONS|AUTORCC_SOURCE_GROUP|AUTOUIC|AUTOUIC_EXECUTABLE|AUTOUIC_OPTIONS|AUTOUIC_SEARCH_PATHS|BINARY_DIR|BUILDSYSTEM_TARGETS|BUILD_RPATH|BUILD_RPATH_USE_ORIGIN|BUILD_WITH_INSTALL_NAME_DIR|BUILD_WITH_INSTALL_RPATH|BUNDLE|BUNDLE_EXTENSION|CACHE_VARIABLES|CLEAN_NO_CUSTOM|COMMON_LANGUAGE_RUNTIME|COMPATIBLE_INTERFACE_(?:BOOL|NUMBER_MAX|NUMBER_MIN|STRING)|COMPILE_(?:DEFINITIONS|FEATURES|FLAGS|OPTIONS|PDB_NAME|PDB_OUTPUT_DIRECTORY)|COST|CPACK_DESKTOP_SHORTCUTS|CPACK_NEVER_OVERWRITE|CPACK_PERMANENT|CPACK_STARTUP_SHORTCUTS|CPACK_START_MENU_SHORTCUTS|CPACK_WIX_ACL|CROSSCOMPILING_EMULATOR|CUDA_EXTENSIONS|CUDA_PTX_COMPILATION|CUDA_RESOLVE_DEVICE_SYMBOLS|CUDA_SEPARABLE_COMPILATION|CUDA_STANDARD|CUDA_STANDARD_REQUIRED|CXX_EXTENSIONS|CXX_STANDARD|CXX_STANDARD_REQUIRED|C_EXTENSIONS|C_STANDARD|C_STANDARD_REQUIRED|DEBUG_CONFIGURATIONS|DEBUG_POSTFIX|DEFINE_SYMBOL|DEFINITIONS|DEPENDS|DEPLOYMENT_ADDITIONAL_FILES|DEPLOYMENT_REMOTE_DIRECTORY|DISABLED|DISABLED_FEATURES|ECLIPSE_EXTRA_CPROJECT_CONTENTS|ECLIPSE_EXTRA_NATURES|ENABLED_FEATURES|ENABLED_LANGUAGES|ENABLE_EXPORTS|ENVIRONMENT|EXCLUDE_FROM_ALL|EXCLUDE_FROM_DEFAULT_BUILD|EXPORT_NAME|EXPORT_PROPERTIES|EXTERNAL_OBJECT|EchoString|FAIL_REGULAR_EXPRESSION|FIND_LIBRARY_USE_LIB32_PATHS|FIND_LIBRARY_USE_LIB64_PATHS|FIND_LIBRARY_USE_LIBX32_PATHS|FIND_LIBRARY_USE_OPENBSD_VERSIONING|FIXTURES_CLEANUP|FIXTURES_REQUIRED|FIXTURES_SETUP|FOLDER|FRAMEWORK|Fortran_FORMAT|Fortran_MODULE_DIRECTORY|GENERATED|GENERATOR_FILE_NAME|GENERATOR_IS_MULTI_CONFIG|GHS_INTEGRITY_APP|GHS_NO_SOURCE_GROUP_FILE|GLOBAL_DEPENDS_DEBUG_MODE|GLOBAL_DEPENDS_NO_CYCLES|GNUtoMS|HAS_CXX|HEADER_FILE_ONLY|HELPSTRING|IMPLICIT_DEPENDS_INCLUDE_TRANSFORM|IMPORTED|IMPORTED_(?:COMMON_LANGUAGE_RUNTIME|CONFIGURATIONS|GLOBAL|IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_(?:LANGUAGES|LIBRARIES|MULTIPLICITY)|LOCATION|NO_SONAME|OBJECTS|SONAME)|IMPORT_PREFIX|IMPORT_SUFFIX|INCLUDE_DIRECTORIES|INCLUDE_REGULAR_EXPRESSION|INSTALL_NAME_DIR|INSTALL_RPATH|INSTALL_RPATH_USE_LINK_PATH|INTERFACE_(?:AUTOUIC_OPTIONS|COMPILE_DEFINITIONS|COMPILE_FEATURES|COMPILE_OPTIONS|INCLUDE_DIRECTORIES|LINK_DEPENDS|LINK_DIRECTORIES|LINK_LIBRARIES|LINK_OPTIONS|POSITION_INDEPENDENT_CODE|SOURCES|SYSTEM_INCLUDE_DIRECTORIES)|INTERPROCEDURAL_OPTIMIZATION|IN_TRY_COMPILE|IOS_INSTALL_COMBINED|JOB_POOLS|JOB_POOL_COMPILE|JOB_POOL_LINK|KEEP_EXTENSION|LABELS|LANGUAGE|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINKER_LANGUAGE|LINK_(?:DEPENDS|DEPENDS_NO_SHARED|DIRECTORIES|FLAGS|INTERFACE_LIBRARIES|INTERFACE_MULTIPLICITY|LIBRARIES|OPTIONS|SEARCH_END_STATIC|SEARCH_START_STATIC|WHAT_YOU_USE)|LISTFILE_STACK|LOCATION|MACOSX_BUNDLE|MACOSX_BUNDLE_INFO_PLIST|MACOSX_FRAMEWORK_INFO_PLIST|MACOSX_PACKAGE_LOCATION|MACOSX_RPATH|MACROS|MANUALLY_ADDED_DEPENDENCIES|MEASUREMENT|MODIFIED|NAME|NO_SONAME|NO_SYSTEM_FROM_IMPORTED|OBJECT_DEPENDS|OBJECT_OUTPUTS|OSX_ARCHITECTURES|OUTPUT_NAME|PACKAGES_FOUND|PACKAGES_NOT_FOUND|PARENT_DIRECTORY|PASS_REGULAR_EXPRESSION|PDB_NAME|PDB_OUTPUT_DIRECTORY|POSITION_INDEPENDENT_CODE|POST_INSTALL_SCRIPT|PREDEFINED_TARGETS_FOLDER|PREFIX|PRE_INSTALL_SCRIPT|PRIVATE_HEADER|PROCESSORS|PROCESSOR_AFFINITY|PROJECT_LABEL|PUBLIC_HEADER|REPORT_UNDEFINED_PROPERTIES|REQUIRED_FILES|RESOURCE|RESOURCE_LOCK|RULE_LAUNCH_COMPILE|RULE_LAUNCH_CUSTOM|RULE_LAUNCH_LINK|RULE_MESSAGES|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|RUN_SERIAL|SKIP_AUTOGEN|SKIP_AUTOMOC|SKIP_AUTORCC|SKIP_AUTOUIC|SKIP_BUILD_RPATH|SKIP_RETURN_CODE|SOURCES|SOURCE_DIR|SOVERSION|STATIC_LIBRARY_FLAGS|STATIC_LIBRARY_OPTIONS|STRINGS|SUBDIRECTORIES|SUFFIX|SYMBOLIC|TARGET_ARCHIVES_MAY_BE_SHARED_LIBS|TARGET_MESSAGES|TARGET_SUPPORTS_SHARED_LIBS|TESTS|TEST_INCLUDE_FILE|TEST_INCLUDE_FILES|TIMEOUT|TIMEOUT_AFTER_MATCH|TYPE|USE_FOLDERS|VALUE|VARIABLES|VERSION|VISIBILITY_INLINES_HIDDEN|VS_(?:CONFIGURATION_TYPE|COPY_TO_OUT_DIR|DEBUGGER_(?:COMMAND|COMMAND_ARGUMENTS|ENVIRONMENT|WORKING_DIRECTORY)|DEPLOYMENT_CONTENT|DEPLOYMENT_LOCATION|DOTNET_REFERENCES|DOTNET_REFERENCES_COPY_LOCAL|GLOBAL_KEYWORD|GLOBAL_PROJECT_TYPES|GLOBAL_ROOTNAMESPACE|INCLUDE_IN_VSIX|IOT_STARTUP_TASK|KEYWORD|RESOURCE_GENERATOR|SCC_AUXPATH|SCC_LOCALPATH|SCC_PROJECTNAME|SCC_PROVIDER|SDK_REFERENCES|SHADER_(?:DISABLE_OPTIMIZATIONS|ENABLE_DEBUG|ENTRYPOINT|FLAGS|MODEL|OBJECT_FILE_NAME|OUTPUT_HEADER_FILE|TYPE|VARIABLE_NAME)|STARTUP_PROJECT|TOOL_OVERRIDE|USER_PROPS|WINRT_COMPONENT|WINRT_EXTENSIONS|WINRT_REFERENCES|XAML_TYPE)|WILL_FAIL|WIN32_EXECUTABLE|WINDOWS_EXPORT_ALL_SYMBOLS|WORKING_DIRECTORY|WRAP_EXCLUDE|XCODE_(?:EMIT_EFFECTIVE_PLATFORM_NAME|EXPLICIT_FILE_TYPE|FILE_ATTRIBUTES|LAST_KNOWN_FILE_TYPE|PRODUCT_TYPE|SCHEME_(?:ADDRESS_SANITIZER|ADDRESS_SANITIZER_USE_AFTER_RETURN|ARGUMENTS|DISABLE_MAIN_THREAD_CHECKER|DYNAMIC_LIBRARY_LOADS|DYNAMIC_LINKER_API_USAGE|ENVIRONMENT|EXECUTABLE|GUARD_MALLOC|MAIN_THREAD_CHECKER_STOP|MALLOC_GUARD_EDGES|MALLOC_SCRIBBLE|MALLOC_STACK|THREAD_SANITIZER(?:_STOP)?|UNDEFINED_BEHAVIOUR_SANITIZER(?:_STOP)?|ZOMBIE_OBJECTS))|XCTEST)\\b/,keyword:/\\b(?:add_compile_definitions|add_compile_options|add_custom_command|add_custom_target|add_definitions|add_dependencies|add_executable|add_library|add_link_options|add_subdirectory|add_test|aux_source_directory|break|build_command|build_name|cmake_host_system_information|cmake_minimum_required|cmake_parse_arguments|cmake_policy|configure_file|continue|create_test_sourcelist|ctest_build|ctest_configure|ctest_coverage|ctest_empty_binary_directory|ctest_memcheck|ctest_read_custom_files|ctest_run_script|ctest_sleep|ctest_start|ctest_submit|ctest_test|ctest_update|ctest_upload|define_property|else|elseif|enable_language|enable_testing|endforeach|endfunction|endif|endmacro|endwhile|exec_program|execute_process|export|export_library_dependencies|file|find_file|find_library|find_package|find_path|find_program|fltk_wrap_ui|foreach|function|get_cmake_property|get_directory_property|get_filename_component|get_property|get_source_file_property|get_target_property|get_test_property|if|include|include_directories|include_external_msproject|include_guard|include_regular_expression|install|install_files|install_programs|install_targets|link_directories|link_libraries|list|load_cache|load_command|macro|make_directory|mark_as_advanced|math|message|option|output_required_files|project|qt_wrap_cpp|qt_wrap_ui|remove|remove_definitions|return|separate_arguments|set|set_directory_properties|set_property|set_source_files_properties|set_target_properties|set_tests_properties|site_name|source_group|string|subdir_depends|subdirs|target_compile_definitions|target_compile_features|target_compile_options|target_include_directories|target_link_directories|target_link_libraries|target_link_options|target_sources|try_compile|try_run|unset|use_mangled_mesa|utility_source|variable_requires|variable_watch|while|write_file)(?=\\s*\\()\\b/,boolean:/\\b(?:ON|OFF|TRUE|FALSE)\\b/,namespace:/\\b(?:PROPERTIES|SHARED|PRIVATE|STATIC|PUBLIC|INTERFACE|TARGET_OBJECTS)\\b/,operator:/\\b(?:NOT|AND|OR|MATCHES|LESS|GREATER|EQUAL|STRLESS|STRGREATER|STREQUAL|VERSION_LESS|VERSION_EQUAL|VERSION_GREATER|DEFINED)\\b/,inserted:{pattern:/\\b\\w+::\\w+\\b/,alias:\"class-name\"},number:/\\b\\d+(?:\\.\\d+)*\\b/,function:/\\b[a-z_]\\w*(?=\\s*\\()\\b/i,punctuation:/[()>}]|\\$[<{]/};","(function(Prism) {\n\n// Ignore comments starting with { to privilege string interpolation highlighting\nvar comment = /#(?!\\{).+/,\n    interpolation = {\n    \tpattern: /#\\{[^}]+\\}/,\n    \talias: 'variable'\n    };\n\nPrism.languages.coffeescript = Prism.languages.extend('javascript', {\n\t'comment': comment,\n\t'string': [\n\n\t\t// Strings are multiline\n\t\t{\n\t\t\tpattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t{\n\t\t\t// Strings are multiline\n\t\t\tpattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'interpolation': interpolation\n\t\t\t}\n\t\t}\n\t],\n\t'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n\t'class-member': {\n\t\tpattern: /@(?!\\d)\\w+/,\n\t\talias: 'variable'\n\t}\n});\n\nPrism.languages.insertBefore('coffeescript', 'comment', {\n\t'multiline-comment': {\n\t\tpattern: /###[\\s\\S]+?###/,\n\t\talias: 'comment'\n\t},\n\n\t// Block regexp can contain comments and interpolation\n\t'block-regex': {\n\t\tpattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n\t\talias: 'regex',\n\t\tinside: {\n\t\t\t'comment': comment,\n\t\t\t'interpolation': interpolation\n\t\t}\n\t}\n});\n\nPrism.languages.insertBefore('coffeescript', 'string', {\n\t'inline-javascript': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n\t\tinside: {\n\t\t\t'delimiter': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'punctuation'\n\t\t\t},\n\t\t\trest: Prism.languages.javascript\n\t\t}\n\t},\n\n\t// Block strings\n\t'multiline-string': [\n\t\t{\n\t\t\tpattern: /'''[\\s\\S]*?'''/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string'\n\t\t},\n\t\t{\n\t\t\tpattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\tinterpolation: interpolation\n\t\t\t}\n\t\t}\n\t]\n\n});\n\nPrism.languages.insertBefore('coffeescript', 'keyword', {\n\t// Object property\n\t'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n});\n\ndelete Prism.languages.coffeescript['template-string'];\n\nPrism.languages.coffee = Prism.languages.coffeescript;\n}(Prism));","!function(e){var t=/#(?!\\{).+/,n={pattern:/#\\{[^}]+\\}/,alias:\"variable\"};e.languages.coffeescript=e.languages.extend(\"javascript\",{comment:t,string:[{pattern:/'(?:\\\\[\\s\\S]|[^\\\\'])*'/,greedy:!0},{pattern:/\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,greedy:!0,inside:{interpolation:n}}],keyword:/\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\"class-member\":{pattern:/@(?!\\d)\\w+/,alias:\"variable\"}}),e.languages.insertBefore(\"coffeescript\",\"comment\",{\"multiline-comment\":{pattern:/###[\\s\\S]+?###/,alias:\"comment\"},\"block-regex\":{pattern:/\\/{3}[\\s\\S]*?\\/{3}/,alias:\"regex\",inside:{comment:t,interpolation:n}}}),e.languages.insertBefore(\"coffeescript\",\"string\",{\"inline-javascript\":{pattern:/`(?:\\\\[\\s\\S]|[^\\\\`])*`/,inside:{delimiter:{pattern:/^`|`$/,alias:\"punctuation\"},rest:e.languages.javascript}},\"multiline-string\":[{pattern:/'''[\\s\\S]*?'''/,greedy:!0,alias:\"string\"},{pattern:/\"\"\"[\\s\\S]*?\"\"\"/,greedy:!0,alias:\"string\",inside:{interpolation:n}}]}),e.languages.insertBefore(\"coffeescript\",\"keyword\",{property:/(?!\\d)\\w+(?=\\s*:(?!:))/}),delete e.languages.coffeescript[\"template-string\"],e.languages.coffee=e.languages.coffeescript}(Prism);","var _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\nvar Prism = (function (_self){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\nvar uniqueId = 0;\n\nvar _ = {\n\tmanual: _self.Prism && _self.Prism.manual,\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\tutil: {\n\t\tencode: function (tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\treturn tokens.map(_.util.encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t},\n\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t// Deep clone a language definition (e.g. to extend it)\n\t\tclone: function deepClone(o, visited) {\n\t\t\tvar clone, id, type = _.util.type(o);\n\t\t\tvisited = visited || {};\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = {};\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = [];\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\to.forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn o;\n\t\t\t}\n\t\t}\n\t},\n\n\tlanguages: {\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Insert a token before another token in a language literal\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t\t * we cannot just provide an object, we need an object and a key.\n\t\t * @param inside The key (or language id) of the parent\n\t\t * @param before The key to insert before.\n\t\t * @param insert Object with the key/value pairs to insert\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || _.languages;\n\t\t\tvar grammar = root[inside];\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar old = root[inside];\n\t\t\troot[inside] = ret;\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar objId = _.util.objId;\n\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tvar property = o[i],\n\t\t\t\t\t    propertyType = _.util.type(property);\n\n\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tplugins: {},\n\n\thighlightAll: function(async, callback) {\n\t\t_.highlightAllUnder(document, async, callback);\n\t},\n\n\thighlightAllUnder: function(container, async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run(\"before-highlightall\", env);\n\n\t\tvar elements = env.elements || container.querySelectorAll(env.selector);\n\n\t\tfor (var i=0, element; element = elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language, grammar, parent = element;\n\n\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\tif (parent) {\n\t\t\tlanguage = (parent.className.match(lang) || [,''])[1].toLowerCase();\n\t\t\tgrammar = _.languages[language];\n\t\t}\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\tif (element.parentNode) {\n\t\t\t// Set language on the parent, for styling\n\t\t\tparent = element.parentNode;\n\n\t\t\tif (/pre/i.test(parent.nodeName)) {\n\t\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t\t}\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\tvar insertHighlightedCode = function (highlightedCode) {\n\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t}\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code) {\n\t\t\t_.hooks.run('complete', env);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (!env.grammar) {\n\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\treturn;\n\t\t}\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t}\n\t},\n\n\thighlight: function (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\t_.hooks.run('before-tokenize', env);\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t_.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t},\n\n\tmatchGrammar: function (text, strarr, grammar, index, startPos, oneshot, target) {\n\t\tfor (var token in grammar) {\n\t\t\tif(!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (token == target) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tvar pattern = patterns[j],\n\t\t\t\t\tinside = pattern.inside,\n\t\t\t\t\tlookbehind = !!pattern.lookbehind,\n\t\t\t\t\tgreedy = !!pattern.greedy,\n\t\t\t\t\tlookbehindLength = 0,\n\t\t\t\t\talias = pattern.alias;\n\n\t\t\t\tif (greedy && !pattern.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n\t\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n\t\t\t\t}\n\n\t\t\t\tpattern = pattern.pattern || pattern;\n\n\t\t\t\t// Don’t cache length as it changes during the loop\n\t\t\t\tfor (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n\n\t\t\t\t\tvar str = strarr[i];\n\n\t\t\t\t\tif (strarr.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (greedy && i != strarr.length - 1) {\n\t\t\t\t\t\tpattern.lastIndex = pos;\n\t\t\t\t\t\tvar match = pattern.exec(text);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index + (lookbehind ? match[1].length : 0),\n\t\t\t\t\t\t    to = match.index + match[0].length,\n\t\t\t\t\t\t    k = i,\n\t\t\t\t\t\t    p = pos;\n\n\t\t\t\t\t\tfor (var len = strarr.length; k < len && (p < to || (!strarr[k].type && !strarr[k - 1].greedy)); ++k) {\n\t\t\t\t\t\t\tp += strarr[k].length;\n\t\t\t\t\t\t\t// Move the index i to the element in strarr that is closest to from\n\t\t\t\t\t\t\tif (from >= p) {\n\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\tpos = p;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (strarr[i] instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Number of tokens to delete and replace with the new match\n\t\t\t\t\t\tdelNum = k - i;\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpattern.lastIndex = 0;\n\n\t\t\t\t\t\tvar match = pattern.exec(str),\n\t\t\t\t\t\t\tdelNum = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tif (oneshot) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(lookbehind) {\n\t\t\t\t\t\tlookbehindLength = match[1] ? match[1].length : 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\t    match = match[0].slice(lookbehindLength),\n\t\t\t\t\t    to = from + match.length,\n\t\t\t\t\t    before = str.slice(0, from),\n\t\t\t\t\t    after = str.slice(to);\n\n\t\t\t\t\tvar args = [i, delNum];\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\t++i;\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t\targs.push(before);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);\n\n\t\t\t\t\targs.push(wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\targs.push(after);\n\t\t\t\t\t}\n\n\t\t\t\t\tArray.prototype.splice.apply(strarr, args);\n\n\t\t\t\t\tif (delNum != 1)\n\t\t\t\t\t\t_.matchGrammar(text, strarr, grammar, i, pos, true, token);\n\n\t\t\t\t\tif (oneshot)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\ttokenize: function(text, grammar) {\n\t\tvar strarr = [text];\n\n\t\tvar rest = grammar.rest;\n\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\t_.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n\t\treturn strarr;\n\t},\n\n\thooks: {\n\t\tall: {},\n\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t},\n\n\tToken: Token\n};\n\n_self.Prism = _;\n\nfunction Token(type, content, alias, matchedStr, greedy) {\n\tthis.type = type;\n\tthis.content = content;\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || \"\").length|0;\n\tthis.greedy = !!greedy;\n}\n\nToken.stringify = function(o, language, parent) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\n\tif (Array.isArray(o)) {\n\t\treturn o.map(function(element) {\n\t\t\treturn Token.stringify(element, language, o);\n\t\t}).join('');\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: Token.stringify(o.content, language, parent),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language,\n\t\tparent: parent\n\t};\n\n\tif (o.alias) {\n\t\tvar aliases = Array.isArray(o.alias) ? o.alias : [o.alias];\n\t\tArray.prototype.push.apply(env.classes, aliases);\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = Object.keys(env.attributes).map(function(name) {\n\t\treturn name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}).join(' ');\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n\n};\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _;\n\t}\n\n\tif (!_.disableWorkerMessageHandler) {\n\t\t// In worker\n\t\t_self.addEventListener('message', function (evt) {\n\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\tlang = message.language,\n\t\t\t\tcode = message.code,\n\t\t\t\timmediateClose = message.immediateClose;\n\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\tif (immediateClose) {\n\t\t\t\t_self.close();\n\t\t\t}\n\t\t}, false);\n\t}\n\n\treturn _;\n}\n\n//Get current script and highlight\nvar script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (!_.manual && !script.hasAttribute('data-manual')) {\n\t\tif(document.readyState !== \"loading\") {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(_.highlightAll);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(_.highlightAll, 16);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdocument.addEventListener('DOMContentLoaded', _.highlightAll);\n\t\t}\n\t}\n}\n\nreturn _;\n\n})(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n","var _self=\"undefined\"!=typeof window?window:\"undefined\"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{},Prism=function(g){var c=/\\blang(?:uage)?-([\\w-]+)\\b/i,a=0,C={manual:g.Prism&&g.Prism.manual,disableWorkerMessageHandler:g.Prism&&g.Prism.disableWorkerMessageHandler,util:{encode:function(e){return e instanceof M?new M(e.type,C.util.encode(e.content),e.alias):Array.isArray(e)?e.map(C.util.encode):e.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/\\u00a0/g,\" \")},type:function(e){return Object.prototype.toString.call(e).slice(8,-1)},objId:function(e){return e.__id||Object.defineProperty(e,\"__id\",{value:++a}),e.__id},clone:function t(e,n){var r,a,i=C.util.type(e);switch(n=n||{},i){case\"Object\":if(a=C.util.objId(e),n[a])return n[a];for(var l in r={},n[a]=r,e)e.hasOwnProperty(l)&&(r[l]=t(e[l],n));return r;case\"Array\":return a=C.util.objId(e),n[a]?n[a]:(r=[],n[a]=r,e.forEach(function(e,a){r[a]=t(e,n)}),r);default:return e}}},languages:{extend:function(e,a){var t=C.util.clone(C.languages[e]);for(var n in a)t[n]=a[n];return t},insertBefore:function(t,e,a,n){var r=(n=n||C.languages)[t],i={};for(var l in r)if(r.hasOwnProperty(l)){if(l==e)for(var o in a)a.hasOwnProperty(o)&&(i[o]=a[o]);a.hasOwnProperty(l)||(i[l]=r[l])}var s=n[t];return n[t]=i,C.languages.DFS(C.languages,function(e,a){a===s&&e!=t&&(this[e]=i)}),i},DFS:function e(a,t,n,r){r=r||{};var i=C.util.objId;for(var l in a)if(a.hasOwnProperty(l)){t.call(a,l,a[l],n||l);var o=a[l],s=C.util.type(o);\"Object\"!==s||r[i(o)]?\"Array\"!==s||r[i(o)]||(r[i(o)]=!0,e(o,t,l,r)):(r[i(o)]=!0,e(o,t,null,r))}}},plugins:{},highlightAll:function(e,a){C.highlightAllUnder(document,e,a)},highlightAllUnder:function(e,a,t){var n={callback:t,selector:'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'};C.hooks.run(\"before-highlightall\",n);for(var r,i=n.elements||e.querySelectorAll(n.selector),l=0;r=i[l++];)C.highlightElement(r,!0===a,n.callback)},highlightElement:function(e,a,t){for(var n,r,i=e;i&&!c.test(i.className);)i=i.parentNode;i&&(n=(i.className.match(c)||[,\"\"])[1].toLowerCase(),r=C.languages[n]),e.className=e.className.replace(c,\"\").replace(/\\s+/g,\" \")+\" language-\"+n,e.parentNode&&(i=e.parentNode,/pre/i.test(i.nodeName)&&(i.className=i.className.replace(c,\"\").replace(/\\s+/g,\" \")+\" language-\"+n));var l={element:e,language:n,grammar:r,code:e.textContent},o=function(e){l.highlightedCode=e,C.hooks.run(\"before-insert\",l),l.element.innerHTML=l.highlightedCode,C.hooks.run(\"after-highlight\",l),C.hooks.run(\"complete\",l),t&&t.call(l.element)};if(C.hooks.run(\"before-sanity-check\",l),l.code)if(C.hooks.run(\"before-highlight\",l),l.grammar)if(a&&g.Worker){var s=new Worker(C.filename);s.onmessage=function(e){o(e.data)},s.postMessage(JSON.stringify({language:l.language,code:l.code,immediateClose:!0}))}else o(C.highlight(l.code,l.grammar,l.language));else o(C.util.encode(l.code));else C.hooks.run(\"complete\",l)},highlight:function(e,a,t){var n={code:e,grammar:a,language:t};return C.hooks.run(\"before-tokenize\",n),n.tokens=C.tokenize(n.code,n.grammar),C.hooks.run(\"after-tokenize\",n),M.stringify(C.util.encode(n.tokens),n.language)},matchGrammar:function(e,a,t,n,r,i,l){for(var o in t)if(t.hasOwnProperty(o)&&t[o]){if(o==l)return;var s=t[o];s=\"Array\"===C.util.type(s)?s:[s];for(var g=0;g<s.length;++g){var c=s[g],u=c.inside,h=!!c.lookbehind,f=!!c.greedy,d=0,m=c.alias;if(f&&!c.pattern.global){var p=c.pattern.toString().match(/[imuy]*$/)[0];c.pattern=RegExp(c.pattern.source,p+\"g\")}c=c.pattern||c;for(var y=n,v=r;y<a.length;v+=a[y].length,++y){var k=a[y];if(a.length>e.length)return;if(!(k instanceof M)){if(f&&y!=a.length-1){if(c.lastIndex=v,!(x=c.exec(e)))break;for(var b=x.index+(h?x[1].length:0),w=x.index+x[0].length,A=y,P=v,O=a.length;A<O&&(P<w||!a[A].type&&!a[A-1].greedy);++A)(P+=a[A].length)<=b&&(++y,v=P);if(a[y]instanceof M)continue;N=A-y,k=e.slice(v,P),x.index-=v}else{c.lastIndex=0;var x=c.exec(k),N=1}if(x){h&&(d=x[1]?x[1].length:0);w=(b=x.index+d)+(x=x[0].slice(d)).length;var j=k.slice(0,b),S=k.slice(w),E=[y,N];j&&(++y,v+=j.length,E.push(j));var _=new M(o,u?C.tokenize(x,u):x,m,x,f);if(E.push(_),S&&E.push(S),Array.prototype.splice.apply(a,E),1!=N&&C.matchGrammar(e,a,t,y,v,!0,o),i)break}else if(i)break}}}}},tokenize:function(e,a){var t=[e],n=a.rest;if(n){for(var r in n)a[r]=n[r];delete a.rest}return C.matchGrammar(e,t,a,0,0,!1),t},hooks:{all:{},add:function(e,a){var t=C.hooks.all;t[e]=t[e]||[],t[e].push(a)},run:function(e,a){var t=C.hooks.all[e];if(t&&t.length)for(var n,r=0;n=t[r++];)n(a)}},Token:M};function M(e,a,t,n,r){this.type=e,this.content=a,this.alias=t,this.length=0|(n||\"\").length,this.greedy=!!r}if(g.Prism=C,M.stringify=function(a,t,e){if(\"string\"==typeof a)return a;if(Array.isArray(a))return a.map(function(e){return M.stringify(e,t,a)}).join(\"\");var n={type:a.type,content:M.stringify(a.content,t,e),tag:\"span\",classes:[\"token\",a.type],attributes:{},language:t,parent:e};if(a.alias){var r=Array.isArray(a.alias)?a.alias:[a.alias];Array.prototype.push.apply(n.classes,r)}C.hooks.run(\"wrap\",n);var i=Object.keys(n.attributes).map(function(e){return e+'=\"'+(n.attributes[e]||\"\").replace(/\"/g,\"&quot;\")+'\"'}).join(\" \");return\"<\"+n.tag+' class=\"'+n.classes.join(\" \")+'\"'+(i?\" \"+i:\"\")+\">\"+n.content+\"</\"+n.tag+\">\"},!g.document)return g.addEventListener&&(C.disableWorkerMessageHandler||g.addEventListener(\"message\",function(e){var a=JSON.parse(e.data),t=a.language,n=a.code,r=a.immediateClose;g.postMessage(C.highlight(n,C.languages[t],t)),r&&g.close()},!1)),C;var e=document.currentScript||[].slice.call(document.getElementsByTagName(\"script\")).pop();return e&&(C.filename=e.src,C.manual||e.hasAttribute(\"data-manual\")||(\"loading\"!==document.readyState?window.requestAnimationFrame?window.requestAnimationFrame(C.highlightAll):window.setTimeout(C.highlightAll,16):document.addEventListener(\"DOMContentLoaded\",C.highlightAll))),C}(_self);\"undefined\"!=typeof module&&module.exports&&(module.exports=Prism),\"undefined\"!=typeof global&&(global.Prism=Prism);","Prism.languages.cpp = Prism.languages.extend('c', {\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|enum|struct)\\s+)\\w+/,\n\t\tlookbehind: true\n\t},\n\t'keyword': /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/\n});\n\nPrism.languages.insertBefore('cpp', 'string', {\n\t'raw-string': {\n\t\tpattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n\t\talias: 'string',\n\t\tgreedy: true\n\t}\n});\n","Prism.languages.cpp=Prism.languages.extend(\"c\",{\"class-name\":{pattern:/(\\b(?:class|enum|struct)\\s+)\\w+/,lookbehind:!0},keyword:/\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,boolean:/\\b(?:true|false)\\b/,operator:/>>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/}),Prism.languages.insertBefore(\"cpp\",\"string\",{\"raw-string\":{pattern:/R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,alias:\"string\",greedy:!0}});","(function(Prism) {\n\tPrism.languages.crystal = Prism.languages.extend('ruby', {\n\t\tkeyword: [\n\t\t\t/\\b(?:abstract|alias|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|rescue|return|require|select|self|sizeof|struct|super|then|type|typeof|uninitialized|union|unless|until|when|while|with|yield|__DIR__|__END_LINE__|__FILE__|__LINE__)\\b/,\n\t\t\t{\n\t\t\t\tpattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\n\t\tnumber: /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/\n\t});\n\n\tPrism.languages.insertBefore('crystal', 'string', {\n\t\tattribute: {\n\t\t\tpattern: /@\\[.+?\\]/,\n\t\t\talias: 'attr-name',\n\t\t\tinside: {\n\t\t\t\tdelimiter: {\n\t\t\t\t\tpattern: /^@\\[|\\]$/,\n\t\t\t\t\talias: 'tag'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.crystal\n\t\t\t}\n\t\t},\n\n\t\texpansion: [\n\t\t{\n\t\t\tpattern: /\\{\\{.+?\\}\\}/,\n\t\t\tinside: {\n\t\t\t\tdelimiter: {\n\t\t\t\t\tpattern: /^\\{\\{|\\}\\}$/,\n\t\t\t\t\talias: 'tag'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.crystal\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /\\{%.+?%\\}/,\n\t\t\tinside: {\n\t\t\t\tdelimiter: {\n\t\t\t\t\tpattern: /^\\{%|%\\}$/,\n\t\t\t\t\talias: 'tag'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.crystal\n\t\t\t}\n\t\t}\n\t\t]\n\t});\n\n}(Prism));\n","!function(e){e.languages.crystal=e.languages.extend(\"ruby\",{keyword:[/\\b(?:abstract|alias|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|rescue|return|require|select|self|sizeof|struct|super|then|type|typeof|uninitialized|union|unless|until|when|while|with|yield|__DIR__|__END_LINE__|__FILE__|__LINE__)\\b/,{pattern:/(\\.\\s*)(?:is_a|responds_to)\\?/,lookbehind:!0}],number:/\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/}),e.languages.insertBefore(\"crystal\",\"string\",{attribute:{pattern:/@\\[.+?\\]/,alias:\"attr-name\",inside:{delimiter:{pattern:/^@\\[|\\]$/,alias:\"tag\"},rest:e.languages.crystal}},expansion:[{pattern:/\\{\\{.+?\\}\\}/,inside:{delimiter:{pattern:/^\\{\\{|\\}\\}$/,alias:\"tag\"},rest:e.languages.crystal}},{pattern:/\\{%.+?%\\}/,inside:{delimiter:{pattern:/^\\{%|%\\}$/,alias:\"tag\"},rest:e.languages.crystal}}]})}(Prism);","Prism.languages.csharp = Prism.languages.extend('clike', {\n\t'keyword': /\\b(?:abstract|add|alias|as|ascending|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|descending|do|double|dynamic|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|from|get|global|goto|group|if|implicit|in|int|interface|internal|into|is|join|let|lock|long|namespace|new|null|object|operator|orderby|out|override|params|partial|private|protected|public|readonly|ref|remove|return|sbyte|sealed|select|set|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|value|var|virtual|void|volatile|where|while|yield)\\b/,\n\t'string': [\n\t\t{\n\t\t\tpattern: /@(\"|')(?:\\1\\1|\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*?\\1/,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'class-name': [\n\t\t{\n\t\t\t// (Foo bar, Bar baz)\n\t\t\tpattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=\\s+\\w+)/,\n\t\t\tinside: {\n\t\t\t\tpunctuation: /\\./\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t// [Foo]\n\t\t\tpattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tpunctuation: /\\./\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t// class Foo : Bar\n\t\t\tpattern: /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tpunctuation: /\\./\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t// class Foo\n\t\t\tpattern: /((?:\\b(?:class|interface|new)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tpunctuation: /\\./\n\t\t\t}\n\t\t}\n\t],\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)f?/i,\n\t'operator': />>=?|<<=?|[-=]>|([-+&|?])\\1|~|[-+*/%&|^!=<>]=?/,\n\t'punctuation': /\\?\\.?|::|[{}[\\];(),.:]/\n});\n\nPrism.languages.insertBefore('csharp', 'class-name', {\n\t'generic-method': {\n\t\tpattern: /\\w+\\s*<[^>\\r\\n]+?>\\s*(?=\\()/,\n\t\tinside: {\n\t\t\tfunction: /^\\w+/,\n\t\t\t'class-name': {\n\t\t\t\tpattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b/,\n\t\t\t\tinside: {\n\t\t\t\t\tpunctuation: /\\./\n\t\t\t\t}\n\t\t\t},\n\t\t\tkeyword: Prism.languages.csharp.keyword,\n\t\t\tpunctuation: /[<>(),.:]/\n\t\t}\n\t},\n\t'preprocessor': {\n\t\tpattern: /(^\\s*)#.*/m,\n\t\tlookbehind: true,\n\t\talias: 'property',\n\t\tinside: {\n\t\t\t// highlight preprocessor directives as keywords\n\t\t\t'directive': {\n\t\t\t\tpattern: /(\\s*#)\\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'keyword'\n\t\t\t}\n\t\t}\n\t}\n});\n\nPrism.languages.dotnet = Prism.languages.csharp;\n","Prism.languages.csharp=Prism.languages.extend(\"clike\",{keyword:/\\b(?:abstract|add|alias|as|ascending|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|descending|do|double|dynamic|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|from|get|global|goto|group|if|implicit|in|int|interface|internal|into|is|join|let|lock|long|namespace|new|null|object|operator|orderby|out|override|params|partial|private|protected|public|readonly|ref|remove|return|sbyte|sealed|select|set|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|value|var|virtual|void|volatile|where|while|yield)\\b/,string:[{pattern:/@(\"|')(?:\\1\\1|\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,greedy:!0},{pattern:/(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*?\\1/,greedy:!0}],\"class-name\":[{pattern:/\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=\\s+\\w+)/,inside:{punctuation:/\\./}},{pattern:/(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,lookbehind:!0,inside:{punctuation:/\\./}},{pattern:/(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,lookbehind:!0,inside:{punctuation:/\\./}},{pattern:/((?:\\b(?:class|interface|new)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,lookbehind:!0,inside:{punctuation:/\\./}}],number:/\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)f?/i,operator:/>>=?|<<=?|[-=]>|([-+&|?])\\1|~|[-+*/%&|^!=<>]=?/,punctuation:/\\?\\.?|::|[{}[\\];(),.:]/}),Prism.languages.insertBefore(\"csharp\",\"class-name\",{\"generic-method\":{pattern:/\\w+\\s*<[^>\\r\\n]+?>\\s*(?=\\()/,inside:{function:/^\\w+/,\"class-name\":{pattern:/\\b[A-Z]\\w*(?:\\.\\w+)*\\b/,inside:{punctuation:/\\./}},keyword:Prism.languages.csharp.keyword,punctuation:/[<>(),.:]/}},preprocessor:{pattern:/(^\\s*)#.*/m,lookbehind:!0,alias:\"property\",inside:{directive:{pattern:/(\\s*#)\\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,lookbehind:!0,alias:\"keyword\"}}}}),Prism.languages.dotnet=Prism.languages.csharp;","/**\n * Original by Scott Helme.\n *\n * Reference: https://scotthelme.co.uk/csp-cheat-sheet/\n *\n * Supports the following:\n *  - CSP Level 1\n *  - CSP Level 2\n *  - CSP Level 3\n */\n\nPrism.languages.csp = {\n\t'directive':  {\n\t\tpattern: /\\b(?:(?:base-uri|form-action|frame-ancestors|plugin-types|referrer|reflected-xss|report-to|report-uri|require-sri-for|sandbox) |(?:block-all-mixed-content|disown-opener|upgrade-insecure-requests)(?: |;)|(?:child|connect|default|font|frame|img|manifest|media|object|script|style|worker)-src )/i,\n\t\talias: 'keyword'\n\t},\n\t'safe': {\n\t\tpattern: /'(?:self|none|strict-dynamic|(?:nonce-|sha(?:256|384|512)-)[a-zA-Z\\d+=/]+)'/,\n\t\talias: 'selector'\n\t},\n\t'unsafe': {\n\t\tpattern: /(?:'unsafe-inline'|'unsafe-eval'|'unsafe-hashed-attributes'|\\*)/,\n\t\talias: 'function'\n\t}\n};","Prism.languages.csp={directive:{pattern:/\\b(?:(?:base-uri|form-action|frame-ancestors|plugin-types|referrer|reflected-xss|report-to|report-uri|require-sri-for|sandbox) |(?:block-all-mixed-content|disown-opener|upgrade-insecure-requests)(?: |;)|(?:child|connect|default|font|frame|img|manifest|media|object|script|style|worker)-src )/i,alias:\"keyword\"},safe:{pattern:/'(?:self|none|strict-dynamic|(?:nonce-|sha(?:256|384|512)-)[a-zA-Z\\d+=/]+)'/,alias:\"selector\"},unsafe:{pattern:/(?:'unsafe-inline'|'unsafe-eval'|'unsafe-hashed-attributes'|\\*)/,alias:\"function\"}};","Prism.languages.css.selector = {\n\tpattern: Prism.languages.css.selector,\n\tinside: {\n\t\t'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n\t\t'pseudo-class': /:[-\\w]+/,\n\t\t'class': /\\.[-:.\\w]+/,\n\t\t'id': /#[-:.\\w]+/,\n\t\t'attribute': {\n\t\t\tpattern: /\\[(?:[^[\\]\"']|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1)*\\]/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^\\[|\\]$/,\n\t\t\t\t'case-sensitivity': {\n\t\t\t\t\tpattern: /(\\s)[si]$/i,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'keyword'\n\t\t\t\t},\n\t\t\t\t'namespace': {\n\t\t\t\t\tpattern: /^(\\s*)[-*\\w\\xA0-\\uFFFF]*\\|(?!=)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /\\|$/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'attribute': {\n\t\t\t\t\tpattern: /^(\\s*)[-\\w\\xA0-\\uFFFF]+/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'value': [\n\t\t\t\t\t/(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /(=\\s*)[-\\w\\xA0-\\uFFFF]+(?=\\s*$)/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t'operator': /[|~*^$]?=/\n\t\t\t}\n\t\t},\n\t\t'n-th': {\n\t\t\tpattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'number': /[\\dn]+/,\n\t\t\t\t'operator': /[+-]/\n\t\t\t}\n\t\t},\n\t\t'punctuation': /[()]/\n\t}\n};\n\nPrism.languages.insertBefore('css', 'property', {\n\t'variable': {\n\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])--[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*/i,\n\t\tlookbehind: true\n\t}\n});\n\nPrism.languages.insertBefore('css', 'function', {\n\t'operator': {\n\t\tpattern: /(\\s)[+\\-*\\/](?=\\s)/,\n\t\tlookbehind: true\n\t},\n\t'hexcode': /#[\\da-f]{3,8}/i,\n\t'entity': /\\\\[\\da-f]{1,8}/i,\n\t'unit': {\n\t\tpattern: /(\\d)(?:%|[a-z]+)/,\n\t\tlookbehind: true\n\t},\n\t'number': /-?[\\d.]+/\n});\n","Prism.languages.css.selector={pattern:Prism.languages.css.selector,inside:{\"pseudo-element\":/:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\"pseudo-class\":/:[-\\w]+/,class:/\\.[-:.\\w]+/,id:/#[-:.\\w]+/,attribute:{pattern:/\\[(?:[^[\\]\"']|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1)*\\]/,greedy:!0,inside:{punctuation:/^\\[|\\]$/,\"case-sensitivity\":{pattern:/(\\s)[si]$/i,lookbehind:!0,alias:\"keyword\"},namespace:{pattern:/^(\\s*)[-*\\w\\xA0-\\uFFFF]*\\|(?!=)/,lookbehind:!0,inside:{punctuation:/\\|$/}},attribute:{pattern:/^(\\s*)[-\\w\\xA0-\\uFFFF]+/,lookbehind:!0},value:[/(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,{pattern:/(=\\s*)[-\\w\\xA0-\\uFFFF]+(?=\\s*$)/,lookbehind:!0}],operator:/[|~*^$]?=/}},\"n-th\":{pattern:/(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,lookbehind:!0,inside:{number:/[\\dn]+/,operator:/[+-]/}},punctuation:/[()]/}},Prism.languages.insertBefore(\"css\",\"property\",{variable:{pattern:/(^|[^-\\w\\xA0-\\uFFFF])--[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*/i,lookbehind:!0}}),Prism.languages.insertBefore(\"css\",\"function\",{operator:{pattern:/(\\s)[+\\-*\\/](?=\\s)/,lookbehind:!0},hexcode:/#[\\da-f]{3,8}/i,entity:/\\\\[\\da-f]{1,8}/i,unit:{pattern:/(\\d)(?:%|[a-z]+)/,lookbehind:!0},number:/-?[\\d.]+/});","(function (Prism) {\n\n\tvar string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-]+?[\\s\\S]*?(?:;|(?=\\s*\\{))/i,\n\t\t\tinside: {\n\t\t\t\t'rule': /@[\\w-]+/\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': RegExp('url\\\\((?:' + string.source + '|.*?)\\\\)', 'i'),\n\t\t'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n\t\t'important': /!important\\b/i,\n\t\t'function': /[-a-z0-9]+(?=\\()/i,\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\n\t\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t\t'style-attr': {\n\t\t\t\tpattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'attr-name': {\n\t\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\t\tinside: markup.tag.inside\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talias: 'language-css'\n\t\t\t}\n\t\t}, markup.tag);\n\t}\n\n}(Prism));\n","!function(s){var e=/(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;s.languages.css={comment:/\\/\\*[\\s\\S]*?\\*\\//,atrule:{pattern:/@[\\w-]+?[\\s\\S]*?(?:;|(?=\\s*\\{))/i,inside:{rule:/@[\\w-]+/}},url:RegExp(\"url\\\\((?:\"+e.source+\"|.*?)\\\\)\",\"i\"),selector:RegExp(\"[^{}\\\\s](?:[^{};\\\"']|\"+e.source+\")*?(?=\\\\s*\\\\{)\"),string:{pattern:e,greedy:!0},property:/[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,important:/!important\\b/i,function:/[-a-z0-9]+(?=\\()/i,punctuation:/[(){};:,]/},s.languages.css.atrule.inside.rest=s.languages.css;var a=s.languages.markup;a&&(a.tag.addInlined(\"style\",\"css\"),s.languages.insertBefore(\"inside\",\"attr-value\",{\"style-attr\":{pattern:/\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,inside:{\"attr-name\":{pattern:/^\\s*style/i,inside:a.tag.inside},punctuation:/^\\s*=\\s*['\"]|['\"]\\s*$/,\"attr-value\":{pattern:/.+/i,inside:s.languages.css}},alias:\"language-css\"}},a.tag))}(Prism);","Prism.languages.d = Prism.languages.extend('clike', {\n\t'string': [\n\t\t// r\"\", x\"\"\n\t\t/\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/,\n\t\t// q\"[]\", q\"()\", q\"<>\", q\"{}\"\n\t\t/\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/,\n\t\t// q\"IDENT\n\t\t// ...\n\t\t// IDENT\"\n\t\t/\\bq\"([_a-zA-Z][_a-zA-Z\\d]*)(?:\\r?\\n|\\r)[\\s\\S]*?(?:\\r?\\n|\\r)\\1\"/,\n\t\t// q\"//\", q\"||\", etc.\n\t\t/\\bq\"(.)[\\s\\S]*?\\1\"/,\n\t\t// Characters\n\t\t/'(?:\\\\'|\\\\?[^']+)'/,\n\n\t\t/([\"`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1[cwd]?/\n\t],\n\n\t'number': [\n\t\t// The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator\n\t\t// Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"\n\t\t/\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]*/i,\n\t\t{\n\t\t\tpattern: /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]*/i,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\n\t// In order: $, keywords and special tokens, globally defined symbols\n\t'keyword': /\\$|\\b(?:abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|public|pure|real|ref|return|scope|shared|short|static|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|__(?:(?:FILE|MODULE|LINE|FUNCTION|PRETTY_FUNCTION|DATE|EOF|TIME|TIMESTAMP|VENDOR|VERSION)__|gshared|traits|vector|parameters)|string|wstring|dstring|size_t|ptrdiff_t)\\b/,\n\t'operator': /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/\n});\n\n\nPrism.languages.d.comment = [\n\t// Shebang\n\t/^\\s*#!.+/,\n\t// /+ +/\n\t{\n\t\t// Allow one level of nesting\n\t\tpattern: /(^|[^\\\\])\\/\\+(?:\\/\\+[\\s\\S]*?\\+\\/|[\\s\\S])*?\\+\\//,\n\t\tlookbehind: true\n\t}\n].concat(Prism.languages.d.comment);\n\nPrism.languages.insertBefore('d', 'comment', {\n\t'token-string': {\n\t\t// Allow one level of nesting\n\t\tpattern: /\\bq\\{(?:\\{[^}]*\\}|[^}])*\\}/,\n\t\talias: 'string'\n\t}\n});\n\nPrism.languages.insertBefore('d', 'keyword', {\n\t'property': /\\B@\\w*/\n});\n\nPrism.languages.insertBefore('d', 'function', {\n\t'register': {\n\t\t// Iasm registers\n\t\tpattern: /\\b(?:[ABCD][LHX]|E[ABCD]X|E?(?:BP|SP|DI|SI)|[ECSDGF]S|CR[0234]|DR[012367]|TR[3-7]|X?MM[0-7]|R[ABCD]X|[BS]PL|R[BS]P|[DS]IL|R[DS]I|R(?:[89]|1[0-5])[BWD]?|XMM(?:[89]|1[0-5])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,\n\t\talias: 'variable'\n\t}\n});","Prism.languages.d=Prism.languages.extend(\"clike\",{string:[/\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/,/\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/,/\\bq\"([_a-zA-Z][_a-zA-Z\\d]*)(?:\\r?\\n|\\r)[\\s\\S]*?(?:\\r?\\n|\\r)\\1\"/,/\\bq\"(.)[\\s\\S]*?\\1\"/,/'(?:\\\\'|\\\\?[^']+)'/,/([\"`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1[cwd]?/],number:[/\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]*/i,{pattern:/((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]*/i,lookbehind:!0}],keyword:/\\$|\\b(?:abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|public|pure|real|ref|return|scope|shared|short|static|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|__(?:(?:FILE|MODULE|LINE|FUNCTION|PRETTY_FUNCTION|DATE|EOF|TIME|TIMESTAMP|VENDOR|VERSION)__|gshared|traits|vector|parameters)|string|wstring|dstring|size_t|ptrdiff_t)\\b/,operator:/\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/}),Prism.languages.d.comment=[/^\\s*#!.+/,{pattern:/(^|[^\\\\])\\/\\+(?:\\/\\+[\\s\\S]*?\\+\\/|[\\s\\S])*?\\+\\//,lookbehind:!0}].concat(Prism.languages.d.comment),Prism.languages.insertBefore(\"d\",\"comment\",{\"token-string\":{pattern:/\\bq\\{(?:\\{[^}]*\\}|[^}])*\\}/,alias:\"string\"}}),Prism.languages.insertBefore(\"d\",\"keyword\",{property:/\\B@\\w*/}),Prism.languages.insertBefore(\"d\",\"function\",{register:{pattern:/\\b(?:[ABCD][LHX]|E[ABCD]X|E?(?:BP|SP|DI|SI)|[ECSDGF]S|CR[0234]|DR[012367]|TR[3-7]|X?MM[0-7]|R[ABCD]X|[BS]PL|R[BS]P|[DS]IL|R[DS]I|R(?:[89]|1[0-5])[BWD]?|XMM(?:[89]|1[0-5])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,alias:\"variable\"}});","Prism.languages.dart = Prism.languages.extend('clike', {\n\t'string': [\n\t\t{\n\t\t\tpattern: /r?(\"\"\"|''')[\\s\\S]*?\\1/,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /r?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t/\\b(?:async|sync|yield)\\*/,\n\t\t/\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|default|deferred|do|dynamic|else|enum|export|external|extends|factory|final|finally|for|get|if|implements|import|in|library|new|null|operator|part|rethrow|return|set|static|super|switch|this|throw|try|typedef|var|void|while|with|yield)\\b/\n\t],\n\t'operator': /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\n});\n\nPrism.languages.insertBefore('dart','function',{\n\t'metadata': {\n\t\tpattern: /@\\w+/,\n\t\talias: 'symbol'\n\t}\n});","Prism.languages.dart=Prism.languages.extend(\"clike\",{string:[{pattern:/r?(\"\"\"|''')[\\s\\S]*?\\1/,greedy:!0},{pattern:/r?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0}],keyword:[/\\b(?:async|sync|yield)\\*/,/\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|default|deferred|do|dynamic|else|enum|export|external|extends|factory|final|finally|for|get|if|implements|import|in|library|new|null|operator|part|rethrow|return|set|static|super|switch|this|throw|try|typedef|var|void|while|with|yield)\\b/],operator:/\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/}),Prism.languages.insertBefore(\"dart\",\"function\",{metadata:{pattern:/@\\w+/,alias:\"symbol\"}});","Prism.languages.diff = {\n\t'coord': [\n\t\t// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n\t\t/^(?:\\*{3}|-{3}|\\+{3}).*$/m,\n\t\t// Match \"@@ ... @@\" coord lines in unified diff.\n\t\t/^@@.*@@$/m,\n\t\t// Match coord lines in normal diff (starts with a number).\n\t\t/^\\d+.*$/m\n\t],\n\n\t// Match inserted and deleted lines. Support both +/- and >/< styles.\n\t'deleted': /^[-<].*$/m,\n\t'inserted': /^[+>].*$/m,\n\n\t// Match \"different\" lines (prefixed with \"!\") in context diff.\n\t'diff': {\n\t\t'pattern': /^!(?!!).+$/m,\n\t\t'alias': 'important'\n\t}\n};\n","Prism.languages.diff={coord:[/^(?:\\*{3}|-{3}|\\+{3}).*$/m,/^@@.*@@$/m,/^\\d+.*$/m],deleted:/^[-<].*$/m,inserted:/^[+>].*$/m,diff:{pattern:/^!(?!!).+$/m,alias:\"important\"}};","// Django/Jinja2 syntax definition for Prism.js <http://prismjs.com> syntax highlighter.\n// Mostly it works OK but can paint code incorrectly on complex html/template tag combinations.\n\n(function (Prism) {\n\n\tPrism.languages.django = {\n\t\t'comment': /^{#[\\s\\S]*?#}$/,\n\t\t'tag': {\n\t\t\tpattern: /(^{%[+-]?\\s*)\\w+/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'keyword'\n\t\t},\n\t\t'delimiter': {\n\t\t\tpattern: /^{[{%][+-]?|[+-]?[}%]}$/,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'string': {\n\t\t\tpattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'filter': {\n\t\t\tpattern: /(\\|)\\w+/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'function'\n\t\t},\n\t\t'test': {\n\t\t\tpattern: /(\\bis\\s+(?:not\\s+)?)(?!not\\b)\\w+/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'function'\n\t\t},\n\t\t'function': /\\b[a-z_]\\w+(?=\\s*\\()/i,\n\t\t'keyword': /\\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\\b/,\n\t\t'operator': /[-+*/%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n\t\t'number': /\\b\\d+(?:\\.\\d+)?\\b/,\n\t\t'boolean': /[Tt]rue|[Ff]alse|[Nn]one/,\n\t\t'variable': /\\b\\w+?\\b/,\n\t\t'punctuation': /[{}[\\](),.:;]/\n\t};\n\n\n\tvar pattern = /{{[\\s\\S]*?}}|{%[\\s\\S]*?%}|{#[\\s\\S]*?#}/g;\n\tvar markupTemplating = Prism.languages['markup-templating'];\n\n\tPrism.hooks.add('before-tokenize', function (env) {\n\t\tmarkupTemplating.buildPlaceholders(env, 'django', pattern);\n\t});\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tmarkupTemplating.tokenizePlaceholders(env, 'django');\n\t});\n\n\t// Add an Jinja2 alias\n\tPrism.languages.jinja2 = Prism.languages.django;\n\tPrism.hooks.add('before-tokenize', function (env) {\n\t\tmarkupTemplating.buildPlaceholders(env, 'jinja2', pattern);\n\t});\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tmarkupTemplating.tokenizePlaceholders(env, 'jinja2');\n\t});\n\n})(Prism);\n","!function(e){e.languages.django={comment:/^{#[\\s\\S]*?#}$/,tag:{pattern:/(^{%[+-]?\\s*)\\w+/,lookbehind:!0,alias:\"keyword\"},delimiter:{pattern:/^{[{%][+-]?|[+-]?[}%]}$/,alias:\"punctuation\"},string:{pattern:/(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},filter:{pattern:/(\\|)\\w+/,lookbehind:!0,alias:\"function\"},test:{pattern:/(\\bis\\s+(?:not\\s+)?)(?!not\\b)\\w+/,lookbehind:!0,alias:\"function\"},function:/\\b[a-z_]\\w+(?=\\s*\\()/i,keyword:/\\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\\b/,operator:/[-+*/%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,number:/\\b\\d+(?:\\.\\d+)?\\b/,boolean:/[Tt]rue|[Ff]alse|[Nn]one/,variable:/\\b\\w+?\\b/,punctuation:/[{}[\\](),.:;]/};var n=/{{[\\s\\S]*?}}|{%[\\s\\S]*?%}|{#[\\s\\S]*?#}/g,o=e.languages[\"markup-templating\"];e.hooks.add(\"before-tokenize\",function(e){o.buildPlaceholders(e,\"django\",n)}),e.hooks.add(\"after-tokenize\",function(e){o.tokenizePlaceholders(e,\"django\")}),e.languages.jinja2=e.languages.django,e.hooks.add(\"before-tokenize\",function(e){o.buildPlaceholders(e,\"jinja2\",n)}),e.hooks.add(\"after-tokenize\",function(e){o.tokenizePlaceholders(e,\"jinja2\")})}(Prism);","Prism.languages.docker = {\n\t'keyword': {\n\t\tpattern: /(^\\s*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)/mi,\n\t\tlookbehind: true\n\t},\n\t'string': /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n\t'comment': /#.*/,\n\t'punctuation': /---|\\.\\.\\.|[:[\\]{}\\-,|>?]/\n};\n\nPrism.languages.dockerfile = Prism.languages.docker;\n","Prism.languages.docker={keyword:{pattern:/(^\\s*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)/im,lookbehind:!0},string:/(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,comment:/#.*/,punctuation:/---|\\.\\.\\.|[:[\\]{}\\-,|>?]/},Prism.languages.dockerfile=Prism.languages.docker;","Prism.languages.ebnf = {\n\t'comment': /\\(\\*[\\s\\S]*?\\*\\)/,\n\t'string': {\n\t\tpattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n\t\tgreedy: true\n\t},\n\t'special': {\n\t\tpattern: /\\?[^?\\r\\n]*\\?/,\n\t\tgreedy: true,\n\t\talias: 'class-name'\n\t},\n\n\t'definition': {\n\t\tpattern: /^(\\s*)[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*(?=\\s*=)/im,\n\t\tlookbehind: true,\n\t\talias: ['rule', 'keyword']\n\t},\n\t'rule': /[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*/i,\n\n\t'punctuation': /\\([:/]|[:/]\\)|[.,;()[\\]{}]/,\n\t'operator': /[-=|*/!]/\n};\n","Prism.languages.ebnf={comment:/\\(\\*[\\s\\S]*?\\*\\)/,string:{pattern:/\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,greedy:!0},special:{pattern:/\\?[^?\\r\\n]*\\?/,greedy:!0,alias:\"class-name\"},definition:{pattern:/^(\\s*)[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*(?=\\s*=)/im,lookbehind:!0,alias:[\"rule\",\"keyword\"]},rule:/[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*/i,punctuation:/\\([:/]|[:/]\\)|[.,;()[\\]{}]/,operator:/[-=|*/!]/};","Prism.languages.eiffel = {\n\t'comment': /--.*/,\n\t'string': [\n\t\t// Aligned-verbatim-strings\n\t\t{\n\t\t\tpattern: /\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,\n\t\t\tgreedy: true\n\t\t},\n\t\t// Non-aligned-verbatim-strings\n\t\t{\n\t\t\tpattern: /\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,\n\t\t\tgreedy: true\n\t\t},\n\t\t// Single-line string\n\t\t{\n\t\t\tpattern: /\"(?:%\\s+%|%.|[^%\"\\r\\n])*\"/,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t// normal char | special char | char code\n\t'char': /'(?:%.|[^%'\\r\\n])+'/,\n\t'keyword': /\\b(?:across|agent|alias|all|and|attached|as|assign|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\n\t'boolean': /\\b(?:True|False)\\b/i,\n\t// Convention: class-names are always all upper-case characters\n\t'class-name': {\n\t\t'pattern': /\\b[A-Z][\\dA-Z_]*\\b/,\n\t\t'alias': 'builtin'\n\t},\n\t'number': [\n\t\t// hexa | octal | bin\n\t\t/\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i,\n\t\t// Decimal\n\t\t/(?:\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*|\\d(?:_*\\d)*\\.?/i\n\t],\n\t'punctuation': /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n\t'operator': /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\n};\n","Prism.languages.eiffel={comment:/--.*/,string:[{pattern:/\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,greedy:!0},{pattern:/\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,greedy:!0},{pattern:/\"(?:%\\s+%|%.|[^%\"\\r\\n])*\"/,greedy:!0}],char:/'(?:%.|[^%'\\r\\n])+'/,keyword:/\\b(?:across|agent|alias|all|and|attached|as|assign|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,boolean:/\\b(?:True|False)\\b/i,\"class-name\":{pattern:/\\b[A-Z][\\dA-Z_]*\\b/,alias:\"builtin\"},number:[/\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i,/(?:\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*|\\d(?:_*\\d)*\\.?/i],punctuation:/:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,operator:/\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/};","(function (Prism) {\n\n\tPrism.languages.ejs = {\n\t\t'delimiter': {\n\t\t\tpattern: /^<%[-_=]?|[-_]?%>$/,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'comment': /^#[\\s\\S]*/,\n\t\t'language-javascript': {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t};\n\n\tPrism.hooks.add('before-tokenize', function(env) {\n\t\tvar ejsPattern = /<%(?!%)[\\s\\S]+?%>/g;\n\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'ejs', ejsPattern);\n\t});\n\n\tPrism.hooks.add('after-tokenize', function(env) {\n\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'ejs');\n\t});\n\n}(Prism));\n","!function(a){a.languages.ejs={delimiter:{pattern:/^<%[-_=]?|[-_]?%>$/,alias:\"punctuation\"},comment:/^#[\\s\\S]*/,\"language-javascript\":{pattern:/[\\s\\S]+/,inside:a.languages.javascript}},a.hooks.add(\"before-tokenize\",function(e){a.languages[\"markup-templating\"].buildPlaceholders(e,\"ejs\",/<%(?!%)[\\s\\S]+?%>/g)}),a.hooks.add(\"after-tokenize\",function(e){a.languages[\"markup-templating\"].tokenizePlaceholders(e,\"ejs\")})}(Prism);","Prism.languages.elixir = {\n\t'comment': {\n\t\tpattern: /#.*/m,\n\t\tlookbehind: true\n\t},\n\t// ~r\"\"\"foo\"\"\" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r\"foo\", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>\n\t'regex': {\n\t\tpattern: /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\n\t\tgreedy: true\n\t},\n\t'string': [\n\t\t{\n\t\t\t// ~s\"\"\"foo\"\"\" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s\"foo\", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>\n\t\t\tpattern: /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t// See interpolation below\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t// See interpolation below\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t// Multi-line strings are allowed\n\t\t\tpattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t// See interpolation below\n\t\t\t}\n\t\t}\n\t],\n\t'atom': {\n\t\t// Look-behind prevents bad highlighting of the :: operator\n\t\tpattern: /(^|[^:]):\\w+/,\n\t\tlookbehind: true,\n\t\talias: 'symbol'\n\t},\n\t// Look-ahead prevents bad highlighting of the :: operator\n\t'attr-name': /\\w+:(?!:)/,\n\t'capture': {\n\t\t// Look-behind prevents bad highlighting of the && operator\n\t\tpattern: /(^|[^&])&(?:[^&\\s\\d()][^\\s()]*|(?=\\())/,\n\t\tlookbehind: true,\n\t\talias: 'function'\n\t},\n\t'argument': {\n\t\t// Look-behind prevents bad highlighting of the && operator\n\t\tpattern: /(^|[^&])&\\d+/,\n\t\tlookbehind: true,\n\t\talias: 'variable'\n\t},\n\t'attribute': {\n\t\tpattern: /@\\w+/,\n\t\talias: 'variable'\n\t},\n\t'number': /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\n\t'keyword': /\\b(?:after|alias|and|case|catch|cond|def(?:callback|exception|impl|module|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|require|rescue|try|unless|use|when)\\b/,\n\t'boolean': /\\b(?:true|false|nil)\\b/,\n\t'operator': [\n\t\t/\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/,\n\t\t{\n\t\t\t// We don't want to match <<\n\t\t\tpattern: /([^<])<(?!<)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\t// We don't want to match >>\n\t\t\tpattern: /([^>])>(?!>)/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'punctuation': /<<|>>|[.,%\\[\\]{}()]/\n};\n\nPrism.languages.elixir.string.forEach(function(o) {\n\to.inside = {\n\t\t'interpolation': {\n\t\t\tpattern: /#\\{[^}]+\\}/,\n\t\t\tinside: {\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^#\\{|\\}$/,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.elixir\n\t\t\t}\n\t\t}\n\t};\n});\n\n","Prism.languages.elixir={comment:{pattern:/#.*/m,lookbehind:!0},regex:{pattern:/~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,greedy:!0},string:[{pattern:/~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,greedy:!0,inside:{}},{pattern:/(\"\"\"|''')[\\s\\S]*?\\1/,greedy:!0,inside:{}},{pattern:/(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0,inside:{}}],atom:{pattern:/(^|[^:]):\\w+/,lookbehind:!0,alias:\"symbol\"},\"attr-name\":/\\w+:(?!:)/,capture:{pattern:/(^|[^&])&(?:[^&\\s\\d()][^\\s()]*|(?=\\())/,lookbehind:!0,alias:\"function\"},argument:{pattern:/(^|[^&])&\\d+/,lookbehind:!0,alias:\"variable\"},attribute:{pattern:/@\\w+/,alias:\"variable\"},number:/\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,keyword:/\\b(?:after|alias|and|case|catch|cond|def(?:callback|exception|impl|module|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|require|rescue|try|unless|use|when)\\b/,boolean:/\\b(?:true|false|nil)\\b/,operator:[/\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/,{pattern:/([^<])<(?!<)/,lookbehind:!0},{pattern:/([^>])>(?!>)/,lookbehind:!0}],punctuation:/<<|>>|[.,%\\[\\]{}()]/},Prism.languages.elixir.string.forEach(function(e){e.inside={interpolation:{pattern:/#\\{[^}]+\\}/,inside:{delimiter:{pattern:/^#\\{|\\}$/,alias:\"punctuation\"},rest:Prism.languages.elixir}}}});","Prism.languages.elm = {\n\tcomment: /--.*|{-[\\s\\S]*?-}/,\n\tchar: {\n\t\tpattern: /'(?:[^\\\\'\\r\\n]|\\\\(?:[abfnrtv\\\\']|\\d+|x[0-9a-fA-F]+))'/,\n\t\tgreedy: true\n\t},\n\tstring: [\n\t\t{\n\t\t\t// Multiline strings are wrapped in triple \". Quotes may appear unescaped.\n\t\t\tpattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /\"(?:[^\\\\\"\\r\\n]|\\\\(?:[abfnrtv\\\\\"]|\\d+|x[0-9a-fA-F]+))*\"/,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\timport_statement: {\n\t\t// The imported or hidden names are not included in this import\n\t\t// statement. This is because we want to highlight those exactly like\n\t\t// we do for the names in the program.\n\t\tpattern: /^\\s*import\\s+[A-Z]\\w*(?:\\.[A-Z]\\w*)*(?:\\s+as\\s+([A-Z]\\w*)(?:\\.[A-Z]\\w*)*)?(?:\\s+exposing\\s+)?/m,\n\t\tinside: {\n\t\t\tkeyword: /\\b(?:import|as|exposing)\\b/\n\t\t}\n\t},\n\tkeyword: /\\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\\b/,\n\t// These are builtin variables only. Constructors are highlighted later as a constant.\n\tbuiltin: /\\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\\b/,\n\t// decimal integers and floating point numbers | hexadecimal integers\n\tnumber: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[0-9a-f]+)\\b/i,\n\t// Most of this is needed because of the meaning of a single '.'.\n\t// If it stands alone freely, it is the function composition.\n\t// It may also be a separator between a module name and an identifier => no\n\t// operator. If it comes together with other special characters it is an\n\t// operator too.\n\t// Valid operator characters in 0.18: +-/*=.$<>:&|^?%#@~!\n\t// Ref: https://groups.google.com/forum/#!msg/elm-dev/0AHSnDdkSkQ/E0SVU70JEQAJ\n\toperator: /\\s\\.\\s|[+\\-/*=.$<>:&|^?%#@~!]{2,}|[+\\-/*=$<>:&|^?%#@~!]/,\n\t// In Elm, nearly everything is a variable, do not highlight these.\n\thvariable: /\\b(?:[A-Z]\\w*\\.)*[a-z]\\w*\\b/,\n\tconstant: /\\b(?:[A-Z]\\w*\\.)*[A-Z]\\w*\\b/,\n\tpunctuation: /[{}[\\]|(),.:]/\n};\n","Prism.languages.elm={comment:/--.*|{-[\\s\\S]*?-}/,char:{pattern:/'(?:[^\\\\'\\r\\n]|\\\\(?:[abfnrtv\\\\']|\\d+|x[0-9a-fA-F]+))'/,greedy:!0},string:[{pattern:/\"\"\"[\\s\\S]*?\"\"\"/,greedy:!0},{pattern:/\"(?:[^\\\\\"\\r\\n]|\\\\(?:[abfnrtv\\\\\"]|\\d+|x[0-9a-fA-F]+))*\"/,greedy:!0}],import_statement:{pattern:/^\\s*import\\s+[A-Z]\\w*(?:\\.[A-Z]\\w*)*(?:\\s+as\\s+([A-Z]\\w*)(?:\\.[A-Z]\\w*)*)?(?:\\s+exposing\\s+)?/m,inside:{keyword:/\\b(?:import|as|exposing)\\b/}},keyword:/\\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\\b/,builtin:/\\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\\b/,number:/\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[0-9a-f]+)\\b/i,operator:/\\s\\.\\s|[+\\-/*=.$<>:&|^?%#@~!]{2,}|[+\\-/*=$<>:&|^?%#@~!]/,hvariable:/\\b(?:[A-Z]\\w*\\.)*[a-z]\\w*\\b/,constant:/\\b(?:[A-Z]\\w*\\.)*[A-Z]\\w*\\b/,punctuation:/[{}[\\]|(),.:]/};","(function (Prism) {\n\n\tPrism.languages.erb = Prism.languages.extend('ruby', {});\n\tPrism.languages.insertBefore('erb', 'comment', {\n\t\t'delimiter': {\n\t\t\tpattern: /^<%=?|%>$/,\n\t\t\talias: 'punctuation'\n\t\t}\n\t});\n\n\tPrism.hooks.add('before-tokenize', function(env) {\n\t\tvar erbPattern = /<%=?(?:[^\\r\\n]|[\\r\\n](?!=begin)|[\\r\\n]=begin\\s[\\s\\S]*?^=end)+?%>/gm;\n\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'erb', erbPattern);\n\t});\n\n\tPrism.hooks.add('after-tokenize', function(env) {\n\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'erb');\n\t});\n\n}(Prism));\n","!function(n){n.languages.erb=n.languages.extend(\"ruby\",{}),n.languages.insertBefore(\"erb\",\"comment\",{delimiter:{pattern:/^<%=?|%>$/,alias:\"punctuation\"}}),n.hooks.add(\"before-tokenize\",function(e){n.languages[\"markup-templating\"].buildPlaceholders(e,\"erb\",/<%=?(?:[^\\r\\n]|[\\r\\n](?!=begin)|[\\r\\n]=begin\\s[\\s\\S]*?^=end)+?%>/gm)}),n.hooks.add(\"after-tokenize\",function(e){n.languages[\"markup-templating\"].tokenizePlaceholders(e,\"erb\")})}(Prism);","Prism.languages.erlang = {\n\t'comment': /%.+/,\n\t'string': {\n\t\tpattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n\t\tgreedy: true\n\t},\n\t'quoted-function': {\n\t\tpattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n\t\talias: 'function'\n\t},\n\t'quoted-atom': {\n\t\tpattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n\t\talias: 'atom'\n\t},\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'keyword': /\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,\n\t'number': [\n\t\t/\\$\\\\?./,\n\t\t/\\d+#[a-z0-9]+/i,\n\t\t/(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\n\t],\n\t'function': /\\b[a-z][\\w@]*(?=\\()/,\n\t'variable': {\n\t\t// Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n\t\tpattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n\t\tlookbehind: true\n\t},\n\t'operator': [\n\t\t/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/,\n\t\t{\n\t\t\t// We don't want to match <<\n\t\t\tpattern: /(^|[^<])<(?!<)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\t// We don't want to match >>\n\t\t\tpattern: /(^|[^>])>(?!>)/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'atom': /\\b[a-z][\\w@]*/,\n\t'punctuation': /[()[\\]{}:;,.#|]|<<|>>/\n\n};","Prism.languages.erlang={comment:/%.+/,string:{pattern:/\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,greedy:!0},\"quoted-function\":{pattern:/'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,alias:\"function\"},\"quoted-atom\":{pattern:/'(?:\\\\.|[^\\\\'\\r\\n])+'/,alias:\"atom\"},boolean:/\\b(?:true|false)\\b/,keyword:/\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,number:[/\\$\\\\?./,/\\d+#[a-z0-9]+/i,/(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i],function:/\\b[a-z][\\w@]*(?=\\()/,variable:{pattern:/(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,lookbehind:!0},operator:[/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/,{pattern:/(^|[^<])<(?!<)/,lookbehind:!0},{pattern:/(^|[^>])>(?!>)/,lookbehind:!0}],atom:/\\b[a-z][\\w@]*/,punctuation:/[()[\\]{}:;,.#|]|<<|>>/};","(function (Prism) {\n\tPrism.languages.flow = Prism.languages.extend('javascript', {});\n\n\tPrism.languages.insertBefore('flow', 'keyword', {\n\t\t'type': [\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:[Nn]umber|[Ss]tring|[Bb]oolean|Function|any|mixed|null|void)\\b/,\n\t\t\t\talias: 'tag'\n\t\t\t}\n\t\t]\n\t});\n\tPrism.languages.flow['function-variable'].pattern = /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i;\n\tdelete Prism.languages.flow['parameter'];\n\n\tPrism.languages.insertBefore('flow', 'operator', {\n\t\t'flow-punctuation': {\n\t\t\tpattern: /\\{\\||\\|\\}/,\n\t\t\talias: 'punctuation'\n\t\t}\n\t});\n\n\tif (!Array.isArray(Prism.languages.flow.keyword)) {\n\t\tPrism.languages.flow.keyword = [Prism.languages.flow.keyword];\n\t}\n\tPrism.languages.flow.keyword.unshift(\n\t\t{\n\t\t\tpattern: /(^|[^$]\\b)(?:type|opaque|declare|Class)\\b(?!\\$)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$]\\B)\\$(?:await|Diff|Exact|Keys|ObjMap|PropertyType|Shape|Record|Supertype|Subtype|Enum)\\b(?!\\$)/,\n\t\t\tlookbehind: true\n\t\t}\n\t);\n}(Prism));\n","!function(a){a.languages.flow=a.languages.extend(\"javascript\",{}),a.languages.insertBefore(\"flow\",\"keyword\",{type:[{pattern:/\\b(?:[Nn]umber|[Ss]tring|[Bb]oolean|Function|any|mixed|null|void)\\b/,alias:\"tag\"}]}),a.languages.flow[\"function-variable\"].pattern=/[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i,delete a.languages.flow.parameter,a.languages.insertBefore(\"flow\",\"operator\",{\"flow-punctuation\":{pattern:/\\{\\||\\|\\}/,alias:\"punctuation\"}}),Array.isArray(a.languages.flow.keyword)||(a.languages.flow.keyword=[a.languages.flow.keyword]),a.languages.flow.keyword.unshift({pattern:/(^|[^$]\\b)(?:type|opaque|declare|Class)\\b(?!\\$)/,lookbehind:!0},{pattern:/(^|[^$]\\B)\\$(?:await|Diff|Exact|Keys|ObjMap|PropertyType|Shape|Record|Supertype|Subtype|Enum)\\b(?!\\$)/,lookbehind:!0})}(Prism);","Prism.languages.fortran = {\n\t'quoted-number': {\n\t\tpattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\n\t\talias: 'number'\n\t},\n\t'string': {\n\t\tpattern: /(?:\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:\\s*!.+(?:\\r\\n?|\\n))?|(?!\\1).)*(?:\\1|&)/,\n\t\tinside: {\n\t\t\t'comment': {\n\t\t\t\tpattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t}\n\t},\n\t'comment': {\n\t\tpattern: /!.*/,\n\t\tgreedy: true\n\t},\n\t'boolean': /\\.(?:TRUE|FALSE)\\.(?:_\\w+)?/i,\n\t'number': /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\n\t'keyword': [\n\t\t// Types\n\t\t/\\b(?:INTEGER|REAL|DOUBLE ?PRECISION|COMPLEX|CHARACTER|LOGICAL)\\b/i,\n\t\t// END statements\n\t\t/\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i,\n\t\t// Statements\n\t\t/\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i,\n\t\t// Others\n\t\t/\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEWHERE|ELSEIF|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i\n\t],\n\t'operator': [\n\t\t/\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.(?:EQ|NE|LT|LE|GT|GE|NOT|AND|OR|EQV|NEQV)\\.|\\.[A-Z]+\\./i,\n\t\t{\n\t\t\t// Use lookbehind to prevent confusion with (/ /)\n\t\t\tpattern: /(^|(?!\\().)\\/(?!\\))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'punctuation': /\\(\\/|\\/\\)|[(),;:&]/\n};","Prism.languages.fortran={\"quoted-number\":{pattern:/[BOZ](['\"])[A-F0-9]+\\1/i,alias:\"number\"},string:{pattern:/(?:\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:\\s*!.+(?:\\r\\n?|\\n))?|(?!\\1).)*(?:\\1|&)/,inside:{comment:{pattern:/(&(?:\\r\\n?|\\n)\\s*)!.*/,lookbehind:!0}}},comment:{pattern:/!.*/,greedy:!0},boolean:/\\.(?:TRUE|FALSE)\\.(?:_\\w+)?/i,number:/(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,keyword:[/\\b(?:INTEGER|REAL|DOUBLE ?PRECISION|COMPLEX|CHARACTER|LOGICAL)\\b/i,/\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i,/\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i,/\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEWHERE|ELSEIF|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i],operator:[/\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.(?:EQ|NE|LT|LE|GT|GE|NOT|AND|OR|EQV|NEQV)\\.|\\.[A-Z]+\\./i,{pattern:/(^|(?!\\().)\\/(?!\\))/,lookbehind:!0}],punctuation:/\\(\\/|\\/\\)|[(),;:&]/};","Prism.languages.fsharp = Prism.languages.extend('clike', {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\(\\*[\\s\\S]*?\\*\\)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?|'(?:[^\\\\']|\\\\.)'B?/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'operator': /->|\\*/,\n\t\t\t'punctuation': /\\./\n\t\t}\n\t},\n\t'keyword': /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(abstract|and|as|assert|base|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|global|if|in|inherit|inline|interface|internal|lazy|match|member|module|mutable|namespace|new|not|null|of|open|or|override|private|public|rec|select|static|struct|then|to|true|try|type|upcast|val|void|when|while|with|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b/,\n\t'number': [\n\t\t/\\b0x[\\da-fA-F]+(?:un|lf|LF)?\\b/,\n\t\t/\\b0b[01]+(?:y|uy)?\\b/,\n\t\t/(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i,\n\t\t/\\b\\d+(?:[IlLsy]|u[lsy]?|UL)?\\b/\n\t],\n\t'operator': /([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/\n});\nPrism.languages.insertBefore('fsharp', 'keyword', {\n\t'preprocessor': {\n\t\tpattern: /^[^\\r\\n\\S]*#.*/m,\n\t\talias: 'property',\n\t\tinside: {\n\t\t\t'directive': {\n\t\t\t\tpattern: /(\\s*#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'keyword'\n\t\t\t}\n\t\t}\n\t}\n});\nPrism.languages.insertBefore('fsharp', 'punctuation', {\n\t'computation-expression': {\n\t\tpattern: /[_a-z]\\w*(?=\\s*\\{)/i,\n\t\talias: 'keyword'\n\t}\n});\nPrism.languages.insertBefore('fsharp', 'string', {\n\t'annotation': {\n\t\tpattern: /\\[<.+?>\\]/,\n\t\tinside: {\n\t\t\t'punctuation': /^\\[<|>\\]$/,\n\t\t\t'class-name': {\n\t\t\t\tpattern: /^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'annotation-content': {\n\t\t\t\tpattern: /[\\s\\S]+/,\n\t\t\t\tinside: Prism.languages.fsharp\n\t\t\t}\n\t\t}\n\t}\n});\n","Prism.languages.fsharp=Prism.languages.extend(\"clike\",{comment:[{pattern:/(^|[^\\\\])\\(\\*[\\s\\S]*?\\*\\)/,lookbehind:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0}],string:{pattern:/(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?|'(?:[^\\\\']|\\\\.)'B?/,greedy:!0},\"class-name\":{pattern:/(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,lookbehind:!0,inside:{operator:/->|\\*/,punctuation:/\\./}},keyword:/\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(abstract|and|as|assert|base|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|global|if|in|inherit|inline|interface|internal|lazy|match|member|module|mutable|namespace|new|not|null|of|open|or|override|private|public|rec|select|static|struct|then|to|true|try|type|upcast|val|void|when|while|with|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b/,number:[/\\b0x[\\da-fA-F]+(?:un|lf|LF)?\\b/,/\\b0b[01]+(?:y|uy)?\\b/,/(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i,/\\b\\d+(?:[IlLsy]|u[lsy]?|UL)?\\b/],operator:/([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/}),Prism.languages.insertBefore(\"fsharp\",\"keyword\",{preprocessor:{pattern:/^[^\\r\\n\\S]*#.*/m,alias:\"property\",inside:{directive:{pattern:/(\\s*#)\\b(?:else|endif|if|light|line|nowarn)\\b/,lookbehind:!0,alias:\"keyword\"}}}}),Prism.languages.insertBefore(\"fsharp\",\"punctuation\",{\"computation-expression\":{pattern:/[_a-z]\\w*(?=\\s*\\{)/i,alias:\"keyword\"}}),Prism.languages.insertBefore(\"fsharp\",\"string\",{annotation:{pattern:/\\[<.+?>\\]/,inside:{punctuation:/^\\[<|>\\]$/,\"class-name\":{pattern:/^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,lookbehind:!0},\"annotation-content\":{pattern:/[\\s\\S]+/,inside:Prism.languages.fsharp}}}});","Prism.languages.gcode = {\n\t'comment': /;.*|\\B\\(.*?\\)\\B/,\n\t'string': {\n\t\tpattern: /\"(?:\"\"|[^\"])*\"/,\n\t\tgreedy: true\n\t},\n\t'keyword': /\\b[GM]\\d+(?:\\.\\d+)?\\b/,\n\t'property': /\\b[A-Z]/,\n\t'checksum': {\n\t\tpattern: /\\*\\d+/,\n\t\talias: 'punctuation'\n\t},\n\t// T0:0:0\n\t'punctuation': /:/\n};\n","Prism.languages.gcode={comment:/;.*|\\B\\(.*?\\)\\B/,string:{pattern:/\"(?:\"\"|[^\"])*\"/,greedy:!0},keyword:/\\b[GM]\\d+(?:\\.\\d+)?\\b/,property:/\\b[A-Z]/,checksum:{pattern:/\\*\\d+/,alias:\"punctuation\"},punctuation:/:/};","Prism.languages.gedcom = {\n\t'line-value': {\n\t\t// Preceded by level, optional pointer, and tag\n\t\tpattern: /(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ +).+/m,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'pointer': {\n\t\t\t\tpattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n\t\t\t\talias: 'variable'\n\t\t\t}\n\t\t}\n\t},\n\t'tag': {\n\t\t// Preceded by level and optional pointer\n\t\tpattern: /(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n\t\tlookbehind: true,\n\t\talias: 'string'\n\t},\n\t'level': {\n\t\tpattern: /(^\\s*)\\d+/m,\n\t\tlookbehind: true,\n\t\talias: 'number'\n\t},\n\t'pointer': {\n\t\tpattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n\t\talias: 'variable'\n\t}\n};","Prism.languages.gedcom={\"line-value\":{pattern:/(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ +).+/m,lookbehind:!0,inside:{pointer:{pattern:/^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,alias:\"variable\"}}},tag:{pattern:/(^\\s*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,lookbehind:!0,alias:\"string\"},level:{pattern:/(^\\s*)\\d+/m,lookbehind:!0,alias:\"number\"},pointer:{pattern:/@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,alias:\"variable\"}};","Prism.languages.gherkin = {\n\t'pystring': {\n\t\tpattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n\t\talias: 'string'\n\t},\n\t'comment': {\n\t\tpattern: /((?:^|\\r?\\n|\\r)[ \\t]*)#.*/,\n\t\tlookbehind: true\n\t},\n\t'tag': {\n\t\tpattern: /((?:^|\\r?\\n|\\r)[ \\t]*)@\\S*/,\n\t\tlookbehind: true\n\t},\n\t'feature': {\n\t\tpattern: /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|laH|Lastnost|Mak|Mogucnost|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|perbogh|poQbogh malja'|Potrzeba biznesowa|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):(?:[^:]+(?:\\r?\\n|\\r|$))*/,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'important': {\n\t\t\t\tpattern: /(:)[^\\r\\n]+/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\tkeyword: /[^:\\r\\n]+:/\n\t\t}\n\t},\n\t'scenario': {\n\t\tpattern: /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram senaryo|Dyagram Senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|Examples|EXAMPLZ|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|ghantoH|Grundlage|Hannergrond|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut|lut chovnatlh|lutmey|Lýsing Atburðarásar|Lýsing Dæma|Menggariskan Senario|MISHUN|MISHUN SRSLY|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan senaryo|Plan Senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo|Senaryo deskripsyon|Senaryo Deskripsyon|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie|Situasie Uiteensetting|Skenario|Skenario konsep|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa|Swa hwaer swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo\\-ho\\-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\\r\\n]*/,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'important': {\n\t\t\t\tpattern: /(:)[^\\r\\n]*/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\tkeyword: /[^:\\r\\n]+:/\n\t\t}\n\t},\n\t'table-body': {\n\t\t// Look-behind is used to skip the table head, which has the same format as any table row\n\t\tpattern: /((?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*)+/,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'outline': {\n\t\t\t\tpattern: /<[^>]+?>/,\n\t\t\t\talias: 'variable'\n\t\t\t},\n\t\t\t'td': {\n\t\t\t\tpattern: /\\s*[^\\s|][^|]*/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'punctuation': /\\|/\n\t\t}\n\t},\n\t'table-head': {\n\t\tpattern: /(?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*/,\n\t\tinside: {\n\t\t\t'th': {\n\t\t\t\tpattern: /\\s*[^\\s|][^|]*/,\n\t\t\t\talias: 'variable'\n\t\t\t},\n\t\t\t'punctuation': /\\|/\n\t\t}\n\t},\n\t'atrule': {\n\t\tpattern: /((?:\\r?\\n|\\r)[ \\t]+)(?:'ach|'a|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cando|Cand|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|Dato|DEN|Den youse gotta|Dengan|De|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|Entonces|En|Epi|E|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kadar|Kada|Kad|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Majd|Maka|Manawa|Mas|Ma|Menawa|Men|Mutta|Nalikaning|Nalika|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Og|Och|Oletetaan|Onda|Ond|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|qaSDI'|Quando|Quand|Quan|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|ugeholl|Und|Un|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadani|Zadano|Zadan|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \\t]+)/,\n\t\tlookbehind: true\n\t},\n\t'string': {\n\t\tpattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n\t\tinside: {\n\t\t\t'outline': {\n\t\t\t\tpattern: /<[^>]+?>/,\n\t\t\t\talias: 'variable'\n\t\t\t}\n\t\t}\n\t},\n\t'outline': {\n\t\tpattern: /<[^>]+?>/,\n\t\talias: 'variable'\n\t}\n};\n","Prism.languages.gherkin={pystring:{pattern:/(\"\"\"|''')[\\s\\S]+?\\1/,alias:\"string\"},comment:{pattern:/((?:^|\\r?\\n|\\r)[ \\t]*)#.*/,lookbehind:!0},tag:{pattern:/((?:^|\\r?\\n|\\r)[ \\t]*)@\\S*/,lookbehind:!0},feature:{pattern:/((?:^|\\r?\\n|\\r)[ \\t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|laH|Lastnost|Mak|Mogucnost|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|perbogh|poQbogh malja'|Potrzeba biznesowa|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):(?:[^:]+(?:\\r?\\n|\\r|$))*/,lookbehind:!0,inside:{important:{pattern:/(:)[^\\r\\n]+/,lookbehind:!0},keyword:/[^:\\r\\n]+:/}},scenario:{pattern:/((?:^|\\r?\\n|\\r)[ \\t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram senaryo|Dyagram Senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|Examples|EXAMPLZ|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|ghantoH|Grundlage|Hannergrond|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut|lut chovnatlh|lutmey|Lýsing Atburðarásar|Lýsing Dæma|Menggariskan Senario|MISHUN|MISHUN SRSLY|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan senaryo|Plan Senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo|Senaryo deskripsyon|Senaryo Deskripsyon|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie|Situasie Uiteensetting|Skenario|Skenario konsep|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa|Swa hwaer swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo\\-ho\\-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\\r\\n]*/,lookbehind:!0,inside:{important:{pattern:/(:)[^\\r\\n]*/,lookbehind:!0},keyword:/[^:\\r\\n]+:/}},\"table-body\":{pattern:/((?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*)+/,lookbehind:!0,inside:{outline:{pattern:/<[^>]+?>/,alias:\"variable\"},td:{pattern:/\\s*[^\\s|][^|]*/,alias:\"string\"},punctuation:/\\|/}},\"table-head\":{pattern:/(?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*/,inside:{th:{pattern:/\\s*[^\\s|][^|]*/,alias:\"variable\"},punctuation:/\\|/}},atrule:{pattern:/((?:\\r?\\n|\\r)[ \\t]+)(?:'ach|'a|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cando|Cand|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|Dato|DEN|Den youse gotta|Dengan|De|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|Entonces|En|Epi|E|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kadar|Kada|Kad|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Majd|Maka|Manawa|Mas|Ma|Menawa|Men|Mutta|Nalikaning|Nalika|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Og|Och|Oletetaan|Onda|Ond|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|qaSDI'|Quando|Quand|Quan|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|ugeholl|Und|Un|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadani|Zadano|Zadan|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \\t]+)/,lookbehind:!0},string:{pattern:/\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/,inside:{outline:{pattern:/<[^>]+?>/,alias:\"variable\"}}},outline:{pattern:/<[^>]+?>/,alias:\"variable\"}};","Prism.languages.git = {\n\t/*\n\t * A simple one line comment like in a git status command\n\t * For instance:\n\t * $ git status\n\t * # On branch infinite-scroll\n\t * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n\t * # and have 1 and 2 different commits each, respectively.\n\t * nothing to commit (working directory clean)\n\t */\n\t'comment': /^#.*/m,\n\n\t/*\n\t * Regexp to match the changed lines in a git diff output. Check the example below.\n\t */\n\t'deleted': /^[-–].*/m,\n\t'inserted': /^\\+.*/m,\n\n\t/*\n\t * a string (double and simple quote)\n\t */\n\t'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n\n\t/*\n\t * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n\t * For instance:\n\t * $ git add file.txt\n\t */\n\t'command': {\n\t\tpattern: /^.*\\$ git .*$/m,\n\t\tinside: {\n\t\t\t/*\n\t\t\t * A git command can contain a parameter starting by a single or a double dash followed by a string\n\t\t\t * For instance:\n\t\t\t * $ git diff --cached\n\t\t\t * $ git log -p\n\t\t\t */\n\t\t\t'parameter': /\\s--?\\w+/m\n\t\t}\n\t},\n\n\t/*\n\t * Coordinates displayed in a git diff command\n\t * For instance:\n\t * $ git diff\n\t * diff --git file.txt file.txt\n\t * index 6214953..1d54a52 100644\n\t * --- file.txt\n\t * +++ file.txt\n\t * @@ -1 +1,2 @@\n\t * -Here's my tetx file\n\t * +Here's my text file\n\t * +And this is the second line\n\t */\n\t'coord': /^@@.*@@$/m,\n\n\t/*\n\t * Match a \"commit [SHA1]\" line in a git log output.\n\t * For instance:\n\t * $ git log\n\t * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n\t * Author: lgiraudel\n\t * Date:   Mon Feb 17 11:18:34 2014 +0100\n\t *\n\t *     Add of a new line\n\t */\n\t'commit_sha1': /^commit \\w{40}$/m\n};\n","Prism.languages.git={comment:/^#.*/m,deleted:/^[-–].*/m,inserted:/^\\+.*/m,string:/(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,command:{pattern:/^.*\\$ git .*$/m,inside:{parameter:/\\s--?\\w+/m}},coord:/^@@.*@@$/m,commit_sha1:/^commit \\w{40}$/m};","Prism.languages.glsl = Prism.languages.extend('clike', {\n\t'comment': [\n\t\t/\\/\\*[\\s\\S]*?\\*\\//,\n\t\t/\\/\\/(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/\n\t],\n\t'number': /(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ulf]*/i,\n\t'keyword': /\\b(?:attribute|const|uniform|varying|buffer|shared|coherent|volatile|restrict|readonly|writeonly|atomic_uint|layout|centroid|flat|smooth|noperspective|patch|sample|break|continue|do|for|while|switch|case|default|if|else|subroutine|in|out|inout|float|double|int|void|bool|true|false|invariant|precise|discard|return|d?mat[234](?:x[234])?|[ibdu]?vec[234]|uint|lowp|mediump|highp|precision|[iu]?sampler[123]D|[iu]?samplerCube|sampler[12]DShadow|samplerCubeShadow|[iu]?sampler[12]DArray|sampler[12]DArrayShadow|[iu]?sampler2DRect|sampler2DRectShadow|[iu]?samplerBuffer|[iu]?sampler2DMS(?:Array)?|[iu]?samplerCubeArray|samplerCubeArrayShadow|[iu]?image[123]D|[iu]?image2DRect|[iu]?imageCube|[iu]?imageBuffer|[iu]?image[12]DArray|[iu]?imageCubeArray|[iu]?image2DMS(?:Array)?|struct|common|partition|active|asm|class|union|enum|typedef|template|this|resource|goto|inline|noinline|public|static|extern|external|interface|long|short|half|fixed|unsigned|superp|input|output|hvec[234]|fvec[234]|sampler3DRect|filter|sizeof|cast|namespace|using)\\b/\n});\n\nPrism.languages.insertBefore('glsl', 'comment', {\n\t'preprocessor': {\n\t\tpattern: /(^[ \\t]*)#(?:(?:define|undef|if|ifdef|ifndef|else|elif|endif|error|pragma|extension|version|line)\\b)?/m,\n\t\tlookbehind: true,\n\t\talias: 'builtin'\n\t}\n});","Prism.languages.glsl=Prism.languages.extend(\"clike\",{comment:[/\\/\\*[\\s\\S]*?\\*\\//,/\\/\\/(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/],number:/(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ulf]*/i,keyword:/\\b(?:attribute|const|uniform|varying|buffer|shared|coherent|volatile|restrict|readonly|writeonly|atomic_uint|layout|centroid|flat|smooth|noperspective|patch|sample|break|continue|do|for|while|switch|case|default|if|else|subroutine|in|out|inout|float|double|int|void|bool|true|false|invariant|precise|discard|return|d?mat[234](?:x[234])?|[ibdu]?vec[234]|uint|lowp|mediump|highp|precision|[iu]?sampler[123]D|[iu]?samplerCube|sampler[12]DShadow|samplerCubeShadow|[iu]?sampler[12]DArray|sampler[12]DArrayShadow|[iu]?sampler2DRect|sampler2DRectShadow|[iu]?samplerBuffer|[iu]?sampler2DMS(?:Array)?|[iu]?samplerCubeArray|samplerCubeArrayShadow|[iu]?image[123]D|[iu]?image2DRect|[iu]?imageCube|[iu]?imageBuffer|[iu]?image[12]DArray|[iu]?imageCubeArray|[iu]?image2DMS(?:Array)?|struct|common|partition|active|asm|class|union|enum|typedef|template|this|resource|goto|inline|noinline|public|static|extern|external|interface|long|short|half|fixed|unsigned|superp|input|output|hvec[234]|fvec[234]|sampler3DRect|filter|sizeof|cast|namespace|using)\\b/}),Prism.languages.insertBefore(\"glsl\",\"comment\",{preprocessor:{pattern:/(^[ \\t]*)#(?:(?:define|undef|if|ifdef|ifndef|else|elif|endif|error|pragma|extension|version|line)\\b)?/m,lookbehind:!0,alias:\"builtin\"}});","Prism.languages.gamemakerlanguage = Prism.languages.gml = Prism.languages.extend('clike', {\n\t'number': /(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ulf]*/i,\n\t'keyword': /\\b(?:if|else|switch|case|default|break|for|repeat|while|do|until|continue|exit|return|globalvar|var|enum)\\b/,\n\t'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not|with|at|xor|not)\\b/,\n\t'constant': /\\b(self|other|all|noone|global|local|undefined|pointer_(?:invalid|null)|action_(?:stop|restart|continue|reverse)|pi|GM_build_date|GM_version|timezone_(?:local|utc)|gamespeed_(?:fps|microseconds)|ev_(?:create|destroy|step|alarm|keyboard|mouse|collision|other|draw|draw_(?:begin|end|pre|post)|keypress|keyrelease|trigger|(?:left|right|middle|no)_button|(?:left|right|middle)_press|(?:left|right|middle)_release|mouse_(?:enter|leave|wheel_up|wheel_down)|global_(?:left|right|middle)_button|global_(?:left|right|middle)_press|global_(?:left|right|middle)_release|joystick(?:1|2)_(?:left|right|up|down|button1|button2|button3|button4|button5|button6|button7|button8)|outside|boundary|game_start|game_end|room_start|room_end|no_more_lives|animation_end|end_of_path|no_more_health|user\\d|step_(?:normal|begin|end)|gui|gui_begin|gui_end)|vk_(?:nokey|anykey|enter|return|shift|control|alt|escape|space|backspace|tab|pause|printscreen|left|right|up|down|home|end|delete|insert|pageup|pagedown|f\\d|numpad\\d|divide|multiply|subtract|add|decimal|lshift|lcontrol|lalt|rshift|rcontrol|ralt)|mb_(?:any|none|left|right|middle)|c_(?:aqua|black|blue|dkgray|fuchsia|gray|green|lime|ltgray|maroon|navy|olive|purple|red|silver|teal|white|yellow|orange)|fa_(?:left|center|right|top|middle|bottom|readonly|hidden|sysfile|volumeid|directory|archive)|pr_(?:pointlist|linelist|linestrip|trianglelist|trianglestrip|trianglefan)|bm_(?:complex|normal|add|max|subtract|zero|one|src_colour|inv_src_colour|src_color|inv_src_color|src_alpha|inv_src_alpha|dest_alpha|inv_dest_alpha|dest_colour|inv_dest_colour|dest_color|inv_dest_color|src_alpha_sat)|audio_(?:falloff_(?:none|inverse_distance|inverse_distance_clamped|linear_distance|linear_distance_clamped|exponent_distance|exponent_distance_clamped)|old_system|new_system|mono|stereo|3d)|cr_(?:default|none|arrow|cross|beam|size_nesw|size_ns|size_nwse|size_we|uparrow|hourglass|drag|appstart|handpoint|size_all)|spritespeed_framesper(?:second|gameframe)|asset_(?:object|unknown|sprite|sound|room|path|script|font|timeline|tiles|shader)|ds_type_(?:map|list|stack|queue|grid|priority)|ef_(?:explosion|ring|ellipse|firework|smoke|smokeup|star|spark|flare|cloud|rain|snow)|pt_shape_(?:pixel|disk|square|line|star|circle|ring|sphere|flare|spark|explosion|cloud|smoke|snow)|ps_(?:distr|shape)_(?:linear|gaussian|invgaussian|rectangle|ellipse|diamond|line)|ty_(?:real|string)|dll_(?:cdel|cdecl|stdcall)|matrix_(?:view|projection|world)|os_(?:win32|windows|macosx|ios|android|linux|unknown|winphone|win8native|psvita|ps4|xboxone|ps3|uwp)|browser_(?:not_a_browser|unknown|ie|firefox|chrome|safari|safari_mobile|opera|tizen|windows_store|ie_mobile)|device_ios_(?:unknown|iphone|iphone_retina|ipad|ipad_retina|iphone5|iphone6|iphone6plus)|device_(?:emulator|tablet)|display_(?:landscape|landscape_flipped|portrait|portrait_flipped)|of_challenge_(?:win|lose|tie)|leaderboard_type_(?:number|time_mins_secs)|cmpfunc_(?:never|less|equal|lessequal|greater|notequal|greaterequal|always)|cull_(?:noculling|clockwise|counterclockwise)|lighttype_(?:dir|point)|iap_(?:ev_storeload|ev_product|ev_purchase|ev_consume|ev_restore|storeload_ok|storeload_failed|status_uninitialised|status_unavailable|status_loading|status_available|status_processing|status_restoring|failed|unavailable|available|purchased|canceled|refunded)|fb_login_(?:default|fallback_to_webview|no_fallback_to_webview|forcing_webview|use_system_account|forcing_safari)|phy_joint_(?:anchor_1_x|anchor_1_y|anchor_2_x|anchor_2_y|reaction_force_x|reaction_force_y|reaction_torque|motor_speed|angle|motor_torque|max_motor_torque|translation|speed|motor_force|max_motor_force|length_1|length_2|damping_ratio|frequency|lower_angle_limit|upper_angle_limit|angle_limits|max_length|max_torque|max_force)|phy_debug_render_(?:aabb|collision_pairs|coms|core_shapes|joints|obb|shapes)|phy_particle_flag_(?:water|zombie|wall|spring|elastic|viscous|powder|tensile|colourmixing|colormixing)|phy_particle_group_flag_(?:solid|rigid)|phy_particle_data_flag_(?:typeflags|position|velocity|colour|color|category)|achievement_(?:our_info|friends_info|leaderboard_info|info|filter_(?:all_players|friends_only|favorites_only)|type_challenge|type_score_challenge|pic_loaded|show_(?:ui|profile|leaderboard|achievement|bank|friend_picker|purchase_prompt))|network_(?:socket_(?:tcp|udp|bluetooth)|type_(?:connect|disconnect|data|non_blocking_connect)|config_(?:connect_timeout|use_non_blocking_socket|enable_reliable_udp|disable_reliable_udp))|buffer_(?:fixed|grow|wrap|fast|vbuffer|network|u8|s8|u16|s16|u32|s32|u64|f16|f32|f64|bool|text|string|seek_start|seek_relative|seek_end|generalerror|outofspace|outofbounds|invalidtype)|gp_(?:face\\d|shoulderl|shoulderr|shoulderlb|shoulderrb|select|start|stickl|stickr|padu|padd|padl|padr|axislh|axislv|axisrh|axisrv)|ov_(?:friends|community|players|settings|gamegroup|achievements)|lb_sort_(?:none|ascending|descending)|lb_disp_(?:none|numeric|time_sec|time_ms)|ugc_(?:result_success|filetype_(?:community|microtrans)|visibility_(?:public|friends_only|private)|query_RankedBy(?:Vote|PublicationDate|Trend|NumTimesReported|TotalVotesAsc|VotesUp|TextSearch)|query_(?:AcceptedForGameRankedByAcceptanceDate|FavoritedByFriendsRankedByPublicationDate|CreatedByFriendsRankedByPublicationDate|NotYetRated)|sortorder_CreationOrder(?:Desc|Asc)|sortorder_(?:TitleAsc|LastUpdatedDesc|SubscriptionDateDesc|VoteScoreDesc|ForModeration)|list_(?:Published|VotedOn|VotedUp|VotedDown|WillVoteLater|Favorited|Subscribed|UsedOrPlayed|Followed)|match_(?:Items|Items_Mtx|Items_ReadyToUse|Collections|Artwork|Videos|Screenshots|AllGuides|WebGuides|IntegratedGuides|UsableInGame|ControllerBindings))|vertex_usage_(?:position|colour|color|normal|texcoord|textcoord|blendweight|blendindices|psize|tangent|binormal|fog|depth|sample)|vertex_type_(?:float\\d|colour|color|ubyte4)|layerelementtype_(?:undefined|background|instance|oldtilemap|sprite|tilemap|particlesystem|tile)|tile_(?:rotate|flip|mirror|index_mask)|input_type|se_(?:chorus|compressor|echo|equalizer|flanger|gargle|none|reverb)|text_type|(obj|scr|spr|rm)\\w+)\\b/,\n\t'variable': /\\b(x|y|(?:x|y)(?:previous|start)|(?:h|v)speed|direction|speed|friction|gravity|gravity_direction|path_(?:index|position|positionprevious|speed|scale|orientation|endaction)|object_index|id|solid|persistent|mask_index|instance_(?:count|id)|alarm|timeline_(?:index|position|speed|running|loop)|visible|sprite_(?:index|width|height|xoffset|yoffset)|image_(?:number|index|speed|depth|xscale|yscale|angle|alpha|blend)|bbox_(?:left|right|top|bottom)|layer|phy_(?:rotation|(?:position|linear_velocity|speed|com|collision|col_normal)_(?:x|y)|angular_(?:velocity|damping)|position_(?:x|y)previous|speed|linear_damping|bullet|fixed_rotation|active|mass|inertia|dynamic|kinematic|sleeping|collision_points)|working_directory|webgl_enabled|view_(?:(?:y|x|w|h)view|(?:y|x|w|h)port|(?:v|h)(?:speed|border)|visible|surface_id|object|enabled|current|angle)|undefined|transition_(?:steps|kind|color)|temp_directory|show_(?:score|lives|health)|secure_mode|score|room_(?:width|speed|persistent|last|height|first|caption)|room|pointer_(?:null|invalid)|os_(?:version|type|device|browser)|mouse_(?:y|x|lastbutton|button)|lives|keyboard_(?:string|lastkey|lastchar|key)|iap_data|health|gamemaker_(?:version|registered|pro)|game_(?:save|project|display)_(?:id|name)|fps_real|fps|event_(?:type|object|number|action)|error_(?:occurred|last)|display_aa|delta_time|debug_mode|cursor_sprite|current_(?:year|weekday|time|second|month|minute|hour|day)|caption_(?:score|lives|health)|browser_(?:width|height)|background_(?:yscale|y|xscale|x|width|vtiled|vspeed|visible|showcolour|showcolor|index|htiled|hspeed|height|foreground|colour|color|blend|alpha)|async_load|application_surface|argument(?:_relitive|_count|\\d)|argument|global|local|self|other)\\b/\n});\n","Prism.languages.gamemakerlanguage=Prism.languages.gml=Prism.languages.extend(\"clike\",{number:/(?:\\b0x[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ulf]*/i,keyword:/\\b(?:if|else|switch|case|default|break|for|repeat|while|do|until|continue|exit|return|globalvar|var|enum)\\b/,operator:/[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not|with|at|xor|not)\\b/,constant:/\\b(self|other|all|noone|global|local|undefined|pointer_(?:invalid|null)|action_(?:stop|restart|continue|reverse)|pi|GM_build_date|GM_version|timezone_(?:local|utc)|gamespeed_(?:fps|microseconds)|ev_(?:create|destroy|step|alarm|keyboard|mouse|collision|other|draw|draw_(?:begin|end|pre|post)|keypress|keyrelease|trigger|(?:left|right|middle|no)_button|(?:left|right|middle)_press|(?:left|right|middle)_release|mouse_(?:enter|leave|wheel_up|wheel_down)|global_(?:left|right|middle)_button|global_(?:left|right|middle)_press|global_(?:left|right|middle)_release|joystick(?:1|2)_(?:left|right|up|down|button1|button2|button3|button4|button5|button6|button7|button8)|outside|boundary|game_start|game_end|room_start|room_end|no_more_lives|animation_end|end_of_path|no_more_health|user\\d|step_(?:normal|begin|end)|gui|gui_begin|gui_end)|vk_(?:nokey|anykey|enter|return|shift|control|alt|escape|space|backspace|tab|pause|printscreen|left|right|up|down|home|end|delete|insert|pageup|pagedown|f\\d|numpad\\d|divide|multiply|subtract|add|decimal|lshift|lcontrol|lalt|rshift|rcontrol|ralt)|mb_(?:any|none|left|right|middle)|c_(?:aqua|black|blue|dkgray|fuchsia|gray|green|lime|ltgray|maroon|navy|olive|purple|red|silver|teal|white|yellow|orange)|fa_(?:left|center|right|top|middle|bottom|readonly|hidden|sysfile|volumeid|directory|archive)|pr_(?:pointlist|linelist|linestrip|trianglelist|trianglestrip|trianglefan)|bm_(?:complex|normal|add|max|subtract|zero|one|src_colour|inv_src_colour|src_color|inv_src_color|src_alpha|inv_src_alpha|dest_alpha|inv_dest_alpha|dest_colour|inv_dest_colour|dest_color|inv_dest_color|src_alpha_sat)|audio_(?:falloff_(?:none|inverse_distance|inverse_distance_clamped|linear_distance|linear_distance_clamped|exponent_distance|exponent_distance_clamped)|old_system|new_system|mono|stereo|3d)|cr_(?:default|none|arrow|cross|beam|size_nesw|size_ns|size_nwse|size_we|uparrow|hourglass|drag|appstart|handpoint|size_all)|spritespeed_framesper(?:second|gameframe)|asset_(?:object|unknown|sprite|sound|room|path|script|font|timeline|tiles|shader)|ds_type_(?:map|list|stack|queue|grid|priority)|ef_(?:explosion|ring|ellipse|firework|smoke|smokeup|star|spark|flare|cloud|rain|snow)|pt_shape_(?:pixel|disk|square|line|star|circle|ring|sphere|flare|spark|explosion|cloud|smoke|snow)|ps_(?:distr|shape)_(?:linear|gaussian|invgaussian|rectangle|ellipse|diamond|line)|ty_(?:real|string)|dll_(?:cdel|cdecl|stdcall)|matrix_(?:view|projection|world)|os_(?:win32|windows|macosx|ios|android|linux|unknown|winphone|win8native|psvita|ps4|xboxone|ps3|uwp)|browser_(?:not_a_browser|unknown|ie|firefox|chrome|safari|safari_mobile|opera|tizen|windows_store|ie_mobile)|device_ios_(?:unknown|iphone|iphone_retina|ipad|ipad_retina|iphone5|iphone6|iphone6plus)|device_(?:emulator|tablet)|display_(?:landscape|landscape_flipped|portrait|portrait_flipped)|of_challenge_(?:win|lose|tie)|leaderboard_type_(?:number|time_mins_secs)|cmpfunc_(?:never|less|equal|lessequal|greater|notequal|greaterequal|always)|cull_(?:noculling|clockwise|counterclockwise)|lighttype_(?:dir|point)|iap_(?:ev_storeload|ev_product|ev_purchase|ev_consume|ev_restore|storeload_ok|storeload_failed|status_uninitialised|status_unavailable|status_loading|status_available|status_processing|status_restoring|failed|unavailable|available|purchased|canceled|refunded)|fb_login_(?:default|fallback_to_webview|no_fallback_to_webview|forcing_webview|use_system_account|forcing_safari)|phy_joint_(?:anchor_1_x|anchor_1_y|anchor_2_x|anchor_2_y|reaction_force_x|reaction_force_y|reaction_torque|motor_speed|angle|motor_torque|max_motor_torque|translation|speed|motor_force|max_motor_force|length_1|length_2|damping_ratio|frequency|lower_angle_limit|upper_angle_limit|angle_limits|max_length|max_torque|max_force)|phy_debug_render_(?:aabb|collision_pairs|coms|core_shapes|joints|obb|shapes)|phy_particle_flag_(?:water|zombie|wall|spring|elastic|viscous|powder|tensile|colourmixing|colormixing)|phy_particle_group_flag_(?:solid|rigid)|phy_particle_data_flag_(?:typeflags|position|velocity|colour|color|category)|achievement_(?:our_info|friends_info|leaderboard_info|info|filter_(?:all_players|friends_only|favorites_only)|type_challenge|type_score_challenge|pic_loaded|show_(?:ui|profile|leaderboard|achievement|bank|friend_picker|purchase_prompt))|network_(?:socket_(?:tcp|udp|bluetooth)|type_(?:connect|disconnect|data|non_blocking_connect)|config_(?:connect_timeout|use_non_blocking_socket|enable_reliable_udp|disable_reliable_udp))|buffer_(?:fixed|grow|wrap|fast|vbuffer|network|u8|s8|u16|s16|u32|s32|u64|f16|f32|f64|bool|text|string|seek_start|seek_relative|seek_end|generalerror|outofspace|outofbounds|invalidtype)|gp_(?:face\\d|shoulderl|shoulderr|shoulderlb|shoulderrb|select|start|stickl|stickr|padu|padd|padl|padr|axislh|axislv|axisrh|axisrv)|ov_(?:friends|community|players|settings|gamegroup|achievements)|lb_sort_(?:none|ascending|descending)|lb_disp_(?:none|numeric|time_sec|time_ms)|ugc_(?:result_success|filetype_(?:community|microtrans)|visibility_(?:public|friends_only|private)|query_RankedBy(?:Vote|PublicationDate|Trend|NumTimesReported|TotalVotesAsc|VotesUp|TextSearch)|query_(?:AcceptedForGameRankedByAcceptanceDate|FavoritedByFriendsRankedByPublicationDate|CreatedByFriendsRankedByPublicationDate|NotYetRated)|sortorder_CreationOrder(?:Desc|Asc)|sortorder_(?:TitleAsc|LastUpdatedDesc|SubscriptionDateDesc|VoteScoreDesc|ForModeration)|list_(?:Published|VotedOn|VotedUp|VotedDown|WillVoteLater|Favorited|Subscribed|UsedOrPlayed|Followed)|match_(?:Items|Items_Mtx|Items_ReadyToUse|Collections|Artwork|Videos|Screenshots|AllGuides|WebGuides|IntegratedGuides|UsableInGame|ControllerBindings))|vertex_usage_(?:position|colour|color|normal|texcoord|textcoord|blendweight|blendindices|psize|tangent|binormal|fog|depth|sample)|vertex_type_(?:float\\d|colour|color|ubyte4)|layerelementtype_(?:undefined|background|instance|oldtilemap|sprite|tilemap|particlesystem|tile)|tile_(?:rotate|flip|mirror|index_mask)|input_type|se_(?:chorus|compressor|echo|equalizer|flanger|gargle|none|reverb)|text_type|(obj|scr|spr|rm)\\w+)\\b/,variable:/\\b(x|y|(?:x|y)(?:previous|start)|(?:h|v)speed|direction|speed|friction|gravity|gravity_direction|path_(?:index|position|positionprevious|speed|scale|orientation|endaction)|object_index|id|solid|persistent|mask_index|instance_(?:count|id)|alarm|timeline_(?:index|position|speed|running|loop)|visible|sprite_(?:index|width|height|xoffset|yoffset)|image_(?:number|index|speed|depth|xscale|yscale|angle|alpha|blend)|bbox_(?:left|right|top|bottom)|layer|phy_(?:rotation|(?:position|linear_velocity|speed|com|collision|col_normal)_(?:x|y)|angular_(?:velocity|damping)|position_(?:x|y)previous|speed|linear_damping|bullet|fixed_rotation|active|mass|inertia|dynamic|kinematic|sleeping|collision_points)|working_directory|webgl_enabled|view_(?:(?:y|x|w|h)view|(?:y|x|w|h)port|(?:v|h)(?:speed|border)|visible|surface_id|object|enabled|current|angle)|undefined|transition_(?:steps|kind|color)|temp_directory|show_(?:score|lives|health)|secure_mode|score|room_(?:width|speed|persistent|last|height|first|caption)|room|pointer_(?:null|invalid)|os_(?:version|type|device|browser)|mouse_(?:y|x|lastbutton|button)|lives|keyboard_(?:string|lastkey|lastchar|key)|iap_data|health|gamemaker_(?:version|registered|pro)|game_(?:save|project|display)_(?:id|name)|fps_real|fps|event_(?:type|object|number|action)|error_(?:occurred|last)|display_aa|delta_time|debug_mode|cursor_sprite|current_(?:year|weekday|time|second|month|minute|hour|day)|caption_(?:score|lives|health)|browser_(?:width|height)|background_(?:yscale|y|xscale|x|width|vtiled|vspeed|visible|showcolour|showcolor|index|htiled|hspeed|height|foreground|colour|color|blend|alpha)|async_load|application_surface|argument(?:_relitive|_count|\\d)|argument|global|local|self|other)\\b/});","Prism.languages.go = Prism.languages.extend('clike', {\n\t'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n\t'builtin': /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/,\n\t'boolean': /\\b(?:_|iota|nil|true|false)\\b/,\n\t'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n\t'number': /(?:\\b0x[a-f\\d]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n\t'string': {\n\t\tpattern: /([\"'`])(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n\t\tgreedy: true\n\t}\n});\ndelete Prism.languages.go['class-name'];\n","Prism.languages.go=Prism.languages.extend(\"clike\",{keyword:/\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,builtin:/\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/,boolean:/\\b(?:_|iota|nil|true|false)\\b/,operator:/[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,number:/(?:\\b0x[a-f\\d]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,string:{pattern:/([\"'`])(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,greedy:!0}}),delete Prism.languages.go[\"class-name\"];","Prism.languages.graphql = {\n\t'comment': /#.*/,\n\t'string': {\n\t\tpattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n\t\tgreedy: true\n\t},\n\t'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'variable': /\\$[a-z_]\\w*/i,\n\t'directive': {\n\t\tpattern: /@[a-z_]\\w*/i,\n\t\talias: 'function'\n\t},\n\t'attr-name': {\n\t\tpattern: /[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+)[a-zA-Z_]\\w*/,\n\t\tlookbehind: true\n\t},\n\t'fragment': {\n\t\tpattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n\t\tlookbehind: true,\n\t\talias: 'function'\n\t},\n\t'keyword': /\\b(?:enum|fragment|implements|input|interface|mutation|on|query|scalar|schema|type|union)\\b/,\n\t'operator': /[!=|]|\\.{3}/,\n\t'punctuation': /[!(){}\\[\\]:=,]/,\n\t'constant': /\\b(?!ID\\b)[A-Z][A-Z_\\d]*\\b/\n};\n","Prism.languages.graphql={comment:/#.*/,string:{pattern:/\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,greedy:!0},number:/(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,boolean:/\\b(?:true|false)\\b/,variable:/\\$[a-z_]\\w*/i,directive:{pattern:/@[a-z_]\\w*/i,alias:\"function\"},\"attr-name\":{pattern:/[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,greedy:!0},\"class-name\":{pattern:/(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+)[a-zA-Z_]\\w*/,lookbehind:!0},fragment:{pattern:/(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,lookbehind:!0,alias:\"function\"},keyword:/\\b(?:enum|fragment|implements|input|interface|mutation|on|query|scalar|schema|type|union)\\b/,operator:/[!=|]|\\.{3}/,punctuation:/[!(){}\\[\\]:=,]/,constant:/\\b(?!ID\\b)[A-Z][A-Z_\\d]*\\b/};","Prism.languages.groovy = Prism.languages.extend('clike', {\n\t'keyword': /\\b(?:as|def|in|abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n\t'string': [\n\t\t{\n\t\t\tpattern: /(\"\"\"|''')[\\s\\S]*?\\1|(?:\\$\\/)(?:\\$\\/\\$|[\\s\\S])*?\\/\\$/,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /([\"'\\/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'number': /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?[\\d]+)?)[glidf]?\\b/i,\n\t'operator': {\n\t\tpattern: /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.{1,2}(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n\t\tlookbehind: true\n\t},\n\t'punctuation': /\\.+|[{}[\\];(),:$]/\n});\n\nPrism.languages.insertBefore('groovy', 'string', {\n\t'shebang': {\n\t\tpattern: /#!.+/,\n\t\talias: 'comment'\n\t}\n});\n\nPrism.languages.insertBefore('groovy', 'punctuation', {\n\t'spock-block': /\\b(?:setup|given|when|then|and|cleanup|expect|where):/\n});\n\nPrism.languages.insertBefore('groovy', 'function', {\n\t'annotation': {\n\t\talias: 'punctuation',\n\t\tpattern: /(^|[^.])@\\w+/,\n\t\tlookbehind: true\n\t}\n});\n\n// Handle string interpolation\nPrism.hooks.add('wrap', function(env) {\n\tif (env.language === 'groovy' && env.type === 'string') {\n\t\tvar delimiter = env.content[0];\n\n\t\tif (delimiter != \"'\") {\n\t\t\tvar pattern = /([^\\\\])(?:\\$(?:\\{.*?\\}|[\\w.]+))/;\n\t\t\tif (delimiter === '$') {\n\t\t\t\tpattern = /([^\\$])(?:\\$(?:\\{.*?\\}|[\\w.]+))/;\n\t\t\t}\n\n\t\t\t// To prevent double HTML-encoding we have to decode env.content first\n\t\t\tenv.content = env.content.replace(/&lt;/g, '<').replace(/&amp;/g, '&');\n\n\t\t\tenv.content = Prism.highlight(env.content, {\n\t\t\t\t'expression': {\n\t\t\t\t\tpattern: pattern,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: Prism.languages.groovy\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tenv.classes.push(delimiter === '/' ? 'regex' : 'gstring');\n\t\t}\n\t}\n});\n","Prism.languages.groovy=Prism.languages.extend(\"clike\",{keyword:/\\b(?:as|def|in|abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,string:[{pattern:/(\"\"\"|''')[\\s\\S]*?\\1|(?:\\$\\/)(?:\\$\\/\\$|[\\s\\S])*?\\/\\$/,greedy:!0},{pattern:/([\"'\\/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0}],number:/\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?[\\d]+)?)[glidf]?\\b/i,operator:{pattern:/(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.{1,2}(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,lookbehind:!0},punctuation:/\\.+|[{}[\\];(),:$]/}),Prism.languages.insertBefore(\"groovy\",\"string\",{shebang:{pattern:/#!.+/,alias:\"comment\"}}),Prism.languages.insertBefore(\"groovy\",\"punctuation\",{\"spock-block\":/\\b(?:setup|given|when|then|and|cleanup|expect|where):/}),Prism.languages.insertBefore(\"groovy\",\"function\",{annotation:{alias:\"punctuation\",pattern:/(^|[^.])@\\w+/,lookbehind:!0}}),Prism.hooks.add(\"wrap\",function(e){if(\"groovy\"===e.language&&\"string\"===e.type){var t=e.content[0];if(\"'\"!=t){var n=/([^\\\\])(?:\\$(?:\\{.*?\\}|[\\w.]+))/;\"$\"===t&&(n=/([^\\$])(?:\\$(?:\\{.*?\\}|[\\w.]+))/),e.content=e.content.replace(/&lt;/g,\"<\").replace(/&amp;/g,\"&\"),e.content=Prism.highlight(e.content,{expression:{pattern:n,lookbehind:!0,inside:Prism.languages.groovy}}),e.classes.push(\"/\"===t?\"regex\":\"gstring\")}}});","/* TODO\n\tHandle multiline code after tag\n\t    %foo= some |\n\t\t\tmultiline |\n\t\t\tcode |\n*/\n\n(function(Prism) {\n\n\tPrism.languages.haml = {\n\t\t// Multiline stuff should appear before the rest\n\n\t\t'multiline-comment': {\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)([\\t ]*))(?:\\/|-#).*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)*/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'comment'\n\t\t},\n\n\t\t'multiline-code': [\n\t\t\t{\n\t\t\t\tpattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*,[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.*,[\\t ]*)*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\trest: Prism.languages.ruby\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*\\|[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.*\\|[\\t ]*)*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\trest: Prism.languages.ruby\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\n\t\t// See at the end of the file for known filters\n\t\t'filter': {\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)([\\t ]*)):[\\w-]+(?:(?:\\r?\\n|\\r)(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'filter-name': {\n\t\t\t\t\tpattern: /^:[\\w-]+/,\n\t\t\t\t\talias: 'variable'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t'markup': {\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)[\\t ]*)<.+/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\trest: Prism.languages.markup\n\t\t\t}\n\t\t},\n\t\t'doctype': {\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)[\\t ]*)!!!(?: .+)?/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'tag': {\n\t\t\t// Allows for one nested group of braces\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attributes': [\n\t\t\t\t\t{\n\t\t\t\t\t\t// Lookbehind tries to prevent interpolations from breaking it all\n\t\t\t\t\t\t// Allows for one nested group of braces\n\t\t\t\t\t\tpattern: /(^|[^#])\\{(?:\\{[^}]+\\}|[^}])+\\}/,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\trest: Prism.languages.ruby\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /\\([^)]+\\)/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\t\t\tpattern: /(=\\s*)(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|[^)\\s]+)/,\n\t\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'attr-name': /[\\w:-]+(?=\\s*!?=|\\s*[,)])/,\n\t\t\t\t\t\t\t'punctuation': /[=(),]/\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /\\[[^\\]]+\\]/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\trest: Prism.languages.ruby\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t'punctuation': /[<>]/\n\t\t\t}\n\t\t},\n\t\t'code': {\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)[\\t ]*(?:[~-]|[&!]?=)).+/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\trest: Prism.languages.ruby\n\t\t\t}\n\t\t},\n\t\t// Interpolations in plain text\n\t\t'interpolation': {\n\t\t\tpattern: /#\\{[^}]+\\}/,\n\t\t\tinside: {\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^#\\{|\\}$/,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.ruby\n\t\t\t}\n\t\t},\n\t\t'punctuation': {\n\t\t\tpattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[~=\\-&!]+/,\n\t\t\tlookbehind: true\n\t\t}\n\t};\n\n\tvar filter_pattern = '((?:^|\\\\r?\\\\n|\\\\r)([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r)(?:\\\\2[\\\\t ]+.+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+';\n\n\t// Non exhaustive list of available filters and associated languages\n\tvar filters = [\n\t\t'css',\n\t\t{filter:'coffee',language:'coffeescript'},\n\t\t'erb',\n\t\t'javascript',\n\t\t'less',\n\t\t'markdown',\n\t\t'ruby',\n\t\t'scss',\n\t\t'textile'\n\t];\n\tvar all_filters = {};\n\tfor (var i = 0, l = filters.length; i < l; i++) {\n\t\tvar filter = filters[i];\n\t\tfilter = typeof filter === 'string' ? {filter: filter, language: filter} : filter;\n\t\tif (Prism.languages[filter.language]) {\n\t\t\tall_filters['filter-' + filter.filter] = {\n\t\t\t\tpattern: RegExp(filter_pattern.replace('{{filter_name}}', filter.filter)),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'filter-name': {\n\t\t\t\t\t\tpattern: /^:[\\w-]+/,\n\t\t\t\t\t\talias: 'variable'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages[filter.language]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tPrism.languages.insertBefore('haml', 'filter', all_filters);\n\n}(Prism));","!function(e){e.languages.haml={\"multiline-comment\":{pattern:/((?:^|\\r?\\n|\\r)([\\t ]*))(?:\\/|-#).*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)*/,lookbehind:!0,alias:\"comment\"},\"multiline-code\":[{pattern:/((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*,[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.*,[\\t ]*)*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)/,lookbehind:!0,inside:{rest:e.languages.ruby}},{pattern:/((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*\\|[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.*\\|[\\t ]*)*/,lookbehind:!0,inside:{rest:e.languages.ruby}}],filter:{pattern:/((?:^|\\r?\\n|\\r)([\\t ]*)):[\\w-]+(?:(?:\\r?\\n|\\r)(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/,lookbehind:!0,inside:{\"filter-name\":{pattern:/^:[\\w-]+/,alias:\"variable\"}}},markup:{pattern:/((?:^|\\r?\\n|\\r)[\\t ]*)<.+/,lookbehind:!0,inside:{rest:e.languages.markup}},doctype:{pattern:/((?:^|\\r?\\n|\\r)[\\t ]*)!!!(?: .+)?/,lookbehind:!0},tag:{pattern:/((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,lookbehind:!0,inside:{attributes:[{pattern:/(^|[^#])\\{(?:\\{[^}]+\\}|[^}])+\\}/,lookbehind:!0,inside:{rest:e.languages.ruby}},{pattern:/\\([^)]+\\)/,inside:{\"attr-value\":{pattern:/(=\\s*)(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|[^)\\s]+)/,lookbehind:!0},\"attr-name\":/[\\w:-]+(?=\\s*!?=|\\s*[,)])/,punctuation:/[=(),]/}},{pattern:/\\[[^\\]]+\\]/,inside:{rest:e.languages.ruby}}],punctuation:/[<>]/}},code:{pattern:/((?:^|\\r?\\n|\\r)[\\t ]*(?:[~-]|[&!]?=)).+/,lookbehind:!0,inside:{rest:e.languages.ruby}},interpolation:{pattern:/#\\{[^}]+\\}/,inside:{delimiter:{pattern:/^#\\{|\\}$/,alias:\"punctuation\"},rest:e.languages.ruby}},punctuation:{pattern:/((?:^|\\r?\\n|\\r)[\\t ]*)[~=\\-&!]+/,lookbehind:!0}};for(var t=[\"css\",{filter:\"coffee\",language:\"coffeescript\"},\"erb\",\"javascript\",\"less\",\"markdown\",\"ruby\",\"scss\",\"textile\"],r={},n=0,a=t.length;n<a;n++){var i=t[n];i=\"string\"==typeof i?{filter:i,language:i}:i,e.languages[i.language]&&(r[\"filter-\"+i.filter]={pattern:RegExp(\"((?:^|\\\\r?\\\\n|\\\\r)([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r)(?:\\\\2[\\\\t ]+.+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+\".replace(\"{{filter_name}}\",i.filter)),lookbehind:!0,inside:{\"filter-name\":{pattern:/^:[\\w-]+/,alias:\"variable\"},rest:e.languages[i.language]}})}e.languages.insertBefore(\"haml\",\"filter\",r)}(Prism);","(function(Prism) {\n\n\tPrism.languages.handlebars = {\n\t\t'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n\t\t'delimiter': {\n\t\t\tpattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t'block': {\n\t\t\tpattern: /^(\\s*~?\\s*)[#\\/]\\S+?(?=\\s*~?\\s*$|\\s)/i,\n\t\t\tlookbehind: true,\n\t\t\talias: 'keyword'\n\t\t},\n\t\t'brackets': {\n\t\t\tpattern: /\\[[^\\]]+\\]/,\n\t\t\tinside: {\n\t\t\t\tpunctuation: /\\[|\\]/,\n\t\t\t\tvariable: /[\\s\\S]+/\n\t\t\t}\n\t\t},\n\t\t'punctuation': /[!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n\t\t'variable': /[^!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n\t};\n\n\tPrism.hooks.add('before-tokenize', function(env) {\n\t\tvar handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n\t});\n\n\tPrism.hooks.add('after-tokenize', function(env) {\n\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n\t});\n\n}(Prism));\n","!function(e){e.languages.handlebars={comment:/\\{\\{![\\s\\S]*?\\}\\}/,delimiter:{pattern:/^\\{\\{\\{?|\\}\\}\\}?$/i,alias:\"punctuation\"},string:/([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,number:/\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,boolean:/\\b(?:true|false)\\b/,block:{pattern:/^(\\s*~?\\s*)[#\\/]\\S+?(?=\\s*~?\\s*$|\\s)/i,lookbehind:!0,alias:\"keyword\"},brackets:{pattern:/\\[[^\\]]+\\]/,inside:{punctuation:/\\[|\\]/,variable:/[\\s\\S]+/}},punctuation:/[!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,variable:/[^!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/},e.hooks.add(\"before-tokenize\",function(a){e.languages[\"markup-templating\"].buildPlaceholders(a,\"handlebars\",/\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g)}),e.hooks.add(\"after-tokenize\",function(a){e.languages[\"markup-templating\"].tokenizePlaceholders(a,\"handlebars\")})}(Prism);","Prism.languages.haskell = {\n\t'comment': {\n\t\tpattern: /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|{-[\\s\\S]*?-})/m,\n\t\tlookbehind: true\n\t},\n\t'char': /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n\t'string': {\n\t\tpattern: /\"(?:[^\\\\\"]|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+)|\\\\\\s+\\\\)*\"/,\n\t\tgreedy: true\n\t},\n\t'keyword': /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n\t'import_statement': {\n\t\t// The imported or hidden names are not included in this import\n\t\t// statement. This is because we want to highlight those exactly like\n\t\t// we do for the names in the program.\n\t\tpattern: /((?:\\r?\\n|\\r|^)\\s*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][_a-zA-Z0-9']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'keyword': /\\b(?:import|qualified|as|hiding)\\b/\n\t\t}\n\t},\n\t// These are builtin variables only. Constructors are highlighted later as a constant.\n\t'builtin': /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n\t// decimal integers and floating point numbers | octal integers | hexadecimal integers\n\t'number': /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n\t// Most of this is needed because of the meaning of a single '.'.\n\t// If it stands alone freely, it is the function composition.\n\t// It may also be a separator between a module name and an identifier => no\n\t// operator. If it comes together with other special characters it is an\n\t// operator too.\n\t'operator': /\\s\\.\\s|[-!#$%*+=?&@|~.:<>^\\\\\\/]*\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+|[-!#$%*+=?&@|~.:<>^\\\\\\/]+\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]*|[-!#$%*+=?&@|~:<>^\\\\\\/]+|`([A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n\t// In Haskell, nearly everything is a variable, do not highlight these.\n\t'hvariable': /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*\\b/,\n\t'constant': /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*\\b/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\nPrism.languages.hs = Prism.languages.haskell;","Prism.languages.haskell={comment:{pattern:/(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|{-[\\s\\S]*?-})/m,lookbehind:!0},char:/'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,string:{pattern:/\"(?:[^\\\\\"]|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+)|\\\\\\s+\\\\)*\"/,greedy:!0},keyword:/\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,import_statement:{pattern:/((?:\\r?\\n|\\r|^)\\s*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][_a-zA-Z0-9']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,lookbehind:!0,inside:{keyword:/\\b(?:import|qualified|as|hiding)\\b/}},builtin:/\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,number:/\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,operator:/\\s\\.\\s|[-!#$%*+=?&@|~.:<>^\\\\\\/]*\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+|[-!#$%*+=?&@|~.:<>^\\\\\\/]+\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]*|[-!#$%*+=?&@|~:<>^\\\\\\/]+|`([A-Z][\\w']*\\.)*[_a-z][\\w']*`/,hvariable:/\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*\\b/,constant:/\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*\\b/,punctuation:/[{}[\\];(),.:]/},Prism.languages.hs=Prism.languages.haskell;","Prism.languages.haxe = Prism.languages.extend('clike', {\n\t// Strings can be multi-line\n\t'string': {\n\t\tpattern: /([\"'])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^}]+\\})/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation': {\n\t\t\t\t\t\tpattern: /^\\$\\w*/,\n\t\t\t\t\t\talias: 'variable'\n\t\t\t\t\t}\n\t\t\t\t\t// See rest below\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t// The final look-ahead prevents highlighting of keywords if expressions such as \"haxe.macro.Expr\"\n\t'keyword': /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|from|for|function|if|implements|import|in|inline|interface|macro|new|null|override|public|private|return|static|super|switch|throw|to|try|typedef|using|var|while)(?!\\.)\\b/,\n\t'operator': /\\.{3}|\\+\\+?|-[->]?|[=!]=?|&&?|\\|\\|?|<[<=]?|>[>=]?|[*\\/%~^]/\n});\nPrism.languages.insertBefore('haxe', 'class-name', {\n\t'regex': {\n\t\tpattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[igmsu]*/,\n\t\tgreedy: true\n\t}\n});\nPrism.languages.insertBefore('haxe', 'keyword', {\n\t'preprocessor': {\n\t\tpattern: /#\\w+/,\n\t\talias: 'builtin'\n\t},\n\t'metadata': {\n\t\tpattern: /@:?\\w+/,\n\t\talias: 'symbol'\n\t},\n\t'reification': {\n\t\tpattern: /\\$(?:\\w+|(?=\\{))/,\n\t\talias: 'variable'\n\t}\n});\nPrism.languages.haxe['string'].inside['interpolation'].inside.rest = Prism.languages.haxe;\ndelete Prism.languages.haxe['class-name'];","Prism.languages.haxe=Prism.languages.extend(\"clike\",{string:{pattern:/([\"'])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,greedy:!0,inside:{interpolation:{pattern:/(^|[^\\\\])\\$(?:\\w+|\\{[^}]+\\})/,lookbehind:!0,inside:{interpolation:{pattern:/^\\$\\w*/,alias:\"variable\"}}}}},keyword:/\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|from|for|function|if|implements|import|in|inline|interface|macro|new|null|override|public|private|return|static|super|switch|throw|to|try|typedef|using|var|while)(?!\\.)\\b/,operator:/\\.{3}|\\+\\+?|-[->]?|[=!]=?|&&?|\\|\\|?|<[<=]?|>[>=]?|[*\\/%~^]/}),Prism.languages.insertBefore(\"haxe\",\"class-name\",{regex:{pattern:/~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[igmsu]*/,greedy:!0}}),Prism.languages.insertBefore(\"haxe\",\"keyword\",{preprocessor:{pattern:/#\\w+/,alias:\"builtin\"},metadata:{pattern:/@:?\\w+/,alias:\"symbol\"},reification:{pattern:/\\$(?:\\w+|(?=\\{))/,alias:\"variable\"}}),Prism.languages.haxe.string.inside.interpolation.inside.rest=Prism.languages.haxe,delete Prism.languages.haxe[\"class-name\"];","Prism.languages.hcl = {\n\t'comment': /(?:\\/\\/|#).*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t'heredoc': {\n\t\tpattern: /<<-?(\\w+)[\\s\\S]*?^\\s*\\1/m,\n\t\tgreedy: true,\n\t\talias: 'string'\n\t},\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /(?:resource|data)\\s+(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")(?=\\s+\"[\\w-]+\"\\s+{)/i,\n\t\t\tinside: {\n\t\t\t\t'type': {\n\t\t\t\t\tpattern: /(resource|data|\\s+)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")/i,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'variable'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /(?:provider|provisioner|variable|output|module|backend)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+(?={)/i,\n\t\t\tinside: {\n\t\t\t\t'type': {\n\t\t\t\t\tpattern: /(provider|provisioner|variable|output|module|backend)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+/i,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'variable'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /[\\w-]+(?=\\s+{)/\n\t\t}\n\t],\n\t'property': [\n\t\t/[\\w-\\.]+(?=\\s*=(?!=))/,\n\t\t/\"(?:\\\\[\\s\\S]|[^\\\\\"])+\"(?=\\s*[:=])/,\n\t],\n\t'string': {\n\t\tpattern: /\"(?:[^\\\\$\"]|\\\\[\\s\\S]|\\$(?:(?=\")|\\$+|[^\"${])|\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\})*\"/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /(^|[^$])\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'type': {\n\t\t\t\t\t\tpattern: /(\\b(?:terraform|var|self|count|module|path|data|local)\\b\\.)[\\w\\*]+/i,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\talias: 'variable'\n\t\t\t\t\t},\n\t\t\t\t\t'keyword': /\\b(?:terraform|var|self|count|module|path|data|local)\\b/i,\n\t\t\t\t\t'function': /\\w+(?=\\()/,\n\t\t\t\t\t'string': {\n\t\t\t\t\t\tpattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n\t\t\t\t\t\tgreedy: true,\n\t\t\t\t\t},\n\t\t\t\t\t'number': /\\b0x[\\da-f]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?/i,\n\t\t\t\t\t'punctuation': /[!\\$#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~?:]/,\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t},\n\t'number': /\\b0x[\\da-f]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?/i,\n\t'boolean': /\\b(?:true|false)\\b/i,\n\t'punctuation': /[=\\[\\]{}]/,\n};\n","Prism.languages.hcl={comment:/(?:\\/\\/|#).*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,heredoc:{pattern:/<<-?(\\w+)[\\s\\S]*?^\\s*\\1/m,greedy:!0,alias:\"string\"},keyword:[{pattern:/(?:resource|data)\\s+(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")(?=\\s+\"[\\w-]+\"\\s+{)/i,inside:{type:{pattern:/(resource|data|\\s+)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")/i,lookbehind:!0,alias:\"variable\"}}},{pattern:/(?:provider|provisioner|variable|output|module|backend)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+(?={)/i,inside:{type:{pattern:/(provider|provisioner|variable|output|module|backend)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+/i,lookbehind:!0,alias:\"variable\"}}},{pattern:/[\\w-]+(?=\\s+{)/}],property:[/[\\w-\\.]+(?=\\s*=(?!=))/,/\"(?:\\\\[\\s\\S]|[^\\\\\"])+\"(?=\\s*[:=])/],string:{pattern:/\"(?:[^\\\\$\"]|\\\\[\\s\\S]|\\$(?:(?=\")|\\$+|[^\"${])|\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\})*\"/,greedy:!0,inside:{interpolation:{pattern:/(^|[^$])\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\}/,lookbehind:!0,inside:{type:{pattern:/(\\b(?:terraform|var|self|count|module|path|data|local)\\b\\.)[\\w\\*]+/i,lookbehind:!0,alias:\"variable\"},keyword:/\\b(?:terraform|var|self|count|module|path|data|local)\\b/i,function:/\\w+(?=\\()/,string:{pattern:/\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,greedy:!0},number:/\\b0x[\\da-f]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?/i,punctuation:/[!\\$#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~?:]/}}}},number:/\\b0x[\\da-f]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?/i,boolean:/\\b(?:true|false)\\b/i,punctuation:/[=\\[\\]{}]/};","/**\n * Original by Scott Helme.\n *\n * Reference: https://scotthelme.co.uk/hpkp-cheat-sheet/\n */\n\nPrism.languages.hpkp = {\n\t'directive': {\n\t\tpattern: /\\b(?:(?:includeSubDomains|preload|strict)(?: |;)|pin-sha256=\"[a-zA-Z\\d+=/]+\"|(?:max-age|report-uri)=|report-to )/,\n\t\talias: 'keyword'\n\t},\n\t'safe': {\n\t\tpattern: /\\d{7,}/,\n\t\talias: 'selector'\n\t},\n\t'unsafe': {\n\t\tpattern: /\\d{1,6}/,\n\t\talias: 'function'\n\t}\n};\n","Prism.languages.hpkp={directive:{pattern:/\\b(?:(?:includeSubDomains|preload|strict)(?: |;)|pin-sha256=\"[a-zA-Z\\d+=/]+\"|(?:max-age|report-uri)=|report-to )/,alias:\"keyword\"},safe:{pattern:/\\d{7,}/,alias:\"selector\"},unsafe:{pattern:/\\d{1,6}/,alias:\"function\"}};","/**\n * Original by Scott Helme.\n *\n * Reference: https://scotthelme.co.uk/hsts-cheat-sheet/\n */\n\nPrism.languages.hsts = {\n\t'directive': {\n\t\tpattern: /\\b(?:max-age=|includeSubDomains|preload)/,\n\t\talias: 'keyword'\n\t},\n\t'safe': {\n\t\tpattern: /\\d{8,}/,\n\t\talias: 'selector'\n\t},\n\t'unsafe': {\n\t\tpattern: /\\d{1,7}/,\n\t\talias: 'function'\n\t}\n};\n","Prism.languages.hsts={directive:{pattern:/\\b(?:max-age=|includeSubDomains|preload)/,alias:\"keyword\"},safe:{pattern:/\\d{8,}/,alias:\"selector\"},unsafe:{pattern:/\\d{1,7}/,alias:\"function\"}};","(function (Prism) {\n\tPrism.languages.http = {\n\t\t'request-line': {\n\t\t\tpattern: /^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\s(?:https?:\\/\\/|\\/)\\S+\\sHTTP\\/[0-9.]+/m,\n\t\t\tinside: {\n\t\t\t\t// HTTP Verb\n\t\t\t\t'property': /^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\b/,\n\t\t\t\t// Path or query argument\n\t\t\t\t'attr-name': /:\\w+/\n\t\t\t}\n\t\t},\n\t\t'response-status': {\n\t\t\tpattern: /^HTTP\\/1.[01] \\d+.*/m,\n\t\t\tinside: {\n\t\t\t\t// Status, e.g. 200 OK\n\t\t\t\t'property': {\n\t\t\t\t\tpattern: /(^HTTP\\/1.[01] )\\d+.*/i,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// HTTP header name\n\t\t'header-name': {\n\t\t\tpattern: /^[\\w-]+:(?=.)/m,\n\t\t\talias: 'keyword'\n\t\t}\n\t};\n\n\t// Create a mapping of Content-Type headers to language definitions\n\tvar langs = Prism.languages;\n\tvar httpLanguages = {\n\t\t'application/javascript': langs.javascript,\n\t\t'application/json': langs.json || langs.javascript,\n\t\t'application/xml': langs.xml,\n\t\t'text/xml': langs.xml,\n\t\t'text/html': langs.html,\n\t\t'text/css': langs.css\n\t};\n\n\t// Declare which types can also be suffixes\n\tvar suffixTypes = {\n\t\t'application/json': true,\n\t\t'application/xml': true\n\t};\n\n\t/**\n\t * Returns a pattern for the given content type which matches it and any type which has it as a suffix.\n\t *\n\t * @param {string} contentType\n\t * @returns {string}\n\t */\n\tfunction getSuffixPattern(contentType) {\n\t\tvar suffix = contentType.replace(/^[a-z]+\\//, '');\n\t\tvar suffixPattern = '\\\\w+/(?:[\\\\w.-]+\\\\+)+' + suffix + '(?![+\\\\w.-])';\n\t\treturn '(?:' + contentType + '|' + suffixPattern + ')';\n\t}\n\n\t// Insert each content type parser that has its associated language\n\t// currently loaded.\n\tvar options;\n\tfor (var contentType in httpLanguages) {\n\t\tif (httpLanguages[contentType]) {\n\t\t\toptions = options || {};\n\n\t\t\tvar pattern = suffixTypes[contentType] ? getSuffixPattern(contentType) : contentType;\n\t\t\toptions[contentType] = {\n\t\t\t\tpattern: RegExp('(content-type:\\\\s*' + pattern + '[\\\\s\\\\S]*?)(?:\\\\r?\\\\n|\\\\r){2}[\\\\s\\\\S]*', 'i'),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\trest: httpLanguages[contentType]\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\tif (options) {\n\t\tPrism.languages.insertBefore('http', 'header-name', options);\n\t}\n\n}(Prism));\n","!function(t){t.languages.http={\"request-line\":{pattern:/^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\s(?:https?:\\/\\/|\\/)\\S+\\sHTTP\\/[0-9.]+/m,inside:{property:/^(?:POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\b/,\"attr-name\":/:\\w+/}},\"response-status\":{pattern:/^HTTP\\/1.[01] \\d+.*/m,inside:{property:{pattern:/(^HTTP\\/1.[01] )\\d+.*/i,lookbehind:!0}}},\"header-name\":{pattern:/^[\\w-]+:(?=.)/m,alias:\"keyword\"}};var a,e,n,i=t.languages,s={\"application/javascript\":i.javascript,\"application/json\":i.json||i.javascript,\"application/xml\":i.xml,\"text/xml\":i.xml,\"text/html\":i.html,\"text/css\":i.css},p={\"application/json\":!0,\"application/xml\":!0};for(var r in s)if(s[r]){a=a||{};var T=p[r]?(void 0,n=(e=r).replace(/^[a-z]+\\//,\"\"),\"(?:\"+e+\"|\\\\w+/(?:[\\\\w.-]+\\\\+)+\"+n+\"(?![+\\\\w.-]))\"):r;a[r]={pattern:RegExp(\"(content-type:\\\\s*\"+T+\"[\\\\s\\\\S]*?)(?:\\\\r?\\\\n|\\\\r){2}[\\\\s\\\\S]*\",\"i\"),lookbehind:!0,inside:{rest:s[r]}}}a&&t.languages.insertBefore(\"http\",\"header-name\",a)}(Prism);","// according to the offical reference (EN)\n// https://ichigojam.net/IchigoJam-en.html\nPrism.languages.ichigojam = {\n\t'comment': /(?:\\B'|REM)(?:[^\\n\\r]*)/i,\n\t'string': {\n\t\tpattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^_ +\\-.A-Z\\d])*\"/i,\n\t\tgreedy: true\n\t},\n\t'number': /\\B#[0-9A-F]+|\\B`[01]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n\t'keyword': /\\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GSB|GOTO|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|RIGHT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\\$|\\b)/i,\n\t'function': /\\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\\$|\\b)/i,\n\t'label': /(?:\\B@[^\\s]+)/i,\n\t'operator': /<[=>]?|>=?|\\|\\||&&|[+\\-*\\/=|&^~!]|\\b(?:AND|NOT|OR)\\b/i,\n\t'punctuation': /[\\[,;:()\\]]/\n};","Prism.languages.ichigojam={comment:/(?:\\B'|REM)(?:[^\\n\\r]*)/i,string:{pattern:/\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^_ +\\-.A-Z\\d])*\"/i,greedy:!0},number:/\\B#[0-9A-F]+|\\B`[01]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,keyword:/\\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GSB|GOTO|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|RIGHT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\\$|\\b)/i,function:/\\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\\$|\\b)/i,label:/(?:\\B@[^\\s]+)/i,operator:/<[=>]?|>=?|\\|\\||&&|[+\\-*\\/=|&^~!]|\\b(?:AND|NOT|OR)\\b/i,punctuation:/[\\[,;:()\\]]/};","Prism.languages.icon = {\n\t'comment': /#.*/,\n\t'string': {\n\t\tpattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n_]|\\\\.|_(?!\\1)(?:\\r\\n|[\\s\\S]))*\\1/,\n\t\tgreedy: true\n\t},\n\t'number': /\\b(?:\\d+r[a-z\\d]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b|\\.\\d+\\b/i,\n\t'builtin-keyword': {\n\t\tpattern: /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\\b/,\n\t\talias: 'variable'\n\t},\n\t'directive': {\n\t\tpattern: /\\$\\w+/,\n\t\talias: 'builtin'\n\t},\n\t'keyword': /\\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\\b/,\n\t'function': /(?!\\d)\\w+(?=\\s*[({]|\\s*!\\s*\\[)/,\n\t'operator': /[+-]:(?!=)|(?:[\\/?@^%&]|\\+\\+?|--?|==?=?|~==?=?|\\*\\*?|\\|\\|\\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\\\|~]/,\n\t'punctuation': /[\\[\\](){},;]/\n};","Prism.languages.icon={comment:/#.*/,string:{pattern:/([\"'])(?:(?!\\1)[^\\\\\\r\\n_]|\\\\.|_(?!\\1)(?:\\r\\n|[\\s\\S]))*\\1/,greedy:!0},number:/\\b(?:\\d+r[a-z\\d]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b|\\.\\d+\\b/i,\"builtin-keyword\":{pattern:/&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\\b/,alias:\"variable\"},directive:{pattern:/\\$\\w+/,alias:\"builtin\"},keyword:/\\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\\b/,function:/(?!\\d)\\w+(?=\\s*[({]|\\s*!\\s*\\[)/,operator:/[+-]:(?!=)|(?:[\\/?@^%&]|\\+\\+?|--?|==?=?|~==?=?|\\*\\*?|\\|\\|\\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\\\|~]/,punctuation:/[\\[\\](){},;]/};","Prism.languages.inform7 = {\n\t'string': {\n\t\tpattern: /\"[^\"]*\"/,\n\t\tinside: {\n\t\t\t'substitution': {\n\t\t\t\tpattern: /\\[[^\\]]+\\]/,\n\t\t\t\tinside: {\n\t\t\t\t\t'delimiter': {\n\t\t\t\t\t\tpattern:/\\[|\\]/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t}\n\t\t\t\t\t// See rest below\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t'comment': {\n\t\tpattern: /\\[[^\\]]+\\]/,\n\t\tgreedy: true\n\t},\n\t'title': {\n\t\tpattern: /^[ \\t]*(?:volume|book|part(?! of)|chapter|section|table)\\b.+/im,\n\t\talias: 'important'\n\t},\n\t'number': {\n\t\tpattern: /(^|[^-])(?:\\b\\d+(?:\\.\\d+)?(?:\\^\\d+)?\\w*|\\b(?:one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve))\\b(?!-)/i,\n\t\tlookbehind: true\n\t},\n\t'verb': {\n\t\tpattern: /(^|[^-])\\b(?:applying to|are|attacking|answering|asking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:s|ing)?|consulting|contain(?:s|ing)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:ve|s|ving)|hold(?:s|ing)?|impl(?:y|ies)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:s|ing)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:s|ing)?|setting|showing|singing|sleeping|smelling|squeezing|switching|support(?:s|ing)?|swearing|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:s|ing)?|var(?:y|ies|ying)|waiting|waking|waving|wear(?:s|ing)?)\\b(?!-)/i,\n\t\tlookbehind: true,\n\t\talias: 'operator'\n\t},\n\t'keyword': {\n\t\tpattern: /(^|[^-])\\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|unless|the story)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\\b(?!-)/i,\n\t\tlookbehind: true\n\t},\n\t'property': {\n\t\tpattern: /(^|[^-])\\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: on| off)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\\b(?!-)/i,\n\t\tlookbehind: true,\n\t\talias: 'symbol'\n\t},\n\t'position': {\n\t\tpattern: /(^|[^-])\\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\\b(?!-)/i,\n\t\tlookbehind: true,\n\t\talias: 'keyword'\n\t},\n\t'type': {\n\t\tpattern: /(^|[^-])\\b(?:actions?|activit(?:y|ies)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\\b(?!-)/i,\n\t\tlookbehind: true,\n\t\talias: 'variable'\n\t},\n\t'punctuation': /[.,:;(){}]/\n};\n\nPrism.languages.inform7['string'].inside['substitution'].inside.rest = Prism.languages.inform7;\n// We don't want the remaining text in the substitution to be highlighted as the string.\nPrism.languages.inform7['string'].inside['substitution'].inside.rest.text = {\n\tpattern: /\\S(?:\\s*\\S)*/,\n\talias: 'comment'\n};","Prism.languages.inform7={string:{pattern:/\"[^\"]*\"/,inside:{substitution:{pattern:/\\[[^\\]]+\\]/,inside:{delimiter:{pattern:/\\[|\\]/,alias:\"punctuation\"}}}}},comment:{pattern:/\\[[^\\]]+\\]/,greedy:!0},title:{pattern:/^[ \\t]*(?:volume|book|part(?! of)|chapter|section|table)\\b.+/im,alias:\"important\"},number:{pattern:/(^|[^-])(?:\\b\\d+(?:\\.\\d+)?(?:\\^\\d+)?\\w*|\\b(?:one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve))\\b(?!-)/i,lookbehind:!0},verb:{pattern:/(^|[^-])\\b(?:applying to|are|attacking|answering|asking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:s|ing)?|consulting|contain(?:s|ing)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:ve|s|ving)|hold(?:s|ing)?|impl(?:y|ies)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:s|ing)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:s|ing)?|setting|showing|singing|sleeping|smelling|squeezing|switching|support(?:s|ing)?|swearing|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:s|ing)?|var(?:y|ies|ying)|waiting|waking|waving|wear(?:s|ing)?)\\b(?!-)/i,lookbehind:!0,alias:\"operator\"},keyword:{pattern:/(^|[^-])\\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|unless|the story)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\\b(?!-)/i,lookbehind:!0},property:{pattern:/(^|[^-])\\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: on| off)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\\b(?!-)/i,lookbehind:!0,alias:\"symbol\"},position:{pattern:/(^|[^-])\\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\\b(?!-)/i,lookbehind:!0,alias:\"keyword\"},type:{pattern:/(^|[^-])\\b(?:actions?|activit(?:y|ies)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\\b(?!-)/i,lookbehind:!0,alias:\"variable\"},punctuation:/[.,:;(){}]/},Prism.languages.inform7.string.inside.substitution.inside.rest=Prism.languages.inform7,Prism.languages.inform7.string.inside.substitution.inside.rest.text={pattern:/\\S(?:\\s*\\S)*/,alias:\"comment\"};","Prism.languages.ini= {\n\t'comment': /^[ \\t]*[;#].*$/m,\n\t'selector': /^[ \\t]*\\[.*?\\]/m,\n\t'constant': /^[ \\t]*[^\\s=]+?(?=[ \\t]*=)/m,\n\t'attr-value': {\n\t\tpattern: /=.*/,\n\t\tinside: {\n\t\t\t'punctuation': /^[=]/\n\t\t}\n\t}\n};\n","Prism.languages.ini={comment:/^[ \\t]*[;#].*$/m,selector:/^[ \\t]*\\[.*?\\]/m,constant:/^[ \\t]*[^\\s=]+?(?=[ \\t]*=)/m,\"attr-value\":{pattern:/=.*/,inside:{punctuation:/^[=]/}}};","Prism.languages.io = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\/.*/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])#.*/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'triple-quoted-string': {\n\t\tpattern: /\"\"\"(?:\\\\[\\s\\S]|(?!\"\"\")[^\\\\])*\"\"\"/,\n\t\tgreedy: true,\n\t\talias: 'string'\n\t},\n\t'string': {\n\t\tpattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n\t\tgreedy: true\n\t},\n\t'keyword': /\\b(?:activate|activeCoroCount|asString|block|break|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getSlot|getEnvironmentVariable|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|call|try|type|uniqueId|updateSlot|wait|while|write|yield)\\b/,\n\t'builtin':/\\b(?:Array|AudioDevice|AudioMixer|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Regex|SGML|SGMLElement|SGMLParser|SQLite|Server|Sequence|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink|Random|BigNum|Sequence)\\b/,\n\t'boolean': /\\b(?:true|false|nil)\\b/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e-?\\d+)?/i,\n\t'operator': /[=!*/%+-^&|]=|>>?=?|<<?=?|:?:?=|\\+\\+?|--?|\\*\\*?|\\/\\/?|%|\\|\\|?|&&?|(\\b(?:return|and|or|not)\\b)|@@?|\\?\\??|\\.\\./,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n","Prism.languages.io={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,lookbehind:!0},{pattern:/(^|[^\\\\])\\/\\/.*/,lookbehind:!0},{pattern:/(^|[^\\\\])#.*/,lookbehind:!0}],\"triple-quoted-string\":{pattern:/\"\"\"(?:\\\\[\\s\\S]|(?!\"\"\")[^\\\\])*\"\"\"/,greedy:!0,alias:\"string\"},string:{pattern:/\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,greedy:!0},keyword:/\\b(?:activate|activeCoroCount|asString|block|break|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getSlot|getEnvironmentVariable|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|call|try|type|uniqueId|updateSlot|wait|while|write|yield)\\b/,builtin:/\\b(?:Array|AudioDevice|AudioMixer|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Regex|SGML|SGMLElement|SGMLParser|SQLite|Server|Sequence|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink|Random|BigNum|Sequence)\\b/,boolean:/\\b(?:true|false|nil)\\b/,number:/\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e-?\\d+)?/i,operator:/[=!*/%+-^&|]=|>>?=?|<<?=?|:?:?=|\\+\\+?|--?|\\*\\*?|\\/\\/?|%|\\|\\|?|&&?|(\\b(?:return|and|or|not)\\b)|@@?|\\?\\??|\\.\\./,punctuation:/[{}[\\];(),.:]/};","Prism.languages.j = {\n\t'comment': /\\bNB\\..*/,\n\t'string': {\n\t\tpattern: /'(?:''|[^'\\r\\n])*'/,\n\t\tgreedy: true\n\t},\n\t'keyword': /\\b(?:(?:adverb|conjunction|CR|def|define|dyad|LF|monad|noun|verb)\\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\\w+|goto_\\w+|if|label_\\w+|return|select|throw|try|while|whilst)\\.)/,\n\t'verb': {\n\t\t// Negative look-ahead prevents bad highlighting\n\t\t// of ^: ;. =. =: !. !:\n\t\tpattern: /(?!\\^:|;\\.|[=!][.:])(?:\\{(?:\\.|::?)?|p(?:\\.\\.?|:)|[=!\\]]|[<>+*\\-%$|,#][.:]?|[?^]\\.?|[;\\[]:?|[~}\"i][.:]|[ACeEIjLor]\\.|(?:[_\\/\\\\qsux]|_?\\d):)/,\n\t\talias: 'keyword'\n\t},\n\t'number': /\\b_?(?:(?!\\d:)\\d+(?:\\.\\d+)?(?:(?:[ejpx]|ad|ar)_?\\d+(?:\\.\\d+)?)*(?:b_?[\\da-z]+(?:\\.[\\da-z]+)?)?|_(?!\\.))/,\n\t'adverb': {\n\t\tpattern: /[~}]|[\\/\\\\]\\.?|[bfM]\\.|t[.:]/,\n\t\talias: 'builtin'\n\t},\n\t'operator': /[=a][.:]|_\\./,\n\t'conjunction': {\n\t\tpattern: /&(?:\\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\\.|`:?|[\\^LS]:|\"/,\n\t\talias: 'variable'\n\t},\n\t'punctuation': /[()]/\n};","Prism.languages.j={comment:/\\bNB\\..*/,string:{pattern:/'(?:''|[^'\\r\\n])*'/,greedy:!0},keyword:/\\b(?:(?:adverb|conjunction|CR|def|define|dyad|LF|monad|noun|verb)\\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\\w+|goto_\\w+|if|label_\\w+|return|select|throw|try|while|whilst)\\.)/,verb:{pattern:/(?!\\^:|;\\.|[=!][.:])(?:\\{(?:\\.|::?)?|p(?:\\.\\.?|:)|[=!\\]]|[<>+*\\-%$|,#][.:]?|[?^]\\.?|[;\\[]:?|[~}\"i][.:]|[ACeEIjLor]\\.|(?:[_\\/\\\\qsux]|_?\\d):)/,alias:\"keyword\"},number:/\\b_?(?:(?!\\d:)\\d+(?:\\.\\d+)?(?:(?:[ejpx]|ad|ar)_?\\d+(?:\\.\\d+)?)*(?:b_?[\\da-z]+(?:\\.[\\da-z]+)?)?|_(?!\\.))/,adverb:{pattern:/[~}]|[\\/\\\\]\\.?|[bfM]\\.|t[.:]/,alias:\"builtin\"},operator:/[=a][.:]|_\\./,conjunction:{pattern:/&(?:\\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\\.|`:?|[\\^LS]:|\"/,alias:\"variable\"},punctuation:/[()]/};","(function (Prism) {\n\n\tvar keywords = /\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while|var|null|exports|module|open|opens|provides|requires|to|transitive|uses|with)\\b/;\n\n\t// based on the java naming conventions\n\tvar className = /\\b[A-Z](?:\\w*[a-z]\\w*)?\\b/;\n\n\tPrism.languages.java = Prism.languages.extend('clike', {\n\t\t'class-name': [\n\t\t\tclassName,\n\n\t\t\t// variables and parameters\n\t\t\t// this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n\t\t\t/\\b[A-Z]\\w*(?=\\s+\\w+\\s*[;,=())])/\n\t\t],\n\t\t'keyword': keywords,\n\t\t'function': [\n\t\t\tPrism.languages.clike.function,\n\t\t\t{\n\t\t\t\tpattern: /(\\:\\:)[a-z_]\\w*/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'number': /\\b0b[01][01_]*L?\\b|\\b0x[\\da-f_]*\\.?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*\\.?[\\d_]*|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n\t\t'operator': {\n\t\t\tpattern: /(^|[^.])(?:<<=?|>>>?=?|->|([-+&|])\\2|[?:~]|[-+*/%&|^!=<>]=?)/m,\n\t\t\tlookbehind: true\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('java', 'class-name', {\n\t\t'annotation': {\n\t\t\talias: 'punctuation',\n\t\t\tpattern: /(^|[^.])@\\w+/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'namespace': {\n\t\t\tpattern: /(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)[a-z]\\w*(\\.[a-z]\\w*)+/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /\\./,\n\t\t\t}\n\t\t},\n\t\t'generics': {\n\t\t\tpattern: /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n\t\t\tinside: {\n\t\t\t\t'class-name': className,\n\t\t\t\t'keyword': keywords,\n\t\t\t\t'punctuation': /[<>(),.:]/,\n\t\t\t\t'operator': /[?&|]/\n\t\t\t}\n\t\t}\n\t});\n}(Prism));\n","!function(e){var t=/\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while|var|null|exports|module|open|opens|provides|requires|to|transitive|uses|with)\\b/,a=/\\b[A-Z](?:\\w*[a-z]\\w*)?\\b/;e.languages.java=e.languages.extend(\"clike\",{\"class-name\":[a,/\\b[A-Z]\\w*(?=\\s+\\w+\\s*[;,=())])/],keyword:t,function:[e.languages.clike.function,{pattern:/(\\:\\:)[a-z_]\\w*/,lookbehind:!0}],number:/\\b0b[01][01_]*L?\\b|\\b0x[\\da-f_]*\\.?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*\\.?[\\d_]*|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,operator:{pattern:/(^|[^.])(?:<<=?|>>>?=?|->|([-+&|])\\2|[?:~]|[-+*/%&|^!=<>]=?)/m,lookbehind:!0}}),e.languages.insertBefore(\"java\",\"class-name\",{annotation:{alias:\"punctuation\",pattern:/(^|[^.])@\\w+/,lookbehind:!0},namespace:{pattern:/(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)[a-z]\\w*(\\.[a-z]\\w*)+/,lookbehind:!0,inside:{punctuation:/\\./}},generics:{pattern:/<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,inside:{\"class-name\":a,keyword:t,punctuation:/[<>(),.:]/,operator:/[?&|]/}}})}(Prism);","(function (Prism) {\n\n\tvar codeLines = {\n\t\t'code': {\n\t\t\tpattern: /(^(\\s*(?:\\*\\s*)*)).*[^*\\s].+$/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.java,\n\t\t\talias: 'language-java'\n\t\t}\n\t};\n\n\tPrism.languages.javadoc = Prism.languages.extend('javadoclike', {});\n\tPrism.languages.insertBefore('javadoc', 'keyword', {\n\t\t'class-name': [\n\t\t\t{\n\t\t\t\tpattern: /(@(?:exception|throws|see|link|linkplain|value)\\s+(?:[a-z\\d]+\\.)*)[A-Z](?:\\w*[a-z]\\w*)?(?:\\.[A-Z](?:\\w*[a-z]\\w*)?)*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\./\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t// @param <T> the first generic type parameter\n\t\t\t\tpattern: /(@param\\s+)<[A-Z]\\w*>/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /[.<>]/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'namespace': {\n\t\t\tpattern: /(@(?:exception|throws|see|link|linkplain)\\s+)(?:[a-z\\d]+\\.)+/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /\\./\n\t\t\t}\n\t\t},\n\t\t'code-section': [\n\t\t\t{\n\t\t\t\tpattern: /(\\{@code\\s+)(?:[^{}]|\\{[^{}]*\\})+?(?=\\s*\\})/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: codeLines\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(<(code|tt)>\\s*)[\\s\\S]+?(?=\\s*<\\/\\2>)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: codeLines\n\t\t\t}\n\t\t],\n\t\t'tag': Prism.languages.markup.tag,\n\t});\n\n\tPrism.languages.javadoclike.addSupport('java', Prism.languages.javadoc);\n}(Prism));\n","!function(a){var e={code:{pattern:/(^(\\s*(?:\\*\\s*)*)).*[^*\\s].+$/m,lookbehind:!0,inside:a.languages.java,alias:\"language-java\"}};a.languages.javadoc=a.languages.extend(\"javadoclike\",{}),a.languages.insertBefore(\"javadoc\",\"keyword\",{\"class-name\":[{pattern:/(@(?:exception|throws|see|link|linkplain|value)\\s+(?:[a-z\\d]+\\.)*)[A-Z](?:\\w*[a-z]\\w*)?(?:\\.[A-Z](?:\\w*[a-z]\\w*)?)*/,lookbehind:!0,inside:{punctuation:/\\./}},{pattern:/(@param\\s+)<[A-Z]\\w*>/,lookbehind:!0,inside:{punctuation:/[.<>]/}}],namespace:{pattern:/(@(?:exception|throws|see|link|linkplain)\\s+)(?:[a-z\\d]+\\.)+/,lookbehind:!0,inside:{punctuation:/\\./}},\"code-section\":[{pattern:/(\\{@code\\s+)(?:[^{}]|\\{[^{}]*\\})+?(?=\\s*\\})/,lookbehind:!0,inside:e},{pattern:/(<(code|tt)>\\s*)[\\s\\S]+?(?=\\s*<\\/\\2>)/,lookbehind:!0,inside:e}],tag:a.languages.markup.tag}),a.languages.javadoclike.addSupport(\"java\",a.languages.javadoc)}(Prism);","(function (Prism) {\n\n\tvar javaDocLike = Prism.languages.javadoclike = {\n\t\t'parameter': {\n\t\t\tpattern: /(^\\s*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:param|arg|arguments)\\s+)\\w+/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'keyword': {\n\t\t\t// keywords are the first word in a line preceded be an `@` or surrounded by curly braces.\n\t\t\t// @word, {@word}\n\t\t\tpattern: /(^\\s*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[{}]/\n\t};\n\n\n\t/**\n\t * Adds doc comment support to the given language and calls a given callback on each doc comment pattern.\n\t *\n\t * @param {string} lang the language add doc comment support to.\n\t * @param {(pattern: {inside: {rest: undefined}}) => void} callback the function called with each doc comment pattern as argument.\n\t */\n\tfunction docCommentSupport(lang, callback) {\n\t\tvar tokenName = 'doc-comment';\n\n\t\tvar grammar = Prism.languages[lang];\n\t\tif (!grammar) {\n\t\t\treturn;\n\t\t}\n\t\tvar token = grammar[tokenName];\n\n\t\tif (!token) {\n\t\t\t// add doc comment: /** */\n\t\t\tvar definition = {};\n\t\t\tdefinition[tokenName] = {\n\t\t\t\tpattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\t\talias: 'comment'\n\t\t\t};\n\n\t\t\tgrammar = Prism.languages.insertBefore(lang, 'comment', definition);\n\t\t\ttoken = grammar[tokenName];\n\t\t}\n\n\t\tif (token instanceof RegExp) { // convert regex to object\n\t\t\ttoken = grammar[tokenName] = { pattern: token };\n\t\t}\n\n\t\tif (Array.isArray(token)) {\n\t\t\tfor (var i = 0, l = token.length; i < l; i++) {\n\t\t\t\tif (token[i] instanceof RegExp) {\n\t\t\t\t\ttoken[i] = { pattern: token[i] };\n\t\t\t\t}\n\t\t\t\tcallback(token[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tcallback(token);\n\t\t}\n\t}\n\n\t/**\n\t * Adds doc-comment support to the given languages for the given documentation language.\n\t *\n\t * @param {string[]|string} languages\n\t * @param {Object} docLanguage\n\t */\n\tfunction addSupport(languages, docLanguage) {\n\t\tif (typeof languages === 'string') {\n\t\t\tlanguages = [languages];\n\t\t}\n\n\t\tlanguages.forEach(function (lang) {\n\t\t\tdocCommentSupport(lang, function (pattern) {\n\t\t\t\tif (!pattern.inside) {\n\t\t\t\t\tpattern.inside = {};\n\t\t\t\t}\n\t\t\t\tpattern.inside.rest = docLanguage;\n\t\t\t});\n\t\t});\n\t}\n\n\tObject.defineProperty(javaDocLike, 'addSupport', { value: addSupport });\n\n\tjavaDocLike.addSupport(['java', 'javascript', 'php'], javaDocLike);\n\n}(Prism));\n","!function(p){var a=p.languages.javadoclike={parameter:{pattern:/(^\\s*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:param|arg|arguments)\\s+)\\w+/m,lookbehind:!0},keyword:{pattern:/(^\\s*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,lookbehind:!0},punctuation:/[{}]/};Object.defineProperty(a,\"addSupport\",{value:function(a,e){\"string\"==typeof a&&(a=[a]),a.forEach(function(a){!function(a,e){var n=\"doc-comment\",t=p.languages[a];if(t){var r=t[n];if(!r){var i={\"doc-comment\":{pattern:/(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,alias:\"comment\"}};r=(t=p.languages.insertBefore(a,\"comment\",i))[n]}if(r instanceof RegExp&&(r=t[n]={pattern:r}),Array.isArray(r))for(var o=0,s=r.length;o<s;o++)r[o]instanceof RegExp&&(r[o]={pattern:r[o]}),e(r[o]);else e(r)}}(a,function(a){a.inside||(a.inside={}),a.inside.rest=e})})}}),a.addSupport([\"java\",\"javascript\",\"php\"],a)}(Prism);","Prism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.])\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t'number': /\\b(?:(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+)n?|\\d+n|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'operator': /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\${[^}]+}|[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /\\${[^}]+}/,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\${|}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n","Prism.languages.javascript=Prism.languages.extend(\"clike\",{\"class-name\":[Prism.languages.clike[\"class-name\"],{pattern:/(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,lookbehind:!0}],keyword:[{pattern:/((?:^|})\\s*)(?:catch|finally)\\b/,lookbehind:!0},{pattern:/(^|[^.])\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,lookbehind:!0}],number:/\\b(?:(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+)n?|\\d+n|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,function:/[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,operator:/-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/}),Prism.languages.javascript[\"class-name\"][0].pattern=/(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/,Prism.languages.insertBefore(\"javascript\",\"keyword\",{regex:{pattern:/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})\\]]))/,lookbehind:!0,greedy:!0},\"function-variable\":{pattern:/[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,alias:\"function\"},parameter:[{pattern:/(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,inside:Prism.languages.javascript},{pattern:/(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,lookbehind:!0,inside:Prism.languages.javascript}],constant:/\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/}),Prism.languages.insertBefore(\"javascript\",\"string\",{\"template-string\":{pattern:/`(?:\\\\[\\s\\S]|\\${[^}]+}|[^\\\\`])*`/,greedy:!0,inside:{interpolation:{pattern:/\\${[^}]+}/,inside:{\"interpolation-punctuation\":{pattern:/^\\${|}$/,alias:\"punctuation\"},rest:Prism.languages.javascript}},string:/[\\s\\S]+/}}}),Prism.languages.markup&&Prism.languages.markup.tag.addInlined(\"script\",\"javascript\"),Prism.languages.js=Prism.languages.javascript;","Prism.languages.javastacktrace = {\n\n\t// java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n\t// Caused by: java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n\t// Caused by: com.example.myproject.MyProjectServletException\n\t// Caused by: MidLevelException: LowLevelException\n\t// Suppressed: Resource$CloseFailException: Resource ID = 0\n\t'summary': {\n\t\tpattern: /^[\\t ]*(?:(?:Caused by:|Suppressed:|Exception in thread \"[^\"]*\")[\\t ]+)?[\\w$.]+(?:\\:.*)?$/m,\n\t\tinside: {\n\t\t\t'keyword': {\n\t\t\t\tpattern: /^(\\s*)(?:(?:Caused by|Suppressed)(?=:)|Exception in thread)/m,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\n\t\t\t// the current thread if the summary starts with 'Exception in thread'\n\t\t\t'string': {\n\t\t\t\tpattern: /^(\\s*)\"[^\"]*\"/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'exceptions': {\n\t\t\t\tpattern: /^(:?\\s*)[\\w$.]+(?=:|$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'class-name': /[\\w$]+(?=$|:)/,\n\t\t\t\t\t'namespace': /[a-z]\\w*/,\n\t\t\t\t\t'punctuation': /[.:]/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'message': {\n\t\t\t\tpattern: /(:\\s*)\\S.*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'punctuation': /[:]/\n\t\t}\n\t},\n\n\t// at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166)\n\t// at org.hsqldb.jdbc.Util.throwError(Unknown Source) here could be some notes\n\t// at Util.<init>(Unknown Source)\n\t'stack-frame': {\n\t\tpattern: /^[\\t ]*at [\\w$.]+(?:<init>)?\\([^()]*\\)/m,\n\t\tinside: {\n\t\t\t'keyword': {\n\t\t\t\tpattern: /^(\\s*)at/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'source': [\n\t\t\t\t// (Main.java:15)\n\t\t\t\t// (Main.scala:15)\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\()\\w+.\\w+:\\d+(?=\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'file': /^\\w+\\.\\w+/,\n\t\t\t\t\t\t'punctuation': /:/,\n\t\t\t\t\t\t'line-number': {\n\t\t\t\t\t\t\tpattern: /\\d+/,\n\t\t\t\t\t\t\talias: 'number'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t// (Unknown Source)\n\t\t\t\t// (Native Method)\n\t\t\t\t// (...something...)\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\()[^()]*(?=\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'keyword': /^(?:Unknown Source|Native Method)$/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\t'class-name': /[\\w$]+(?=\\.(?:<init>|[\\w$]+)\\()/,\n\t\t\t'function': /(?:<init>|[\\w$]+)(?=\\()/,\n\t\t\t'namespace': /[a-z]\\w*/,\n\t\t\t'punctuation': /[.()]/\n\t\t}\n\t},\n\n\t// ... 32 more\n\t// ... 32 common frames omitted\n\t'more': {\n\t\tpattern: /^[\\t ]*\\.{3} \\d+ [a-z]+(?: [a-z]+)*/m,\n\t\tinside: {\n\t\t\t'punctuation': /\\.{3}/,\n\t\t\t'number': /\\d+/,\n\t\t\t'keyword': /\\b[a-z]+(?: [a-z]+)*\\b/\n\t\t}\n\t}\n\n};\n","Prism.languages.javastacktrace={summary:{pattern:/^[\\t ]*(?:(?:Caused by:|Suppressed:|Exception in thread \"[^\"]*\")[\\t ]+)?[\\w$.]+(?:\\:.*)?$/m,inside:{keyword:{pattern:/^(\\s*)(?:(?:Caused by|Suppressed)(?=:)|Exception in thread)/m,lookbehind:!0},string:{pattern:/^(\\s*)\"[^\"]*\"/,lookbehind:!0},exceptions:{pattern:/^(:?\\s*)[\\w$.]+(?=:|$)/,lookbehind:!0,inside:{\"class-name\":/[\\w$]+(?=$|:)/,namespace:/[a-z]\\w*/,punctuation:/[.:]/}},message:{pattern:/(:\\s*)\\S.*/,lookbehind:!0,alias:\"string\"},punctuation:/[:]/}},\"stack-frame\":{pattern:/^[\\t ]*at [\\w$.]+(?:<init>)?\\([^()]*\\)/m,inside:{keyword:{pattern:/^(\\s*)at/,lookbehind:!0},source:[{pattern:/(\\()\\w+.\\w+:\\d+(?=\\))/,lookbehind:!0,inside:{file:/^\\w+\\.\\w+/,punctuation:/:/,\"line-number\":{pattern:/\\d+/,alias:\"number\"}}},{pattern:/(\\()[^()]*(?=\\))/,lookbehind:!0,inside:{keyword:/^(?:Unknown Source|Native Method)$/}}],\"class-name\":/[\\w$]+(?=\\.(?:<init>|[\\w$]+)\\()/,function:/(?:<init>|[\\w$]+)(?=\\()/,namespace:/[a-z]\\w*/,punctuation:/[.()]/}},more:{pattern:/^[\\t ]*\\.{3} \\d+ [a-z]+(?: [a-z]+)*/m,inside:{punctuation:/\\.{3}/,number:/\\d+/,keyword:/\\b[a-z]+(?: [a-z]+)*\\b/}}};","Prism.languages.jolie = Prism.languages.extend('clike', {\n\t'keyword': /\\b(?:include|define|is_defined|undef|main|init|outputPort|inputPort|Location|Protocol|Interfaces|RequestResponse|OneWay|type|interface|extender|throws|cset|csets|forward|Aggregates|Redirects|embedded|courier|execution|sequential|concurrent|single|scope|install|throw|comp|cH|default|global|linkIn|linkOut|synchronized|this|new|for|if|else|while|in|Jolie|Java|Javascript|nullProcess|spawn|constants|with|provide|until|exit|foreach|instanceof|over|service)\\b/,\n\t'builtin': /\\b(?:undefined|string|int|void|long|Byte|bool|double|float|char|any)\\b/,\n\t'number': /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?l?/i,\n\t'operator': /-[-=>]?|\\+[+=]?|<[<=]?|[>=*!]=?|&&|\\|\\||[:?\\/%^]/,\n\t'symbol': /[|;@]/,\n\t'punctuation': /[,.]/,\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t}\n});\n\ndelete Prism.languages.jolie['class-name'];\n\nPrism.languages.insertBefore( 'jolie', 'keyword', {\n\t'function':\n\t{\n\t\tpattern: /((?:\\b(?:outputPort|inputPort|in|service|courier)\\b|@)\\s*)\\w+/,\n\t\tlookbehind: true\n\t},\n\t'aggregates': {\n\t\tpattern: /(\\bAggregates\\s*:\\s*)(?:\\w+(?:\\s+with\\s+\\w+)?\\s*,\\s*)*\\w+(?:\\s+with\\s+\\w+)?/,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'withExtension': {\n\t\t\t\tpattern: /\\bwith\\s+\\w+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword' : /\\bwith\\b/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'function': {\n\t\t\t\tpattern: /\\w+/\n\t\t\t},\n\t\t\t'punctuation': {\n\t\t\t\tpattern: /,/\n\t\t\t}\n\t\t}\n\t},\n\t'redirects': {\n\t\tpattern: /(\\bRedirects\\s*:\\s*)(?:\\w+\\s*=>\\s*\\w+\\s*,\\s*)*(?:\\w+\\s*=>\\s*\\w+)/,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': {\n\t\t\t\tpattern: /,/\n\t\t\t},\n\t\t\t'function': {\n\t\t\t\tpattern: /\\w+/\n\t\t\t},\n\t\t\t'symbol': {\n\t\t\t\tpattern: /=>/\n\t\t\t}\n\t\t}\n\t}\n});","Prism.languages.jolie=Prism.languages.extend(\"clike\",{keyword:/\\b(?:include|define|is_defined|undef|main|init|outputPort|inputPort|Location|Protocol|Interfaces|RequestResponse|OneWay|type|interface|extender|throws|cset|csets|forward|Aggregates|Redirects|embedded|courier|execution|sequential|concurrent|single|scope|install|throw|comp|cH|default|global|linkIn|linkOut|synchronized|this|new|for|if|else|while|in|Jolie|Java|Javascript|nullProcess|spawn|constants|with|provide|until|exit|foreach|instanceof|over|service)\\b/,builtin:/\\b(?:undefined|string|int|void|long|Byte|bool|double|float|char|any)\\b/,number:/(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?l?/i,operator:/-[-=>]?|\\+[+=]?|<[<=]?|[>=*!]=?|&&|\\|\\||[:?\\/%^]/,symbol:/[|;@]/,punctuation:/[,.]/,string:{pattern:/([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0}}),delete Prism.languages.jolie[\"class-name\"],Prism.languages.insertBefore(\"jolie\",\"keyword\",{function:{pattern:/((?:\\b(?:outputPort|inputPort|in|service|courier)\\b|@)\\s*)\\w+/,lookbehind:!0},aggregates:{pattern:/(\\bAggregates\\s*:\\s*)(?:\\w+(?:\\s+with\\s+\\w+)?\\s*,\\s*)*\\w+(?:\\s+with\\s+\\w+)?/,lookbehind:!0,inside:{withExtension:{pattern:/\\bwith\\s+\\w+/,inside:{keyword:/\\bwith\\b/}},function:{pattern:/\\w+/},punctuation:{pattern:/,/}}},redirects:{pattern:/(\\bRedirects\\s*:\\s*)(?:\\w+\\s*=>\\s*\\w+\\s*,\\s*)*(?:\\w+\\s*=>\\s*\\w+)/,lookbehind:!0,inside:{punctuation:{pattern:/,/},function:{pattern:/\\w+/},symbol:{pattern:/=>/}}}});","(function (Prism) {\n\n\tPrism.languages.insertBefore('javascript', 'function-variable', {\n\t\t'method-variable': {\n\t\t\tpattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n\t\t\tlookbehind: true,\n\t\t\talias: ['function-variable', 'method', 'function', 'property-access']\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('javascript', 'function', {\n\t\t'method': {\n\t\t\tpattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n\t\t\tlookbehind: true,\n\t\t\talias: ['function', 'property-access']\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('javascript', 'constant', {\n\t\t'known-class-name': [\n\t\t\t{\n\t\t\t\t// standard built-ins\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n\t\t\t\tpattern: /\\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\\b/,\n\t\t\t\talias: 'class-name'\n\t\t\t},\n\t\t\t{\n\t\t\t\t// errors\n\t\t\t\tpattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n\t\t\t\talias: 'class-name'\n\t\t\t}\n\t\t]\n\t});\n\n\tPrism.languages.javascript['keyword'].unshift(\n\t\t{\n\t\t\tpattern: /\\b(?:as|default|export|from|import)\\b/,\n\t\t\talias: 'module'\n\t\t},\n\t\t{\n\t\t\tpattern: /\\bnull\\b/,\n\t\t\talias: ['null', 'nil']\n\t\t},\n\t\t{\n\t\t\tpattern: /\\bundefined\\b/,\n\t\t\talias: 'nil'\n\t\t}\n\t);\n\n\tPrism.languages.insertBefore('javascript', 'operator', {\n\t\t'spread': {\n\t\t\tpattern: /\\.{3}/,\n\t\t\talias: 'operator'\n\t\t},\n\t\t'arrow': {\n\t\t\tpattern: /=>/,\n\t\t\talias: 'operator'\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('javascript', 'punctuation', {\n\t\t'property-access': {\n\t\t\tpattern: /(\\.\\s*)[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'maybe-class-name': {\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'dom': {\n\t\t\t// this contains only a few commonly used DOM variables\n\t\t\tpattern: /\\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\\b/,\n\t\t\talias: 'variable'\n\t\t},\n\t\t'console': {\n\t\t\tpattern: /\\bconsole(?=\\s*\\.)/,\n\t\t\talias: 'class-name'\n\t\t}\n\t});\n\n\n\t// add 'maybe-class-name' to tokens which might be a class name\n\tvar maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n\tfor (var i = 0; i < maybeClassNameTokens.length; i++) {\n\t\tvar token = maybeClassNameTokens[i];\n\t\tvar value = Prism.languages.javascript[token];\n\n\t\t// convert regex to object\n\t\tif (Prism.util.type(value) === 'RegExp') {\n\t\t\tvalue = Prism.languages.javascript[token] = {\n\t\t\t\tpattern: value\n\t\t\t};\n\t\t}\n\n\t\t// keep in mind that we don't support arrays\n\n\t\tvar inside = value.inside || {};\n\t\tvalue.inside = inside;\n\n\t\tinside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n\t}\n\n}(Prism));\n","!function(a){a.languages.insertBefore(\"javascript\",\"function-variable\",{\"method-variable\":{pattern:RegExp(\"(\\\\.\\\\s*)\"+a.languages.javascript[\"function-variable\"].pattern.source),lookbehind:!0,alias:[\"function-variable\",\"method\",\"function\",\"property-access\"]}}),a.languages.insertBefore(\"javascript\",\"function\",{method:{pattern:RegExp(\"(\\\\.\\\\s*)\"+a.languages.javascript.function.source),lookbehind:!0,alias:[\"function\",\"property-access\"]}}),a.languages.insertBefore(\"javascript\",\"constant\",{\"known-class-name\":[{pattern:/\\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\\b/,alias:\"class-name\"},{pattern:/\\b(?:[A-Z]\\w*)Error\\b/,alias:\"class-name\"}]}),a.languages.javascript.keyword.unshift({pattern:/\\b(?:as|default|export|from|import)\\b/,alias:\"module\"},{pattern:/\\bnull\\b/,alias:[\"null\",\"nil\"]},{pattern:/\\bundefined\\b/,alias:\"nil\"}),a.languages.insertBefore(\"javascript\",\"operator\",{spread:{pattern:/\\.{3}/,alias:\"operator\"},arrow:{pattern:/=>/,alias:\"operator\"}}),a.languages.insertBefore(\"javascript\",\"punctuation\",{\"property-access\":{pattern:/(\\.\\s*)[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*/,lookbehind:!0},\"maybe-class-name\":{pattern:/(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,lookbehind:!0},dom:{pattern:/\\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\\b/,alias:\"variable\"},console:{pattern:/\\bconsole(?=\\s*\\.)/,alias:\"class-name\"}});for(var e=[\"function\",\"function-variable\",\"method\",\"method-variable\",\"property-access\"],t=0;t<e.length;t++){var n=e[t],r=a.languages.javascript[n];\"RegExp\"===a.util.type(r)&&(r=a.languages.javascript[n]={pattern:r});var s=r.inside||{};(r.inside=s)[\"maybe-class-name\"]=/^[A-Z][\\s\\S]*/}}(Prism);","(function (Prism) {\n\n\tvar javascript = Prism.languages.javascript;\n\n\tvar type = /{(?:[^{}]|{(?:[^{}]|{[^{}]*})*})+}/.source;\n\tvar parameterPrefix = '(@(?:param|arg|argument|property)\\\\s+(?:' + type + '\\\\s+)?)';\n\n\tPrism.languages.jsdoc = Prism.languages.extend('javadoclike', {\n\t\t'parameter': {\n\t\t\t// @param {string} foo - foo bar\n\t\t\tpattern: RegExp(parameterPrefix + /[$\\w\\xA0-\\uFFFF.]+(?=\\s|$)/.source),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /\\./\n\t\t\t}\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('jsdoc', 'keyword', {\n\t\t'optional-parameter': {\n\t\t\t// @param {string} [baz.foo=\"bar\"] foo bar\n\t\t\tpattern: RegExp(parameterPrefix + /\\[[$\\w\\xA0-\\uFFFF.]+(?:=[^[\\]]+)?\\](?=\\s|$)/.source),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'parameter': {\n\t\t\t\t\tpattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /\\./\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'code': {\n\t\t\t\t\tpattern: /(=)[\\s\\S]*(?=\\]$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: javascript,\n\t\t\t\t\talias: 'language-javascript'\n\t\t\t\t},\n\t\t\t\t'punctuation': /[=[\\]]/\n\t\t\t}\n\t\t},\n\t\t'class-name': [\n\t\t\t{\n\t\t\t\tpattern: RegExp('(@[a-z]+\\\\s+)' + type),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /[.,:?=<>|{}()[\\]]/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(@(?:augments|extends|class|interface|memberof!?|this)\\s+)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\./\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'example': {\n\t\t\tpattern: /(@example\\s+)[^@]+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'code': {\n\t\t\t\t\tpattern: /^(\\s*(?:\\*\\s*)?).+$/m,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: javascript,\n\t\t\t\t\talias: 'language-javascript'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tPrism.languages.javadoclike.addSupport('javascript', Prism.languages.jsdoc);\n\n}(Prism));\n","!function(a){var e=a.languages.javascript,n=\"{(?:[^{}]|{(?:[^{}]|{[^{}]*})*})+}\",s=\"(@(?:param|arg|argument|property)\\\\s+(?:\"+n+\"\\\\s+)?)\";a.languages.jsdoc=a.languages.extend(\"javadoclike\",{parameter:{pattern:RegExp(s+\"[$\\\\w\\\\xA0-\\\\uFFFF.]+(?=\\\\s|$)\"),lookbehind:!0,inside:{punctuation:/\\./}}}),a.languages.insertBefore(\"jsdoc\",\"keyword\",{\"optional-parameter\":{pattern:RegExp(s+\"\\\\[[$\\\\w\\\\xA0-\\\\uFFFF.]+(?:=[^[\\\\]]+)?\\\\](?=\\\\s|$)\"),lookbehind:!0,inside:{parameter:{pattern:/(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,lookbehind:!0,inside:{punctuation:/\\./}},code:{pattern:/(=)[\\s\\S]*(?=\\]$)/,lookbehind:!0,inside:e,alias:\"language-javascript\"},punctuation:/[=[\\]]/}},\"class-name\":[{pattern:RegExp(\"(@[a-z]+\\\\s+)\"+n),lookbehind:!0,inside:{punctuation:/[.,:?=<>|{}()[\\]]/}},{pattern:/(@(?:augments|extends|class|interface|memberof!?|this)\\s+)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/,lookbehind:!0,inside:{punctuation:/\\./}}],example:{pattern:/(@example\\s+)[^@]+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,lookbehind:!0,inside:{code:{pattern:/^(\\s*(?:\\*\\s*)?).+$/m,lookbehind:!0,inside:e,alias:\"language-javascript\"}}}}),a.languages.javadoclike.addSupport(\"javascript\",a.languages.jsdoc)}(Prism);","Prism.languages.json = {\n\t'comment': /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t'property': {\n\t\tpattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n\t\tgreedy: true\n\t},\n\t'string': {\n\t\tpattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n\t\tgreedy: true\n\t},\n\t'number': /-?\\d+\\.?\\d*(e[+-]?\\d+)?/i,\n\t'punctuation': /[{}[\\],]/,\n\t'operator': /:/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'null': {\n\t\tpattern: /\\bnull\\b/,\n\t\talias: 'keyword'\n\t}\n};\n","Prism.languages.json={comment:/\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,property:{pattern:/\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,greedy:!0},string:{pattern:/\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,greedy:!0},number:/-?\\d+\\.?\\d*(e[+-]?\\d+)?/i,punctuation:/[{}[\\],]/,operator:/:/,boolean:/\\b(?:true|false)\\b/,null:{pattern:/\\bnull\\b/,alias:\"keyword\"}};","(function (Prism) {\n\n\tvar string = /(\"|')(?:\\\\(?:\\r\\n?|\\n|.)|(?!\\1)[^\\\\\\r\\n])*\\1/\n\n\tPrism.languages.json5 = Prism.languages.extend('json', {\n\t\t'property': [\n\t\t\t{\n\t\t\t\tpattern: RegExp(string.source + '(?=\\\\s*:)'),\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*:)/,\n\t\t\t\talias: 'unquoted'\n\t\t\t}\n\t\t],\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'number': /[+-]?(?:NaN|Infinity|0x[a-fA-F\\d]+|(?:\\d+\\.?\\d*|\\.\\d+)(?:[eE][+-]?\\d+)?)/\n\t});\n\n}(Prism));\n","!function(n){var e=/(\"|')(?:\\\\(?:\\r\\n?|\\n|.)|(?!\\1)[^\\\\\\r\\n])*\\1/;n.languages.json5=n.languages.extend(\"json\",{property:[{pattern:RegExp(e.source+\"(?=\\\\s*:)\"),greedy:!0},{pattern:/[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*:)/,alias:\"unquoted\"}],string:{pattern:e,greedy:!0},number:/[+-]?(?:NaN|Infinity|0x[a-fA-F\\d]+|(?:\\d+\\.?\\d*|\\.\\d+)(?:[eE][+-]?\\d+)?)/})}(Prism);","Prism.languages.jsonp = Prism.languages.extend('json', {\n\t'punctuation': /[{}[\\]();,.]/\n});\n\nPrism.languages.insertBefore('jsonp', 'punctuation', {\n\t'function': /[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/\n});\n","Prism.languages.jsonp=Prism.languages.extend(\"json\",{punctuation:/[{}[\\]();,.]/}),Prism.languages.insertBefore(\"jsonp\",\"punctuation\",{function:/[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/});","!function(i){var t=i.util.clone(i.languages.javascript);i.languages.jsx=i.languages.extend(\"markup\",t),i.languages.jsx.tag.pattern=/<\\/?(?:[\\w.:-]+\\s*(?:\\s+(?:[\\w.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}))*\\s*\\/?)?>/i,i.languages.jsx.tag.inside.tag.pattern=/^<\\/?[^\\s>\\/]*/i,i.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i,i.languages.jsx.tag.inside.tag.inside[\"class-name\"]=/^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/,i.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:/\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}/,inside:{punctuation:/\\.{3}|[{}.]/,\"attr-value\":/\\w+/}}},i.languages.jsx.tag),i.languages.insertBefore(\"inside\",\"attr-value\",{script:{pattern:/=(\\{(?:\\{(?:\\{[^}]*\\}|[^}])*\\}|[^}])+\\})/i,inside:{\"script-punctuation\":{pattern:/^=(?={)/,alias:\"punctuation\"},rest:i.languages.jsx},alias:\"language-javascript\"}},i.languages.jsx.tag);var o=function(t){return t?\"string\"==typeof t?t:\"string\"==typeof t.content?t.content:t.content.map(o).join(\"\"):\"\"},p=function(t){for(var n=[],e=0;e<t.length;e++){var a=t[e],s=!1;if(\"string\"!=typeof a&&(\"tag\"===a.type&&a.content[0]&&\"tag\"===a.content[0].type?\"</\"===a.content[0].content[0].content?0<n.length&&n[n.length-1].tagName===o(a.content[0].content[1])&&n.pop():\"/>\"===a.content[a.content.length-1].content||n.push({tagName:o(a.content[0].content[1]),openedBraces:0}):0<n.length&&\"punctuation\"===a.type&&\"{\"===a.content?n[n.length-1].openedBraces++:0<n.length&&0<n[n.length-1].openedBraces&&\"punctuation\"===a.type&&\"}\"===a.content?n[n.length-1].openedBraces--:s=!0),(s||\"string\"==typeof a)&&0<n.length&&0===n[n.length-1].openedBraces){var g=o(a);e<t.length-1&&(\"string\"==typeof t[e+1]||\"plain-text\"===t[e+1].type)&&(g+=o(t[e+1]),t.splice(e+1,1)),0<e&&(\"string\"==typeof t[e-1]||\"plain-text\"===t[e-1].type)&&(g=o(t[e-1])+g,t.splice(e-1,1),e--),t[e]=new i.Token(\"plain-text\",g,null,g)}a.content&&\"string\"!=typeof a.content&&p(a.content)}};i.hooks.add(\"after-tokenize\",function(t){\"jsx\"!==t.language&&\"tsx\"!==t.language||p(t.tokens)})}(Prism);","Prism.languages.julia= {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])#.*/,\n\t\tlookbehind: true\n\t},\n\t'string': /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2/,\n\t'keyword' : /\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|let|local|macro|module|print|println|quote|return|try|type|typealias|using|while)\\b/,\n\t'boolean' : /\\b(?:true|false)\\b/,\n\t'number' : /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[box])?(?:[\\da-f]+\\.?\\d*|\\.\\d+)(?:[efp][+-]?\\d+)?j?/i,\n\t'operator': /[-+*^%÷&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥]/,\n\t'punctuation' : /[{}[\\];(),.:]/\n};","Prism.languages.julia={comment:{pattern:/(^|[^\\\\])#.*/,lookbehind:!0},string:/(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2/,keyword:/\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|let|local|macro|module|print|println|quote|return|try|type|typealias|using|while)\\b/,boolean:/\\b(?:true|false)\\b/,number:/(?:\\b(?=\\d)|\\B(?=\\.))(?:0[box])?(?:[\\da-f]+\\.?\\d*|\\.\\d+)(?:[efp][+-]?\\d+)?j?/i,operator:/[-+*^%÷&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥]/,punctuation:/[{}[\\];(),.:]/};","Prism.languages.keyman = {\n\t'comment': /\\bc\\s.*/i,\n\t'function': /\\[\\s*(?:(?:CTRL|SHIFT|ALT|LCTRL|RCTRL|LALT|RALT|CAPS|NCAPS)\\s+)*(?:[TKU]_[\\w?]+|\".+?\"|'.+?')\\s*\\]/i,  // virtual key\n\t'string': /(\"|').*?\\1/,\n\t'bold': [   // header statements, system stores and variable system stores\n\t\t/&(?:baselayout|bitmap|capsononly|capsalwaysoff|shiftfreescaps|copyright|ethnologuecode|hotkey|includecodes|keyboardversion|kmw_embedcss|kmw_embedjs|kmw_helpfile|kmw_helptext|kmw_rtl|language|layer|layoutfile|message|mnemoniclayout|name|oldcharposmatching|platform|targets|version|visualkeyboard|windowslanguages)\\b/i,\n\t\t/\\b(?:bitmap|bitmaps|caps on only|caps always off|shift frees caps|copyright|hotkey|language|layout|message|name|version)\\b/i\n\t],\n\t'keyword': /\\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|return|reset|save|set|store|use)\\b/i,  // rule keywords\n\t'atrule': /\\b(?:ansi|begin|unicode|group|using keys|match|nomatch)\\b/i,   // structural keywords\n\t'number': /\\b(?:U\\+[\\dA-F]+|d\\d+|x[\\da-f]+|\\d+)\\b/i, // U+####, x###, d### characters and numbers\n\t'operator': /[+>\\\\,()]/,\n\t'tag': /\\$(?:keyman|kmfl|weaver|keymanweb|keymanonly):/i   // prefixes\n};","Prism.languages.keyman={comment:/\\bc\\s.*/i,function:/\\[\\s*(?:(?:CTRL|SHIFT|ALT|LCTRL|RCTRL|LALT|RALT|CAPS|NCAPS)\\s+)*(?:[TKU]_[\\w?]+|\".+?\"|'.+?')\\s*\\]/i,string:/(\"|').*?\\1/,bold:[/&(?:baselayout|bitmap|capsononly|capsalwaysoff|shiftfreescaps|copyright|ethnologuecode|hotkey|includecodes|keyboardversion|kmw_embedcss|kmw_embedjs|kmw_helpfile|kmw_helptext|kmw_rtl|language|layer|layoutfile|message|mnemoniclayout|name|oldcharposmatching|platform|targets|version|visualkeyboard|windowslanguages)\\b/i,/\\b(?:bitmap|bitmaps|caps on only|caps always off|shift frees caps|copyright|hotkey|language|layout|message|name|version)\\b/i],keyword:/\\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|return|reset|save|set|store|use)\\b/i,atrule:/\\b(?:ansi|begin|unicode|group|using keys|match|nomatch)\\b/i,number:/\\b(?:U\\+[\\dA-F]+|d\\d+|x[\\da-f]+|\\d+)\\b/i,operator:/[+>\\\\,()]/,tag:/\\$(?:keyman|kmfl|weaver|keymanweb|keymanonly):/i};","(function (Prism) {\n\tPrism.languages.kotlin = Prism.languages.extend('clike', {\n\t\t'keyword': {\n\t\t\t// The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n\t\t\tpattern: /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'function': [\n\t\t\t/\\w+(?=\\s*\\()/,\n\t\t\t{\n\t\t\t\tpattern: /(\\.)\\w+(?=\\s*\\{)/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'number': /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n\t\t'operator': /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n\t});\n\n\tdelete Prism.languages.kotlin[\"class-name\"];\n\n\tPrism.languages.insertBefore('kotlin', 'string', {\n\t\t'raw-string': {\n\t\t\tpattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n\t\t\talias: 'string'\n\t\t\t// See interpolation below\n\t\t}\n\t});\n\tPrism.languages.insertBefore('kotlin', 'keyword', {\n\t\t'annotation': {\n\t\t\tpattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n\t\t\talias: 'builtin'\n\t\t}\n\t});\n\tPrism.languages.insertBefore('kotlin', 'function', {\n\t\t'label': {\n\t\t\tpattern: /\\w+@|@\\w+/,\n\t\t\talias: 'symbol'\n\t\t}\n\t});\n\n\tvar interpolation = [\n\t\t{\n\t\t\tpattern: /\\$\\{[^}]+\\}/,\n\t\t\tinside: {\n\t\t\t\tdelimiter: {\n\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\talias: 'variable'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.kotlin\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /\\$\\w+/,\n\t\t\talias: 'variable'\n\t\t}\n\t];\n\n\tPrism.languages.kotlin['string'].inside = Prism.languages.kotlin['raw-string'].inside = {\n\t\tinterpolation: interpolation\n\t};\n\n}(Prism));\n","!function(e){e.languages.kotlin=e.languages.extend(\"clike\",{keyword:{pattern:/(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,lookbehind:!0},function:[/\\w+(?=\\s*\\()/,{pattern:/(\\.)\\w+(?=\\s*\\{)/,lookbehind:!0}],number:/\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,operator:/\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/}),delete e.languages.kotlin[\"class-name\"],e.languages.insertBefore(\"kotlin\",\"string\",{\"raw-string\":{pattern:/(\"\"\"|''')[\\s\\S]*?\\1/,alias:\"string\"}}),e.languages.insertBefore(\"kotlin\",\"keyword\",{annotation:{pattern:/\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,alias:\"builtin\"}}),e.languages.insertBefore(\"kotlin\",\"function\",{label:{pattern:/\\w+@|@\\w+/,alias:\"symbol\"}});var n=[{pattern:/\\$\\{[^}]+\\}/,inside:{delimiter:{pattern:/^\\$\\{|\\}$/,alias:\"variable\"},rest:e.languages.kotlin}},{pattern:/\\$\\w+/,alias:\"variable\"}];e.languages.kotlin.string.inside=e.languages.kotlin[\"raw-string\"].inside={interpolation:n}}(Prism);","(function(Prism) {\n\tvar funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i,\n\t    insideEqu = {\n\t\t    'equation-command': {\n\t\t\t    pattern: funcPattern,\n\t\t\t    alias: 'regex'\n\t\t    }\n\t    };\n\n\tPrism.languages.latex = {\n\t\t'comment': /%.*/m,\n\t\t// the verbatim environment prints whitespace to the document\n\t\t'cdata':  {\n\t\t\tpattern: /(\\\\begin\\{((?:verbatim|lstlisting)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t/*\n\t\t * equations can be between $ $ or \\( \\) or \\[ \\]\n\t\t * (all are multiline)\n\t\t */\n\t\t'equation': [\n\t\t\t{\n\t\t\t\tpattern: /\\$(?:\\\\[\\s\\S]|[^\\\\$])*\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n\t\t\t\tinside: insideEqu,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\\\begin\\{((?:equation|math|eqnarray|align|multline|gather)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: insideEqu,\n\t\t\t\talias: 'string'\n\t\t\t}\n\t\t],\n\t\t/*\n\t\t * arguments which are keywords or references are highlighted\n\t\t * as keywords\n\t\t */\n\t\t'keyword': {\n\t\t\tpattern: /(\\\\(?:begin|end|ref|cite|label|usepackage|documentclass)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'url': {\n\t\t\tpattern: /(\\\\url\\{)[^}]+(?=\\})/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t/*\n\t\t * section or chapter headlines are highlighted as bold so that\n\t\t * they stand out more\n\t\t */\n\t\t'headline': {\n\t\t\tpattern: /(\\\\(?:part|chapter|section|subsection|frametitle|subsubsection|paragraph|subparagraph|subsubparagraph|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\}(?:\\[[^\\]]+\\])?)/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'class-name'\n\t\t},\n\t\t'function': {\n\t\t\tpattern: funcPattern,\n\t\t\talias: 'selector'\n\t\t},\n\t\t'punctuation': /[[\\]{}&]/\n\t};\n})(Prism);\n","!function(a){var e=/\\\\(?:[^a-z()[\\]]|[a-z*]+)/i,n={\"equation-command\":{pattern:e,alias:\"regex\"}};Prism.languages.latex={comment:/%.*/m,cdata:{pattern:/(\\\\begin\\{((?:verbatim|lstlisting)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,lookbehind:!0},equation:[{pattern:/\\$(?:\\\\[\\s\\S]|[^\\\\$])*\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,inside:n,alias:\"string\"},{pattern:/(\\\\begin\\{((?:equation|math|eqnarray|align|multline|gather)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,lookbehind:!0,inside:n,alias:\"string\"}],keyword:{pattern:/(\\\\(?:begin|end|ref|cite|label|usepackage|documentclass)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,lookbehind:!0},url:{pattern:/(\\\\url\\{)[^}]+(?=\\})/,lookbehind:!0},headline:{pattern:/(\\\\(?:part|chapter|section|subsection|frametitle|subsubsection|paragraph|subparagraph|subsubparagraph|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\}(?:\\[[^\\]]+\\])?)/,lookbehind:!0,alias:\"class-name\"},function:{pattern:e,alias:\"selector\"},punctuation:/[[\\]{}&]/}}();","/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\nPrism.languages.less = Prism.languages.extend('css', {\n\t'comment': [\n\t\t/\\/\\*[\\s\\S]*?\\*\\//,\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\/.*/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'atrule': {\n\t\tpattern: /@[\\w-]+?(?:\\([^{}]+\\)|[^(){};])*?(?=\\s*\\{)/i,\n\t\tinside: {\n\t\t\t'punctuation': /[:()]/\n\t\t}\n\t},\n\t// selectors and mixins are considered the same\n\t'selector': {\n\t\tpattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\([^{}]*\\)|[^{};@])*?(?=\\s*\\{)/,\n\t\tinside: {\n\t\t\t// mixin parameters\n\t\t\t'variable': /@+[\\w-]+/\n\t\t}\n\t},\n\n\t'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n\t'operator': /[+\\-*\\/]/\n});\n\nPrism.languages.insertBefore('less', 'property', {\n\t'variable': [\n\t\t// Variable declaration (the colon must be consumed!)\n\t\t{\n\t\t\tpattern: /@[\\w-]+\\s*:/,\n\t\t\tinside: {\n\t\t\t\t\"punctuation\": /:/\n\t\t\t}\n\t\t},\n\n\t\t// Variable usage\n\t\t/@@?[\\w-]+/\n\t],\n\t'mixin-usage': {\n\t\tpattern: /([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,\n\t\tlookbehind: true,\n\t\talias: 'function'\n\t}\n});\n","Prism.languages.less=Prism.languages.extend(\"css\",{comment:[/\\/\\*[\\s\\S]*?\\*\\//,{pattern:/(^|[^\\\\])\\/\\/.*/,lookbehind:!0}],atrule:{pattern:/@[\\w-]+?(?:\\([^{}]+\\)|[^(){};])*?(?=\\s*\\{)/i,inside:{punctuation:/[:()]/}},selector:{pattern:/(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\([^{}]*\\)|[^{};@])*?(?=\\s*\\{)/,inside:{variable:/@+[\\w-]+/}},property:/(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,operator:/[+\\-*\\/]/}),Prism.languages.insertBefore(\"less\",\"property\",{variable:[{pattern:/@[\\w-]+\\s*:/,inside:{punctuation:/:/}},/@@?[\\w-]+/],\"mixin-usage\":{pattern:/([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,lookbehind:!0,alias:\"function\"}});","Prism.languages.liquid = {\n\t'keyword': /\\b(?:comment|endcomment|if|elsif|else|endif|unless|endunless|for|endfor|case|endcase|when|in|break|assign|continue|limit|offset|range|reversed|raw|endraw|capture|endcapture|tablerow|endtablerow)\\b/,\n\t'number': /\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp-]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?[df]?/i,\n\t'operator': {\n\t\tpattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,\n\t\tlookbehind: true\n\t},\n\t'function': {\n\t\tpattern: /(^|[\\s;|&])(?:append|prepend|capitalize|cycle|cols|increment|decrement|abs|at_least|at_most|ceil|compact|concat|date|default|divided_by|downcase|escape|escape_once|first|floor|join|last|lstrip|map|minus|modulo|newline_to_br|plus|remove|remove_first|replace|replace_first|reverse|round|rstrip|size|slice|sort|sort_natural|split|strip|strip_html|strip_newlines|times|truncate|truncatewords|uniq|upcase|url_decode|url_encode|include|paginate)(?=$|[\\s;|&])/,\n\t\tlookbehind: true\n\t}\n};\n","Prism.languages.liquid={keyword:/\\b(?:comment|endcomment|if|elsif|else|endif|unless|endunless|for|endfor|case|endcase|when|in|break|assign|continue|limit|offset|range|reversed|raw|endraw|capture|endcapture|tablerow|endtablerow)\\b/,number:/\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp-]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?[df]?/i,operator:{pattern:/(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,lookbehind:!0},function:{pattern:/(^|[\\s;|&])(?:append|prepend|capitalize|cycle|cols|increment|decrement|abs|at_least|at_most|ceil|compact|concat|date|default|divided_by|downcase|escape|escape_once|first|floor|join|last|lstrip|map|minus|modulo|newline_to_br|plus|remove|remove_first|replace|replace_first|reverse|round|rstrip|size|slice|sort|sort_natural|split|strip|strip_html|strip_newlines|times|truncate|truncatewords|uniq|upcase|url_decode|url_encode|include|paginate)(?=$|[\\s;|&])/,lookbehind:!0}};","(function (Prism) {\n\t// Functions to construct regular expressions\n\t// simple form\n\t// e.g. (interactive ... or (interactive)\n\tfunction simple_form(name) {\n\t\treturn RegExp('(\\\\()' + name + '(?=[\\\\s\\\\)])');\n\t}\n\t// booleans and numbers\n\tfunction primitive(pattern) {\n\t\treturn RegExp('([\\\\s([])' + pattern + '(?=[\\\\s)])');\n\t}\n\n\t// Patterns in regular expressions\n\n\t// Symbol name. See https://www.gnu.org/software/emacs/manual/html_node/elisp/Symbol-Type.html\n\t// & and : are excluded as they are usually used for special purposes\n\tvar symbol = '[-+*/_~!@$%^=<>{}\\\\w]+';\n\t// symbol starting with & used in function arguments\n\tvar marker = '&' + symbol;\n\t// Open parenthesis for look-behind\n\tvar par = '(\\\\()';\n\tvar endpar = '(?=\\\\))';\n\t// End the pattern with look-ahead space\n\tvar space = '(?=\\\\s)';\n\n\tvar language = {\n\t\t// Three or four semicolons are considered a heading.\n\t\t// See https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html\n\t\theading: {\n\t\t\tpattern: /;;;.*/,\n\t\t\talias: ['comment', 'title']\n\t\t},\n\t\tcomment: /;.*/,\n\t\tstring: {\n\t\t\tpattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\targument: /[-A-Z]+(?=[.,\\s])/,\n\t\t\t\tsymbol: RegExp('`' + symbol + \"'\")\n\t\t\t}\n\t\t},\n\t\t'quoted-symbol': {\n\t\t\tpattern: RegExp(\"#?'\" + symbol),\n\t\t\talias: ['variable', 'symbol']\n\t\t},\n\t\t'lisp-property': {\n\t\t\tpattern: RegExp(':' + symbol),\n\t\t\talias: 'property'\n\t\t},\n\t\tsplice: {\n\t\t\tpattern: RegExp(',@?' + symbol),\n\t\t\talias: ['symbol', 'variable']\n\t\t},\n\t\tkeyword: [\n\t\t\t{\n\t\t\t\tpattern: RegExp(\n\t\t\t\t\tpar +\n\t\t\t\t\t\t'(?:(?:lexical-)?let\\\\*?|(?:cl-)?letf|if|when|while|unless|cons|cl-loop|and|or|not|cond|setq|error|message|null|require|provide|use-package)' +\n\t\t\t\t\t\tspace\n\t\t\t\t),\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: RegExp(\n\t\t\t\t\tpar + '(?:for|do|collect|return|finally|append|concat|in|by)' + space\n\t\t\t\t),\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t],\n\t\tdeclare: {\n\t\t\tpattern: simple_form('declare'),\n\t\t\tlookbehind: true,\n\t\t\talias: 'keyword'\n\t\t},\n\t\tinteractive: {\n\t\t\tpattern: simple_form('interactive'),\n\t\t\tlookbehind: true,\n\t\t\talias: 'keyword'\n\t\t},\n\t\tboolean: {\n\t\t\tpattern: primitive('(?:t|nil)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\tnumber: {\n\t\t\tpattern: primitive('[-+]?\\\\d+(?:\\\\.\\\\d*)?'),\n\t\t\tlookbehind: true\n\t\t},\n\t\tdefvar: {\n\t\t\tpattern: RegExp(par + 'def(?:var|const|custom|group)\\\\s+' + symbol),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tkeyword: /^def[a-z]+/,\n\t\t\t\tvariable: RegExp(symbol)\n\t\t\t}\n\t\t},\n\t\tdefun: {\n\t\t\tpattern: RegExp(\n\t\t\t\tpar +\n\t\t\t\t\t'(?:cl-)?(?:defun\\\\*?|defmacro)\\\\s+' +\n\t\t\t\t\tsymbol +\n\t\t\t\t\t'\\\\s+\\\\([\\\\s\\\\S]*?\\\\)'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tkeyword: /^(?:cl-)?def\\S+/,\n\t\t\t\t// See below, this property needs to be defined later so that it can\n\t\t\t\t// reference the language object.\n\t\t\t\targuments: null,\n\t\t\t\tfunction: {\n\t\t\t\t\tpattern: RegExp('(^\\\\s)' + symbol),\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\tpunctuation: /[()]/\n\t\t\t}\n\t\t},\n\t\tlambda: {\n\t\t\tpattern: RegExp(par + 'lambda\\\\s+\\\\((?:&?' + symbol + '\\\\s*)*\\\\)'),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tkeyword: /^lambda/,\n\t\t\t\t// See below, this property needs to be defined later so that it can\n\t\t\t\t// reference the language object.\n\t\t\t\targuments: null,\n\t\t\t\tpunctuation: /[()]/\n\t\t\t}\n\t\t},\n\t\tcar: {\n\t\t\tpattern: RegExp(par + symbol),\n\t\t\tlookbehind: true\n\t\t},\n\t\tpunctuation: [\n\t\t\t// open paren, brackets, and close paren\n\t\t\t/(['`,]?\\(|[)\\[\\]])/,\n\t\t\t// cons\n\t\t\t{\n\t\t\t\tpattern: /(\\s)\\.(?=\\s)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t]\n\t};\n\n\tvar arg = {\n\t\t'lisp-marker': RegExp(marker),\n\t\trest: {\n\t\t\targument: {\n\t\t\t\tpattern: RegExp(symbol),\n\t\t\t\talias: 'variable'\n\t\t\t},\n\t\t\tvarform: {\n\t\t\t\tpattern: RegExp(par + symbol + '\\\\s+\\\\S[\\\\s\\\\S]*' + endpar),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\tstring: language.string,\n\t\t\t\t\tboolean: language.boolean,\n\t\t\t\t\tnumber: language.number,\n\t\t\t\t\tsymbol: language.symbol,\n\t\t\t\t\tpunctuation: /[()]/\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tvar forms = '\\\\S+(?:\\\\s+\\\\S+)*';\n\n\tvar arglist = {\n\t\tpattern: RegExp(par + '[\\\\s\\\\S]*' + endpar),\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'rest-vars': {\n\t\t\t\tpattern: RegExp('&(?:rest|body)\\\\s+' + forms),\n\t\t\t\tinside: arg\n\t\t\t},\n\t\t\t'other-marker-vars': {\n\t\t\t\tpattern: RegExp('&(?:optional|aux)\\\\s+' + forms),\n\t\t\t\tinside: arg\n\t\t\t},\n\t\t\tkeys: {\n\t\t\t\tpattern: RegExp('&key\\\\s+' + forms + '(?:\\\\s+&allow-other-keys)?'),\n\t\t\t\tinside: arg\n\t\t\t},\n\t\t\targument: {\n\t\t\t\tpattern: RegExp(symbol),\n\t\t\t\talias: 'variable'\n\t\t\t},\n\t\t\tpunctuation: /[()]/\n\t\t}\n\t};\n\n\tlanguage['lambda'].inside.arguments = arglist;\n\tlanguage['defun'].inside.arguments = Prism.util.clone(arglist);\n\tlanguage['defun'].inside.arguments.inside.sublist = arglist;\n\n\tPrism.languages.lisp = language;\n\tPrism.languages.elisp = language;\n\tPrism.languages.emacs = language;\n\tPrism.languages['emacs-lisp'] = language;\n}(Prism));\n","!function(e){function n(e){return RegExp(\"(\\\\()\"+e+\"(?=[\\\\s\\\\)])\")}function a(e){return RegExp(\"([\\\\s([])\"+e+\"(?=[\\\\s)])\")}var t=\"[-+*/_~!@$%^=<>{}\\\\w]+\",r=\"(\\\\()\",i=\"(?=\\\\))\",s=\"(?=\\\\s)\",o={heading:{pattern:/;;;.*/,alias:[\"comment\",\"title\"]},comment:/;.*/,string:{pattern:/\"(?:[^\"\\\\]|\\\\.)*\"/,greedy:!0,inside:{argument:/[-A-Z]+(?=[.,\\s])/,symbol:RegExp(\"`\"+t+\"'\")}},\"quoted-symbol\":{pattern:RegExp(\"#?'\"+t),alias:[\"variable\",\"symbol\"]},\"lisp-property\":{pattern:RegExp(\":\"+t),alias:\"property\"},splice:{pattern:RegExp(\",@?\"+t),alias:[\"symbol\",\"variable\"]},keyword:[{pattern:RegExp(r+\"(?:(?:lexical-)?let\\\\*?|(?:cl-)?letf|if|when|while|unless|cons|cl-loop|and|or|not|cond|setq|error|message|null|require|provide|use-package)\"+s),lookbehind:!0},{pattern:RegExp(r+\"(?:for|do|collect|return|finally|append|concat|in|by)\"+s),lookbehind:!0}],declare:{pattern:n(\"declare\"),lookbehind:!0,alias:\"keyword\"},interactive:{pattern:n(\"interactive\"),lookbehind:!0,alias:\"keyword\"},boolean:{pattern:a(\"(?:t|nil)\"),lookbehind:!0},number:{pattern:a(\"[-+]?\\\\d+(?:\\\\.\\\\d*)?\"),lookbehind:!0},defvar:{pattern:RegExp(r+\"def(?:var|const|custom|group)\\\\s+\"+t),lookbehind:!0,inside:{keyword:/^def[a-z]+/,variable:RegExp(t)}},defun:{pattern:RegExp(r+\"(?:cl-)?(?:defun\\\\*?|defmacro)\\\\s+\"+t+\"\\\\s+\\\\([\\\\s\\\\S]*?\\\\)\"),lookbehind:!0,inside:{keyword:/^(?:cl-)?def\\S+/,arguments:null,function:{pattern:RegExp(\"(^\\\\s)\"+t),lookbehind:!0},punctuation:/[()]/}},lambda:{pattern:RegExp(r+\"lambda\\\\s+\\\\((?:&?\"+t+\"\\\\s*)*\\\\)\"),lookbehind:!0,inside:{keyword:/^lambda/,arguments:null,punctuation:/[()]/}},car:{pattern:RegExp(r+t),lookbehind:!0},punctuation:[/(['`,]?\\(|[)\\[\\]])/,{pattern:/(\\s)\\.(?=\\s)/,lookbehind:!0}]},l={\"lisp-marker\":RegExp(\"&[-+*/_~!@$%^=<>{}\\\\w]+\"),rest:{argument:{pattern:RegExp(t),alias:\"variable\"},varform:{pattern:RegExp(r+t+\"\\\\s+\\\\S[\\\\s\\\\S]*\"+i),lookbehind:!0,inside:{string:o.string,boolean:o.boolean,number:o.number,symbol:o.symbol,punctuation:/[()]/}}}},p=\"\\\\S+(?:\\\\s+\\\\S+)*\",d={pattern:RegExp(r+\"[\\\\s\\\\S]*\"+i),lookbehind:!0,inside:{\"rest-vars\":{pattern:RegExp(\"&(?:rest|body)\\\\s+\"+p),inside:l},\"other-marker-vars\":{pattern:RegExp(\"&(?:optional|aux)\\\\s+\"+p),inside:l},keys:{pattern:RegExp(\"&key\\\\s+\"+p+\"(?:\\\\s+&allow-other-keys)?\"),inside:l},argument:{pattern:RegExp(t),alias:\"variable\"},punctuation:/[()]/}};o.lambda.inside.arguments=d,o.defun.inside.arguments=e.util.clone(d),o.defun.inside.arguments.inside.sublist=d,e.languages.lisp=o,e.languages.elisp=o,e.languages.emacs=o,e.languages[\"emacs-lisp\"]=o}(Prism);","Prism.languages.livescript = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])#.*/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'interpolated-string': {\n\t\t/* Look-behind and look-ahead prevents wrong behavior of the greedy pattern\n\t\t* forcing it to match \"\"\"-quoted string when it would otherwise match \"-quoted first. */\n\t\tpattern: /(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'variable': {\n\t\t\t\tpattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /(^|[^\\\\])#\\{[^}]+\\}/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^#\\{|\\}$/,\n\t\t\t\t\t\talias: 'variable'\n\t\t\t\t\t}\n\t\t\t\t\t// See rest below\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string': [\n\t\t{\n\t\t\tpattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /<\\[[\\s\\S]*?\\]>/,\n\t\t\tgreedy: true\n\t\t},\n\t\t/\\\\[^\\s,;\\])}]+/\n\t],\n\t'regex': [\n\t\t{\n\t\t\tpattern: /\\/\\/(\\[.+?]|\\\\.|(?!\\/\\/)[^\\\\])+\\/\\/[gimyu]{0,5}/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'comment': {\n\t\t\t\t\tpattern: /(^|[^\\\\])#.*/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /\\/(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}/,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'keyword': {\n\t\tpattern: /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,\n\t\tlookbehind: true\n\t},\n\t'keyword-operator': {\n\t\tpattern: /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?:nt| not)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,\n\t\tlookbehind: true,\n\t\talias: 'operator'\n\t},\n\t'boolean': {\n\t\tpattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,\n\t\tlookbehind: true\n\t},\n\t'argument': {\n\t\t// Don't match .&. nor &&\n\t\tpattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,\n\t\tlookbehind: true,\n\t\talias: 'variable'\n\t},\n\t'number': /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,\n\t'identifier': /[a-z_](?:-?[a-z]|[\\d_])*/i,\n\t'operator': [\n\t\t// Spaced .\n\t\t{\n\t\t\tpattern: /( )\\.(?= )/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t// Full list, in order:\n\t\t// .= .~ .. ...\n\t\t// .&. .^. .<<. .>>. .>>>.\n\t\t// := :: ::=\n\t\t// &&\n\t\t// || |>\n\t\t// < << <<< <<<<\n\t\t// <- <-- <-! <--!\n\t\t// <~ <~~ <~! <~~!\n\t\t// <| <= <?\n\t\t// > >> >= >?\n\t\t// - -- -> -->\n\t\t// + ++\n\t\t// @ @@\n\t\t// % %%\n\t\t// * **\n\t\t// ! != !~=\n\t\t// !~> !~~>\n\t\t// !-> !-->\n\t\t// ~ ~> ~~> ~=\n\t\t// = ==\n\t\t// ^ ^^\n\t\t// / ?\n\t\t/\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/\n\t],\n\t'punctuation': /[(){}\\[\\]|.,:;`]/\n};\n\nPrism.languages.livescript['interpolated-string'].inside['interpolation'].inside.rest = Prism.languages.livescript;","Prism.languages.livescript={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,lookbehind:!0},{pattern:/(^|[^\\\\])#.*/,lookbehind:!0}],\"interpolated-string\":{pattern:/(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,lookbehind:!0,greedy:!0,inside:{variable:{pattern:/(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,lookbehind:!0},interpolation:{pattern:/(^|[^\\\\])#\\{[^}]+\\}/m,lookbehind:!0,inside:{\"interpolation-punctuation\":{pattern:/^#\\{|\\}$/,alias:\"variable\"}}},string:/[\\s\\S]+/}},string:[{pattern:/('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,greedy:!0},{pattern:/<\\[[\\s\\S]*?\\]>/,greedy:!0},/\\\\[^\\s,;\\])}]+/],regex:[{pattern:/\\/\\/(\\[.+?]|\\\\.|(?!\\/\\/)[^\\\\])+\\/\\/[gimyu]{0,5}/,greedy:!0,inside:{comment:{pattern:/(^|[^\\\\])#.*/,lookbehind:!0}}},{pattern:/\\/(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}/,greedy:!0}],keyword:{pattern:/(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,lookbehind:!0},\"keyword-operator\":{pattern:/(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?:nt| not)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,lookbehind:!0,alias:\"operator\"},boolean:{pattern:/(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,lookbehind:!0},argument:{pattern:/(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,lookbehind:!0,alias:\"variable\"},number:/\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,identifier:/[a-z_](?:-?[a-z]|[\\d_])*/i,operator:[{pattern:/( )\\.(?= )/,lookbehind:!0},/\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/],punctuation:/[(){}\\[\\]|.,:;`]/},Prism.languages.livescript[\"interpolated-string\"].inside.interpolation.inside.rest=Prism.languages.livescript;","Prism.languages.lolcode = {\n\t'comment': [\n\t\t/\\bOBTW\\s+[\\s\\S]*?\\s+TLDR\\b/,\n\t\t/\\bBTW.+/\n\t],\n\t'string': {\n\t\tpattern: /\"(?::.|[^\"])*\"/,\n\t\tinside: {\n\t\t\t'variable': /:\\{[^}]+\\}/,\n\t\t\t'symbol': [\n\t\t\t\t/:\\([a-f\\d]+\\)/i,\n\t\t\t\t/:\\[[^\\]]+\\]/,\n\t\t\t\t/:[)>o\":]/\n\t\t\t]\n\t\t},\n\t\tgreedy: true\n\t},\n\t'number': /(?:\\B-)?(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)/,\n\t'symbol': {\n\t\tpattern: /(^|\\s)(?:A )?(?:YARN|NUMBR|NUMBAR|TROOF|BUKKIT|NOOB)(?=\\s|,|$)/,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'keyword': /A(?=\\s)/\n\t\t}\n\t},\n\t'label': {\n\t\tpattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\n\t\tlookbehind: true,\n\t\talias: 'string'\n\t},\n\t'function': {\n\t\tpattern: /((?:^|\\s)(?:I IZ|HOW IZ I|IZ) )[a-zA-Z]\\w*/,\n\t\tlookbehind: true\n\t},\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /(^|\\s)(?:O HAI IM|KTHX|HAI|KTHXBYE|I HAS A|ITZ(?: A)?|R|AN|MKAY|SMOOSH|MAEK|IS NOW(?: A)?|VISIBLE|GIMMEH|O RLY\\?|YA RLY|NO WAI|OIC|MEBBE|WTF\\?|OMG|OMGWTF|GTFO|IM IN YR|IM OUTTA YR|FOUND YR|YR|TIL|WILE|UPPIN|NERFIN|I IZ|HOW IZ I|IF U SAY SO|SRS|HAS A|LIEK(?: A)?|IZ)(?=\\s|,|$)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t/'Z(?=\\s|,|$)/\n\t],\n\t'boolean': {\n\t\tpattern: /(^|\\s)(?:WIN|FAIL)(?=\\s|,|$)/,\n\t\tlookbehind: true\n\t},\n\t'variable': {\n\t\tpattern: /(^|\\s)IT(?=\\s|,|$)/,\n\t\tlookbehind: true\n\t},\n\t'operator': {\n\t\tpattern: /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:SUM|DIFF|PRODUKT|QUOSHUNT|MOD|BIGGR|SMALLR|BOTH|EITHER|WON|ALL|ANY) OF)(?=\\s|,|$)/,\n\t\tlookbehind: true\n\t},\n\t'punctuation': /\\.{3}|…|,|!/\n};","Prism.languages.lolcode={comment:[/\\bOBTW\\s+[\\s\\S]*?\\s+TLDR\\b/,/\\bBTW.+/],string:{pattern:/\"(?::.|[^\"])*\"/,inside:{variable:/:\\{[^}]+\\}/,symbol:[/:\\([a-f\\d]+\\)/i,/:\\[[^\\]]+\\]/,/:[)>o\":]/]},greedy:!0},number:/(?:\\B-)?(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)/,symbol:{pattern:/(^|\\s)(?:A )?(?:YARN|NUMBR|NUMBAR|TROOF|BUKKIT|NOOB)(?=\\s|,|$)/,lookbehind:!0,inside:{keyword:/A(?=\\s)/}},label:{pattern:/((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,lookbehind:!0,alias:\"string\"},function:{pattern:/((?:^|\\s)(?:I IZ|HOW IZ I|IZ) )[a-zA-Z]\\w*/,lookbehind:!0},keyword:[{pattern:/(^|\\s)(?:O HAI IM|KTHX|HAI|KTHXBYE|I HAS A|ITZ(?: A)?|R|AN|MKAY|SMOOSH|MAEK|IS NOW(?: A)?|VISIBLE|GIMMEH|O RLY\\?|YA RLY|NO WAI|OIC|MEBBE|WTF\\?|OMG|OMGWTF|GTFO|IM IN YR|IM OUTTA YR|FOUND YR|YR|TIL|WILE|UPPIN|NERFIN|I IZ|HOW IZ I|IF U SAY SO|SRS|HAS A|LIEK(?: A)?|IZ)(?=\\s|,|$)/,lookbehind:!0},/'Z(?=\\s|,|$)/],boolean:{pattern:/(^|\\s)(?:WIN|FAIL)(?=\\s|,|$)/,lookbehind:!0},variable:{pattern:/(^|\\s)IT(?=\\s|,|$)/,lookbehind:!0},operator:{pattern:/(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:SUM|DIFF|PRODUKT|QUOSHUNT|MOD|BIGGR|SMALLR|BOTH|EITHER|WON|ALL|ANY) OF)(?=\\s|,|$)/,lookbehind:!0},punctuation:/\\.{3}|…|,|!/};","Prism.languages.lua = {\n\t'comment': /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n\t// \\z may be used to skip the following space\n\t'string': {\n\t\tpattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[\\s\\S]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n\t\tgreedy: true\n\t},\n\t'number': /\\b0x[a-f\\d]+\\.?[a-f\\d]*(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|\\.?\\d*(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n\t'keyword': /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n\t'function': /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n\t'operator': [\n\t\t/[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,\n\t\t{\n\t\t\t// Match \"..\" but don't break \"...\"\n\t\t\tpattern: /(^|[^.])\\.\\.(?!\\.)/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'punctuation': /[\\[\\](){},;]|\\.+|:+/\n};","Prism.languages.lua={comment:/^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,string:{pattern:/([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[\\s\\S]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,greedy:!0},number:/\\b0x[a-f\\d]+\\.?[a-f\\d]*(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|\\.?\\d*(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,keyword:/\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,function:/(?!\\d)\\w+(?=\\s*(?:[({]))/,operator:[/[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,{pattern:/(^|[^.])\\.\\.(?!\\.)/,lookbehind:!0}],punctuation:/[\\[\\](){},;]|\\.+|:+/};","Prism.languages.makefile = {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n\t\tlookbehind: true\n\t},\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\n\t// Built-in target names\n\t'builtin': /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n\n\t// Targets\n\t'symbol': {\n\t\tpattern: /^[^:=\\r\\n]+(?=\\s*:(?!=))/m,\n\t\tinside: {\n\t\t\t'variable': /\\$+(?:[^(){}:#=\\s]+|(?=[({]))/\n\t\t}\n\t},\n\t'variable': /\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n\n\t'keyword': [\n\t\t// Directives\n\t\t/-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n\t\t// Functions\n\t\t{\n\t\t\tpattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'operator': /(?:::|[?:+!])?=|[|@]/,\n\t'punctuation': /[:;(){}]/\n};","Prism.languages.makefile={comment:{pattern:/(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,lookbehind:!0},string:{pattern:/([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},builtin:/\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,symbol:{pattern:/^[^:=\\r\\n]+(?=\\s*:(?!=))/m,inside:{variable:/\\$+(?:[^(){}:#=\\s]+|(?=[({]))/}},variable:/\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,keyword:[/-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,{pattern:/(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,lookbehind:!0}],operator:/(?:::|[?:+!])?=|[|@]/,punctuation:/[:;(){}]/};","Prism.languages.markdown = Prism.languages.extend('markup', {});\nPrism.languages.insertBefore('markdown', 'prolog', {\n\t'blockquote': {\n\t\t// > ...\n\t\tpattern: /^>(?:[\\t ]*>)*/m,\n\t\talias: 'punctuation'\n\t},\n\t'code': [\n\t\t{\n\t\t\t// Prefixed by 4 spaces or 1 tab\n\t\t\tpattern: /^(?: {4}|\\t).+/m,\n\t\t\talias: 'keyword'\n\t\t},\n\t\t{\n\t\t\t// `code`\n\t\t\t// ``code``\n\t\t\tpattern: /``.+?``|`[^`\\n]+`/,\n\t\t\talias: 'keyword'\n\t\t},\n\t\t{\n\t\t\t// ```optional language\n\t\t\t// code block\n\t\t\t// ```\n\t\t\tpattern: /^```[\\s\\S]*?^```$/m,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'code-block': {\n\t\t\t\t\tpattern: /^(```.*(?:\\r?\\n|\\r))[\\s\\S]+?(?=(?:\\r?\\n|\\r)^```$)/m,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'code-language': {\n\t\t\t\t\tpattern: /^(```).+/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'punctuation': /```/\n\t\t\t}\n\t\t}\n\t],\n\t'title': [\n\t\t{\n\t\t\t// title 1\n\t\t\t// =======\n\n\t\t\t// title 2\n\t\t\t// -------\n\t\t\tpattern: /\\S.*(?:\\r?\\n|\\r)(?:==+|--+)/,\n\t\t\talias: 'important',\n\t\t\tinside: {\n\t\t\t\tpunctuation: /==+$|--+$/\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t// # title 1\n\t\t\t// ###### title 6\n\t\t\tpattern: /(^\\s*)#+.+/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'important',\n\t\t\tinside: {\n\t\t\t\tpunctuation: /^#+|#+$/\n\t\t\t}\n\t\t}\n\t],\n\t'hr': {\n\t\t// ***\n\t\t// ---\n\t\t// * * *\n\t\t// -----------\n\t\tpattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n\t\tlookbehind: true,\n\t\talias: 'punctuation'\n\t},\n\t'list': {\n\t\t// * item\n\t\t// + item\n\t\t// - item\n\t\t// 1. item\n\t\tpattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n\t\tlookbehind: true,\n\t\talias: 'punctuation'\n\t},\n\t'url-reference': {\n\t\t// [id]: http://example.com \"Optional title\"\n\t\t// [id]: http://example.com 'Optional title'\n\t\t// [id]: http://example.com (Optional title)\n\t\t// [id]: <http://example.com> \"Optional title\"\n\t\tpattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n\t\tinside: {\n\t\t\t'variable': {\n\t\t\t\tpattern: /^(!?\\[)[^\\]]+/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n\t\t\t'punctuation': /^[\\[\\]!:]|[<>]/\n\t\t},\n\t\talias: 'url'\n\t},\n\t'bold': {\n\t\t// **strong**\n\t\t// __strong__\n\n\t\t// Allow only one line break\n\t\tpattern: /(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'punctuation': /^\\*\\*|^__|\\*\\*$|__$/\n\t\t}\n\t},\n\t'italic': {\n\t\t// *em*\n\t\t// _em_\n\n\t\t// Allow only one line break\n\t\tpattern: /(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'punctuation': /^[*_]|[*_]$/\n\t\t}\n\t},\n\t'strike': {\n\t\t// ~~strike through~~\n\t\t// ~strike~\n\n\t\t// Allow only one line break\n\t\tpattern: /(^|[^\\\\])(~~?)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'punctuation': /^~~?|~~?$/\n\t\t}\n\t},\n\t'url': {\n\t\t// [example](http://example.com \"Optional title\")\n\t\t// [example] [id]\n\t\tpattern: /!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,\n\t\tinside: {\n\t\t\t'variable': {\n\t\t\t\tpattern: /(!?\\[)[^\\]]+(?=\\]$)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/\n\t\t\t}\n\t\t}\n\t}\n});\n\n['bold', 'italic', 'strike'].forEach(function (token) {\n\t['url', 'bold', 'italic', 'strike'].forEach(function (inside) {\n\t\tif (token !== inside) {\n\t\t\tPrism.languages.markdown[token].inside[inside] = Prism.languages.markdown[inside];\n\t\t}\n\t});\n});\n\nPrism.hooks.add('after-tokenize', function (env) {\n\tif (env.language !== 'markdown' && env.language !== 'md') {\n\t\treturn;\n\t}\n\n\tfunction walkTokens(tokens) {\n\t\tif (!tokens || typeof tokens === 'string') {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (var i = 0, l = tokens.length; i < l; i++) {\n\t\t\tvar token = tokens[i];\n\n\t\t\tif (token.type !== 'code') {\n\t\t\t\twalkTokens(token.content);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar codeLang = token.content[1];\n\t\t\tvar codeBlock = token.content[3];\n\n\t\t\tif (codeLang && codeBlock &&\n\t\t\t\tcodeLang.type === 'code-language' && codeBlock.type === 'code-block' &&\n\t\t\t\ttypeof codeLang.content === 'string') {\n\n\t\t\t\t// this might be a language that Prism does not support\n\t\t\t\tvar alias = 'language-' + codeLang.content.trim().split(/\\s+/)[0].toLowerCase();\n\n\t\t\t\t// add alias\n\t\t\t\tif (!codeBlock.alias) {\n\t\t\t\t\tcodeBlock.alias = [alias];\n\t\t\t\t} else if (typeof codeBlock.alias === 'string') {\n\t\t\t\t\tcodeBlock.alias = [codeBlock.alias, alias];\n\t\t\t\t} else {\n\t\t\t\t\tcodeBlock.alias.push(alias);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\twalkTokens(env.tokens);\n});\n\nPrism.hooks.add('wrap', function (env) {\n\tif (env.type !== 'code-block') {\n\t\treturn;\n\t}\n\n\tvar codeLang = '';\n\tfor (var i = 0, l = env.classes.length; i < l; i++) {\n\t\tvar cls = env.classes[i];\n\t\tvar match = /language-(.+)/.exec(cls);\n\t\tif (match) {\n\t\t\tcodeLang = match[1];\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tvar grammar = Prism.languages[codeLang];\n\n\tif (!grammar) {\n\t\treturn;\n\t}\n\n\t// reverse Prism.util.encode\n\tvar code = env.content.replace(/&lt;/g, '<').replace(/&amp;/g, '&');\n\n\tenv.content = Prism.highlight(code, grammar, codeLang);\n});\n\nPrism.languages.md = Prism.languages.markdown;\n","Prism.languages.markdown=Prism.languages.extend(\"markup\",{}),Prism.languages.insertBefore(\"markdown\",\"prolog\",{blockquote:{pattern:/^>(?:[\\t ]*>)*/m,alias:\"punctuation\"},code:[{pattern:/^(?: {4}|\\t).+/m,alias:\"keyword\"},{pattern:/``.+?``|`[^`\\n]+`/,alias:\"keyword\"},{pattern:/^```[\\s\\S]*?^```$/m,greedy:!0,inside:{\"code-block\":{pattern:/^(```.*(?:\\r?\\n|\\r))[\\s\\S]+?(?=(?:\\r?\\n|\\r)^```$)/m,lookbehind:!0},\"code-language\":{pattern:/^(```).+/,lookbehind:!0},punctuation:/```/}}],title:[{pattern:/\\S.*(?:\\r?\\n|\\r)(?:==+|--+)/,alias:\"important\",inside:{punctuation:/==+$|--+$/}},{pattern:/(^\\s*)#+.+/m,lookbehind:!0,alias:\"important\",inside:{punctuation:/^#+|#+$/}}],hr:{pattern:/(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,lookbehind:!0,alias:\"punctuation\"},list:{pattern:/(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,lookbehind:!0,alias:\"punctuation\"},\"url-reference\":{pattern:/!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,inside:{variable:{pattern:/^(!?\\[)[^\\]]+/,lookbehind:!0},string:/(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,punctuation:/^[\\[\\]!:]|[<>]/},alias:\"url\"},bold:{pattern:/(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,lookbehind:!0,greedy:!0,inside:{punctuation:/^\\*\\*|^__|\\*\\*$|__$/}},italic:{pattern:/(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,lookbehind:!0,greedy:!0,inside:{punctuation:/^[*_]|[*_]$/}},strike:{pattern:/(^|[^\\\\])(~~?)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,lookbehind:!0,greedy:!0,inside:{punctuation:/^~~?|~~?$/}},url:{pattern:/!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,inside:{variable:{pattern:/(!?\\[)[^\\]]+(?=\\]$)/,lookbehind:!0},string:{pattern:/\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/}}}}),[\"bold\",\"italic\",\"strike\"].forEach(function(a){[\"url\",\"bold\",\"italic\",\"strike\"].forEach(function(n){a!==n&&(Prism.languages.markdown[a].inside[n]=Prism.languages.markdown[n])})}),Prism.hooks.add(\"after-tokenize\",function(n){\"markdown\"!==n.language&&\"md\"!==n.language||!function n(a){if(a&&\"string\"!=typeof a)for(var t=0,e=a.length;t<e;t++){var r=a[t];if(\"code\"===r.type){var i=r.content[1],o=r.content[3];if(i&&o&&\"code-language\"===i.type&&\"code-block\"===o.type&&\"string\"==typeof i.content){var s=\"language-\"+i.content.trim().split(/\\s+/)[0].toLowerCase();o.alias?\"string\"==typeof o.alias?o.alias=[o.alias,s]:o.alias.push(s):o.alias=[s]}}else n(r.content)}}(n.tokens)}),Prism.hooks.add(\"wrap\",function(n){if(\"code-block\"===n.type){for(var a=\"\",t=0,e=n.classes.length;t<e;t++){var r=n.classes[t],i=/language-(.+)/.exec(r);if(i){a=i[1];break}}var o=Prism.languages[a];if(o){var s=n.content.replace(/&lt;/g,\"<\").replace(/&amp;/g,\"&\");n.content=Prism.highlight(s,o,a)}}}),Prism.languages.md=Prism.languages.markdown;","(function (Prism) {\n\n\t/**\n\t * Returns the placeholder for the given language id and index.\n\t *\n\t * @param {string} language\n\t * @param {string|number} index\n\t * @returns {string}\n\t */\n\tfunction getPlaceholder(language, index) {\n\t\treturn '___' + language.toUpperCase() + index + '___';\n\t}\n\n\tObject.defineProperties(Prism.languages['markup-templating'] = {}, {\n\t\tbuildPlaceholders: {\n\t\t\t/**\n\t\t\t * Tokenize all inline templating expressions matching `placeholderPattern`.\n\t\t\t *\n\t\t\t * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n\t\t\t * `true` will be replaced.\n\t\t\t *\n\t\t\t * @param {object} env The environment of the `before-tokenize` hook.\n\t\t\t * @param {string} language The language id.\n\t\t\t * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n\t\t\t * @param {(match: string) => boolean} [replaceFilter]\n\t\t\t */\n\t\t\tvalue: function (env, language, placeholderPattern, replaceFilter) {\n\t\t\t\tif (env.language !== language) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar tokenStack = env.tokenStack = [];\n\n\t\t\t\tenv.code = env.code.replace(placeholderPattern, function (match) {\n\t\t\t\t\tif (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n\t\t\t\t\t\treturn match;\n\t\t\t\t\t}\n\t\t\t\t\tvar i = tokenStack.length;\n\t\t\t\t\tvar placeholder;\n\n\t\t\t\t\t// Check for existing strings\n\t\t\t\t\twhile (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1)\n\t\t\t\t\t\t++i;\n\n\t\t\t\t\t// Create a sparse array\n\t\t\t\t\ttokenStack[i] = match;\n\n\t\t\t\t\treturn placeholder;\n\t\t\t\t});\n\n\t\t\t\t// Switch the grammar to markup\n\t\t\t\tenv.grammar = Prism.languages.markup;\n\t\t\t}\n\t\t},\n\t\ttokenizePlaceholders: {\n\t\t\t/**\n\t\t\t * Replace placeholders with proper tokens after tokenizing.\n\t\t\t *\n\t\t\t * @param {object} env The environment of the `after-tokenize` hook.\n\t\t\t * @param {string} language The language id.\n\t\t\t */\n\t\t\tvalue: function (env, language) {\n\t\t\t\tif (env.language !== language || !env.tokenStack) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Switch the grammar back\n\t\t\t\tenv.grammar = Prism.languages[language];\n\n\t\t\t\tvar j = 0;\n\t\t\t\tvar keys = Object.keys(env.tokenStack);\n\n\t\t\t\tfunction walkTokens(tokens) {\n\t\t\t\t\tfor (var i = 0; i < tokens.length; i++) {\n\t\t\t\t\t\t// all placeholders are replaced already\n\t\t\t\t\t\tif (j >= keys.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar token = tokens[i];\n\t\t\t\t\t\tif (typeof token === 'string' || (token.content && typeof token.content === 'string')) {\n\t\t\t\t\t\t\tvar k = keys[j];\n\t\t\t\t\t\t\tvar t = env.tokenStack[k];\n\t\t\t\t\t\t\tvar s = typeof token === 'string' ? token : token.content;\n\t\t\t\t\t\t\tvar placeholder = getPlaceholder(language, k);\n\n\t\t\t\t\t\t\tvar index = s.indexOf(placeholder);\n\t\t\t\t\t\t\tif (index > -1) {\n\t\t\t\t\t\t\t\t++j;\n\n\t\t\t\t\t\t\t\tvar before = s.substring(0, index);\n\t\t\t\t\t\t\t\tvar middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n\t\t\t\t\t\t\t\tvar after = s.substring(index + placeholder.length);\n\n\t\t\t\t\t\t\t\tvar replacement = [];\n\t\t\t\t\t\t\t\tif (before) {\n\t\t\t\t\t\t\t\t\treplacement.push.apply(replacement, walkTokens([before]));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treplacement.push(middle);\n\t\t\t\t\t\t\t\tif (after) {\n\t\t\t\t\t\t\t\t\treplacement.push.apply(replacement, walkTokens([after]));\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (typeof token === 'string') {\n\t\t\t\t\t\t\t\t\ttokens.splice.apply(tokens, [i, 1].concat(replacement));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ttoken.content = replacement;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (token.content /* && typeof token.content !== 'string' */) {\n\t\t\t\t\t\t\twalkTokens(token.content);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tokens;\n\t\t\t\t}\n\n\t\t\t\twalkTokens(env.tokens);\n\t\t\t}\n\t\t}\n\t});\n\n}(Prism));\n","!function(h){function v(e,n){return\"___\"+e.toUpperCase()+n+\"___\"}Object.defineProperties(h.languages[\"markup-templating\"]={},{buildPlaceholders:{value:function(a,r,e,o){if(a.language===r){var c=a.tokenStack=[];a.code=a.code.replace(e,function(e){if(\"function\"==typeof o&&!o(e))return e;for(var n,t=c.length;-1!==a.code.indexOf(n=v(r,t));)++t;return c[t]=e,n}),a.grammar=h.languages.markup}}},tokenizePlaceholders:{value:function(p,k){if(p.language===k&&p.tokenStack){p.grammar=h.languages[k];var m=0,d=Object.keys(p.tokenStack);!function e(n){for(var t=0;t<n.length&&!(m>=d.length);t++){var a=n[t];if(\"string\"==typeof a||a.content&&\"string\"==typeof a.content){var r=d[m],o=p.tokenStack[r],c=\"string\"==typeof a?a:a.content,i=v(k,r),u=c.indexOf(i);if(-1<u){++m;var g=c.substring(0,u),l=new h.Token(k,h.tokenize(o,p.grammar),\"language-\"+k,o),s=c.substring(u+i.length),f=[];g&&f.push.apply(f,e([g])),f.push(l),s&&f.push.apply(f,e([s])),\"string\"==typeof a?n.splice.apply(n,[t,1].concat(f)):a.content=f}}else a.content&&e(a.content)}return n}(p.tokens)}}}})}(Prism);","Prism.languages.markup = {\n\t'comment': /<!--[\\s\\S]*?-->/,\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t'doctype': /<!DOCTYPE[\\s\\S]+?>/i,\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t/^=/,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': /&#?[\\da-z]{1,8};/i\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function(env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, tagName), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n","Prism.languages.markup={comment:/<!--[\\s\\S]*?-->/,prolog:/<\\?[\\s\\S]+?\\?>/,doctype:/<!DOCTYPE[\\s\\S]+?>/i,cdata:/<!\\[CDATA\\[[\\s\\S]*?]]>/i,tag:{pattern:/<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,greedy:!0,inside:{tag:{pattern:/^<\\/?[^\\s>\\/]+/i,inside:{punctuation:/^<\\/?/,namespace:/^[^\\s>\\/:]+:/}},\"attr-value\":{pattern:/=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,inside:{punctuation:[/^=/,{pattern:/^(\\s*)[\"']|[\"']$/,lookbehind:!0}]}},punctuation:/\\/?>/,\"attr-name\":{pattern:/[^\\s>\\/]+/,inside:{namespace:/^[^\\s>\\/:]+:/}}}},entity:/&#?[\\da-z]{1,8};/i},Prism.languages.markup.tag.inside[\"attr-value\"].inside.entity=Prism.languages.markup.entity,Prism.hooks.add(\"wrap\",function(a){\"entity\"===a.type&&(a.attributes.title=a.content.replace(/&amp;/,\"&\"))}),Object.defineProperty(Prism.languages.markup.tag,\"addInlined\",{value:function(a,e){var s={};s[\"language-\"+e]={pattern:/(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,lookbehind:!0,inside:Prism.languages[e]},s.cdata=/^<!\\[CDATA\\[|\\]\\]>$/i;var n={\"included-cdata\":{pattern:/<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,inside:s}};n[\"language-\"+e]={pattern:/[\\s\\S]+/,inside:Prism.languages[e]};var i={};i[a]={pattern:RegExp(\"(<__[\\\\s\\\\S]*?>)(?:<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\s*|[\\\\s\\\\S])*?(?=<\\\\/__>)\".replace(/__/g,a),\"i\"),lookbehind:!0,greedy:!0,inside:n},Prism.languages.insertBefore(\"markup\",\"cdata\",i)}}),Prism.languages.xml=Prism.languages.extend(\"markup\",{}),Prism.languages.html=Prism.languages.markup,Prism.languages.mathml=Prism.languages.markup,Prism.languages.svg=Prism.languages.markup;","Prism.languages.matlab = {\n\t'comment': [\n\t\t/%\\{[\\s\\S]*?\\}%/,\n\t\t/%.+/\n\t],\n\t'string': {\n\t\tpattern: /\\B'(?:''|[^'\\r\\n])*'/,\n\t\tgreedy: true\n\t},\n\t// FIXME We could handle imaginary numbers as a whole\n\t'number': /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n\t'keyword': /\\b(?:break|case|catch|continue|else|elseif|end|for|function|if|inf|NaN|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n\t'function': /(?!\\d)\\w+(?=\\s*\\()/,\n\t'operator': /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n\t'punctuation': /\\.{3}|[.,;\\[\\](){}!]/\n};","Prism.languages.matlab={comment:[/%\\{[\\s\\S]*?\\}%/,/%.+/],string:{pattern:/\\B'(?:''|[^'\\r\\n])*'/,greedy:!0},number:/(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,keyword:/\\b(?:break|case|catch|continue|else|elseif|end|for|function|if|inf|NaN|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,function:/(?!\\d)\\w+(?=\\s*\\()/,operator:/\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,punctuation:/\\.{3}|[.,;\\[\\](){}!]/};","Prism.languages.mel = {\n\t'comment': /\\/\\/.*/,\n\t'code': {\n\t\tpattern: /`(?:\\\\.|[^\\\\`\\r\\n])*`/,\n\t\tgreedy: true,\n\t\talias: 'italic',\n\t\tinside: {\n\t\t\t'delimiter': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'punctuation'\n\t\t\t}\n\t\t\t// See rest below\n\t\t}\n\t},\n\t'string': {\n\t\tpattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n\t\tgreedy: true\n\t},\n\t'variable': /\\$\\w+/,\n\t'number': /\\b0x[\\da-fA-F]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+/,\n\t'flag': {\n\t\tpattern: /-[^\\d\\W]\\w*/,\n\t\talias: 'operator'\n\t},\n\t'keyword': /\\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\\b/,\n\t'function': /\\w+(?=\\()|\\b(?:about|abs|addAttr|addAttributeEditorNodeHelp|addDynamic|addNewShelfTab|addPP|addPanelCategory|addPrefixToName|advanceToNextDrivenKey|affectedNet|affects|aimConstraint|air|alias|aliasAttr|align|alignCtx|alignCurve|alignSurface|allViewFit|ambientLight|angle|angleBetween|animCone|animCurveEditor|animDisplay|animView|annotate|appendStringArray|applicationName|applyAttrPreset|applyTake|arcLenDimContext|arcLengthDimension|arclen|arrayMapper|art3dPaintCtx|artAttrCtx|artAttrPaintVertexCtx|artAttrSkinPaintCtx|artAttrTool|artBuildPaintMenu|artFluidAttrCtx|artPuttyCtx|artSelectCtx|artSetPaintCtx|artUserPaintCtx|assignCommand|assignInputDevice|assignViewportFactories|attachCurve|attachDeviceAttr|attachSurface|attrColorSliderGrp|attrCompatibility|attrControlGrp|attrEnumOptionMenu|attrEnumOptionMenuGrp|attrFieldGrp|attrFieldSliderGrp|attrNavigationControlGrp|attrPresetEditWin|attributeExists|attributeInfo|attributeMenu|attributeQuery|autoKeyframe|autoPlace|bakeClip|bakeFluidShading|bakePartialHistory|bakeResults|bakeSimulation|basename|basenameEx|batchRender|bessel|bevel|bevelPlus|binMembership|bindSkin|blend2|blendShape|blendShapeEditor|blendShapePanel|blendTwoAttr|blindDataType|boneLattice|boundary|boxDollyCtx|boxZoomCtx|bufferCurve|buildBookmarkMenu|buildKeyframeMenu|button|buttonManip|CBG|cacheFile|cacheFileCombine|cacheFileMerge|cacheFileTrack|camera|cameraView|canCreateManip|canvas|capitalizeString|catch|catchQuiet|ceil|changeSubdivComponentDisplayLevel|changeSubdivRegion|channelBox|character|characterMap|characterOutlineEditor|characterize|chdir|checkBox|checkBoxGrp|checkDefaultRenderGlobals|choice|circle|circularFillet|clamp|clear|clearCache|clip|clipEditor|clipEditorCurrentTimeCtx|clipSchedule|clipSchedulerOutliner|clipTrimBefore|closeCurve|closeSurface|cluster|cmdFileOutput|cmdScrollFieldExecuter|cmdScrollFieldReporter|cmdShell|coarsenSubdivSelectionList|collision|color|colorAtPoint|colorEditor|colorIndex|colorIndexSliderGrp|colorSliderButtonGrp|colorSliderGrp|columnLayout|commandEcho|commandLine|commandPort|compactHairSystem|componentEditor|compositingInterop|computePolysetVolume|condition|cone|confirmDialog|connectAttr|connectControl|connectDynamic|connectJoint|connectionInfo|constrain|constrainValue|constructionHistory|container|containsMultibyte|contextInfo|control|convertFromOldLayers|convertIffToPsd|convertLightmap|convertSolidTx|convertTessellation|convertUnit|copyArray|copyFlexor|copyKey|copySkinWeights|cos|cpButton|cpCache|cpClothSet|cpCollision|cpConstraint|cpConvClothToMesh|cpForces|cpGetSolverAttr|cpPanel|cpProperty|cpRigidCollisionFilter|cpSeam|cpSetEdit|cpSetSolverAttr|cpSolver|cpSolverTypes|cpTool|cpUpdateClothUVs|createDisplayLayer|createDrawCtx|createEditor|createLayeredPsdFile|createMotionField|createNewShelf|createNode|createRenderLayer|createSubdivRegion|cross|crossProduct|ctxAbort|ctxCompletion|ctxEditMode|ctxTraverse|currentCtx|currentTime|currentTimeCtx|currentUnit|curve|curveAddPtCtx|curveCVCtx|curveEPCtx|curveEditorCtx|curveIntersect|curveMoveEPCtx|curveOnSurface|curveSketchCtx|cutKey|cycleCheck|cylinder|dagPose|date|defaultLightListCheckBox|defaultNavigation|defineDataServer|defineVirtualDevice|deformer|deg_to_rad|delete|deleteAttr|deleteShadingGroupsAndMaterials|deleteShelfTab|deleteUI|deleteUnusedBrushes|delrandstr|detachCurve|detachDeviceAttr|detachSurface|deviceEditor|devicePanel|dgInfo|dgdirty|dgeval|dgtimer|dimWhen|directKeyCtx|directionalLight|dirmap|dirname|disable|disconnectAttr|disconnectJoint|diskCache|displacementToPoly|displayAffected|displayColor|displayCull|displayLevelOfDetail|displayPref|displayRGBColor|displaySmoothness|displayStats|displayString|displaySurface|distanceDimContext|distanceDimension|doBlur|dolly|dollyCtx|dopeSheetEditor|dot|dotProduct|doubleProfileBirailSurface|drag|dragAttrContext|draggerContext|dropoffLocator|duplicate|duplicateCurve|duplicateSurface|dynCache|dynControl|dynExport|dynExpression|dynGlobals|dynPaintEditor|dynParticleCtx|dynPref|dynRelEdPanel|dynRelEditor|dynamicLoad|editAttrLimits|editDisplayLayerGlobals|editDisplayLayerMembers|editRenderLayerAdjustment|editRenderLayerGlobals|editRenderLayerMembers|editor|editorTemplate|effector|emit|emitter|enableDevice|encodeString|endString|endsWith|env|equivalent|equivalentTol|erf|error|eval|evalDeferred|evalEcho|event|exactWorldBoundingBox|exclusiveLightCheckBox|exec|executeForEachObject|exists|exp|expression|expressionEditorListen|extendCurve|extendSurface|extrude|fcheck|fclose|feof|fflush|fgetline|fgetword|file|fileBrowserDialog|fileDialog|fileExtension|fileInfo|filetest|filletCurve|filter|filterCurve|filterExpand|filterStudioImport|findAllIntersections|findAnimCurves|findKeyframe|findMenuItem|findRelatedSkinCluster|finder|firstParentOf|fitBspline|flexor|floatEq|floatField|floatFieldGrp|floatScrollBar|floatSlider|floatSlider2|floatSliderButtonGrp|floatSliderGrp|floor|flow|fluidCacheInfo|fluidEmitter|fluidVoxelInfo|flushUndo|fmod|fontDialog|fopen|formLayout|format|fprint|frameLayout|fread|freeFormFillet|frewind|fromNativePath|fwrite|gamma|gauss|geometryConstraint|getApplicationVersionAsFloat|getAttr|getClassification|getDefaultBrush|getFileList|getFluidAttr|getInputDeviceRange|getMayaPanelTypes|getModifiers|getPanel|getParticleAttr|getPluginResource|getenv|getpid|glRender|glRenderEditor|globalStitch|gmatch|goal|gotoBindPose|grabColor|gradientControl|gradientControlNoAttr|graphDollyCtx|graphSelectContext|graphTrackCtx|gravity|grid|gridLayout|group|groupObjectsByName|HfAddAttractorToAS|HfAssignAS|HfBuildEqualMap|HfBuildFurFiles|HfBuildFurImages|HfCancelAFR|HfConnectASToHF|HfCreateAttractor|HfDeleteAS|HfEditAS|HfPerformCreateAS|HfRemoveAttractorFromAS|HfSelectAttached|HfSelectAttractors|HfUnAssignAS|hardenPointCurve|hardware|hardwareRenderPanel|headsUpDisplay|headsUpMessage|help|helpLine|hermite|hide|hilite|hitTest|hotBox|hotkey|hotkeyCheck|hsv_to_rgb|hudButton|hudSlider|hudSliderButton|hwReflectionMap|hwRender|hwRenderLoad|hyperGraph|hyperPanel|hyperShade|hypot|iconTextButton|iconTextCheckBox|iconTextRadioButton|iconTextRadioCollection|iconTextScrollList|iconTextStaticLabel|ikHandle|ikHandleCtx|ikHandleDisplayScale|ikSolver|ikSplineHandleCtx|ikSystem|ikSystemInfo|ikfkDisplayMethod|illustratorCurves|image|imfPlugins|inheritTransform|insertJoint|insertJointCtx|insertKeyCtx|insertKnotCurve|insertKnotSurface|instance|instanceable|instancer|intField|intFieldGrp|intScrollBar|intSlider|intSliderGrp|interToUI|internalVar|intersect|iprEngine|isAnimCurve|isConnected|isDirty|isParentOf|isSameObject|isTrue|isValidObjectName|isValidString|isValidUiName|isolateSelect|itemFilter|itemFilterAttr|itemFilterRender|itemFilterType|joint|jointCluster|jointCtx|jointDisplayScale|jointLattice|keyTangent|keyframe|keyframeOutliner|keyframeRegionCurrentTimeCtx|keyframeRegionDirectKeyCtx|keyframeRegionDollyCtx|keyframeRegionInsertKeyCtx|keyframeRegionMoveKeyCtx|keyframeRegionScaleKeyCtx|keyframeRegionSelectKeyCtx|keyframeRegionSetKeyCtx|keyframeRegionTrackCtx|keyframeStats|lassoContext|lattice|latticeDeformKeyCtx|launch|launchImageEditor|layerButton|layeredShaderPort|layeredTexturePort|layout|layoutDialog|lightList|lightListEditor|lightListPanel|lightlink|lineIntersection|linearPrecision|linstep|listAnimatable|listAttr|listCameras|listConnections|listDeviceAttachments|listHistory|listInputDeviceAxes|listInputDeviceButtons|listInputDevices|listMenuAnnotation|listNodeTypes|listPanelCategories|listRelatives|listSets|listTransforms|listUnselected|listerEditor|loadFluid|loadNewShelf|loadPlugin|loadPluginLanguageResources|loadPrefObjects|localizedPanelLabel|lockNode|loft|log|longNameOf|lookThru|ls|lsThroughFilter|lsType|lsUI|Mayatomr|mag|makeIdentity|makeLive|makePaintable|makeRoll|makeSingleSurface|makeTubeOn|makebot|manipMoveContext|manipMoveLimitsCtx|manipOptions|manipRotateContext|manipRotateLimitsCtx|manipScaleContext|manipScaleLimitsCtx|marker|match|max|memory|menu|menuBarLayout|menuEditor|menuItem|menuItemToShelf|menuSet|menuSetPref|messageLine|min|minimizeApp|mirrorJoint|modelCurrentTimeCtx|modelEditor|modelPanel|mouse|movIn|movOut|move|moveIKtoFK|moveKeyCtx|moveVertexAlongDirection|multiProfileBirailSurface|mute|nParticle|nameCommand|nameField|namespace|namespaceInfo|newPanelItems|newton|nodeCast|nodeIconButton|nodeOutliner|nodePreset|nodeType|noise|nonLinear|normalConstraint|normalize|nurbsBoolean|nurbsCopyUVSet|nurbsCube|nurbsEditUV|nurbsPlane|nurbsSelect|nurbsSquare|nurbsToPoly|nurbsToPolygonsPref|nurbsToSubdiv|nurbsToSubdivPref|nurbsUVSet|nurbsViewDirectionVector|objExists|objectCenter|objectLayer|objectType|objectTypeUI|obsoleteProc|oceanNurbsPreviewPlane|offsetCurve|offsetCurveOnSurface|offsetSurface|openGLExtension|openMayaPref|optionMenu|optionMenuGrp|optionVar|orbit|orbitCtx|orientConstraint|outlinerEditor|outlinerPanel|overrideModifier|paintEffectsDisplay|pairBlend|palettePort|paneLayout|panel|panelConfiguration|panelHistory|paramDimContext|paramDimension|paramLocator|parent|parentConstraint|particle|particleExists|particleInstancer|particleRenderInfo|partition|pasteKey|pathAnimation|pause|pclose|percent|performanceOptions|pfxstrokes|pickWalk|picture|pixelMove|planarSrf|plane|play|playbackOptions|playblast|plugAttr|plugNode|pluginInfo|pluginResourceUtil|pointConstraint|pointCurveConstraint|pointLight|pointMatrixMult|pointOnCurve|pointOnSurface|pointPosition|poleVectorConstraint|polyAppend|polyAppendFacetCtx|polyAppendVertex|polyAutoProjection|polyAverageNormal|polyAverageVertex|polyBevel|polyBlendColor|polyBlindData|polyBoolOp|polyBridgeEdge|polyCacheMonitor|polyCheck|polyChipOff|polyClipboard|polyCloseBorder|polyCollapseEdge|polyCollapseFacet|polyColorBlindData|polyColorDel|polyColorPerVertex|polyColorSet|polyCompare|polyCone|polyCopyUV|polyCrease|polyCreaseCtx|polyCreateFacet|polyCreateFacetCtx|polyCube|polyCut|polyCutCtx|polyCylinder|polyCylindricalProjection|polyDelEdge|polyDelFacet|polyDelVertex|polyDuplicateAndConnect|polyDuplicateEdge|polyEditUV|polyEditUVShell|polyEvaluate|polyExtrudeEdge|polyExtrudeFacet|polyExtrudeVertex|polyFlipEdge|polyFlipUV|polyForceUV|polyGeoSampler|polyHelix|polyInfo|polyInstallAction|polyLayoutUV|polyListComponentConversion|polyMapCut|polyMapDel|polyMapSew|polyMapSewMove|polyMergeEdge|polyMergeEdgeCtx|polyMergeFacet|polyMergeFacetCtx|polyMergeUV|polyMergeVertex|polyMirrorFace|polyMoveEdge|polyMoveFacet|polyMoveFacetUV|polyMoveUV|polyMoveVertex|polyNormal|polyNormalPerVertex|polyNormalizeUV|polyOptUvs|polyOptions|polyOutput|polyPipe|polyPlanarProjection|polyPlane|polyPlatonicSolid|polyPoke|polyPrimitive|polyPrism|polyProjection|polyPyramid|polyQuad|polyQueryBlindData|polyReduce|polySelect|polySelectConstraint|polySelectConstraintMonitor|polySelectCtx|polySelectEditCtx|polySeparate|polySetToFaceNormal|polySewEdge|polyShortestPathCtx|polySmooth|polySoftEdge|polySphere|polySphericalProjection|polySplit|polySplitCtx|polySplitEdge|polySplitRing|polySplitVertex|polyStraightenUVBorder|polySubdivideEdge|polySubdivideFacet|polyToSubdiv|polyTorus|polyTransfer|polyTriangulate|polyUVSet|polyUnite|polyWedgeFace|popen|popupMenu|pose|pow|preloadRefEd|print|progressBar|progressWindow|projFileViewer|projectCurve|projectTangent|projectionContext|projectionManip|promptDialog|propModCtx|propMove|psdChannelOutliner|psdEditTextureFile|psdExport|psdTextureFile|putenv|pwd|python|querySubdiv|quit|rad_to_deg|radial|radioButton|radioButtonGrp|radioCollection|radioMenuItemCollection|rampColorPort|rand|randomizeFollicles|randstate|rangeControl|readTake|rebuildCurve|rebuildSurface|recordAttr|recordDevice|redo|reference|referenceEdit|referenceQuery|refineSubdivSelectionList|refresh|refreshAE|registerPluginResource|rehash|reloadImage|removeJoint|removeMultiInstance|removePanelCategory|rename|renameAttr|renameSelectionList|renameUI|render|renderGlobalsNode|renderInfo|renderLayerButton|renderLayerParent|renderLayerPostProcess|renderLayerUnparent|renderManip|renderPartition|renderQualityNode|renderSettings|renderThumbnailUpdate|renderWindowEditor|renderWindowSelectContext|renderer|reorder|reorderDeformers|requires|reroot|resampleFluid|resetAE|resetPfxToPolyCamera|resetTool|resolutionNode|retarget|reverseCurve|reverseSurface|revolve|rgb_to_hsv|rigidBody|rigidSolver|roll|rollCtx|rootOf|rot|rotate|rotationInterpolation|roundConstantRadius|rowColumnLayout|rowLayout|runTimeCommand|runup|sampleImage|saveAllShelves|saveAttrPreset|saveFluid|saveImage|saveInitialState|saveMenu|savePrefObjects|savePrefs|saveShelf|saveToolSettings|scale|scaleBrushBrightness|scaleComponents|scaleConstraint|scaleKey|scaleKeyCtx|sceneEditor|sceneUIReplacement|scmh|scriptCtx|scriptEditorInfo|scriptJob|scriptNode|scriptTable|scriptToShelf|scriptedPanel|scriptedPanelType|scrollField|scrollLayout|sculpt|searchPathArray|seed|selLoadSettings|select|selectContext|selectCurveCV|selectKey|selectKeyCtx|selectKeyframeRegionCtx|selectMode|selectPref|selectPriority|selectType|selectedNodes|selectionConnection|separator|setAttr|setAttrEnumResource|setAttrMapping|setAttrNiceNameResource|setConstraintRestPosition|setDefaultShadingGroup|setDrivenKeyframe|setDynamic|setEditCtx|setEditor|setFluidAttr|setFocus|setInfinity|setInputDeviceMapping|setKeyCtx|setKeyPath|setKeyframe|setKeyframeBlendshapeTargetWts|setMenuMode|setNodeNiceNameResource|setNodeTypeFlag|setParent|setParticleAttr|setPfxToPolyCamera|setPluginResource|setProject|setStampDensity|setStartupMessage|setState|setToolTo|setUITemplate|setXformManip|sets|shadingConnection|shadingGeometryRelCtx|shadingLightRelCtx|shadingNetworkCompare|shadingNode|shapeCompare|shelfButton|shelfLayout|shelfTabLayout|shellField|shortNameOf|showHelp|showHidden|showManipCtx|showSelectionInTitle|showShadingGroupAttrEditor|showWindow|sign|simplify|sin|singleProfileBirailSurface|size|sizeBytes|skinCluster|skinPercent|smoothCurve|smoothTangentSurface|smoothstep|snap2to2|snapKey|snapMode|snapTogetherCtx|snapshot|soft|softMod|softModCtx|sort|sound|soundControl|source|spaceLocator|sphere|sphrand|spotLight|spotLightPreviewPort|spreadSheetEditor|spring|sqrt|squareSurface|srtContext|stackTrace|startString|startsWith|stitchAndExplodeShell|stitchSurface|stitchSurfacePoints|strcmp|stringArrayCatenate|stringArrayContains|stringArrayCount|stringArrayInsertAtIndex|stringArrayIntersector|stringArrayRemove|stringArrayRemoveAtIndex|stringArrayRemoveDuplicates|stringArrayRemoveExact|stringArrayToString|stringToStringArray|strip|stripPrefixFromName|stroke|subdAutoProjection|subdCleanTopology|subdCollapse|subdDuplicateAndConnect|subdEditUV|subdListComponentConversion|subdMapCut|subdMapSewMove|subdMatchTopology|subdMirror|subdToBlind|subdToPoly|subdTransferUVsToCache|subdiv|subdivCrease|subdivDisplaySmoothness|substitute|substituteAllString|substituteGeometry|substring|surface|surfaceSampler|surfaceShaderList|swatchDisplayPort|switchTable|symbolButton|symbolCheckBox|sysFile|system|tabLayout|tan|tangentConstraint|texLatticeDeformContext|texManipContext|texMoveContext|texMoveUVShellContext|texRotateContext|texScaleContext|texSelectContext|texSelectShortestPathCtx|texSmudgeUVContext|texWinToolCtx|text|textCurves|textField|textFieldButtonGrp|textFieldGrp|textManip|textScrollList|textToShelf|textureDisplacePlane|textureHairColor|texturePlacementContext|textureWindow|threadCount|threePointArcCtx|timeControl|timePort|timerX|toNativePath|toggle|toggleAxis|toggleWindowVisibility|tokenize|tokenizeList|tolerance|tolower|toolButton|toolCollection|toolDropped|toolHasOptions|toolPropertyWindow|torus|toupper|trace|track|trackCtx|transferAttributes|transformCompare|transformLimits|translator|trim|trunc|truncateFluidCache|truncateHairCache|tumble|tumbleCtx|turbulence|twoPointArcCtx|uiRes|uiTemplate|unassignInputDevice|undo|undoInfo|ungroup|uniform|unit|unloadPlugin|untangleUV|untitledFileName|untrim|upAxis|updateAE|userCtx|uvLink|uvSnapshot|validateShelfName|vectorize|view2dToolCtx|viewCamera|viewClipPlane|viewFit|viewHeadOn|viewLookAt|viewManip|viewPlace|viewSet|visor|volumeAxis|vortex|waitCursor|warning|webBrowser|webBrowserPrefs|whatIs|window|windowPref|wire|wireContext|workspace|wrinkle|wrinkleContext|writeTake|xbmLangPathList|xform)\\b/,\n\t\n\t'operator': [\n\t\t/\\+[+=]?|-[-=]?|&&|\\|\\||[<>]=|[*\\/!=]=?|[%^]/,\n\t\t{\n\t\t\t// We don't want to match <<\n\t\t\tpattern: /(^|[^<])<(?!<)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\t// We don't want to match >>\n\t\t\tpattern: /(^|[^>])>(?!>)/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'punctuation': /<<|>>|[.,:;?\\[\\](){}]/\n};\nPrism.languages.mel['code'].inside.rest = Prism.languages.mel;","Prism.languages.mel={comment:/\\/\\/.*/,code:{pattern:/`(?:\\\\.|[^\\\\`\\r\\n])*`/,greedy:!0,alias:\"italic\",inside:{delimiter:{pattern:/^`|`$/,alias:\"punctuation\"}}},string:{pattern:/\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,greedy:!0},variable:/\\$\\w+/,number:/\\b0x[\\da-fA-F]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+/,flag:{pattern:/-[^\\d\\W]\\w*/,alias:\"operator\"},keyword:/\\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\\b/,function:/\\w+(?=\\()|\\b(?:about|abs|addAttr|addAttributeEditorNodeHelp|addDynamic|addNewShelfTab|addPP|addPanelCategory|addPrefixToName|advanceToNextDrivenKey|affectedNet|affects|aimConstraint|air|alias|aliasAttr|align|alignCtx|alignCurve|alignSurface|allViewFit|ambientLight|angle|angleBetween|animCone|animCurveEditor|animDisplay|animView|annotate|appendStringArray|applicationName|applyAttrPreset|applyTake|arcLenDimContext|arcLengthDimension|arclen|arrayMapper|art3dPaintCtx|artAttrCtx|artAttrPaintVertexCtx|artAttrSkinPaintCtx|artAttrTool|artBuildPaintMenu|artFluidAttrCtx|artPuttyCtx|artSelectCtx|artSetPaintCtx|artUserPaintCtx|assignCommand|assignInputDevice|assignViewportFactories|attachCurve|attachDeviceAttr|attachSurface|attrColorSliderGrp|attrCompatibility|attrControlGrp|attrEnumOptionMenu|attrEnumOptionMenuGrp|attrFieldGrp|attrFieldSliderGrp|attrNavigationControlGrp|attrPresetEditWin|attributeExists|attributeInfo|attributeMenu|attributeQuery|autoKeyframe|autoPlace|bakeClip|bakeFluidShading|bakePartialHistory|bakeResults|bakeSimulation|basename|basenameEx|batchRender|bessel|bevel|bevelPlus|binMembership|bindSkin|blend2|blendShape|blendShapeEditor|blendShapePanel|blendTwoAttr|blindDataType|boneLattice|boundary|boxDollyCtx|boxZoomCtx|bufferCurve|buildBookmarkMenu|buildKeyframeMenu|button|buttonManip|CBG|cacheFile|cacheFileCombine|cacheFileMerge|cacheFileTrack|camera|cameraView|canCreateManip|canvas|capitalizeString|catch|catchQuiet|ceil|changeSubdivComponentDisplayLevel|changeSubdivRegion|channelBox|character|characterMap|characterOutlineEditor|characterize|chdir|checkBox|checkBoxGrp|checkDefaultRenderGlobals|choice|circle|circularFillet|clamp|clear|clearCache|clip|clipEditor|clipEditorCurrentTimeCtx|clipSchedule|clipSchedulerOutliner|clipTrimBefore|closeCurve|closeSurface|cluster|cmdFileOutput|cmdScrollFieldExecuter|cmdScrollFieldReporter|cmdShell|coarsenSubdivSelectionList|collision|color|colorAtPoint|colorEditor|colorIndex|colorIndexSliderGrp|colorSliderButtonGrp|colorSliderGrp|columnLayout|commandEcho|commandLine|commandPort|compactHairSystem|componentEditor|compositingInterop|computePolysetVolume|condition|cone|confirmDialog|connectAttr|connectControl|connectDynamic|connectJoint|connectionInfo|constrain|constrainValue|constructionHistory|container|containsMultibyte|contextInfo|control|convertFromOldLayers|convertIffToPsd|convertLightmap|convertSolidTx|convertTessellation|convertUnit|copyArray|copyFlexor|copyKey|copySkinWeights|cos|cpButton|cpCache|cpClothSet|cpCollision|cpConstraint|cpConvClothToMesh|cpForces|cpGetSolverAttr|cpPanel|cpProperty|cpRigidCollisionFilter|cpSeam|cpSetEdit|cpSetSolverAttr|cpSolver|cpSolverTypes|cpTool|cpUpdateClothUVs|createDisplayLayer|createDrawCtx|createEditor|createLayeredPsdFile|createMotionField|createNewShelf|createNode|createRenderLayer|createSubdivRegion|cross|crossProduct|ctxAbort|ctxCompletion|ctxEditMode|ctxTraverse|currentCtx|currentTime|currentTimeCtx|currentUnit|curve|curveAddPtCtx|curveCVCtx|curveEPCtx|curveEditorCtx|curveIntersect|curveMoveEPCtx|curveOnSurface|curveSketchCtx|cutKey|cycleCheck|cylinder|dagPose|date|defaultLightListCheckBox|defaultNavigation|defineDataServer|defineVirtualDevice|deformer|deg_to_rad|delete|deleteAttr|deleteShadingGroupsAndMaterials|deleteShelfTab|deleteUI|deleteUnusedBrushes|delrandstr|detachCurve|detachDeviceAttr|detachSurface|deviceEditor|devicePanel|dgInfo|dgdirty|dgeval|dgtimer|dimWhen|directKeyCtx|directionalLight|dirmap|dirname|disable|disconnectAttr|disconnectJoint|diskCache|displacementToPoly|displayAffected|displayColor|displayCull|displayLevelOfDetail|displayPref|displayRGBColor|displaySmoothness|displayStats|displayString|displaySurface|distanceDimContext|distanceDimension|doBlur|dolly|dollyCtx|dopeSheetEditor|dot|dotProduct|doubleProfileBirailSurface|drag|dragAttrContext|draggerContext|dropoffLocator|duplicate|duplicateCurve|duplicateSurface|dynCache|dynControl|dynExport|dynExpression|dynGlobals|dynPaintEditor|dynParticleCtx|dynPref|dynRelEdPanel|dynRelEditor|dynamicLoad|editAttrLimits|editDisplayLayerGlobals|editDisplayLayerMembers|editRenderLayerAdjustment|editRenderLayerGlobals|editRenderLayerMembers|editor|editorTemplate|effector|emit|emitter|enableDevice|encodeString|endString|endsWith|env|equivalent|equivalentTol|erf|error|eval|evalDeferred|evalEcho|event|exactWorldBoundingBox|exclusiveLightCheckBox|exec|executeForEachObject|exists|exp|expression|expressionEditorListen|extendCurve|extendSurface|extrude|fcheck|fclose|feof|fflush|fgetline|fgetword|file|fileBrowserDialog|fileDialog|fileExtension|fileInfo|filetest|filletCurve|filter|filterCurve|filterExpand|filterStudioImport|findAllIntersections|findAnimCurves|findKeyframe|findMenuItem|findRelatedSkinCluster|finder|firstParentOf|fitBspline|flexor|floatEq|floatField|floatFieldGrp|floatScrollBar|floatSlider|floatSlider2|floatSliderButtonGrp|floatSliderGrp|floor|flow|fluidCacheInfo|fluidEmitter|fluidVoxelInfo|flushUndo|fmod|fontDialog|fopen|formLayout|format|fprint|frameLayout|fread|freeFormFillet|frewind|fromNativePath|fwrite|gamma|gauss|geometryConstraint|getApplicationVersionAsFloat|getAttr|getClassification|getDefaultBrush|getFileList|getFluidAttr|getInputDeviceRange|getMayaPanelTypes|getModifiers|getPanel|getParticleAttr|getPluginResource|getenv|getpid|glRender|glRenderEditor|globalStitch|gmatch|goal|gotoBindPose|grabColor|gradientControl|gradientControlNoAttr|graphDollyCtx|graphSelectContext|graphTrackCtx|gravity|grid|gridLayout|group|groupObjectsByName|HfAddAttractorToAS|HfAssignAS|HfBuildEqualMap|HfBuildFurFiles|HfBuildFurImages|HfCancelAFR|HfConnectASToHF|HfCreateAttractor|HfDeleteAS|HfEditAS|HfPerformCreateAS|HfRemoveAttractorFromAS|HfSelectAttached|HfSelectAttractors|HfUnAssignAS|hardenPointCurve|hardware|hardwareRenderPanel|headsUpDisplay|headsUpMessage|help|helpLine|hermite|hide|hilite|hitTest|hotBox|hotkey|hotkeyCheck|hsv_to_rgb|hudButton|hudSlider|hudSliderButton|hwReflectionMap|hwRender|hwRenderLoad|hyperGraph|hyperPanel|hyperShade|hypot|iconTextButton|iconTextCheckBox|iconTextRadioButton|iconTextRadioCollection|iconTextScrollList|iconTextStaticLabel|ikHandle|ikHandleCtx|ikHandleDisplayScale|ikSolver|ikSplineHandleCtx|ikSystem|ikSystemInfo|ikfkDisplayMethod|illustratorCurves|image|imfPlugins|inheritTransform|insertJoint|insertJointCtx|insertKeyCtx|insertKnotCurve|insertKnotSurface|instance|instanceable|instancer|intField|intFieldGrp|intScrollBar|intSlider|intSliderGrp|interToUI|internalVar|intersect|iprEngine|isAnimCurve|isConnected|isDirty|isParentOf|isSameObject|isTrue|isValidObjectName|isValidString|isValidUiName|isolateSelect|itemFilter|itemFilterAttr|itemFilterRender|itemFilterType|joint|jointCluster|jointCtx|jointDisplayScale|jointLattice|keyTangent|keyframe|keyframeOutliner|keyframeRegionCurrentTimeCtx|keyframeRegionDirectKeyCtx|keyframeRegionDollyCtx|keyframeRegionInsertKeyCtx|keyframeRegionMoveKeyCtx|keyframeRegionScaleKeyCtx|keyframeRegionSelectKeyCtx|keyframeRegionSetKeyCtx|keyframeRegionTrackCtx|keyframeStats|lassoContext|lattice|latticeDeformKeyCtx|launch|launchImageEditor|layerButton|layeredShaderPort|layeredTexturePort|layout|layoutDialog|lightList|lightListEditor|lightListPanel|lightlink|lineIntersection|linearPrecision|linstep|listAnimatable|listAttr|listCameras|listConnections|listDeviceAttachments|listHistory|listInputDeviceAxes|listInputDeviceButtons|listInputDevices|listMenuAnnotation|listNodeTypes|listPanelCategories|listRelatives|listSets|listTransforms|listUnselected|listerEditor|loadFluid|loadNewShelf|loadPlugin|loadPluginLanguageResources|loadPrefObjects|localizedPanelLabel|lockNode|loft|log|longNameOf|lookThru|ls|lsThroughFilter|lsType|lsUI|Mayatomr|mag|makeIdentity|makeLive|makePaintable|makeRoll|makeSingleSurface|makeTubeOn|makebot|manipMoveContext|manipMoveLimitsCtx|manipOptions|manipRotateContext|manipRotateLimitsCtx|manipScaleContext|manipScaleLimitsCtx|marker|match|max|memory|menu|menuBarLayout|menuEditor|menuItem|menuItemToShelf|menuSet|menuSetPref|messageLine|min|minimizeApp|mirrorJoint|modelCurrentTimeCtx|modelEditor|modelPanel|mouse|movIn|movOut|move|moveIKtoFK|moveKeyCtx|moveVertexAlongDirection|multiProfileBirailSurface|mute|nParticle|nameCommand|nameField|namespace|namespaceInfo|newPanelItems|newton|nodeCast|nodeIconButton|nodeOutliner|nodePreset|nodeType|noise|nonLinear|normalConstraint|normalize|nurbsBoolean|nurbsCopyUVSet|nurbsCube|nurbsEditUV|nurbsPlane|nurbsSelect|nurbsSquare|nurbsToPoly|nurbsToPolygonsPref|nurbsToSubdiv|nurbsToSubdivPref|nurbsUVSet|nurbsViewDirectionVector|objExists|objectCenter|objectLayer|objectType|objectTypeUI|obsoleteProc|oceanNurbsPreviewPlane|offsetCurve|offsetCurveOnSurface|offsetSurface|openGLExtension|openMayaPref|optionMenu|optionMenuGrp|optionVar|orbit|orbitCtx|orientConstraint|outlinerEditor|outlinerPanel|overrideModifier|paintEffectsDisplay|pairBlend|palettePort|paneLayout|panel|panelConfiguration|panelHistory|paramDimContext|paramDimension|paramLocator|parent|parentConstraint|particle|particleExists|particleInstancer|particleRenderInfo|partition|pasteKey|pathAnimation|pause|pclose|percent|performanceOptions|pfxstrokes|pickWalk|picture|pixelMove|planarSrf|plane|play|playbackOptions|playblast|plugAttr|plugNode|pluginInfo|pluginResourceUtil|pointConstraint|pointCurveConstraint|pointLight|pointMatrixMult|pointOnCurve|pointOnSurface|pointPosition|poleVectorConstraint|polyAppend|polyAppendFacetCtx|polyAppendVertex|polyAutoProjection|polyAverageNormal|polyAverageVertex|polyBevel|polyBlendColor|polyBlindData|polyBoolOp|polyBridgeEdge|polyCacheMonitor|polyCheck|polyChipOff|polyClipboard|polyCloseBorder|polyCollapseEdge|polyCollapseFacet|polyColorBlindData|polyColorDel|polyColorPerVertex|polyColorSet|polyCompare|polyCone|polyCopyUV|polyCrease|polyCreaseCtx|polyCreateFacet|polyCreateFacetCtx|polyCube|polyCut|polyCutCtx|polyCylinder|polyCylindricalProjection|polyDelEdge|polyDelFacet|polyDelVertex|polyDuplicateAndConnect|polyDuplicateEdge|polyEditUV|polyEditUVShell|polyEvaluate|polyExtrudeEdge|polyExtrudeFacet|polyExtrudeVertex|polyFlipEdge|polyFlipUV|polyForceUV|polyGeoSampler|polyHelix|polyInfo|polyInstallAction|polyLayoutUV|polyListComponentConversion|polyMapCut|polyMapDel|polyMapSew|polyMapSewMove|polyMergeEdge|polyMergeEdgeCtx|polyMergeFacet|polyMergeFacetCtx|polyMergeUV|polyMergeVertex|polyMirrorFace|polyMoveEdge|polyMoveFacet|polyMoveFacetUV|polyMoveUV|polyMoveVertex|polyNormal|polyNormalPerVertex|polyNormalizeUV|polyOptUvs|polyOptions|polyOutput|polyPipe|polyPlanarProjection|polyPlane|polyPlatonicSolid|polyPoke|polyPrimitive|polyPrism|polyProjection|polyPyramid|polyQuad|polyQueryBlindData|polyReduce|polySelect|polySelectConstraint|polySelectConstraintMonitor|polySelectCtx|polySelectEditCtx|polySeparate|polySetToFaceNormal|polySewEdge|polyShortestPathCtx|polySmooth|polySoftEdge|polySphere|polySphericalProjection|polySplit|polySplitCtx|polySplitEdge|polySplitRing|polySplitVertex|polyStraightenUVBorder|polySubdivideEdge|polySubdivideFacet|polyToSubdiv|polyTorus|polyTransfer|polyTriangulate|polyUVSet|polyUnite|polyWedgeFace|popen|popupMenu|pose|pow|preloadRefEd|print|progressBar|progressWindow|projFileViewer|projectCurve|projectTangent|projectionContext|projectionManip|promptDialog|propModCtx|propMove|psdChannelOutliner|psdEditTextureFile|psdExport|psdTextureFile|putenv|pwd|python|querySubdiv|quit|rad_to_deg|radial|radioButton|radioButtonGrp|radioCollection|radioMenuItemCollection|rampColorPort|rand|randomizeFollicles|randstate|rangeControl|readTake|rebuildCurve|rebuildSurface|recordAttr|recordDevice|redo|reference|referenceEdit|referenceQuery|refineSubdivSelectionList|refresh|refreshAE|registerPluginResource|rehash|reloadImage|removeJoint|removeMultiInstance|removePanelCategory|rename|renameAttr|renameSelectionList|renameUI|render|renderGlobalsNode|renderInfo|renderLayerButton|renderLayerParent|renderLayerPostProcess|renderLayerUnparent|renderManip|renderPartition|renderQualityNode|renderSettings|renderThumbnailUpdate|renderWindowEditor|renderWindowSelectContext|renderer|reorder|reorderDeformers|requires|reroot|resampleFluid|resetAE|resetPfxToPolyCamera|resetTool|resolutionNode|retarget|reverseCurve|reverseSurface|revolve|rgb_to_hsv|rigidBody|rigidSolver|roll|rollCtx|rootOf|rot|rotate|rotationInterpolation|roundConstantRadius|rowColumnLayout|rowLayout|runTimeCommand|runup|sampleImage|saveAllShelves|saveAttrPreset|saveFluid|saveImage|saveInitialState|saveMenu|savePrefObjects|savePrefs|saveShelf|saveToolSettings|scale|scaleBrushBrightness|scaleComponents|scaleConstraint|scaleKey|scaleKeyCtx|sceneEditor|sceneUIReplacement|scmh|scriptCtx|scriptEditorInfo|scriptJob|scriptNode|scriptTable|scriptToShelf|scriptedPanel|scriptedPanelType|scrollField|scrollLayout|sculpt|searchPathArray|seed|selLoadSettings|select|selectContext|selectCurveCV|selectKey|selectKeyCtx|selectKeyframeRegionCtx|selectMode|selectPref|selectPriority|selectType|selectedNodes|selectionConnection|separator|setAttr|setAttrEnumResource|setAttrMapping|setAttrNiceNameResource|setConstraintRestPosition|setDefaultShadingGroup|setDrivenKeyframe|setDynamic|setEditCtx|setEditor|setFluidAttr|setFocus|setInfinity|setInputDeviceMapping|setKeyCtx|setKeyPath|setKeyframe|setKeyframeBlendshapeTargetWts|setMenuMode|setNodeNiceNameResource|setNodeTypeFlag|setParent|setParticleAttr|setPfxToPolyCamera|setPluginResource|setProject|setStampDensity|setStartupMessage|setState|setToolTo|setUITemplate|setXformManip|sets|shadingConnection|shadingGeometryRelCtx|shadingLightRelCtx|shadingNetworkCompare|shadingNode|shapeCompare|shelfButton|shelfLayout|shelfTabLayout|shellField|shortNameOf|showHelp|showHidden|showManipCtx|showSelectionInTitle|showShadingGroupAttrEditor|showWindow|sign|simplify|sin|singleProfileBirailSurface|size|sizeBytes|skinCluster|skinPercent|smoothCurve|smoothTangentSurface|smoothstep|snap2to2|snapKey|snapMode|snapTogetherCtx|snapshot|soft|softMod|softModCtx|sort|sound|soundControl|source|spaceLocator|sphere|sphrand|spotLight|spotLightPreviewPort|spreadSheetEditor|spring|sqrt|squareSurface|srtContext|stackTrace|startString|startsWith|stitchAndExplodeShell|stitchSurface|stitchSurfacePoints|strcmp|stringArrayCatenate|stringArrayContains|stringArrayCount|stringArrayInsertAtIndex|stringArrayIntersector|stringArrayRemove|stringArrayRemoveAtIndex|stringArrayRemoveDuplicates|stringArrayRemoveExact|stringArrayToString|stringToStringArray|strip|stripPrefixFromName|stroke|subdAutoProjection|subdCleanTopology|subdCollapse|subdDuplicateAndConnect|subdEditUV|subdListComponentConversion|subdMapCut|subdMapSewMove|subdMatchTopology|subdMirror|subdToBlind|subdToPoly|subdTransferUVsToCache|subdiv|subdivCrease|subdivDisplaySmoothness|substitute|substituteAllString|substituteGeometry|substring|surface|surfaceSampler|surfaceShaderList|swatchDisplayPort|switchTable|symbolButton|symbolCheckBox|sysFile|system|tabLayout|tan|tangentConstraint|texLatticeDeformContext|texManipContext|texMoveContext|texMoveUVShellContext|texRotateContext|texScaleContext|texSelectContext|texSelectShortestPathCtx|texSmudgeUVContext|texWinToolCtx|text|textCurves|textField|textFieldButtonGrp|textFieldGrp|textManip|textScrollList|textToShelf|textureDisplacePlane|textureHairColor|texturePlacementContext|textureWindow|threadCount|threePointArcCtx|timeControl|timePort|timerX|toNativePath|toggle|toggleAxis|toggleWindowVisibility|tokenize|tokenizeList|tolerance|tolower|toolButton|toolCollection|toolDropped|toolHasOptions|toolPropertyWindow|torus|toupper|trace|track|trackCtx|transferAttributes|transformCompare|transformLimits|translator|trim|trunc|truncateFluidCache|truncateHairCache|tumble|tumbleCtx|turbulence|twoPointArcCtx|uiRes|uiTemplate|unassignInputDevice|undo|undoInfo|ungroup|uniform|unit|unloadPlugin|untangleUV|untitledFileName|untrim|upAxis|updateAE|userCtx|uvLink|uvSnapshot|validateShelfName|vectorize|view2dToolCtx|viewCamera|viewClipPlane|viewFit|viewHeadOn|viewLookAt|viewManip|viewPlace|viewSet|visor|volumeAxis|vortex|waitCursor|warning|webBrowser|webBrowserPrefs|whatIs|window|windowPref|wire|wireContext|workspace|wrinkle|wrinkleContext|writeTake|xbmLangPathList|xform)\\b/,operator:[/\\+[+=]?|-[-=]?|&&|\\|\\||[<>]=|[*\\/!=]=?|[%^]/,{pattern:/(^|[^<])<(?!<)/,lookbehind:!0},{pattern:/(^|[^>])>(?!>)/,lookbehind:!0}],punctuation:/<<|>>|[.,:;?\\[\\](){}]/},Prism.languages.mel.code.inside.rest=Prism.languages.mel;","Prism.languages.mizar = {\n\t'comment': /::.+/,\n\t'keyword': /@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|equals|end|environ|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:y|ies)|when|where|with|wrt)\\b/,\n\t'parameter': {\n\t\tpattern: /\\$(?:10|\\d)/,\n\t\talias: 'variable'\n\t},\n\t'variable': /\\w+(?=:)/,\n\t'number': /(?:\\b|-)\\d+\\b/,\n\t'operator': /\\.\\.\\.|->|&|\\.?=/,\n\t'punctuation': /\\(#|#\\)|[,:;\\[\\](){}]/\n};","Prism.languages.mizar={comment:/::.+/,keyword:/@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|equals|end|environ|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:y|ies)|when|where|with|wrt)\\b/,parameter:{pattern:/\\$(?:10|\\d)/,alias:\"variable\"},variable:/\\w+(?=:)/,number:/(?:\\b|-)\\d+\\b/,operator:/\\.\\.\\.|->|&|\\.?=/,punctuation:/\\(#|#\\)|[,:;\\[\\](){}]/};","Prism.languages.monkey = {\n\t'string': /\"[^\"\\r\\n]*\"/,\n\t'comment': [\n\t\t{\n\t\t\tpattern: /^#Rem\\s+[\\s\\S]*?^#End/im,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /'.+/,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'preprocessor': {\n\t\tpattern: /(^[ \\t]*)#.+/m,\n\t\tlookbehind: true,\n\t\talias: 'comment'\n\t},\n\t'function': /\\w+(?=\\()/,\n\t'type-char': {\n\t\tpattern: /(\\w)[?%#$]/,\n\t\tlookbehind: true,\n\t\talias: 'variable'\n\t},\n\t'number': {\n\t\tpattern: /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\n\t\tlookbehind: true\n\t},\n\t'keyword': /\\b(?:Void|Strict|Public|Private|Property|Bool|Int|Float|String|Array|Object|Continue|Exit|Import|Extern|New|Self|Super|Try|Catch|Eachin|True|False|Extends|Abstract|Final|Select|Case|Default|Const|Local|Global|Field|Method|Function|Class|End|If|Then|Else|ElseIf|EndIf|While|Wend|Repeat|Until|Forever|For|To|Step|Next|Return|Module|Interface|Implements|Inline|Throw|Null)\\b/i,\n\t'operator': /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\n\t'punctuation': /[.,:;()\\[\\]]/\n};","Prism.languages.monkey={string:/\"[^\"\\r\\n]*\"/,comment:[{pattern:/^#Rem\\s+[\\s\\S]*?^#End/im,greedy:!0},{pattern:/'.+/,greedy:!0}],preprocessor:{pattern:/(^[ \\t]*)#.+/m,lookbehind:!0,alias:\"comment\"},function:/\\w+(?=\\()/,\"type-char\":{pattern:/(\\w)[?%#$]/,lookbehind:!0,alias:\"variable\"},number:{pattern:/((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,lookbehind:!0},keyword:/\\b(?:Void|Strict|Public|Private|Property|Bool|Int|Float|String|Array|Object|Continue|Exit|Import|Extern|New|Self|Super|Try|Catch|Eachin|True|False|Extends|Abstract|Final|Select|Case|Default|Const|Local|Global|Field|Method|Function|Class|End|If|Then|Else|ElseIf|EndIf|While|Wend|Repeat|Until|Forever|For|To|Step|Next|Return|Module|Interface|Implements|Inline|Throw|Null)\\b/i,operator:/\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,punctuation:/[.,:;()\\[\\]]/};","Prism.languages.n1ql = {\n\t'comment': /\\/\\*[\\s\\S]*?(?:$|\\*\\/)/,\n\t'parameter': /\\$[\\w.]+/,\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\]|\\1\\1)*\\1/,\n\t\tgreedy: true,\n\t},\n\t'identifier': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|[^\\\\`]|``)*`/,\n\t\tgreedy: true,\n\t},\n\t'function': /\\b(?:ABS|ACOS|ARRAY_AGG|ARRAY_APPEND|ARRAY_AVG|ARRAY_CONCAT|ARRAY_CONTAINS|ARRAY_COUNT|ARRAY_DISTINCT|ARRAY_FLATTEN|ARRAY_IFNULL|ARRAY_INSERT|ARRAY_INTERSECT|ARRAY_LENGTH|ARRAY_MAX|ARRAY_MIN|ARRAY_POSITION|ARRAY_PREPEND|ARRAY_PUT|ARRAY_RANGE|ARRAY_REMOVE|ARRAY_REPEAT|ARRAY_REPLACE|ARRAY_REVERSE|ARRAY_SORT|ARRAY_STAR|ARRAY_SUM|ARRAY_SYMDIFF|ARRAY_SYMDIFFN|ARRAY_UNION|ASIN|ATAN|ATAN2|AVG|BASE64|BASE64_DECODE|BASE64_ENCODE|BITAND|BITCLEAR|BITNOT|BITOR|BITSET|BITSHIFT|BITTEST|BITXOR|CEIL|CLOCK_LOCAL|CLOCK_MILLIS|CLOCK_STR|CLOCK_TZ|CLOCK_UTC|CONTAINS|CONTAINS_TOKEN|CONTAINS_TOKEN_LIKE|CONTAINS_TOKEN_REGEXP|COS|COUNT|CURL|DATE_ADD_MILLIS|DATE_ADD_STR|DATE_DIFF_MILLIS|DATE_DIFF_STR|DATE_FORMAT_STR|DATE_PART_MILLIS|DATE_PART_STR|DATE_RANGE_MILLIS|DATE_RANGE_STR|DATE_TRUNC_MILLIS|DATE_TRUNC_STR|DECODE_JSON|DEGREES|DURATION_TO_STR|E|ENCODED_SIZE|ENCODE_JSON|EXP|FLOOR|GREATEST|HAS_TOKEN|IFINF|IFMISSING|IFMISSINGORNULL|IFNAN|IFNANORINF|IFNULL|INITCAP|ISARRAY|ISATOM|ISBOOLEAN|ISNUMBER|ISOBJECT|ISSTRING|IsBitSET|LEAST|LENGTH|LN|LOG|LOWER|LTRIM|MAX|META|MILLIS|MILLIS_TO_LOCAL|MILLIS_TO_STR|MILLIS_TO_TZ|MILLIS_TO_UTC|MILLIS_TO_ZONE_NAME|MIN|MISSINGIF|NANIF|NEGINFIF|NOW_LOCAL|NOW_MILLIS|NOW_STR|NOW_TZ|NOW_UTC|NULLIF|OBJECT_ADD|OBJECT_CONCAT|OBJECT_INNER_PAIRS|OBJECT_INNER_VALUES|OBJECT_LENGTH|OBJECT_NAMES|OBJECT_PAIRS|OBJECT_PUT|OBJECT_REMOVE|OBJECT_RENAME|OBJECT_REPLACE|OBJECT_UNWRAP|OBJECT_VALUES|PAIRS|PI|POLY_LENGTH|POSINFIF|POSITION|POWER|RADIANS|RANDOM|REGEXP_CONTAINS|REGEXP_LIKE|REGEXP_POSITION|REGEXP_REPLACE|REPEAT|REPLACE|REVERSE|ROUND|RTRIM|SIGN|SIN|SPLIT|SQRT|STR_TO_DURATION|STR_TO_MILLIS|STR_TO_TZ|STR_TO_UTC|STR_TO_ZONE_NAME|SUBSTR|SUFFIXES|SUM|TAN|TITLE|TOARRAY|TOATOM|TOBOOLEAN|TOKENS|TOKENS|TONUMBER|TOOBJECT|TOSTRING|TRIM|TRUNC|TYPE|UPPER|WEEKDAY_MILLIS|WEEKDAY_STR)(?=\\s*\\()/i,\n\t'keyword': /\\b(?:ALL|ALTER|ANALYZE|AS|ASC|BEGIN|BINARY|BOOLEAN|BREAK|BUCKET|BUILD|BY|CALL|CAST|CLUSTER|COLLATE|COLLECTION|COMMIT|CONNECT|CONTINUE|CORRELATE|COVER|CREATE|DATABASE|DATASET|DATASTORE|DECLARE|DECREMENT|DELETE|DERIVED|DESC|DESCRIBE|DISTINCT|DO|DROP|EACH|ELEMENT|EXCEPT|EXCLUDE|EXECUTE|EXPLAIN|FETCH|FLATTEN|FOR|FORCE|FROM|FUNCTION|GRANT|GROUP|GSI|HAVING|IF|IGNORE|ILIKE|INCLUDE|INCREMENT|INDEX|INFER|INLINE|INNER|INSERT|INTERSECT|INTO|IS|JOIN|KEY|KEYS|KEYSPACE|KNOWN|LAST|LEFT|LET|LETTING|LIMIT|LSM|MAP|MAPPING|MATCHED|MATERIALIZED|MERGE|MINUS|MISSING|NAMESPACE|NEST|NULL|NUMBER|OBJECT|OFFSET|ON|OPTION|ORDER|OUTER|OVER|PARSE|PARTITION|PASSWORD|PATH|POOL|PREPARE|PRIMARY|PRIVATE|PRIVILEGE|PROCEDURE|PUBLIC|RAW|REALM|REDUCE|RENAME|RETURN|RETURNING|REVOKE|RIGHT|ROLE|ROLLBACK|SATISFIES|SCHEMA|SELECT|SELF|SEMI|SET|SHOW|SOME|START|STATISTICS|STRING|SYSTEM|TO|TRANSACTION|TRIGGER|TRUNCATE|UNDER|UNION|UNIQUE|UNKNOWN|UNNEST|UNSET|UPDATE|UPSERT|USE|USER|USING|VALIDATE|VALUE|VALUES|VIA|VIEW|WHERE|WHILE|WITH|WORK|XOR)\\b/i,\n\t'boolean': /\\b(?:TRUE|FALSE)\\b/i,\n\t'number': /(?:\\b\\d+\\.|\\B\\.)\\d+e[+\\-]?\\d+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+\\b/i,\n\t'operator': /[-+*\\/=%]|!=|==?|\\|\\||<[>=]?|>=?|\\b(?:AND|ANY|ARRAY|BETWEEN|CASE|ELSE|END|EVERY|EXISTS|FIRST|IN|LIKE|NOT|OR|THEN|VALUED|WHEN|WITHIN)\\b/i,\n\t'punctuation': /[;[\\](),.{}:]/\n};","Prism.languages.n1ql={comment:/\\/\\*[\\s\\S]*?(?:$|\\*\\/)/,parameter:/\\$[\\w.]+/,string:{pattern:/([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\]|\\1\\1)*\\1/,greedy:!0},identifier:{pattern:/`(?:\\\\[\\s\\S]|[^\\\\`]|``)*`/,greedy:!0},function:/\\b(?:ABS|ACOS|ARRAY_AGG|ARRAY_APPEND|ARRAY_AVG|ARRAY_CONCAT|ARRAY_CONTAINS|ARRAY_COUNT|ARRAY_DISTINCT|ARRAY_FLATTEN|ARRAY_IFNULL|ARRAY_INSERT|ARRAY_INTERSECT|ARRAY_LENGTH|ARRAY_MAX|ARRAY_MIN|ARRAY_POSITION|ARRAY_PREPEND|ARRAY_PUT|ARRAY_RANGE|ARRAY_REMOVE|ARRAY_REPEAT|ARRAY_REPLACE|ARRAY_REVERSE|ARRAY_SORT|ARRAY_STAR|ARRAY_SUM|ARRAY_SYMDIFF|ARRAY_SYMDIFFN|ARRAY_UNION|ASIN|ATAN|ATAN2|AVG|BASE64|BASE64_DECODE|BASE64_ENCODE|BITAND|BITCLEAR|BITNOT|BITOR|BITSET|BITSHIFT|BITTEST|BITXOR|CEIL|CLOCK_LOCAL|CLOCK_MILLIS|CLOCK_STR|CLOCK_TZ|CLOCK_UTC|CONTAINS|CONTAINS_TOKEN|CONTAINS_TOKEN_LIKE|CONTAINS_TOKEN_REGEXP|COS|COUNT|CURL|DATE_ADD_MILLIS|DATE_ADD_STR|DATE_DIFF_MILLIS|DATE_DIFF_STR|DATE_FORMAT_STR|DATE_PART_MILLIS|DATE_PART_STR|DATE_RANGE_MILLIS|DATE_RANGE_STR|DATE_TRUNC_MILLIS|DATE_TRUNC_STR|DECODE_JSON|DEGREES|DURATION_TO_STR|E|ENCODED_SIZE|ENCODE_JSON|EXP|FLOOR|GREATEST|HAS_TOKEN|IFINF|IFMISSING|IFMISSINGORNULL|IFNAN|IFNANORINF|IFNULL|INITCAP|ISARRAY|ISATOM|ISBOOLEAN|ISNUMBER|ISOBJECT|ISSTRING|IsBitSET|LEAST|LENGTH|LN|LOG|LOWER|LTRIM|MAX|META|MILLIS|MILLIS_TO_LOCAL|MILLIS_TO_STR|MILLIS_TO_TZ|MILLIS_TO_UTC|MILLIS_TO_ZONE_NAME|MIN|MISSINGIF|NANIF|NEGINFIF|NOW_LOCAL|NOW_MILLIS|NOW_STR|NOW_TZ|NOW_UTC|NULLIF|OBJECT_ADD|OBJECT_CONCAT|OBJECT_INNER_PAIRS|OBJECT_INNER_VALUES|OBJECT_LENGTH|OBJECT_NAMES|OBJECT_PAIRS|OBJECT_PUT|OBJECT_REMOVE|OBJECT_RENAME|OBJECT_REPLACE|OBJECT_UNWRAP|OBJECT_VALUES|PAIRS|PI|POLY_LENGTH|POSINFIF|POSITION|POWER|RADIANS|RANDOM|REGEXP_CONTAINS|REGEXP_LIKE|REGEXP_POSITION|REGEXP_REPLACE|REPEAT|REPLACE|REVERSE|ROUND|RTRIM|SIGN|SIN|SPLIT|SQRT|STR_TO_DURATION|STR_TO_MILLIS|STR_TO_TZ|STR_TO_UTC|STR_TO_ZONE_NAME|SUBSTR|SUFFIXES|SUM|TAN|TITLE|TOARRAY|TOATOM|TOBOOLEAN|TOKENS|TOKENS|TONUMBER|TOOBJECT|TOSTRING|TRIM|TRUNC|TYPE|UPPER|WEEKDAY_MILLIS|WEEKDAY_STR)(?=\\s*\\()/i,keyword:/\\b(?:ALL|ALTER|ANALYZE|AS|ASC|BEGIN|BINARY|BOOLEAN|BREAK|BUCKET|BUILD|BY|CALL|CAST|CLUSTER|COLLATE|COLLECTION|COMMIT|CONNECT|CONTINUE|CORRELATE|COVER|CREATE|DATABASE|DATASET|DATASTORE|DECLARE|DECREMENT|DELETE|DERIVED|DESC|DESCRIBE|DISTINCT|DO|DROP|EACH|ELEMENT|EXCEPT|EXCLUDE|EXECUTE|EXPLAIN|FETCH|FLATTEN|FOR|FORCE|FROM|FUNCTION|GRANT|GROUP|GSI|HAVING|IF|IGNORE|ILIKE|INCLUDE|INCREMENT|INDEX|INFER|INLINE|INNER|INSERT|INTERSECT|INTO|IS|JOIN|KEY|KEYS|KEYSPACE|KNOWN|LAST|LEFT|LET|LETTING|LIMIT|LSM|MAP|MAPPING|MATCHED|MATERIALIZED|MERGE|MINUS|MISSING|NAMESPACE|NEST|NULL|NUMBER|OBJECT|OFFSET|ON|OPTION|ORDER|OUTER|OVER|PARSE|PARTITION|PASSWORD|PATH|POOL|PREPARE|PRIMARY|PRIVATE|PRIVILEGE|PROCEDURE|PUBLIC|RAW|REALM|REDUCE|RENAME|RETURN|RETURNING|REVOKE|RIGHT|ROLE|ROLLBACK|SATISFIES|SCHEMA|SELECT|SELF|SEMI|SET|SHOW|SOME|START|STATISTICS|STRING|SYSTEM|TO|TRANSACTION|TRIGGER|TRUNCATE|UNDER|UNION|UNIQUE|UNKNOWN|UNNEST|UNSET|UPDATE|UPSERT|USE|USER|USING|VALIDATE|VALUE|VALUES|VIA|VIEW|WHERE|WHILE|WITH|WORK|XOR)\\b/i,boolean:/\\b(?:TRUE|FALSE)\\b/i,number:/(?:\\b\\d+\\.|\\B\\.)\\d+e[+\\-]?\\d+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+\\b/i,operator:/[-+*\\/=%]|!=|==?|\\|\\||<[>=]?|>=?|\\b(?:AND|ANY|ARRAY|BETWEEN|CASE|ELSE|END|EVERY|EXISTS|FIRST|IN|LIKE|NOT|OR|THEN|VALUED|WHEN|WITHIN)\\b/i,punctuation:/[;[\\](),.{}:]/};","Prism.languages.n4js = Prism.languages.extend('javascript', {\n\t// Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html\n\t'keyword': /\\b(?:any|Array|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\n});\n\nPrism.languages.insertBefore('n4js', 'constant', {\n\t// Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations\n\t'annotation': {\n\t\tpattern: /@+\\w+/,\n\t\talias: 'operator'\n\t}\n});\n\nPrism.languages.n4jsd=Prism.languages.n4js;\n","Prism.languages.n4js=Prism.languages.extend(\"javascript\",{keyword:/\\b(?:any|Array|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/}),Prism.languages.insertBefore(\"n4js\",\"constant\",{annotation:{pattern:/@+\\w+/,alias:\"operator\"}}),Prism.languages.n4jsd=Prism.languages.n4js;","Prism.languages['nand2tetris-hdl'] = {\n\t'comment': /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t'keyword': /\\b(?:CHIP|IN|OUT|PARTS|BUILTIN|CLOCKED)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /[A-Za-z][A-Za-z0-9]*(?=\\()/,\n\t'number': /\\b\\d+\\b/,\n\t'operator': /=|\\.\\./,\n\t'punctuation': /[{}[\\];(),:]/\n};\n","Prism.languages[\"nand2tetris-hdl\"]={comment:/\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,keyword:/\\b(?:CHIP|IN|OUT|PARTS|BUILTIN|CLOCKED)\\b/,boolean:/\\b(?:true|false)\\b/,function:/[A-Za-z][A-Za-z0-9]*(?=\\()/,number:/\\b\\d+\\b/,operator:/=|\\.\\./,punctuation:/[{}[\\];(),:]/};","Prism.languages.nasm = {\n\t'comment': /;.*$/m,\n\t'string': /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t'label': {\n\t\tpattern: /(^\\s*)[A-Za-z._?$][\\w.?$@~#]*:/m,\n\t\tlookbehind: true,\n\t\talias: 'function'\n\t},\n\t'keyword': [\n\t\t/\\[?BITS (?:16|32|64)\\]?/,\n\t\t{\n\t\t\tpattern: /(^\\s*)section\\s*[a-zA-Z.]+:?/im,\n\t\t\tlookbehind: true\n\t\t},\n\t\t/(?:extern|global)[^;\\r\\n]*/i,\n\t\t/(?:CPU|FLOAT|DEFAULT).*$/m\n\t],\n\t'register': {\n\t\tpattern: /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|sp|si|di)|[cdefgs]s)\\b/i,\n\t\talias: 'variable'\n\t},\n\t'number': /(?:\\b|(?=\\$))(?:0[hx][\\da-f]*\\.?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|\\d*\\.?\\d+(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n\t'operator': /[\\[\\]*+\\-\\/%<>=&|$!]/\n};\n","Prism.languages.nasm={comment:/;.*$/m,string:/([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,label:{pattern:/(^\\s*)[A-Za-z._?$][\\w.?$@~#]*:/m,lookbehind:!0,alias:\"function\"},keyword:[/\\[?BITS (?:16|32|64)\\]?/,{pattern:/(^\\s*)section\\s*[a-zA-Z.]+:?/im,lookbehind:!0},/(?:extern|global)[^;\\r\\n]*/i,/(?:CPU|FLOAT|DEFAULT).*$/m],register:{pattern:/\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|sp|si|di)|[cdefgs]s)\\b/i,alias:\"variable\"},number:/(?:\\b|(?=\\$))(?:0[hx][\\da-f]*\\.?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|\\d*\\.?\\d+(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,operator:/[\\[\\]*+\\-\\/%<>=&|$!]/};","Prism.languages.nginx = Prism.languages.extend('clike', {\n\t'comment': {\n\t\tpattern: /(^|[^\"{\\\\])#.*/,\n\t\tlookbehind: true\n\t},\n\t'keyword': /\\b(?:CONTENT_|DOCUMENT_|GATEWAY_|HTTP_|HTTPS|if_not_empty|PATH_|QUERY_|REDIRECT_|REMOTE_|REQUEST_|SCGI|SCRIPT_|SERVER_|http|events|accept_mutex|accept_mutex_delay|access_log|add_after_body|add_before_body|add_header|addition_types|aio|alias|allow|ancient_browser|ancient_browser_value|auth|auth_basic|auth_basic_user_file|auth_http|auth_http_header|auth_http_timeout|autoindex|autoindex_exact_size|autoindex_localtime|break|charset|charset_map|charset_types|chunked_transfer_encoding|client_body_buffer_size|client_body_in_file_only|client_body_in_single_buffer|client_body_temp_path|client_body_timeout|client_header_buffer_size|client_header_timeout|client_max_body_size|connection_pool_size|create_full_put_path|daemon|dav_access|dav_methods|debug_connection|debug_points|default_type|deny|devpoll_changes|devpoll_events|directio|directio_alignment|disable_symlinks|empty_gif|env|epoll_events|error_log|error_page|expires|fastcgi_buffer_size|fastcgi_buffers|fastcgi_busy_buffers_size|fastcgi_cache|fastcgi_cache_bypass|fastcgi_cache_key|fastcgi_cache_lock|fastcgi_cache_lock_timeout|fastcgi_cache_methods|fastcgi_cache_min_uses|fastcgi_cache_path|fastcgi_cache_purge|fastcgi_cache_use_stale|fastcgi_cache_valid|fastcgi_connect_timeout|fastcgi_hide_header|fastcgi_ignore_client_abort|fastcgi_ignore_headers|fastcgi_index|fastcgi_intercept_errors|fastcgi_keep_conn|fastcgi_max_temp_file_size|fastcgi_next_upstream|fastcgi_no_cache|fastcgi_param|fastcgi_pass|fastcgi_pass_header|fastcgi_read_timeout|fastcgi_redirect_errors|fastcgi_send_timeout|fastcgi_split_path_info|fastcgi_store|fastcgi_store_access|fastcgi_temp_file_write_size|fastcgi_temp_path|flv|geo|geoip_city|geoip_country|google_perftools_profiles|gzip|gzip_buffers|gzip_comp_level|gzip_disable|gzip_http_version|gzip_min_length|gzip_proxied|gzip_static|gzip_types|gzip_vary|if|if_modified_since|ignore_invalid_headers|image_filter|image_filter_buffer|image_filter_jpeg_quality|image_filter_sharpen|image_filter_transparency|imap_capabilities|imap_client_buffer|include|index|internal|ip_hash|keepalive|keepalive_disable|keepalive_requests|keepalive_timeout|kqueue_changes|kqueue_events|large_client_header_buffers|limit_conn|limit_conn_log_level|limit_conn_zone|limit_except|limit_rate|limit_rate_after|limit_req|limit_req_log_level|limit_req_zone|limit_zone|lingering_close|lingering_time|lingering_timeout|listen|location|lock_file|log_format|log_format_combined|log_not_found|log_subrequest|map|map_hash_bucket_size|map_hash_max_size|master_process|max_ranges|memcached_buffer_size|memcached_connect_timeout|memcached_next_upstream|memcached_pass|memcached_read_timeout|memcached_send_timeout|merge_slashes|min_delete_depth|modern_browser|modern_browser_value|mp4|mp4_buffer_size|mp4_max_buffer_size|msie_padding|msie_refresh|multi_accept|open_file_cache|open_file_cache_errors|open_file_cache_min_uses|open_file_cache_valid|open_log_file_cache|optimize_server_names|override_charset|pcre_jit|perl|perl_modules|perl_require|perl_set|pid|pop3_auth|pop3_capabilities|port_in_redirect|post_action|postpone_output|protocol|proxy|proxy_buffer|proxy_buffer_size|proxy_buffering|proxy_buffers|proxy_busy_buffers_size|proxy_cache|proxy_cache_bypass|proxy_cache_key|proxy_cache_lock|proxy_cache_lock_timeout|proxy_cache_methods|proxy_cache_min_uses|proxy_cache_path|proxy_cache_use_stale|proxy_cache_valid|proxy_connect_timeout|proxy_cookie_domain|proxy_cookie_path|proxy_headers_hash_bucket_size|proxy_headers_hash_max_size|proxy_hide_header|proxy_http_version|proxy_ignore_client_abort|proxy_ignore_headers|proxy_intercept_errors|proxy_max_temp_file_size|proxy_method|proxy_next_upstream|proxy_no_cache|proxy_pass|proxy_pass_error_message|proxy_pass_header|proxy_pass_request_body|proxy_pass_request_headers|proxy_read_timeout|proxy_redirect|proxy_redirect_errors|proxy_send_lowat|proxy_send_timeout|proxy_set_body|proxy_set_header|proxy_ssl_session_reuse|proxy_store|proxy_store_access|proxy_temp_file_write_size|proxy_temp_path|proxy_timeout|proxy_upstream_fail_timeout|proxy_upstream_max_fails|random_index|read_ahead|real_ip_header|recursive_error_pages|request_pool_size|reset_timedout_connection|resolver|resolver_timeout|return|rewrite|root|rtsig_overflow_events|rtsig_overflow_test|rtsig_overflow_threshold|rtsig_signo|satisfy|satisfy_any|secure_link_secret|send_lowat|send_timeout|sendfile|sendfile_max_chunk|server|server_name|server_name_in_redirect|server_names_hash_bucket_size|server_names_hash_max_size|server_tokens|set|set_real_ip_from|smtp_auth|smtp_capabilities|so_keepalive|source_charset|split_clients|ssi|ssi_silent_errors|ssi_types|ssi_value_length|ssl|ssl_certificate|ssl_certificate_key|ssl_ciphers|ssl_client_certificate|ssl_crl|ssl_dhparam|ssl_engine|ssl_prefer_server_ciphers|ssl_protocols|ssl_session_cache|ssl_session_timeout|ssl_verify_client|ssl_verify_depth|starttls|stub_status|sub_filter|sub_filter_once|sub_filter_types|tcp_nodelay|tcp_nopush|timeout|timer_resolution|try_files|types|types_hash_bucket_size|types_hash_max_size|underscores_in_headers|uninitialized_variable_warn|upstream|use|user|userid|userid_domain|userid_expires|userid_name|userid_p3p|userid_path|userid_service|valid_referers|variables_hash_bucket_size|variables_hash_max_size|worker_connections|worker_cpu_affinity|worker_priority|worker_processes|worker_rlimit_core|worker_rlimit_nofile|worker_rlimit_sigpending|working_directory|xclient|xml_entities|xslt_entities|xslt_stylesheet|xslt_types|ssl_session_tickets|ssl_stapling|ssl_stapling_verify|ssl_ecdh_curve|ssl_trusted_certificate|more_set_headers|ssl_early_data)\\b/i\n});\n\nPrism.languages.insertBefore('nginx', 'keyword', {\n\t'variable': /\\$[a-z_]+/i\n});\n","Prism.languages.nginx=Prism.languages.extend(\"clike\",{comment:{pattern:/(^|[^\"{\\\\])#.*/,lookbehind:!0},keyword:/\\b(?:CONTENT_|DOCUMENT_|GATEWAY_|HTTP_|HTTPS|if_not_empty|PATH_|QUERY_|REDIRECT_|REMOTE_|REQUEST_|SCGI|SCRIPT_|SERVER_|http|events|accept_mutex|accept_mutex_delay|access_log|add_after_body|add_before_body|add_header|addition_types|aio|alias|allow|ancient_browser|ancient_browser_value|auth|auth_basic|auth_basic_user_file|auth_http|auth_http_header|auth_http_timeout|autoindex|autoindex_exact_size|autoindex_localtime|break|charset|charset_map|charset_types|chunked_transfer_encoding|client_body_buffer_size|client_body_in_file_only|client_body_in_single_buffer|client_body_temp_path|client_body_timeout|client_header_buffer_size|client_header_timeout|client_max_body_size|connection_pool_size|create_full_put_path|daemon|dav_access|dav_methods|debug_connection|debug_points|default_type|deny|devpoll_changes|devpoll_events|directio|directio_alignment|disable_symlinks|empty_gif|env|epoll_events|error_log|error_page|expires|fastcgi_buffer_size|fastcgi_buffers|fastcgi_busy_buffers_size|fastcgi_cache|fastcgi_cache_bypass|fastcgi_cache_key|fastcgi_cache_lock|fastcgi_cache_lock_timeout|fastcgi_cache_methods|fastcgi_cache_min_uses|fastcgi_cache_path|fastcgi_cache_purge|fastcgi_cache_use_stale|fastcgi_cache_valid|fastcgi_connect_timeout|fastcgi_hide_header|fastcgi_ignore_client_abort|fastcgi_ignore_headers|fastcgi_index|fastcgi_intercept_errors|fastcgi_keep_conn|fastcgi_max_temp_file_size|fastcgi_next_upstream|fastcgi_no_cache|fastcgi_param|fastcgi_pass|fastcgi_pass_header|fastcgi_read_timeout|fastcgi_redirect_errors|fastcgi_send_timeout|fastcgi_split_path_info|fastcgi_store|fastcgi_store_access|fastcgi_temp_file_write_size|fastcgi_temp_path|flv|geo|geoip_city|geoip_country|google_perftools_profiles|gzip|gzip_buffers|gzip_comp_level|gzip_disable|gzip_http_version|gzip_min_length|gzip_proxied|gzip_static|gzip_types|gzip_vary|if|if_modified_since|ignore_invalid_headers|image_filter|image_filter_buffer|image_filter_jpeg_quality|image_filter_sharpen|image_filter_transparency|imap_capabilities|imap_client_buffer|include|index|internal|ip_hash|keepalive|keepalive_disable|keepalive_requests|keepalive_timeout|kqueue_changes|kqueue_events|large_client_header_buffers|limit_conn|limit_conn_log_level|limit_conn_zone|limit_except|limit_rate|limit_rate_after|limit_req|limit_req_log_level|limit_req_zone|limit_zone|lingering_close|lingering_time|lingering_timeout|listen|location|lock_file|log_format|log_format_combined|log_not_found|log_subrequest|map|map_hash_bucket_size|map_hash_max_size|master_process|max_ranges|memcached_buffer_size|memcached_connect_timeout|memcached_next_upstream|memcached_pass|memcached_read_timeout|memcached_send_timeout|merge_slashes|min_delete_depth|modern_browser|modern_browser_value|mp4|mp4_buffer_size|mp4_max_buffer_size|msie_padding|msie_refresh|multi_accept|open_file_cache|open_file_cache_errors|open_file_cache_min_uses|open_file_cache_valid|open_log_file_cache|optimize_server_names|override_charset|pcre_jit|perl|perl_modules|perl_require|perl_set|pid|pop3_auth|pop3_capabilities|port_in_redirect|post_action|postpone_output|protocol|proxy|proxy_buffer|proxy_buffer_size|proxy_buffering|proxy_buffers|proxy_busy_buffers_size|proxy_cache|proxy_cache_bypass|proxy_cache_key|proxy_cache_lock|proxy_cache_lock_timeout|proxy_cache_methods|proxy_cache_min_uses|proxy_cache_path|proxy_cache_use_stale|proxy_cache_valid|proxy_connect_timeout|proxy_cookie_domain|proxy_cookie_path|proxy_headers_hash_bucket_size|proxy_headers_hash_max_size|proxy_hide_header|proxy_http_version|proxy_ignore_client_abort|proxy_ignore_headers|proxy_intercept_errors|proxy_max_temp_file_size|proxy_method|proxy_next_upstream|proxy_no_cache|proxy_pass|proxy_pass_error_message|proxy_pass_header|proxy_pass_request_body|proxy_pass_request_headers|proxy_read_timeout|proxy_redirect|proxy_redirect_errors|proxy_send_lowat|proxy_send_timeout|proxy_set_body|proxy_set_header|proxy_ssl_session_reuse|proxy_store|proxy_store_access|proxy_temp_file_write_size|proxy_temp_path|proxy_timeout|proxy_upstream_fail_timeout|proxy_upstream_max_fails|random_index|read_ahead|real_ip_header|recursive_error_pages|request_pool_size|reset_timedout_connection|resolver|resolver_timeout|return|rewrite|root|rtsig_overflow_events|rtsig_overflow_test|rtsig_overflow_threshold|rtsig_signo|satisfy|satisfy_any|secure_link_secret|send_lowat|send_timeout|sendfile|sendfile_max_chunk|server|server_name|server_name_in_redirect|server_names_hash_bucket_size|server_names_hash_max_size|server_tokens|set|set_real_ip_from|smtp_auth|smtp_capabilities|so_keepalive|source_charset|split_clients|ssi|ssi_silent_errors|ssi_types|ssi_value_length|ssl|ssl_certificate|ssl_certificate_key|ssl_ciphers|ssl_client_certificate|ssl_crl|ssl_dhparam|ssl_engine|ssl_prefer_server_ciphers|ssl_protocols|ssl_session_cache|ssl_session_timeout|ssl_verify_client|ssl_verify_depth|starttls|stub_status|sub_filter|sub_filter_once|sub_filter_types|tcp_nodelay|tcp_nopush|timeout|timer_resolution|try_files|types|types_hash_bucket_size|types_hash_max_size|underscores_in_headers|uninitialized_variable_warn|upstream|use|user|userid|userid_domain|userid_expires|userid_name|userid_p3p|userid_path|userid_service|valid_referers|variables_hash_bucket_size|variables_hash_max_size|worker_connections|worker_cpu_affinity|worker_priority|worker_processes|worker_rlimit_core|worker_rlimit_nofile|worker_rlimit_sigpending|working_directory|xclient|xml_entities|xslt_entities|xslt_stylesheet|xslt_types|ssl_session_tickets|ssl_stapling|ssl_stapling_verify|ssl_ecdh_curve|ssl_trusted_certificate|more_set_headers|ssl_early_data)\\b/i}),Prism.languages.insertBefore(\"nginx\",\"keyword\",{variable:/\\$[a-z_]+/i});","Prism.languages.nim = {\n\t'comment': /#.*/,\n\t// Double-quoted strings can be prefixed by an identifier (Generalized raw string literals)\n\t// Character literals are handled specifically to prevent issues with numeric type suffixes\n\t'string': {\n\t\tpattern: /(?:(?:\\b(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+)?(?:\"\"\"[\\s\\S]*?\"\"\"(?!\")|\"(?:\\\\[\\s\\S]|\"\"|[^\"\\\\])*\")|'(?:\\\\(?:\\d+|x[\\da-fA-F]{2}|.)|[^'])')/,\n\t\tgreedy: true\n\t},\n\t// The negative look ahead prevents wrong highlighting of the .. operator\n\t'number': /\\b(?:0[xXoObB][\\da-fA-F_]+|\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:[eE][+-]?\\d[\\d_]*)?)(?:'?[iuf]\\d*)?/,\n\t'keyword': /\\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\\b/,\n\t'function': {\n\t\tpattern: /(?:(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+|`[^`\\r\\n]+`)\\*?(?:\\[[^\\]]+\\])?(?=\\s*\\()/,\n\t\tinside: {\n\t\t\t'operator': /\\*$/\n\t\t}\n\t},\n\t// We don't want to highlight operators inside backticks\n\t'ignore': {\n\t\tpattern: /`[^`\\r\\n]+`/,\n\t\tinside: {\n\t\t\t'punctuation': /`/\n\t\t}\n\t},\n\t'operator': {\n\t\t// Look behind and look ahead prevent wrong highlighting of punctuations [. .] {. .} (. .)\n\t\t// but allow the slice operator .. to take precedence over them\n\t\t// One can define his own operators in Nim so all combination of operators might be an operator.\n\t\tpattern: /(^|[({\\[](?=\\.\\.)|(?![({\\[]\\.).)(?:(?:[=+\\-*\\/<>@$~&%|!?^:\\\\]|\\.\\.|\\.(?![)}\\]]))+|\\b(?:and|div|of|or|in|is|isnot|mod|not|notin|shl|shr|xor)\\b)/m,\n\t\tlookbehind: true\n\t},\n\t'punctuation': /[({\\[]\\.|\\.[)}\\]]|[`(){}\\[\\],:]/\n};","Prism.languages.nim={comment:/#.*/,string:{pattern:/(?:(?:\\b(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+)?(?:\"\"\"[\\s\\S]*?\"\"\"(?!\")|\"(?:\\\\[\\s\\S]|\"\"|[^\"\\\\])*\")|'(?:\\\\(?:\\d+|x[\\da-fA-F]{2}|.)|[^'])')/,greedy:!0},number:/\\b(?:0[xXoObB][\\da-fA-F_]+|\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:[eE][+-]?\\d[\\d_]*)?)(?:'?[iuf]\\d*)?/,keyword:/\\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\\b/,function:{pattern:/(?:(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+|`[^`\\r\\n]+`)\\*?(?:\\[[^\\]]+\\])?(?=\\s*\\()/,inside:{operator:/\\*$/}},ignore:{pattern:/`[^`\\r\\n]+`/,inside:{punctuation:/`/}},operator:{pattern:/(^|[({\\[](?=\\.\\.)|(?![({\\[]\\.).)(?:(?:[=+\\-*\\/<>@$~&%|!?^:\\\\]|\\.\\.|\\.(?![)}\\]]))+|\\b(?:and|div|of|or|in|is|isnot|mod|not|notin|shl|shr|xor)\\b)/m,lookbehind:!0},punctuation:/[({\\[]\\.|\\.[)}\\]]|[`(){}\\[\\],:]/};","Prism.languages.nix = {\n\t'comment': /\\/\\*[\\s\\S]*?\\*\\/|#.*/,\n\t'string': {\n\t\tpattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\t// The lookbehind ensures the ${} is not preceded by \\ or ''\n\t\t\t\tpattern: /(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^}]|\\{[^}]*\\})*}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'antiquotation': {\n\t\t\t\t\t\tpattern: /^\\$(?=\\{)/,\n\t\t\t\t\t\talias: 'variable'\n\t\t\t\t\t}\n\t\t\t\t\t// See rest below\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t'url': [\n\t\t/\\b(?:[a-z]{3,7}:\\/\\/)[\\w\\-+%~\\/.:#=?&]+/,\n\t\t{\n\t\t\tpattern: /([^\\/])(?:[\\w\\-+%~.:#=?&]*(?!\\/\\/)[\\w\\-+%~\\/.:#=?&])?(?!\\/\\/)\\/[\\w\\-+%~\\/.:#=?&]*/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'antiquotation': {\n\t\tpattern: /\\$(?=\\{)/,\n\t\talias: 'variable'\n\t},\n\t'number': /\\b\\d+\\b/,\n\t'keyword': /\\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\\b/,\n\t'function': /\\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:url|Tarball)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\\b|\\bfoldl'\\B/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'operator': /[=!<>]=?|\\+\\+?|\\|\\||&&|\\/\\/|->?|[?@]/,\n\t'punctuation': /[{}()[\\].,:;]/\n};\n\nPrism.languages.nix.string.inside.interpolation.inside.rest = Prism.languages.nix;","Prism.languages.nix={comment:/\\/\\*[\\s\\S]*?\\*\\/|#.*/,string:{pattern:/\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,greedy:!0,inside:{interpolation:{pattern:/(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^}]|\\{[^}]*\\})*}/,lookbehind:!0,inside:{antiquotation:{pattern:/^\\$(?=\\{)/,alias:\"variable\"}}}}},url:[/\\b(?:[a-z]{3,7}:\\/\\/)[\\w\\-+%~\\/.:#=?&]+/,{pattern:/([^\\/])(?:[\\w\\-+%~.:#=?&]*(?!\\/\\/)[\\w\\-+%~\\/.:#=?&])?(?!\\/\\/)\\/[\\w\\-+%~\\/.:#=?&]*/,lookbehind:!0}],antiquotation:{pattern:/\\$(?=\\{)/,alias:\"variable\"},number:/\\b\\d+\\b/,keyword:/\\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\\b/,function:/\\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:url|Tarball)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\\b|\\bfoldl'\\B/,boolean:/\\b(?:true|false)\\b/,operator:/[=!<>]=?|\\+\\+?|\\|\\||&&|\\/\\/|->?|[?@]/,punctuation:/[{}()[\\].,:;]/},Prism.languages.nix.string.inside.interpolation.inside.rest=Prism.languages.nix;","/**\n * Original by Jan T. Sott (http://github.com/idleberg)\n *\n * Includes all commands and plug-ins shipped with NSIS 3.02\n */\n Prism.languages.nsis = {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|[#;].*)/,\n\t\tlookbehind: true\n\t},\n\t'string': {\n\t\tpattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'keyword': {\n\t\tpattern: /(^\\s*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|Banner|BG(?:Font|Gradient|Image)|BrandingText|BringToFront|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|CRCCheck|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|WriteUTF16LE|Seek|Write|WriteByte|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DlgItem|DLLVersion(?:Local)?|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|LabelAddress|TempFileName)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|Silent)|InitPluginsDir|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Int(?:64|Ptr)?CmpU?|Int(?:64)?Fmt|Int(?:Ptr)?Op|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|Name|Nop|ns(?:Dialogs|Exec)|NSISdl|OutFile|Page(?:Callbacks)?|PE(?:DllCharacteristics|SubsysVer)|Pop|Push|Quit|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|RMDir|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|Unicode|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UninstPage|UnRegDLL|UserInfo|Var|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle)\\b/m,\n\t\tlookbehind: true\n\t},\n\t'property': /\\b(?:admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user|ARCHIVE|FILE_(ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK((CR|CU|LM)(32|64)?|DD|PD|U)|HKEY_(CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY)\\b/,\n\t'constant': /\\${[\\w\\.:\\^-]+}|\\$\\([\\w\\.:\\^-]+\\)/i,\n\t'variable': /\\$\\w+/i,\n\t'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n\t'operator': /--?|\\+\\+?|<=?|>=?|==?=?|&&?|\\|\\|?|[?*\\/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/,\n\t'important': {\n\t\tpattern: /(^\\s*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|ifdef|ifmacrodef|ifmacrondef|ifndef|if|include|insertmacro|macroend|macro|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|verbose|warning)\\b/mi,\n\t\tlookbehind: true\n\t}\n};\n","Prism.languages.nsis={comment:{pattern:/(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|[#;].*)/,lookbehind:!0},string:{pattern:/(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},keyword:{pattern:/(^\\s*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|Banner|BG(?:Font|Gradient|Image)|BrandingText|BringToFront|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|CRCCheck|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|WriteUTF16LE|Seek|Write|WriteByte|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DlgItem|DLLVersion(?:Local)?|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|LabelAddress|TempFileName)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|Silent)|InitPluginsDir|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Int(?:64|Ptr)?CmpU?|Int(?:64)?Fmt|Int(?:Ptr)?Op|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|Name|Nop|ns(?:Dialogs|Exec)|NSISdl|OutFile|Page(?:Callbacks)?|PE(?:DllCharacteristics|SubsysVer)|Pop|Push|Quit|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|RMDir|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|Unicode|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UninstPage|UnRegDLL|UserInfo|Var|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle)\\b/m,lookbehind:!0},property:/\\b(?:admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user|ARCHIVE|FILE_(ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK((CR|CU|LM)(32|64)?|DD|PD|U)|HKEY_(CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY)\\b/,constant:/\\${[\\w\\.:\\^-]+}|\\$\\([\\w\\.:\\^-]+\\)/i,variable:/\\$\\w+/i,number:/\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,operator:/--?|\\+\\+?|<=?|>=?|==?=?|&&?|\\|\\|?|[?*\\/~^%]/,punctuation:/[{}[\\];(),.:]/,important:{pattern:/(^\\s*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|ifdef|ifmacrodef|ifmacrondef|ifndef|if|include|insertmacro|macroend|macro|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|verbose|warning)\\b/im,lookbehind:!0}};","Prism.languages.objectivec = Prism.languages.extend('c', {\n\t'keyword': /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n\t'string': /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n\t'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\n\ndelete Prism.languages.objectivec['class-name'];\n","Prism.languages.objectivec=Prism.languages.extend(\"c\",{keyword:/\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,string:/(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,operator:/-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/}),delete Prism.languages.objectivec[\"class-name\"];","Prism.languages.ocaml = {\n\t'comment': /\\(\\*[\\s\\S]*?\\*\\)/,\n\t'string': [\n\t\t{\n\t\t\tpattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'number': /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,\n\t'type': {\n\t\tpattern: /\\B['`]\\w*/,\n\t\talias: 'variable'\n\t},\n\t'directive': {\n\t\tpattern: /\\B#\\w+/,\n\t\talias: 'function'\n\t},\n\t'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t// Custom operators are allowed\n\t'operator': /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\\b/,\n\t'punctuation': /[(){}\\[\\]|_.,:;]/\n};","Prism.languages.ocaml={comment:/\\(\\*[\\s\\S]*?\\*\\)/,string:[{pattern:/\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,greedy:!0},{pattern:/(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,greedy:!0}],number:/\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,type:{pattern:/\\B['`]\\w*/,alias:\"variable\"},directive:{pattern:/\\B#\\w+/,alias:\"function\"},keyword:/\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\\b/,boolean:/\\b(?:false|true)\\b/,operator:/:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\\b/,punctuation:/[(){}\\[\\]|_.,:;]/};","(function (Prism) {\n\t/* OpenCL kernel language */\n\tPrism.languages.opencl = Prism.languages.extend('c', {\n\t\t// Extracted from the official specs (2.0) and http://streamcomputing.eu/downloads/?opencl.lang (opencl-keywords, opencl-types) and http://sourceforge.net/tracker/?func=detail&aid=2957794&group_id=95717&atid=612384 (Words2, partly Words3)\n\t\t'keyword': /\\b(?:__attribute__|(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|auto|break|case|cl_(?:image_format|mem_fence_flags)|clk_event_t|complex|const|continue|default|do|(?:float|double)(?:16(?:x(?:1|16|2|4|8))?|1x(?:1|16|2|4|8)|2(?:x(?:1|16|2|4|8))?|3|4(?:x(?:1|16|2|4|8))?|8(?:x(?:1|16|2|4|8))?)?|else|enum|event_t|extern|for|goto|(?:u?(?:char|short|int|long)|half|quad|bool)(?:2|3|4|8|16)?|if|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|imaginary|inline|intptr_t|ndrange_t|packed|pipe|ptrdiff_t|queue_t|register|reserve_id_t|restrict|return|sampler_t|signed|size_t|sizeof|static|struct|switch|typedef|uintptr_t|uniform|union|unsigned|void|volatile|while)\\b/,\n\t\t// Extracted from http://streamcomputing.eu/downloads/?opencl.lang (global-vars, opencl-dev)\n\t\t'function-opencl-kernel': {\n\t\t\tpattern: /\\b(?:abs(?:_diff)?|a?(?:cos|sin)(?:h|pi)?|add_sat|aligned|all|and|any|async(?:_work_group_copy|_work_group_strided_copy)?|atan(?:2?(?:pi)?|h)?|atom_(?:add|and|cmpxchg|dec|inc|max|min|or|sub|xchg|xor)|barrier|bitselect|cbrt|ceil|clamp|clz|copies|copysign|cross|degrees|distance|dot|endian|erf|erfc|exp(?:2|10)?|expm1|fabs|fast_(?:distance|length|normalize)|fdim|floor|fma|fmax|fmin|fract|frexp|fro|from|get_(?:global_(?:id|offset|size)|group_id|image_(?:channel_data_type|channel_order|depth|dim|height|width)|local(?:_id|_size)|num_groups|work_dim)|hadd|(?:half|native)_(?:cos|divide|exp(?:2|10)?|log(?:2|10)?|powr|recip|r?sqrt|sin|tan)|hypot|ilogb|is(?:equal|finite|greater(?:equal)?|inf|less(?:equal|greater)?|nan|normal|notequal|(?:un)?ordered)|ldexp|length|lgamma|lgamma_r|log(?:b|1p|2|10)?|mad(?:24|_hi|_sat)?|max|mem(?:_fence)?|min|mix|modf|mul24|mul_hi|nan|nextafter|normalize|pow[nr]?|prefetch|radians|read_(?:image)(?:f|h|u?i)|read_mem_fence|remainder|remquo|reqd_work_group_size|rhadd|rint|rootn|rotate|round|rsqrt|select|shuffle2?|sign|signbit|sincos|smoothstep|sqrt|step|sub_sat|tan|tanh|tanpi|tgamma|to|trunc|upsample|vec_(?:step|type_hint)|v(?:load|store)(?:_half)?(?:2|3|4|8|16)?|v(?:loada_half|storea?(?:_half)?)(?:2|3|4|8|16)?(?:_(?:rte|rtn|rtp|rtz))?|wait_group_events|work_group_size_hint|write_image(?:f|h|u?i)|write_mem_fence)\\b/,\n\t\t\talias: 'function'\n\t\t},\n\t\t// Extracted from http://streamcomputing.eu/downloads/?opencl.lang (opencl-const)\n\t\t'constant-opencl-kernel': {\n\t\t\tpattern: /\\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:LOCAL|GLOBAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT)_(?:DIG|EPSILON|MANT_DIG|(?:MIN|MAX)(?:(?:_10)?_EXP)?)|FLT_RADIX|HUGE_VALF|INFINITY|(?:INT|LONG|SCHAR|SHRT|UCHAR|UINT|ULONG)_(?:MAX|MIN)|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:10|2)E?|PI[24]?|SQRT(?:1_2|2))|NAN)\\b/,\n\t\t\talias: 'constant'\n\t\t}\n\t});\n\n\tvar attributes = {\n\t\t// Extracted from http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-types and opencl-host)\n\t\t'type-opencl-host': {\n\t\t\tpattern: /\\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|short|int|long)|float|double)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\\b/,\n\t\t\talias: 'keyword'\n\t\t},\n\t\t'boolean-opencl-host': {\n\t\t\tpattern: /\\bCL_(?:TRUE|FALSE)\\b/,\n\t\t\talias: 'boolean'\n\t\t},\n\t\t// Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-const)\n\t\t'constant-opencl-host': {\n\t\t\tpattern: /\\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:16|24|8|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\\b/,\n\t\t\talias: 'constant'\n\t\t},\n\t\t// Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-host)\n\t\t'function-opencl-host': {\n\t\t\tpattern: /\\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|Kernel|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\\b/,\n\t\t\talias: 'function'\n\t\t}\n\t};\n\n\t/* OpenCL host API */\n\tPrism.languages.insertBefore('c', 'keyword', attributes);\n\t// Extracted from doxygen class list http://github.khronos.org/OpenCL-CLHPP/annotated.html\n\tattributes['type-opencl-host-c++'] = {\n\t\tpattern: /\\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|Sampler|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|UserEvent)\\b/,\n\t\talias: 'keyword'\n\t};\n\t// C++ includes everything from the OpenCL C host API plus the classes defined in cl2.h\n\tPrism.languages.insertBefore('cpp', 'keyword', attributes);\n}(Prism));\n","!function(E){E.languages.opencl=E.languages.extend(\"c\",{keyword:/\\b(?:__attribute__|(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|auto|break|case|cl_(?:image_format|mem_fence_flags)|clk_event_t|complex|const|continue|default|do|(?:float|double)(?:16(?:x(?:1|16|2|4|8))?|1x(?:1|16|2|4|8)|2(?:x(?:1|16|2|4|8))?|3|4(?:x(?:1|16|2|4|8))?|8(?:x(?:1|16|2|4|8))?)?|else|enum|event_t|extern|for|goto|(?:u?(?:char|short|int|long)|half|quad|bool)(?:2|3|4|8|16)?|if|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|imaginary|inline|intptr_t|ndrange_t|packed|pipe|ptrdiff_t|queue_t|register|reserve_id_t|restrict|return|sampler_t|signed|size_t|sizeof|static|struct|switch|typedef|uintptr_t|uniform|union|unsigned|void|volatile|while)\\b/,\"function-opencl-kernel\":{pattern:/\\b(?:abs(?:_diff)?|a?(?:cos|sin)(?:h|pi)?|add_sat|aligned|all|and|any|async(?:_work_group_copy|_work_group_strided_copy)?|atan(?:2?(?:pi)?|h)?|atom_(?:add|and|cmpxchg|dec|inc|max|min|or|sub|xchg|xor)|barrier|bitselect|cbrt|ceil|clamp|clz|copies|copysign|cross|degrees|distance|dot|endian|erf|erfc|exp(?:2|10)?|expm1|fabs|fast_(?:distance|length|normalize)|fdim|floor|fma|fmax|fmin|fract|frexp|fro|from|get_(?:global_(?:id|offset|size)|group_id|image_(?:channel_data_type|channel_order|depth|dim|height|width)|local(?:_id|_size)|num_groups|work_dim)|hadd|(?:half|native)_(?:cos|divide|exp(?:2|10)?|log(?:2|10)?|powr|recip|r?sqrt|sin|tan)|hypot|ilogb|is(?:equal|finite|greater(?:equal)?|inf|less(?:equal|greater)?|nan|normal|notequal|(?:un)?ordered)|ldexp|length|lgamma|lgamma_r|log(?:b|1p|2|10)?|mad(?:24|_hi|_sat)?|max|mem(?:_fence)?|min|mix|modf|mul24|mul_hi|nan|nextafter|normalize|pow[nr]?|prefetch|radians|read_(?:image)(?:f|h|u?i)|read_mem_fence|remainder|remquo|reqd_work_group_size|rhadd|rint|rootn|rotate|round|rsqrt|select|shuffle2?|sign|signbit|sincos|smoothstep|sqrt|step|sub_sat|tan|tanh|tanpi|tgamma|to|trunc|upsample|vec_(?:step|type_hint)|v(?:load|store)(?:_half)?(?:2|3|4|8|16)?|v(?:loada_half|storea?(?:_half)?)(?:2|3|4|8|16)?(?:_(?:rte|rtn|rtp|rtz))?|wait_group_events|work_group_size_hint|write_image(?:f|h|u?i)|write_mem_fence)\\b/,alias:\"function\"},\"constant-opencl-kernel\":{pattern:/\\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:LOCAL|GLOBAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT)_(?:DIG|EPSILON|MANT_DIG|(?:MIN|MAX)(?:(?:_10)?_EXP)?)|FLT_RADIX|HUGE_VALF|INFINITY|(?:INT|LONG|SCHAR|SHRT|UCHAR|UINT|ULONG)_(?:MAX|MIN)|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:10|2)E?|PI[24]?|SQRT(?:1_2|2))|NAN)\\b/,alias:\"constant\"}});var _={\"type-opencl-host\":{pattern:/\\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|short|int|long)|float|double)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\\b/,alias:\"keyword\"},\"boolean-opencl-host\":{pattern:/\\bCL_(?:TRUE|FALSE)\\b/,alias:\"boolean\"},\"constant-opencl-host\":{pattern:/\\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:16|24|8|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\\b/,alias:\"constant\"},\"function-opencl-host\":{pattern:/\\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|Kernel|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\\b/,alias:\"function\"}};E.languages.insertBefore(\"c\",\"keyword\",_),_[\"type-opencl-host-c++\"]={pattern:/\\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|Sampler|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|UserEvent)\\b/,alias:\"keyword\"},E.languages.insertBefore(\"cpp\",\"keyword\",_)}(Prism);","Prism.languages.oz = {\n\t'comment': /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n\t'string': {\n\t\tpattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n\t\tgreedy: true\n\t},\n\t'atom': {\n\t\tpattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n\t\tgreedy: true,\n\t\talias: 'builtin'\n\t},\n\t'keyword': /[$_]|\\[\\]|\\b(?:at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\\b/,\n\t'function': [\n\t\t/[a-z][A-Za-z\\d]*(?=\\()/,\n\t\t{\n\t\t\tpattern: /(\\{)[A-Z][A-Za-z\\d]*/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'number': /\\b(?:0[bx][\\da-f]+|\\d+\\.?\\d*(?:e~?\\d+)?\\b)|&(?:[^\\\\]|\\\\(?:\\d{3}|.))/i,\n\t'variable': /\\b[A-Z][A-Za-z\\d]*|`(?:[^`\\\\]|\\\\.)+`/,\n\t'attr-name': /\\w+(?=:)/,\n\t'operator': /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\\\=:?|!!?|[|#+\\-*\\/,~^@]|\\b(?:andthen|div|mod|orelse)\\b/,\n\t'punctuation': /[\\[\\](){}.:;?]/\n};","Prism.languages.oz={comment:/\\/\\*[\\s\\S]*?\\*\\/|%.*/,string:{pattern:/\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,greedy:!0},atom:{pattern:/'(?:[^'\\\\]|\\\\[\\s\\S])*'/,greedy:!0,alias:\"builtin\"},keyword:/[$_]|\\[\\]|\\b(?:at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\\b/,function:[/[a-z][A-Za-z\\d]*(?=\\()/,{pattern:/(\\{)[A-Z][A-Za-z\\d]*/,lookbehind:!0}],number:/\\b(?:0[bx][\\da-f]+|\\d+\\.?\\d*(?:e~?\\d+)?\\b)|&(?:[^\\\\]|\\\\(?:\\d{3}|.))/i,variable:/\\b[A-Z][A-Za-z\\d]*|`(?:[^`\\\\]|\\\\.)+`/,\"attr-name\":/\\w+(?=:)/,operator:/:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\\\=:?|!!?|[|#+\\-*\\/,~^@]|\\b(?:andthen|div|mod|orelse)\\b/,punctuation:/[\\[\\](){}.:;?]/};","Prism.languages.parigp = {\n\t'comment': /\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,\n\t'string': {\n\t\tpattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n\t\tgreedy: true\n\t},\n\t// PARI/GP does not care about white spaces at all\n\t// so let's process the keywords to build an appropriate regexp\n\t// (e.g. \"b *r *e *a *k\", etc.)\n\t'keyword': (function () {\n\t\tvar keywords = [\n\t\t\t'breakpoint', 'break', 'dbg_down', 'dbg_err', 'dbg_up', 'dbg_x',\n\t\t\t'forcomposite', 'fordiv', 'forell', 'forpart', 'forprime',\n\t\t\t'forstep', 'forsubgroup', 'forvec', 'for', 'iferr', 'if',\n\t\t\t'local', 'my', 'next', 'return', 'until', 'while'\n\t\t];\n\t\tkeywords = keywords.map(function (keyword) {\n\t\t\treturn keyword.split('').join(' *');\n\t\t}).join('|');\n\t\treturn RegExp('\\\\b(?:' + keywords + ')\\\\b');\n\t}()),\n\t'function': /\\w[\\w ]*?(?= *\\()/,\n\t'number': {\n\t\t// The lookbehind and the negative lookahead prevent from breaking the .. operator\n\t\tpattern: /((?:\\. *\\. *)?)(?:\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *[+-]? *\\d(?: *\\d)*)?/i,\n\t\tlookbehind: true\n\t},\n\t'operator': /\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?:(?: *<)?(?: *=)?| *>)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,\n\t'punctuation': /[\\[\\]{}().,:;|]/\n};","Prism.languages.parigp={comment:/\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,string:{pattern:/\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,greedy:!0},keyword:function(){var r=[\"breakpoint\",\"break\",\"dbg_down\",\"dbg_err\",\"dbg_up\",\"dbg_x\",\"forcomposite\",\"fordiv\",\"forell\",\"forpart\",\"forprime\",\"forstep\",\"forsubgroup\",\"forvec\",\"for\",\"iferr\",\"if\",\"local\",\"my\",\"next\",\"return\",\"until\",\"while\"];return r=r.map(function(r){return r.split(\"\").join(\" *\")}).join(\"|\"),RegExp(\"\\\\b(?:\"+r+\")\\\\b\")}(),function:/\\w[\\w ]*?(?= *\\()/,number:{pattern:/((?:\\. *\\. *)?)(?:\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *[+-]? *\\d(?: *\\d)*)?/i,lookbehind:!0},operator:/\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?:(?: *<)?(?: *=)?| *>)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,punctuation:/[\\[\\]{}().,:;|]/};","(function (Prism) {\n\n\tvar parser = Prism.languages.parser = Prism.languages.extend('markup', {\n\t\t'keyword': {\n\t\t\tpattern: /(^|[^^])(?:\\^(?:case|eval|for|if|switch|throw)\\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\\b)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'variable': {\n\t\t\tpattern: /(^|[^^])\\B\\$(?:\\w+|(?=[.{]))(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /\\.|:+/\n\t\t\t}\n\t\t},\n\t\t'function': {\n\t\t\tpattern: /(^|[^^])\\B[@^]\\w+(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^@)(?:GET_|SET_)/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'punctuation': /\\.|:+/\n\t\t\t}\n\t\t},\n\t\t'escape': {\n\t\t\tpattern: /\\^(?:[$^;@()\\[\\]{}\"':]|#[a-f\\d]*)/i,\n\t\t\talias: 'builtin'\n\t\t},\n\t\t'punctuation': /[\\[\\](){};]/\n\t});\n\n\tparser = Prism.languages.insertBefore('parser', 'keyword', {\n\t\t'parser-comment': {\n\t\t\tpattern: /(\\s)#.*/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'comment'\n\t\t},\n\t\t'expression': {\n\t\t\t// Allow for 3 levels of depth\n\t\t\tpattern: /(^|[^^])\\((?:[^()]|\\((?:[^()]|\\((?:[^()])*\\))*\\))*\\)/,\n\t\t\tgreedy: true,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: /(^|[^^])([\"'])(?:(?!\\2)[^^]|\\^[\\s\\S])*\\2/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'keyword': parser.keyword,\n\t\t\t\t'variable': parser.variable,\n\t\t\t\t'function': parser.function,\n\t\t\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t\t\t'number': /\\b(?:0x[a-f\\d]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?)\\b/i,\n\t\t\t\t'escape': parser.escape,\n\t\t\t\t'operator': /[~+*\\/\\\\%]|!(?:\\|\\|?|=)?|&&?|\\|\\|?|==|<[<=]?|>[>=]?|-[fd]?|\\b(?:def|eq|ge|gt|in|is|le|lt|ne)\\b/,\n\t\t\t\t'punctuation': parser.punctuation\n\t\t\t}\n\t\t}\n\t});\n\n\tparser = Prism.languages.insertBefore('inside', 'punctuation', {\n\t\t'expression': parser.expression,\n\t\t'keyword': parser.keyword,\n\t\t'variable': parser.variable,\n\t\t'function': parser.function,\n\t\t'escape': parser.escape,\n\t\t'parser-punctuation': {\n\t\t\tpattern: parser.punctuation,\n\t\t\talias: 'punctuation'\n\t\t}\n\t}, parser['tag'].inside['attr-value']);\n\n}(Prism));\n","!function(e){var n=e.languages.parser=e.languages.extend(\"markup\",{keyword:{pattern:/(^|[^^])(?:\\^(?:case|eval|for|if|switch|throw)\\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\\b)/,lookbehind:!0},variable:{pattern:/(^|[^^])\\B\\$(?:\\w+|(?=[.{]))(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,lookbehind:!0,inside:{punctuation:/\\.|:+/}},function:{pattern:/(^|[^^])\\B[@^]\\w+(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,lookbehind:!0,inside:{keyword:{pattern:/(^@)(?:GET_|SET_)/,lookbehind:!0},punctuation:/\\.|:+/}},escape:{pattern:/\\^(?:[$^;@()\\[\\]{}\"':]|#[a-f\\d]*)/i,alias:\"builtin\"},punctuation:/[\\[\\](){};]/});n=e.languages.insertBefore(\"parser\",\"keyword\",{\"parser-comment\":{pattern:/(\\s)#.*/,lookbehind:!0,alias:\"comment\"},expression:{pattern:/(^|[^^])\\((?:[^()]|\\((?:[^()]|\\((?:[^()])*\\))*\\))*\\)/,greedy:!0,lookbehind:!0,inside:{string:{pattern:/(^|[^^])([\"'])(?:(?!\\2)[^^]|\\^[\\s\\S])*\\2/,lookbehind:!0},keyword:n.keyword,variable:n.variable,function:n.function,boolean:/\\b(?:true|false)\\b/,number:/\\b(?:0x[a-f\\d]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?)\\b/i,escape:n.escape,operator:/[~+*\\/\\\\%]|!(?:\\|\\|?|=)?|&&?|\\|\\|?|==|<[<=]?|>[>=]?|-[fd]?|\\b(?:def|eq|ge|gt|in|is|le|lt|ne)\\b/,punctuation:n.punctuation}}}),n=e.languages.insertBefore(\"inside\",\"punctuation\",{expression:n.expression,keyword:n.keyword,variable:n.variable,function:n.function,escape:n.escape,\"parser-punctuation\":{pattern:n.punctuation,alias:\"punctuation\"}},n.tag.inside[\"attr-value\"])}(Prism);","// Based on Free Pascal\n\n/* TODO\n\tSupport inline asm ?\n*/\n\nPrism.languages.pascal = {\n\t'comment': [\n\t\t/\\(\\*[\\s\\S]+?\\*\\)/,\n\t\t/\\{[\\s\\S]+?\\}/,\n\t\t/\\/\\/.*/\n\t],\n\t'string': {\n\t\tpattern: /(?:'(?:''|[^'\\r\\n])*'|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\n\t\tgreedy: true\n\t},\n\t'keyword': [\n\t\t{\n\t\t\t// Turbo Pascal\n\t\t\tpattern: /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\t// Free Pascal\n\t\t\tpattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\t// Object Pascal\n\t\t\tpattern: /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\t// Modifiers\n\t\t\tpattern: /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'number': [\n\t\t// Hexadecimal, octal and binary\n\t\t/(?:[&%]\\d+|\\$[a-f\\d]+)/i,\n\t\t// Decimal\n\t\t/\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i\n\t],\n\t'operator': [\n\t\t/\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/i,\n\t\t{\n\t\t\tpattern: /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'punctuation': /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\n};\n\nPrism.languages.objectpascal = Prism.languages.pascal;","Prism.languages.pascal={comment:[/\\(\\*[\\s\\S]+?\\*\\)/,/\\{[\\s\\S]+?\\}/,/\\/\\/.*/],string:{pattern:/(?:'(?:''|[^'\\r\\n])*'|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,greedy:!0},keyword:[{pattern:/(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,lookbehind:!0},{pattern:/(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,lookbehind:!0},{pattern:/(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,lookbehind:!0},{pattern:/(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,lookbehind:!0}],number:[/(?:[&%]\\d+|\\$[a-f\\d]+)/i,/\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i],operator:[/\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/i,{pattern:/(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,lookbehind:!0}],punctuation:/\\(\\.|\\.\\)|[()\\[\\]:;,.]/},Prism.languages.objectpascal=Prism.languages.pascal;","Prism.languages.perl = {\n\t'comment': [\n\t\t{\n\t\t\t// POD\n\t\t\tpattern: /(^\\s*)=\\w+[\\s\\S]*?=cut.*/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\$])#.*/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t// TODO Could be nice to handle Heredoc too.\n\t'string': [\n\t\t// q/.../\n\t\t{\n\t\t\tpattern: /\\b(?:q|qq|qx|qw)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n\t\t\tgreedy: true\n\t\t},\n\t\n\t\t// q a...a\n\t\t{\n\t\t\tpattern: /\\b(?:q|qq|qx|qw)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n\t\t\tgreedy: true\n\t\t},\n\t\n\t\t// q(...)\n\t\t{\n\t\t\tpattern: /\\b(?:q|qq|qx|qw)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n\t\t\tgreedy: true\n\t\t},\n\t\n\t\t// q{...}\n\t\t{\n\t\t\tpattern: /\\b(?:q|qq|qx|qw)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}/,\n\t\t\tgreedy: true\n\t\t},\n\t\n\t\t// q[...]\n\t\t{\n\t\t\tpattern: /\\b(?:q|qq|qx|qw)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n\t\t\tgreedy: true\n\t\t},\n\t\n\t\t// q<...>\n\t\t{\n\t\t\tpattern: /\\b(?:q|qq|qx|qw)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t// \"...\", `...`\n\t\t{\n\t\t\tpattern: /(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t// '...'\n\t\t// FIXME Multi-line single-quoted strings are not supported as they would break variables containing '\n\t\t{\n\t\t\tpattern: /'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'regex': [\n\t\t// m/.../\n\t\t{\n\t\t\tpattern: /\\b(?:m|qr)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\n\t\t\tgreedy: true\n\t\t},\n\t\n\t\t// m a...a\n\t\t{\n\t\t\tpattern: /\\b(?:m|qr)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\n\t\t\tgreedy: true\n\t\t},\n\t\n\t\t// m(...)\n\t\t{\n\t\t\tpattern: /\\b(?:m|qr)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngc]*/,\n\t\t\tgreedy: true\n\t\t},\n\t\n\t\t// m{...}\n\t\t{\n\t\t\tpattern: /\\b(?:m|qr)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngc]*/,\n\t\t\tgreedy: true\n\t\t},\n\t\n\t\t// m[...]\n\t\t{\n\t\t\tpattern: /\\b(?:m|qr)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngc]*/,\n\t\t\tgreedy: true\n\t\t},\n\t\n\t\t// m<...>\n\t\t{\n\t\t\tpattern: /\\b(?:m|qr)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngc]*/,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t// The lookbehinds prevent -s from breaking\n\t\t// FIXME We don't handle change of separator like s(...)[...]\n\t\t// s/.../.../\n\t\t{\n\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\n\t\t// s a...a...a\n\t\t{\n\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s+([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\n\t\t// s(...)(...)\n\t\t{\n\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngcer]*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\n\t\t// s{...}{...}\n\t\t{\n\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngcer]*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\n\t\t// s[...][...]\n\t\t{\n\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngcer]*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\n\t\t// s<...><...>\n\t\t{\n\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngcer]*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\n\t\t// /.../\n\t\t// The look-ahead tries to prevent two divisions on\n\t\t// the same line from being highlighted as regex.\n\t\t// This does not support multi-line regex.\n\t\t{\n\t\t\tpattern: /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(lt|gt|le|ge|eq|ne|cmp|not|and|or|xor|x)\\b))/,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\n\t// FIXME Not sure about the handling of ::, ', and #\n\t'variable': [\n\t\t// ${^POSTMATCH}\n\t\t/[&*$@%]\\{\\^[A-Z]+\\}/,\n\t\t// $^V\n\t\t/[&*$@%]\\^[A-Z_]/,\n\t\t// ${...}\n\t\t/[&*$@%]#?(?=\\{)/,\n\t\t// $foo\n\t\t/[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+)+(?:::)*/i,\n\t\t// $1\n\t\t/[&*$@%]\\d+/,\n\t\t// $_, @_, %!\n\t\t// The negative lookahead prevents from breaking the %= operator\n\t\t/(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/\n\t],\n\t'filehandle': {\n\t\t// <>, <FOO>, _\n\t\tpattern: /<(?![<=])\\S*>|\\b_\\b/,\n\t\talias: 'symbol'\n\t},\n\t'vstring': {\n\t\t// v1.2, 1.2.3\n\t\tpattern: /v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,\n\t\talias: 'string'\n\t},\n\t'function': {\n\t\tpattern: /sub [a-z0-9_]+/i,\n\t\tinside: {\n\t\t\tkeyword: /sub/\n\t\t}\n\t},\n\t'keyword': /\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,\n\t'number': /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,\n\t'operator': /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:lt|gt|le|ge|eq|ne|cmp|not|and|or|xor)\\b/,\n\t'punctuation': /[{}[\\];(),:]/\n};\n","Prism.languages.perl={comment:[{pattern:/(^\\s*)=\\w+[\\s\\S]*?=cut.*/m,lookbehind:!0},{pattern:/(^|[^\\\\$])#.*/,lookbehind:!0}],string:[{pattern:/\\b(?:q|qq|qx|qw)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,greedy:!0},{pattern:/\\b(?:q|qq|qx|qw)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,greedy:!0},{pattern:/\\b(?:q|qq|qx|qw)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,greedy:!0},{pattern:/\\b(?:q|qq|qx|qw)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}/,greedy:!0},{pattern:/\\b(?:q|qq|qx|qw)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]/,greedy:!0},{pattern:/\\b(?:q|qq|qx|qw)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,greedy:!0},{pattern:/(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,greedy:!0},{pattern:/'(?:[^'\\\\\\r\\n]|\\\\.)*'/,greedy:!0}],regex:[{pattern:/\\b(?:m|qr)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,greedy:!0},{pattern:/\\b(?:m|qr)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,greedy:!0},{pattern:/\\b(?:m|qr)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngc]*/,greedy:!0},{pattern:/\\b(?:m|qr)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngc]*/,greedy:!0},{pattern:/\\b(?:m|qr)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngc]*/,greedy:!0},{pattern:/\\b(?:m|qr)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngc]*/,greedy:!0},{pattern:/(^|[^-]\\b)(?:s|tr|y)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,lookbehind:!0,greedy:!0},{pattern:/(^|[^-]\\b)(?:s|tr|y)\\s+([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,lookbehind:!0,greedy:!0},{pattern:/(^|[^-]\\b)(?:s|tr|y)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngcer]*/,lookbehind:!0,greedy:!0},{pattern:/(^|[^-]\\b)(?:s|tr|y)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngcer]*/,lookbehind:!0,greedy:!0},{pattern:/(^|[^-]\\b)(?:s|tr|y)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngcer]*/,lookbehind:!0,greedy:!0},{pattern:/(^|[^-]\\b)(?:s|tr|y)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngcer]*/,lookbehind:!0,greedy:!0},{pattern:/\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(lt|gt|le|ge|eq|ne|cmp|not|and|or|xor|x)\\b))/,greedy:!0}],variable:[/[&*$@%]\\{\\^[A-Z]+\\}/,/[&*$@%]\\^[A-Z_]/,/[&*$@%]#?(?=\\{)/,/[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+)+(?:::)*/i,/[&*$@%]\\d+/,/(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/],filehandle:{pattern:/<(?![<=])\\S*>|\\b_\\b/,alias:\"symbol\"},vstring:{pattern:/v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,alias:\"string\"},function:{pattern:/sub [a-z0-9_]+/i,inside:{keyword:/sub/}},keyword:/\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,number:/\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,operator:/-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:lt|gt|le|ge|eq|ne|cmp|not|and|or|xor)\\b/,punctuation:/[{}[\\];(),:]/};","Prism.languages.insertBefore('php', 'variable', {\n\t'this': /\\$this\\b/,\n\t'global': /\\$(?:_(?:SERVER|GET|POST|FILES|REQUEST|SESSION|ENV|COOKIE)|GLOBALS|HTTP_RAW_POST_DATA|argc|argv|php_errormsg|http_response_header)\\b/,\n\t'scope': {\n\t\tpattern: /\\b[\\w\\\\]+::/,\n\t\tinside: {\n\t\t\tkeyword: /static|self|parent/,\n\t\t\tpunctuation: /::|\\\\/\n\t\t}\n\t}\n});","Prism.languages.insertBefore(\"php\",\"variable\",{this:/\\$this\\b/,global:/\\$(?:_(?:SERVER|GET|POST|FILES|REQUEST|SESSION|ENV|COOKIE)|GLOBALS|HTTP_RAW_POST_DATA|argc|argv|php_errormsg|http_response_header)\\b/,scope:{pattern:/\\b[\\w\\\\]+::/,inside:{keyword:/static|self|parent/,punctuation:/::|\\\\/}}});","/**\n * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n * Modified by Miles Johnson: http://milesj.me\n *\n * Supports the following:\n * \t\t- Extends clike syntax\n * \t\t- Support for PHP 5.3+ (namespaces, traits, generators, etc)\n * \t\t- Smarter constant and function matching\n *\n * Adds the following new token classes:\n * \t\tconstant, delimiter, variable, function, package\n */\n(function (Prism) {\n\tPrism.languages.php = Prism.languages.extend('clike', {\n\t\t'keyword': /\\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|class|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|eval|exit|extends|final|finally|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|new|or|parent|print|private|protected|public|require|require_once|return|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\\b/i,\n\t\t'boolean': {\n\t\t\tpattern: /\\b(?:false|true)\\b/i,\n\t\t\talias: 'constant'\n\t\t},\n\t\t'constant': [\n\t\t\t/\\b[A-Z_][A-Z0-9_]*\\b/,\n\t\t\t/\\b(?:null)\\b/i,\n\t\t],\n\t\t'comment': {\n\t\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n\t\t\tlookbehind: true\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('php', 'string', {\n\t\t'shell-comment': {\n\t\t\tpattern: /(^|[^\\\\])#.*/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'comment'\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('php', 'comment', {\n\t\t'delimiter': {\n\t\t\tpattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n\t\t\talias: 'important'\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('php', 'keyword', {\n\t\t'variable': /\\$+(?:\\w+\\b|(?={))/i,\n\t\t'package': {\n\t\t\tpattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tpunctuation: /\\\\/\n\t\t\t}\n\t\t}\n\t});\n\n\t// Must be defined after the function pattern\n\tPrism.languages.insertBefore('php', 'operator', {\n\t\t'property': {\n\t\t\tpattern: /(->)[\\w]+/,\n\t\t\tlookbehind: true\n\t\t}\n\t});\n\n\tvar string_interpolation = {\n\t\tpattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[.+?]|->\\w+)*)/,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\trest: Prism.languages.php\n\t\t}\n\t};\n\n\tPrism.languages.insertBefore('php', 'string', {\n\t\t'nowdoc-string': {\n\t\t\tpattern: /<<<'([^']+)'(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n\t\t\t\t\talias: 'symbol',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^<<<'?|[';]$/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'heredoc-string': {\n\t\t\tpattern: /<<<(?:\"([^\"]+)\"(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;|([a-z_]\\w*)(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\2;)/i,\n\t\t\tgreedy: true,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n\t\t\t\t\talias: 'symbol',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^<<<\"?|[\";]$/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'interpolation': string_interpolation // See below\n\t\t\t}\n\t\t},\n\t\t'single-quoted-string': {\n\t\t\tpattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string'\n\t\t},\n\t\t'double-quoted-string': {\n\t\t\tpattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\t'interpolation': string_interpolation // See below\n\t\t\t}\n\t\t}\n\t});\n\t// The different types of PHP strings \"replace\" the C-like standard string\n\tdelete Prism.languages.php['string'];\n\n\tPrism.hooks.add('before-tokenize', function(env) {\n\t\tif (!/<\\?/.test(env.code)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar phpPattern = /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#)(?:[^?\\n\\r]|\\?(?!>))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$))*?(?:\\?>|$)/ig;\n\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n\t});\n\n\tPrism.hooks.add('after-tokenize', function(env) {\n\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n\t});\n\n}(Prism));\n","!function(n){n.languages.php=n.languages.extend(\"clike\",{keyword:/\\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|class|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|eval|exit|extends|final|finally|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|new|or|parent|print|private|protected|public|require|require_once|return|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\\b/i,boolean:{pattern:/\\b(?:false|true)\\b/i,alias:\"constant\"},constant:[/\\b[A-Z_][A-Z0-9_]*\\b/,/\\b(?:null)\\b/i],comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,lookbehind:!0}}),n.languages.insertBefore(\"php\",\"string\",{\"shell-comment\":{pattern:/(^|[^\\\\])#.*/,lookbehind:!0,alias:\"comment\"}}),n.languages.insertBefore(\"php\",\"comment\",{delimiter:{pattern:/\\?>$|^<\\?(?:php(?=\\s)|=)?/i,alias:\"important\"}}),n.languages.insertBefore(\"php\",\"keyword\",{variable:/\\$+(?:\\w+\\b|(?={))/i,package:{pattern:/(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,lookbehind:!0,inside:{punctuation:/\\\\/}}}),n.languages.insertBefore(\"php\",\"operator\",{property:{pattern:/(->)[\\w]+/,lookbehind:!0}});var e={pattern:/{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[.+?]|->\\w+)*)/,lookbehind:!0,inside:{rest:n.languages.php}};n.languages.insertBefore(\"php\",\"string\",{\"nowdoc-string\":{pattern:/<<<'([^']+)'(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;/,greedy:!0,alias:\"string\",inside:{delimiter:{pattern:/^<<<'[^']+'|[a-z_]\\w*;$/i,alias:\"symbol\",inside:{punctuation:/^<<<'?|[';]$/}}}},\"heredoc-string\":{pattern:/<<<(?:\"([^\"]+)\"(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;|([a-z_]\\w*)(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\2;)/i,greedy:!0,alias:\"string\",inside:{delimiter:{pattern:/^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,alias:\"symbol\",inside:{punctuation:/^<<<\"?|[\";]$/}},interpolation:e}},\"single-quoted-string\":{pattern:/'(?:\\\\[\\s\\S]|[^\\\\'])*'/,greedy:!0,alias:\"string\"},\"double-quoted-string\":{pattern:/\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,greedy:!0,alias:\"string\",inside:{interpolation:e}}}),delete n.languages.php.string,n.hooks.add(\"before-tokenize\",function(e){if(/<\\?/.test(e.code)){n.languages[\"markup-templating\"].buildPlaceholders(e,\"php\",/<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#)(?:[^?\\n\\r]|\\?(?!>))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$))*?(?:\\?>|$)/gi)}}),n.hooks.add(\"after-tokenize\",function(e){n.languages[\"markup-templating\"].tokenizePlaceholders(e,\"php\")})}(Prism);","(function (Prism) {\n\n\tvar typeExpression = /(?:[a-zA-Z]\\w*|[|\\\\[\\]])+/.source;\n\n\tPrism.languages.phpdoc = Prism.languages.extend('javadoclike', {\n\t\t'parameter': {\n\t\t\tpattern: RegExp('(@(?:global|param|property(?:-read|-write)?|var)\\\\s+(?:' + typeExpression + '\\\\s+)?)\\\\$\\\\w+'),\n\t\t\tlookbehind: true\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('phpdoc', 'keyword', {\n\t\t'class-name': [\n\t\t\t{\n\t\t\t\tpattern: RegExp('(@(?:global|package|param|property(?:-read|-write)?|return|subpackage|throws|var)\\\\s+)' + typeExpression),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /\\b(?:callback|resource|boolean|integer|double|object|string|array|false|float|mixed|bool|null|self|true|void|int)\\b/,\n\t\t\t\t\t'punctuation': /[|\\\\[\\]()]/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t});\n\n\tPrism.languages.javadoclike.addSupport('php', Prism.languages.phpdoc);\n\n}(Prism));\n","!function(a){var e=\"(?:[a-zA-Z]\\\\w*|[|\\\\\\\\[\\\\]])+\";a.languages.phpdoc=a.languages.extend(\"javadoclike\",{parameter:{pattern:RegExp(\"(@(?:global|param|property(?:-read|-write)?|var)\\\\s+(?:\"+e+\"\\\\s+)?)\\\\$\\\\w+\"),lookbehind:!0}}),a.languages.insertBefore(\"phpdoc\",\"keyword\",{\"class-name\":[{pattern:RegExp(\"(@(?:global|package|param|property(?:-read|-write)?|return|subpackage|throws|var)\\\\s+)\"+e),lookbehind:!0,inside:{keyword:/\\b(?:callback|resource|boolean|integer|double|object|string|array|false|float|mixed|bool|null|self|true|void|int)\\b/,punctuation:/[|\\\\[\\]()]/}}]}),a.languages.javadoclike.addSupport(\"php\",a.languages.phpdoc)}(Prism);","(function (Prism) {\n\n\tvar plsql = Prism.languages.plsql = Prism.languages.extend('sql', {\n\t\t'comment': [\n\t\t\t/\\/\\*[\\s\\S]*?\\*\\//,\n\t\t\t/--.*/\n\t\t]\n\t});\n\n\tvar keyword = plsql['keyword'];\n\tif (!Array.isArray(keyword)) {\n\t\tkeyword = plsql['keyword'] = [keyword];\n\t}\n\tkeyword.unshift(\n\t\t/\\b(?:ACCESS|AGENT|AGGREGATE|ARRAY|ARROW|AT|ATTRIBUTE|AUDIT|AUTHID|BFILE_BASE|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BYTE|CALLING|CHAR_BASE|CHARSET(?:FORM|ID)|CLOB_BASE|COLAUTH|COLLECT|CLUSTERS?|COMPILED|COMPRESS|CONSTANT|CONSTRUCTOR|CONTEXT|CRASH|CUSTOMDATUM|DANGLING|DATE_BASE|DEFINE|DETERMINISTIC|DURATION|ELEMENT|EMPTY|EXCEPTIONS?|EXCLUSIVE|EXTERNAL|FINAL|FORALL|FORM|FOUND|GENERAL|HEAP|HIDDEN|IDENTIFIED|IMMEDIATE|INCLUDING|INCREMENT|INDICATOR|INDEXES|INDICES|INFINITE|INITIAL|ISOPEN|INSTANTIABLE|INTERFACE|INVALIDATE|JAVA|LARGE|LEADING|LENGTH|LIBRARY|LIKE[24C]|LIMITED|LONG|LOOP|MAP|MAXEXTENTS|MAXLEN|MEMBER|MINUS|MLSLABEL|MULTISET|NAME|NAN|NATIVE|NEW|NOAUDIT|NOCOMPRESS|NOCOPY|NOTFOUND|NOWAIT|NUMBER(?:_BASE)?|OBJECT|OCI(?:COLL|DATE|DATETIME|DURATION|INTERVAL|LOBLOCATOR|NUMBER|RAW|REF|REFCURSOR|ROWID|STRING|TYPE)|OFFLINE|ONLINE|ONLY|OPAQUE|OPERATOR|ORACLE|ORADATA|ORGANIZATION|ORL(?:ANY|VARY)|OTHERS|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETERS?|PASCAL|PCTFREE|PIPE(?:LINED)?|PRAGMA|PRIOR|PRIVATE|RAISE|RANGE|RAW|RECORD|REF|REFERENCE|REM|REMAINDER|RESULT|RESOURCE|RETURNING|REVERSE|ROW(?:ID|NUM|TYPE)|SAMPLE|SB[124]|SEGMENT|SELF|SEPARATE|SEQUENCE|SHORT|SIZE(?:_T)?|SPARSE|SQL(?:CODE|DATA|NAME|STATE)|STANDARD|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUCCESSFUL|SYNONYM|SYSDATE|TABAUTH|TDO|THE|TIMEZONE_(?:ABBR|HOUR|MINUTE|REGION)|TRAILING|TRANSAC(?:TIONAL)?|TRUSTED|UB[124]|UID|UNDER|UNTRUSTED|VALIDATE|VALIST|VARCHAR2|VARIABLE|VARIANCE|VARRAY|VIEWS|VOID|WHENEVER|WRAPPED|ZONE)\\b/i\n\t);\n\n\tvar operator = plsql['operator'];\n\tif (!Array.isArray(operator)) {\n\t\toperator = plsql['operator'] = [operator];\n\t}\n\toperator.unshift(\n\t\t/:=/\n\t);\n\n}(Prism));\n","!function(E){var A=E.languages.plsql=E.languages.extend(\"sql\",{comment:[/\\/\\*[\\s\\S]*?\\*\\//,/--.*/]}),T=A.keyword;Array.isArray(T)||(T=A.keyword=[T]),T.unshift(/\\b(?:ACCESS|AGENT|AGGREGATE|ARRAY|ARROW|AT|ATTRIBUTE|AUDIT|AUTHID|BFILE_BASE|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BYTE|CALLING|CHAR_BASE|CHARSET(?:FORM|ID)|CLOB_BASE|COLAUTH|COLLECT|CLUSTERS?|COMPILED|COMPRESS|CONSTANT|CONSTRUCTOR|CONTEXT|CRASH|CUSTOMDATUM|DANGLING|DATE_BASE|DEFINE|DETERMINISTIC|DURATION|ELEMENT|EMPTY|EXCEPTIONS?|EXCLUSIVE|EXTERNAL|FINAL|FORALL|FORM|FOUND|GENERAL|HEAP|HIDDEN|IDENTIFIED|IMMEDIATE|INCLUDING|INCREMENT|INDICATOR|INDEXES|INDICES|INFINITE|INITIAL|ISOPEN|INSTANTIABLE|INTERFACE|INVALIDATE|JAVA|LARGE|LEADING|LENGTH|LIBRARY|LIKE[24C]|LIMITED|LONG|LOOP|MAP|MAXEXTENTS|MAXLEN|MEMBER|MINUS|MLSLABEL|MULTISET|NAME|NAN|NATIVE|NEW|NOAUDIT|NOCOMPRESS|NOCOPY|NOTFOUND|NOWAIT|NUMBER(?:_BASE)?|OBJECT|OCI(?:COLL|DATE|DATETIME|DURATION|INTERVAL|LOBLOCATOR|NUMBER|RAW|REF|REFCURSOR|ROWID|STRING|TYPE)|OFFLINE|ONLINE|ONLY|OPAQUE|OPERATOR|ORACLE|ORADATA|ORGANIZATION|ORL(?:ANY|VARY)|OTHERS|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETERS?|PASCAL|PCTFREE|PIPE(?:LINED)?|PRAGMA|PRIOR|PRIVATE|RAISE|RANGE|RAW|RECORD|REF|REFERENCE|REM|REMAINDER|RESULT|RESOURCE|RETURNING|REVERSE|ROW(?:ID|NUM|TYPE)|SAMPLE|SB[124]|SEGMENT|SELF|SEPARATE|SEQUENCE|SHORT|SIZE(?:_T)?|SPARSE|SQL(?:CODE|DATA|NAME|STATE)|STANDARD|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUCCESSFUL|SYNONYM|SYSDATE|TABAUTH|TDO|THE|TIMEZONE_(?:ABBR|HOUR|MINUTE|REGION)|TRAILING|TRANSAC(?:TIONAL)?|TRUSTED|UB[124]|UID|UNDER|UNTRUSTED|VALIDATE|VALIST|VARCHAR2|VARIABLE|VARIANCE|VARRAY|VIEWS|VOID|WHENEVER|WRAPPED|ZONE)\\b/i);var R=A.operator;Array.isArray(R)||(R=A.operator=[R]),R.unshift(/:=/)}(Prism);","(function (Prism) {\n\n\tvar powershell = Prism.languages.powershell = {\n\t\t'comment': [\n\t\t\t{\n\t\t\t\tpattern: /(^|[^`])<#[\\s\\S]*?#>/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(^|[^`])#.*/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'string': [\n\t\t\t{\n\t\t\t\tpattern: /\"(?:`[\\s\\S]|[^`\"])*\"/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'function': {\n\t\t\t\t\t\t// Allow for one level of nesting\n\t\t\t\t\t\tpattern: /(^|[^`])\\$\\((?:\\$\\(.*?\\)|(?!\\$\\()[^\\r\\n)])*\\)/,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t// Populated at end of file\n\t\t\t\t\t\tinside: {}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /'(?:[^']|'')*'/,\n\t\t\t\tgreedy: true\n\t\t\t}\n\t\t],\n\t\t// Matches name spaces as well as casts, attribute decorators. Force starting with letter to avoid matching array indices\n\t\t// Supports two levels of nested brackets (e.g. `[OutputType([System.Collections.Generic.List[int]])]`)\n\t\t'namespace': /\\[[a-z](?:\\[(?:\\[[^\\]]*]|[^\\[\\]])*]|[^\\[\\]])*]/i,\n\t\t'boolean': /\\$(?:true|false)\\b/i,\n\t\t'variable': /\\$\\w+\\b/i,\n\t\t// Cmdlets and aliases. Aliases should come last, otherwise \"write\" gets preferred over \"write-host\" for example\n\t\t// Get-Command | ?{ $_.ModuleName -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n\t\t// Get-Alias | ?{ $_.ReferencedCommand.Module.Name -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n\t\t'function': [\n\t\t\t/\\b(?:Add-(?:Computer|Content|History|Member|PSSnapin|Type)|Checkpoint-Computer|Clear-(?:Content|EventLog|History|Item|ItemProperty|Variable)|Compare-Object|Complete-Transaction|Connect-PSSession|ConvertFrom-(?:Csv|Json|StringData)|Convert-Path|ConvertTo-(?:Csv|Html|Json|Xml)|Copy-(?:Item|ItemProperty)|Debug-Process|Disable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Disconnect-PSSession|Enable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Enter-PSSession|Exit-PSSession|Export-(?:Alias|Clixml|Console|Csv|FormatData|ModuleMember|PSSession)|ForEach-Object|Format-(?:Custom|List|Table|Wide)|Get-(?:Alias|ChildItem|Command|ComputerRestorePoint|Content|ControlPanelItem|Culture|Date|Event|EventLog|EventSubscriber|FormatData|Help|History|Host|HotFix|Item|ItemProperty|Job|Location|Member|Module|Process|PSBreakpoint|PSCallStack|PSDrive|PSProvider|PSSession|PSSessionConfiguration|PSSnapin|Random|Service|TraceSource|Transaction|TypeData|UICulture|Unique|Variable|WmiObject)|Group-Object|Import-(?:Alias|Clixml|Csv|LocalizedData|Module|PSSession)|Invoke-(?:Command|Expression|History|Item|RestMethod|WebRequest|WmiMethod)|Join-Path|Limit-EventLog|Measure-(?:Command|Object)|Move-(?:Item|ItemProperty)|New-(?:Alias|Event|EventLog|Item|ItemProperty|Module|ModuleManifest|Object|PSDrive|PSSession|PSSessionConfigurationFile|PSSessionOption|PSTransportOption|Service|TimeSpan|Variable|WebServiceProxy)|Out-(?:Default|File|GridView|Host|Null|Printer|String)|Pop-Location|Push-Location|Read-Host|Receive-(?:Job|PSSession)|Register-(?:EngineEvent|ObjectEvent|PSSessionConfiguration|WmiEvent)|Remove-(?:Computer|Event|EventLog|Item|ItemProperty|Job|Module|PSBreakpoint|PSDrive|PSSession|PSSnapin|TypeData|Variable|WmiObject)|Rename-(?:Computer|Item|ItemProperty)|Reset-ComputerMachinePassword|Resolve-Path|Restart-(?:Computer|Service)|Restore-Computer|Resume-(?:Job|Service)|Save-Help|Select-(?:Object|String|Xml)|Send-MailMessage|Set-(?:Alias|Content|Date|Item|ItemProperty|Location|PSBreakpoint|PSDebug|PSSessionConfiguration|Service|StrictMode|TraceSource|Variable|WmiInstance)|Show-(?:Command|ControlPanelItem|EventLog)|Sort-Object|Split-Path|Start-(?:Job|Process|Service|Sleep|Transaction)|Stop-(?:Computer|Job|Process|Service)|Suspend-(?:Job|Service)|Tee-Object|Test-(?:ComputerSecureChannel|Connection|ModuleManifest|Path|PSSessionConfigurationFile)|Trace-Command|Unblock-File|Undo-Transaction|Unregister-(?:Event|PSSessionConfiguration)|Update-(?:FormatData|Help|List|TypeData)|Use-Transaction|Wait-(?:Event|Job|Process)|Where-Object|Write-(?:Debug|Error|EventLog|Host|Output|Progress|Verbose|Warning))\\b/i,\n\t\t\t/\\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i\n\t\t],\n\t\t// per http://technet.microsoft.com/en-us/library/hh847744.aspx\n\t\t'keyword': /\\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,\n\t\t'operator': {\n\t\t\tpattern: /(\\W?)(?:!|-(eq|ne|gt|ge|lt|le|sh[lr]|not|b?(?:and|x?or)|(?:Not)?(?:Like|Match|Contains|In)|Replace|Join|is(?:Not)?|as)\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[|{}[\\];(),.]/\n\t};\n\n\t// Variable interpolation inside strings, and nested expressions\n\tvar stringInside = powershell.string[0].inside;\n\tstringInside.boolean = powershell.boolean;\n\tstringInside.variable = powershell.variable;\n\tstringInside.function.inside = powershell;\n\n}(Prism));\n","!function(e){var t=Prism.languages.powershell={comment:[{pattern:/(^|[^`])<#[\\s\\S]*?#>/,lookbehind:!0},{pattern:/(^|[^`])#.*/,lookbehind:!0}],string:[{pattern:/\"(?:`[\\s\\S]|[^`\"])*\"/,greedy:!0,inside:{function:{pattern:/(^|[^`])\\$\\((?:\\$\\(.*?\\)|(?!\\$\\()[^\\r\\n)])*\\)/,lookbehind:!0,inside:{}}}},{pattern:/'(?:[^']|'')*'/,greedy:!0}],namespace:/\\[[a-z](?:\\[(?:\\[[^\\]]*]|[^\\[\\]])*]|[^\\[\\]])*]/i,boolean:/\\$(?:true|false)\\b/i,variable:/\\$\\w+\\b/i,function:[/\\b(?:Add-(?:Computer|Content|History|Member|PSSnapin|Type)|Checkpoint-Computer|Clear-(?:Content|EventLog|History|Item|ItemProperty|Variable)|Compare-Object|Complete-Transaction|Connect-PSSession|ConvertFrom-(?:Csv|Json|StringData)|Convert-Path|ConvertTo-(?:Csv|Html|Json|Xml)|Copy-(?:Item|ItemProperty)|Debug-Process|Disable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Disconnect-PSSession|Enable-(?:ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Enter-PSSession|Exit-PSSession|Export-(?:Alias|Clixml|Console|Csv|FormatData|ModuleMember|PSSession)|ForEach-Object|Format-(?:Custom|List|Table|Wide)|Get-(?:Alias|ChildItem|Command|ComputerRestorePoint|Content|ControlPanelItem|Culture|Date|Event|EventLog|EventSubscriber|FormatData|Help|History|Host|HotFix|Item|ItemProperty|Job|Location|Member|Module|Process|PSBreakpoint|PSCallStack|PSDrive|PSProvider|PSSession|PSSessionConfiguration|PSSnapin|Random|Service|TraceSource|Transaction|TypeData|UICulture|Unique|Variable|WmiObject)|Group-Object|Import-(?:Alias|Clixml|Csv|LocalizedData|Module|PSSession)|Invoke-(?:Command|Expression|History|Item|RestMethod|WebRequest|WmiMethod)|Join-Path|Limit-EventLog|Measure-(?:Command|Object)|Move-(?:Item|ItemProperty)|New-(?:Alias|Event|EventLog|Item|ItemProperty|Module|ModuleManifest|Object|PSDrive|PSSession|PSSessionConfigurationFile|PSSessionOption|PSTransportOption|Service|TimeSpan|Variable|WebServiceProxy)|Out-(?:Default|File|GridView|Host|Null|Printer|String)|Pop-Location|Push-Location|Read-Host|Receive-(?:Job|PSSession)|Register-(?:EngineEvent|ObjectEvent|PSSessionConfiguration|WmiEvent)|Remove-(?:Computer|Event|EventLog|Item|ItemProperty|Job|Module|PSBreakpoint|PSDrive|PSSession|PSSnapin|TypeData|Variable|WmiObject)|Rename-(?:Computer|Item|ItemProperty)|Reset-ComputerMachinePassword|Resolve-Path|Restart-(?:Computer|Service)|Restore-Computer|Resume-(?:Job|Service)|Save-Help|Select-(?:Object|String|Xml)|Send-MailMessage|Set-(?:Alias|Content|Date|Item|ItemProperty|Location|PSBreakpoint|PSDebug|PSSessionConfiguration|Service|StrictMode|TraceSource|Variable|WmiInstance)|Show-(?:Command|ControlPanelItem|EventLog)|Sort-Object|Split-Path|Start-(?:Job|Process|Service|Sleep|Transaction)|Stop-(?:Computer|Job|Process|Service)|Suspend-(?:Job|Service)|Tee-Object|Test-(?:ComputerSecureChannel|Connection|ModuleManifest|Path|PSSessionConfigurationFile)|Trace-Command|Unblock-File|Undo-Transaction|Unregister-(?:Event|PSSessionConfiguration)|Update-(?:FormatData|Help|List|TypeData)|Use-Transaction|Wait-(?:Event|Job|Process)|Where-Object|Write-(?:Debug|Error|EventLog|Host|Output|Progress|Verbose|Warning))\\b/i,/\\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i],keyword:/\\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,operator:{pattern:/(\\W?)(?:!|-(eq|ne|gt|ge|lt|le|sh[lr]|not|b?(?:and|x?or)|(?:Not)?(?:Like|Match|Contains|In)|Replace|Join|is(?:Not)?|as)\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,lookbehind:!0},punctuation:/[|{}[\\];(),.]/},o=t.string[0].inside;o.boolean=t.boolean,o.variable=t.variable,o.function.inside=t}();","Prism.languages.processing = Prism.languages.extend('clike', {\n\t'keyword': /\\b(?:break|catch|case|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n\t'operator': /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n});\nPrism.languages.insertBefore('processing', 'number', {\n\t// Special case: XML is a type\n\t'constant': /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n\t'type': {\n\t\tpattern: /\\b(?:boolean|byte|char|color|double|float|int|XML|[A-Z]\\w*)\\b/,\n\t\talias: 'variable'\n\t}\n});\n\n// Spaces are allowed between function name and parenthesis\nPrism.languages.processing['function'].pattern = /\\w+(?=\\s*\\()/;\n\n// Class-names is not styled by default\nPrism.languages.processing['class-name'].alias = 'variable';","Prism.languages.processing=Prism.languages.extend(\"clike\",{keyword:/\\b(?:break|catch|case|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,operator:/<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/}),Prism.languages.insertBefore(\"processing\",\"number\",{constant:/\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,type:{pattern:/\\b(?:boolean|byte|char|color|double|float|int|XML|[A-Z]\\w*)\\b/,alias:\"variable\"}}),Prism.languages.processing.function.pattern=/\\w+(?=\\s*\\()/,Prism.languages.processing[\"class-name\"].alias=\"variable\";","Prism.languages.prolog = {\n\t// Syntax depends on the implementation\n\t'comment': [\n\t\t/%.+/,\n\t\t/\\/\\*[\\s\\S]*?\\*\\//\n\t],\n\t// Depending on the implementation, strings may allow escaped newlines and quote-escape\n\t'string': {\n\t\tpattern: /([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'builtin': /\\b(?:fx|fy|xf[xy]?|yfx?)\\b/,\n\t'variable': /\\b[A-Z_]\\w*/,\n\t// FIXME: Should we list all null-ary predicates (not followed by a parenthesis) like halt, trace, etc.?\n\t'function': /\\b[a-z]\\w*(?:(?=\\()|\\/\\d+)/,\n\t'number': /\\b\\d+\\.?\\d*/,\n\t// Custom operators are allowed\n\t'operator': /[:\\\\=><\\-?*@\\/;+^|!$.]+|\\b(?:is|mod|not|xor)\\b/,\n\t'punctuation': /[(){}\\[\\],]/\n};","Prism.languages.prolog={comment:[/%.+/,/\\/\\*[\\s\\S]*?\\*\\//],string:{pattern:/([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},builtin:/\\b(?:fx|fy|xf[xy]?|yfx?)\\b/,variable:/\\b[A-Z_]\\w*/,function:/\\b[a-z]\\w*(?:(?=\\()|\\/\\d+)/,number:/\\b\\d+\\.?\\d*/,operator:/[:\\\\=><\\-?*@\\/;+^|!$.]+|\\b(?:is|mod|not|xor)\\b/,punctuation:/[(){}\\[\\],]/};","Prism.languages.properties = {\n\t'comment': /^[ \\t]*[#!].*$/m,\n\t'attr-value': {\n\t\tpattern: /(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?: *[=:] *| ))(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])+/m,\n\t\tlookbehind: true\n\t},\n\t'attr-name': /^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?= *[=:] *| )/m,\n\t'punctuation': /[=:]/\n};","Prism.languages.properties={comment:/^[ \\t]*[#!].*$/m,\"attr-value\":{pattern:/(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?: *[=:] *| ))(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])+/m,lookbehind:!0},\"attr-name\":/^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?= *[=:] *| )/m,punctuation:/[=:]/};","Prism.languages.protobuf = Prism.languages.extend('clike', {\n\tkeyword: /\\b(?:package|import|message|enum)\\b/,\n\tbuiltin: /\\b(?:required|repeated|optional|reserved)\\b/,\n\tprimitive: {\n\t\tpattern: /\\b(?:double|float|int32|int64|uint32|uint64|sint32|sint64|fixed32|fixed64|sfixed32|sfixed64|bool|string|bytes)\\b/,\n\t\talias: 'symbol'\n\t}\n});\n","Prism.languages.protobuf=Prism.languages.extend(\"clike\",{keyword:/\\b(?:package|import|message|enum)\\b/,builtin:/\\b(?:required|repeated|optional|reserved)\\b/,primitive:{pattern:/\\b(?:double|float|int32|int64|uint32|uint64|sint32|sint64|fixed32|fixed64|sfixed32|sfixed64|bool|string|bytes)\\b/,alias:\"symbol\"}});","(function(Prism) {\n\t// TODO:\n\t// - Add CSS highlighting inside <style> tags\n\t// - Add support for multi-line code blocks\n\t// - Add support for interpolation #{} and !{}\n\t// - Add support for tag interpolation #[]\n\t// - Add explicit support for plain text using |\n\t// - Add support for markup embedded in plain text\n\n\tPrism.languages.pug = {\n\n\t\t// Multiline stuff should appear before the rest\n\n\t\t// This handles both single-line and multi-line comments\n\t\t'comment': {\n\t\t\tpattern: /(^([\\t ]*))\\/\\/.*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)*/m,\n\t\t\tlookbehind: true\n\t\t},\n\n\t\t// All the tag-related part is in lookbehind\n\t\t// so that it can be highlighted by the \"tag\" pattern\n\t\t'multiline-script': {\n\t\t\tpattern: /(^([\\t ]*)script\\b.*\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\trest: Prism.languages.javascript\n\t\t\t}\n\t\t},\n\n\t\t// See at the end of the file for known filters\n\t\t'filter': {\n\t\t\tpattern: /(^([\\t ]*)):.+(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'filter-name': {\n\t\t\t\t\tpattern: /^:[\\w-]+/,\n\t\t\t\t\talias: 'variable'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t'multiline-plain-text': {\n\t\t\tpattern: /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'markup': {\n\t\t\tpattern: /(^[\\t ]*)<.+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\trest: Prism.languages.markup\n\t\t\t}\n\t\t},\n\t\t'doctype': {\n\t\t\tpattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\n\t\t\tlookbehind: true\n\t\t},\n\n\t\t// This handle all conditional and loop keywords\n\t\t'flow-control': {\n\t\t\tpattern: /(^[\\t ]*)(?:if|unless|else|case|when|default|each|while)\\b(?: .+)?/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'each': {\n\t\t\t\t\tpattern: /^each .+? in\\b/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'keyword': /\\b(?:each|in)\\b/,\n\t\t\t\t\t\t'punctuation': /,/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'branch': {\n\t\t\t\t\tpattern: /^(?:if|unless|else|case|when|default|while)\\b/,\n\t\t\t\t\talias: 'keyword'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.javascript\n\t\t\t}\n\t\t},\n\t\t'keyword': {\n\t\t\tpattern: /(^[\\t ]*)(?:block|extends|include|append|prepend)\\b.+/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'mixin': [\n\t\t\t// Declaration\n\t\t\t{\n\t\t\t\tpattern: /(^[\\t ]*)mixin .+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^mixin/,\n\t\t\t\t\t'function': /\\w+(?=\\s*\\(|\\s*$)/,\n\t\t\t\t\t'punctuation': /[(),.]/\n\t\t\t\t}\n\t\t\t},\n\t\t\t// Usage\n\t\t\t{\n\t\t\t\tpattern: /(^[\\t ]*)\\+.+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'name': {\n\t\t\t\t\t\tpattern: /^\\+\\w+/,\n\t\t\t\t\t\talias: 'function'\n\t\t\t\t\t},\n\t\t\t\t\t'rest': Prism.languages.javascript\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'script': {\n\t\t\tpattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]+).+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\trest: Prism.languages.javascript\n\t\t\t}\n\t\t},\n\n\t\t'plain-text': {\n\t\t\tpattern: /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]+).+/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'tag': {\n\t\t\tpattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attributes': [\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /&[^(]+\\([^)]+\\)/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /\\([^)]+\\)/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\t\t\tpattern: /(=\\s*)(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\n\t\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'attr-name': /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\n\t\t\t\t\t\t\t'punctuation': /[!=(),]+/\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t'punctuation': /:/\n\t\t\t}\n\t\t},\n\t\t'code': [\n\t\t\t{\n\t\t\t\tpattern: /(^[\\t ]*(?:-|!?=)).+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'punctuation': /[.\\-!=|]+/\n\t};\n\n\tvar filter_pattern = /(^([\\t ]*)):{{filter_name}}(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/.source;\n\n\t// Non exhaustive list of available filters and associated languages\n\tvar filters = [\n\t\t{filter:'atpl',language:'twig'},\n\t\t{filter:'coffee',language:'coffeescript'},\n\t\t'ejs',\n\t\t'handlebars',\n\t\t'less',\n\t\t'livescript',\n\t\t'markdown',\n\t\t{filter:'sass',language:'scss'},\n\t\t'stylus'\n\t];\n\tvar all_filters = {};\n\tfor (var i = 0, l = filters.length; i < l; i++) {\n\t\tvar filter = filters[i];\n\t\tfilter = typeof filter === 'string' ? {filter: filter, language: filter} : filter;\n\t\tif (Prism.languages[filter.language]) {\n\t\t\tall_filters['filter-' + filter.filter] = {\n\t\t\t\tpattern: RegExp(filter_pattern.replace('{{filter_name}}', filter.filter), 'm'),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'filter-name': {\n\t\t\t\t\t\tpattern: /^:[\\w-]+/,\n\t\t\t\t\t\talias: 'variable'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages[filter.language]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tPrism.languages.insertBefore('pug', 'filter', all_filters);\n\n}(Prism));\n","!function(e){e.languages.pug={comment:{pattern:/(^([\\t ]*))\\/\\/.*(?:(?:\\r?\\n|\\r)\\2[\\t ]+.+)*/m,lookbehind:!0},\"multiline-script\":{pattern:/(^([\\t ]*)script\\b.*\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,lookbehind:!0,inside:{rest:e.languages.javascript}},filter:{pattern:/(^([\\t ]*)):.+(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,lookbehind:!0,inside:{\"filter-name\":{pattern:/^:[\\w-]+/,alias:\"variable\"}}},\"multiline-plain-text\":{pattern:/(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,lookbehind:!0},markup:{pattern:/(^[\\t ]*)<.+/m,lookbehind:!0,inside:{rest:e.languages.markup}},doctype:{pattern:/((?:^|\\n)[\\t ]*)doctype(?: .+)?/,lookbehind:!0},\"flow-control\":{pattern:/(^[\\t ]*)(?:if|unless|else|case|when|default|each|while)\\b(?: .+)?/m,lookbehind:!0,inside:{each:{pattern:/^each .+? in\\b/,inside:{keyword:/\\b(?:each|in)\\b/,punctuation:/,/}},branch:{pattern:/^(?:if|unless|else|case|when|default|while)\\b/,alias:\"keyword\"},rest:e.languages.javascript}},keyword:{pattern:/(^[\\t ]*)(?:block|extends|include|append|prepend)\\b.+/m,lookbehind:!0},mixin:[{pattern:/(^[\\t ]*)mixin .+/m,lookbehind:!0,inside:{keyword:/^mixin/,function:/\\w+(?=\\s*\\(|\\s*$)/,punctuation:/[(),.]/}},{pattern:/(^[\\t ]*)\\+.+/m,lookbehind:!0,inside:{name:{pattern:/^\\+\\w+/,alias:\"function\"},rest:e.languages.javascript}}],script:{pattern:/(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]+).+/m,lookbehind:!0,inside:{rest:e.languages.javascript}},\"plain-text\":{pattern:/(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]+).+/m,lookbehind:!0},tag:{pattern:/(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,lookbehind:!0,inside:{attributes:[{pattern:/&[^(]+\\([^)]+\\)/,inside:{rest:e.languages.javascript}},{pattern:/\\([^)]+\\)/,inside:{\"attr-value\":{pattern:/(=\\s*)(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,lookbehind:!0,inside:{rest:e.languages.javascript}},\"attr-name\":/[\\w-]+(?=\\s*!?=|\\s*[,)])/,punctuation:/[!=(),]+/}}],punctuation:/:/}},code:[{pattern:/(^[\\t ]*(?:-|!?=)).+/m,lookbehind:!0,inside:{rest:e.languages.javascript}}],punctuation:/[.\\-!=|]+/};for(var t=[{filter:\"atpl\",language:\"twig\"},{filter:\"coffee\",language:\"coffeescript\"},\"ejs\",\"handlebars\",\"less\",\"livescript\",\"markdown\",{filter:\"sass\",language:\"scss\"},\"stylus\"],n={},a=0,i=t.length;a<i;a++){var r=t[a];r=\"string\"==typeof r?{filter:r,language:r}:r,e.languages[r.language]&&(n[\"filter-\"+r.filter]={pattern:RegExp(\"(^([\\t ]*)):{{filter_name}}(?:(?:\\r?\\n|\\r(?!\\n))(?:\\\\2[\\t ]+.+|\\\\s*?(?=\\r?\\n|\\r)))+\".replace(\"{{filter_name}}\",r.filter),\"m\"),lookbehind:!0,inside:{\"filter-name\":{pattern:/^:[\\w-]+/,alias:\"variable\"},rest:e.languages[r.language]}})}e.languages.insertBefore(\"pug\",\"filter\",n)}(Prism);","(function (Prism) {\n\tPrism.languages.puppet = {\n\t\t'heredoc': [\n\t\t\t// Matches the content of a quoted heredoc string (subject to interpolation)\n\t\t\t{\n\t\t\t\tpattern: /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'string',\n\t\t\t\tinside: {\n\t\t\t\t\t// Matches the end tag\n\t\t\t\t\t'punctuation': /(?=\\S).*\\S(?= *$)/\n\t\t\t\t\t// See interpolation below\n\t\t\t\t}\n\t\t\t},\n\t\t\t// Matches the content of an unquoted heredoc string (no interpolation)\n\t\t\t{\n\t\t\t\tpattern: /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\talias: 'string',\n\t\t\t\tinside: {\n\t\t\t\t\t// Matches the end tag\n\t\t\t\t\t'punctuation': /(?=\\S).*\\S(?= *$)/\n\t\t\t\t}\n\t\t\t},\n\t\t\t// Matches the start tag of heredoc strings\n\t\t\t{\n\t\t\t\tpattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,\n\t\t\t\talias: 'string',\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': {\n\t\t\t\t\t\tpattern: /(\\().+?(?=\\))/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'multiline-comment': {\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\talias: 'comment'\n\t\t},\n\t\t'regex': {\n\t\t\t// Must be prefixed with the keyword \"node\" or a non-word char\n\t\t\tpattern: /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t// Extended regexes must have the x flag. They can contain single-line comments.\n\t\t\t\t'extended-regex': {\n\t\t\t\t\tpattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'comment': /#.*/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'comment': {\n\t\t\tpattern: /(^|[^\\\\])#.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t},\n\t\t'string': {\n\t\t\t// Allow for one nested level of double quotes inside interpolation\n\t\t\tpattern: /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'double-quoted': {\n\t\t\t\t\tpattern: /^\"[\\s\\S]*\"$/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t// See interpolation below\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'variable': {\n\t\t\tpattern: /\\$(?:::)?\\w+(?:::\\w+)*/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /::/\n\t\t\t}\n\t\t},\n\t\t'attr-name': /(?:\\w+|\\*)(?=\\s*=>)/,\n\t\t'function': [\n\t\t\t{\n\t\t\t\tpattern: /(\\.)(?!\\d)\\w+/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t/\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/\n\t\t],\n\t\t'number': /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\n\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t// Includes words reserved for future use\n\t\t'keyword': /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,\n\t\t'datatype': {\n\t\t\tpattern: /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,\n\t\t\talias: 'symbol'\n\t\t},\n\t\t'operator': /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,\n\t\t'punctuation': /[\\[\\]{}().,;]|:+/\n\t};\n\n\tvar interpolation = [\n\t\t{\n\t\t\t// Allow for one nested level of braces inside interpolation\n\t\t\tpattern: /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'short-variable': {\n\t\t\t\t\t// Negative look-ahead prevent wrong highlighting of functions\n\t\t\t\t\tpattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'variable',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /::/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^\\$/,\n\t\t\t\t\talias: 'variable'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.puppet\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'variable',\n\t\t\tinside: {\n\t\t\t\t'punctuation': /::/\n\t\t\t}\n\t\t}\n\t];\n\tPrism.languages.puppet['heredoc'][0].inside.interpolation = interpolation;\n\tPrism.languages.puppet['string'].inside['double-quoted'].inside.interpolation = interpolation;\n}(Prism));","!function(e){e.languages.puppet={heredoc:[{pattern:/(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,lookbehind:!0,alias:\"string\",inside:{punctuation:/(?=\\S).*\\S(?= *$)/}},{pattern:/(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,lookbehind:!0,greedy:!0,alias:\"string\",inside:{punctuation:/(?=\\S).*\\S(?= *$)/}},{pattern:/@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,alias:\"string\",inside:{punctuation:{pattern:/(\\().+?(?=\\))/,lookbehind:!0}}}],\"multiline-comment\":{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,lookbehind:!0,greedy:!0,alias:\"comment\"},regex:{pattern:/((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,lookbehind:!0,greedy:!0,inside:{\"extended-regex\":{pattern:/^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,inside:{comment:/#.*/}}}},comment:{pattern:/(^|[^\\\\])#.*/,lookbehind:!0,greedy:!0},string:{pattern:/([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,greedy:!0,inside:{\"double-quoted\":{pattern:/^\"[\\s\\S]*\"$/,inside:{}}}},variable:{pattern:/\\$(?:::)?\\w+(?:::\\w+)*/,inside:{punctuation:/::/}},\"attr-name\":/(?:\\w+|\\*)(?=\\s*=>)/,function:[{pattern:/(\\.)(?!\\d)\\w+/,lookbehind:!0},/\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/],number:/\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,boolean:/\\b(?:true|false)\\b/,keyword:/\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,datatype:{pattern:/\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,alias:\"symbol\"},operator:/=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,punctuation:/[\\[\\]{}().,;]|:+/};var n=[{pattern:/(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,lookbehind:!0,inside:{\"short-variable\":{pattern:/(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,lookbehind:!0,alias:\"variable\",inside:{punctuation:/::/}},delimiter:{pattern:/^\\$/,alias:\"variable\"},rest:e.languages.puppet}},{pattern:/(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,lookbehind:!0,alias:\"variable\",inside:{punctuation:/::/}}];e.languages.puppet.heredoc[0].inside.interpolation=n,e.languages.puppet.string.inside[\"double-quoted\"].inside.interpolation=n}(Prism);","(function (Prism) {\n\tPrism.languages.pure = {\n\t\t'comment': [\n\t\t\t{\n\t\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t/#!.+/\n\t\t],\n\t\t'inline-lang': {\n\t\t\tpattern: /%<[\\s\\S]+?%>/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'lang': {\n\t\t\t\t\tpattern: /(^%< *)-\\*-.+?-\\*-/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'comment'\n\t\t\t\t},\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^%<.*|%>$/,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'string': {\n\t\t\tpattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'number': {\n\t\t\t// The look-behind prevents wrong highlighting of the .. operator\n\t\t\tpattern: /((?:\\.\\.)?)(?:\\b(?:inf|nan)\\b|\\b0x[\\da-f]+|(?:\\b(?:0b)?\\d+(?:\\.\\d)?|\\B\\.\\d)\\d*(?:e[+-]?\\d+)?L?)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'keyword': /\\b(?:ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|NULL|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\\b/,\n\t\t'function': /\\b(?:abs|add_(?:(?:fundef|interface|macdef|typedef)(?:_at)?|addr|constdef|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_(?:matrix|pointer)|byte_c?string(?:_pointer)?|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|short|sentry|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\\b/,\n\t\t'special': {\n\t\t\tpattern: /\\b__[a-z]+__\\b/i,\n\t\t\talias: 'builtin'\n\t\t},\n\t\t// Any combination of operator chars can be an operator\n\t\t'operator': /(?=\\b_|[^_])[!\"#$%&'*+,\\-.\\/:<=>?@\\\\^_`|~\\u00a1-\\u00bf\\u00d7-\\u00f7\\u20d0-\\u2bff]+|\\b(?:and|div|mod|not|or)\\b/,\n\t\t// FIXME: How can we prevent | and , to be highlighted as operator when they are used alone?\n\t\t'punctuation': /[(){}\\[\\];,|]/\n\t};\n\n\tvar inlineLanguages = [\n\t\t'c',\n\t\t{ lang: 'c++', alias: 'cpp' },\n\t\t'fortran'\n\t];\n\tvar inlineLanguageRe = /%< *-\\*- *{lang}\\d* *-\\*-[\\s\\S]+?%>/.source;\n\n\tinlineLanguages.forEach(function (lang) {\n\t\tvar alias = lang;\n\t\tif (typeof lang !== 'string') {\n\t\t\talias = lang.alias;\n\t\t\tlang = lang.lang;\n\t\t}\n\t\tif (Prism.languages[alias]) {\n\t\t\tvar o = {};\n\t\t\to['inline-lang-' + alias] = {\n\t\t\t\tpattern: RegExp(inlineLanguageRe.replace('{lang}', lang.replace(/([.+*?\\/\\\\(){}\\[\\]])/g,'\\\\$1')), 'i'),\n\t\t\t\tinside: Prism.util.clone(Prism.languages.pure['inline-lang'].inside)\n\t\t\t};\n\t\t\to['inline-lang-' + alias].inside.rest = Prism.util.clone(Prism.languages[alias]);\n\t\t\tPrism.languages.insertBefore('pure', 'inline-lang', o);\n\t\t}\n\t});\n\n\t// C is the default inline language\n\tif (Prism.languages.c) {\n\t\tPrism.languages.pure['inline-lang'].inside.rest = Prism.util.clone(Prism.languages.c);\n\t}\n\n}(Prism));\n","!function(r){r.languages.pure={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,lookbehind:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0},/#!.+/],\"inline-lang\":{pattern:/%<[\\s\\S]+?%>/,greedy:!0,inside:{lang:{pattern:/(^%< *)-\\*-.+?-\\*-/,lookbehind:!0,alias:\"comment\"},delimiter:{pattern:/^%<.*|%>$/,alias:\"punctuation\"}}},string:{pattern:/\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,greedy:!0},number:{pattern:/((?:\\.\\.)?)(?:\\b(?:inf|nan)\\b|\\b0x[\\da-f]+|(?:\\b(?:0b)?\\d+(?:\\.\\d)?|\\B\\.\\d)\\d*(?:e[+-]?\\d+)?L?)/i,lookbehind:!0},keyword:/\\b(?:ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|NULL|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\\b/,function:/\\b(?:abs|add_(?:(?:fundef|interface|macdef|typedef)(?:_at)?|addr|constdef|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_(?:matrix|pointer)|byte_c?string(?:_pointer)?|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|short|sentry|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\\b/,special:{pattern:/\\b__[a-z]+__\\b/i,alias:\"builtin\"},operator:/(?=\\b_|[^_])[!\"#$%&'*+,\\-.\\/:<=>?@\\\\^_`|~\\u00a1-\\u00bf\\u00d7-\\u00f7\\u20d0-\\u2bff]+|\\b(?:and|div|mod|not|or)\\b/,punctuation:/[(){}\\[\\];,|]/};[\"c\",{lang:\"c++\",alias:\"cpp\"},\"fortran\"].forEach(function(e){var t=e;if(\"string\"!=typeof e&&(t=e.alias,e=e.lang),r.languages[t]){var a={};a[\"inline-lang-\"+t]={pattern:RegExp(\"%< *-\\\\*- *{lang}\\\\d* *-\\\\*-[\\\\s\\\\S]+?%>\".replace(\"{lang}\",e.replace(/([.+*?\\/\\\\(){}\\[\\]])/g,\"\\\\$1\")),\"i\"),inside:r.util.clone(r.languages.pure[\"inline-lang\"].inside)},a[\"inline-lang-\"+t].inside.rest=r.util.clone(r.languages[t]),r.languages.insertBefore(\"pure\",\"inline-lang\",a)}}),r.languages.c&&(r.languages.pure[\"inline-lang\"].inside.rest=r.util.clone(r.languages.c))}(Prism);","Prism.languages.python = {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])#.*/,\n\t\tlookbehind: true\n\t},\n\t'string-interpolation': {\n\t\tpattern: /(?:f|rf|fr)(?:(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\t// \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n\t\t\t\tpattern: /((?:^|[^{])(?:{{)*){(?!{)(?:[^{}]|{(?!{)(?:[^{}]|{(?!{)(?:[^{}])+})+})+}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'format-spec': {\n\t\t\t\t\t\tpattern: /(:)[^:(){}]+(?=}$)/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'conversion-option': {\n\t\t\t\t\t\tpattern: /![sra](?=[:}]$)/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: null\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'triple-quoted-string': {\n\t\tpattern: /(?:[rub]|rb|br)?(\"\"\"|''')[\\s\\S]+?\\1/i,\n\t\tgreedy: true,\n\t\talias: 'string'\n\t},\n\t'string': {\n\t\tpattern: /(?:[rub]|rb|br)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n\t\tgreedy: true\n\t},\n\t'function': {\n\t\tpattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n\t\tlookbehind: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\bclass\\s+)\\w+/i,\n\t\tlookbehind: true\n\t},\n\t'decorator': {\n\t\tpattern: /(^\\s*)@\\w+(?:\\.\\w+)*/i,\n\t\tlookbehind: true,\n\t\talias: ['annotation', 'punctuation'],\n\t\tinside: {\n\t\t\t'punctuation': /\\./\n\t\t}\n\t},\n\t'keyword': /\\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n\t'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n\t'boolean': /\\b(?:True|False|None)\\b/,\n\t'number': /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n\t'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\nPrism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\n\nPrism.languages.py = Prism.languages.python;","Prism.languages.python={comment:{pattern:/(^|[^\\\\])#.*/,lookbehind:!0},\"string-interpolation\":{pattern:/(?:f|rf|fr)(?:(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,greedy:!0,inside:{interpolation:{pattern:/((?:^|[^{])(?:{{)*){(?!{)(?:[^{}]|{(?!{)(?:[^{}]|{(?!{)(?:[^{}])+})+})+}/,lookbehind:!0,inside:{\"format-spec\":{pattern:/(:)[^:(){}]+(?=}$)/,lookbehind:!0},\"conversion-option\":{pattern:/![sra](?=[:}]$)/,alias:\"punctuation\"},rest:null}},string:/[\\s\\S]+/}},\"triple-quoted-string\":{pattern:/(?:[rub]|rb|br)?(\"\"\"|''')[\\s\\S]+?\\1/i,greedy:!0,alias:\"string\"},string:{pattern:/(?:[rub]|rb|br)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,greedy:!0},function:{pattern:/((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,lookbehind:!0},\"class-name\":{pattern:/(\\bclass\\s+)\\w+/i,lookbehind:!0},decorator:{pattern:/(^\\s*)@\\w+(?:\\.\\w+)*/i,lookbehind:!0,alias:[\"annotation\",\"punctuation\"],inside:{punctuation:/\\./}},keyword:/\\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,builtin:/\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,boolean:/\\b(?:True|False|None)\\b/,number:/(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,operator:/[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,punctuation:/[{}[\\];(),.:]/},Prism.languages.python[\"string-interpolation\"].inside.interpolation.inside.rest=Prism.languages.python,Prism.languages.py=Prism.languages.python;","Prism.languages.q = {\n\t'string': /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n\t'comment': [\n\t\t// From http://code.kx.com/wiki/Reference/Slash:\n\t\t// When / is following a space (or a right parenthesis, bracket, or brace), it is ignored with the rest of the line.\n\t\t{\n\n\t\t\tpattern: /([\\t )\\]}])\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t// From http://code.kx.com/wiki/Reference/Slash:\n\t\t// A line which has / as its first character and contains at least one other non-whitespace character is a whole-line comment and is ignored entirely.\n\t\t// A / on a line by itself begins a multiline comment which is terminated by the next \\ on a line by itself.\n\t\t// If a / is not matched by a \\, the multiline comment is unterminated and continues to end of file.\n\t\t// The / and \\ must be the first char on the line, but may be followed by any amount of whitespace.\n\t\t{\n\t\t\tpattern: /(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t// From http://code.kx.com/wiki/Reference/Slash:\n\t\t// A \\ on a line by itself with no preceding matching / will comment to end of file.\n\t\t{\n\t\t\tpattern: /^\\\\[\\t ]*(?:\\r?\\n|\\r)[\\s\\S]+/m,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /^#!.+/m,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'symbol': /`(?::\\S+|[\\w.]*)/,\n\t'datetime': {\n\t\tpattern: /0N[mdzuvt]|0W[dtz]|\\d{4}\\.\\d\\d(?:m|\\.\\d\\d(?:T(?:\\d\\d(?::\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?)?)?)?[dz]?)|\\d\\d:\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?[uvt]?/,\n\t\talias: 'number'\n\t},\n\t// The negative look-ahead prevents bad highlighting\n\t// of verbs 0: and 1:\n\t'number': /\\b(?![01]:)(?:0[wn]|0W[hj]?|0N[hje]?|0x[\\da-fA-F]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?[hjfeb]?)/,\n\t'keyword': /\\\\\\w+\\b|\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\b/,\n\t'adverb': {\n\t\tpattern: /['\\/\\\\]:?|\\beach\\b/,\n\t\talias: 'function'\n\t},\n\t'verb': {\n\t\tpattern: /(?:\\B\\.\\B|\\b[01]:|<[=>]?|>=?|[:+\\-*%,!?_~=|$&#@^]):?/,\n\t\talias: 'operator'\n\t},\n\t'punctuation': /[(){}\\[\\];.]/\n};","Prism.languages.q={string:/\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,comment:[{pattern:/([\\t )\\]}])\\/.*/,lookbehind:!0,greedy:!0},{pattern:/(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)/,lookbehind:!0,greedy:!0},{pattern:/^\\\\[\\t ]*(?:\\r?\\n|\\r)[\\s\\S]+/m,greedy:!0},{pattern:/^#!.+/m,greedy:!0}],symbol:/`(?::\\S+|[\\w.]*)/,datetime:{pattern:/0N[mdzuvt]|0W[dtz]|\\d{4}\\.\\d\\d(?:m|\\.\\d\\d(?:T(?:\\d\\d(?::\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?)?)?)?[dz]?)|\\d\\d:\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?[uvt]?/,alias:\"number\"},number:/\\b(?![01]:)(?:0[wn]|0W[hj]?|0N[hje]?|0x[\\da-fA-F]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?[hjfeb]?)/,keyword:/\\\\\\w+\\b|\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\b/,adverb:{pattern:/['\\/\\\\]:?|\\beach\\b/,alias:\"function\"},verb:{pattern:/(?:\\B\\.\\B|\\b[01]:|<[=>]?|>=?|[:+\\-*%,!?_~=|$&#@^]):?/,alias:\"operator\"},punctuation:/[(){}\\[\\];.]/};","Prism.languages.qore = Prism.languages.extend('clike', {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/|#).*)/,\n\t\tlookbehind: true\n\t},\n\t// Overridden to allow unescaped multi-line strings\n\t'string': {\n\t\tpattern: /(\"|')(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n\t\tgreedy: true\n\t},\n\t'variable': /\\$(?!\\d)\\w+\\b/,\n\t'keyword': /\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:int|float|number|bool|string|date|list)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,\n\t'number': /\\b(?:0b[01]+|0x[\\da-f]*\\.?[\\da-fp\\-]+|\\d*\\.?\\d+e?\\d*[df]|\\d*\\.?\\d+)\\b/i,\n\t'boolean': /\\b(?:true|false)\\b/i,\n\t'operator': {\n\t\tpattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,\n\t\tlookbehind: true\n\t},\n\t'function': /\\$?\\b(?!\\d)\\w+(?=\\()/\n});","Prism.languages.qore=Prism.languages.extend(\"clike\",{comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/|#).*)/,lookbehind:!0},string:{pattern:/(\"|')(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,greedy:!0},variable:/\\$(?!\\d)\\w+\\b/,keyword:/\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:int|float|number|bool|string|date|list)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,number:/\\b(?:0b[01]+|0x[\\da-f]*\\.?[\\da-fp\\-]+|\\d*\\.?\\d+e?\\d*[df]|\\d*\\.?\\d+)\\b/i,boolean:/\\b(?:true|false)\\b/i,operator:{pattern:/(^|[^.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,lookbehind:!0},function:/\\$?\\b(?!\\d)\\w+(?=\\()/});","Prism.languages.r = {\n\t'comment': /#.*/,\n\t'string': {\n\t\tpattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'percent-operator': {\n\t\t// Includes user-defined operators\n\t\t// and %%, %*%, %/%, %in%, %o%, %x%\n\t\tpattern: /%[^%\\s]*%/,\n\t\talias: 'operator'\n\t},\n\t'boolean': /\\b(?:TRUE|FALSE)\\b/,\n\t'ellipsis': /\\.\\.(?:\\.|\\d+)/,\n\t'number': [\n\t\t/\\b(?:NaN|Inf)\\b/,\n\t\t/(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/\n\t],\n\t'keyword': /\\b(?:if|else|repeat|while|function|for|in|next|break|NULL|NA|NA_integer_|NA_real_|NA_complex_|NA_character_)\\b/,\n\t'operator': /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n\t'punctuation': /[(){}\\[\\],;]/\n};","Prism.languages.r={comment:/#.*/,string:{pattern:/(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},\"percent-operator\":{pattern:/%[^%\\s]*%/,alias:\"operator\"},boolean:/\\b(?:TRUE|FALSE)\\b/,ellipsis:/\\.\\.(?:\\.|\\d+)/,number:[/\\b(?:NaN|Inf)\\b/,/(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/],keyword:/\\b(?:if|else|repeat|while|function|for|in|next|break|NULL|NA|NA_integer_|NA_real_|NA_complex_|NA_character_)\\b/,operator:/->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,punctuation:/[(){}\\[\\],;]/};","Prism.languages.reason = Prism.languages.extend('clike', {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n\t\tlookbehind: true\n\t},\n\t'string': {\n\t\tpattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n\t\tgreedy: true\n\t},\n\t// 'class-name' must be matched *after* 'constructor' defined below\n\t'class-name': /\\b[A-Z]\\w*/,\n\t'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n\t'operator': /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n});\nPrism.languages.insertBefore('reason', 'class-name', {\n\t'character': {\n\t\tpattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n\t\talias: 'string'\n\t},\n\t'constructor': {\n\t\t// Negative look-ahead prevents from matching things like String.capitalize\n\t\tpattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n\t\talias: 'variable'\n\t},\n\t'label': {\n\t\tpattern: /\\b[a-z]\\w*(?=::)/,\n\t\talias: 'symbol'\n\t}\n});\n\n// We can't match functions property, so let's not even try.\ndelete Prism.languages.reason.function;","Prism.languages.reason=Prism.languages.extend(\"clike\",{comment:{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,lookbehind:!0},string:{pattern:/\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,greedy:!0},\"class-name\":/\\b[A-Z]\\w*/,keyword:/\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,operator:/\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/}),Prism.languages.insertBefore(\"reason\",\"class-name\",{character:{pattern:/'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,alias:\"string\"},constructor:{pattern:/\\b[A-Z]\\w*\\b(?!\\s*\\.)/,alias:\"variable\"},label:{pattern:/\\b[a-z]\\w*(?=::)/,alias:\"symbol\"}}),delete Prism.languages.reason.function;","(function (Prism) {\n\n\tvar specialEscape = {\n\t\tpattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n\t\talias: 'escape'\n\t};\n\tvar escape = /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|c[a-zA-Z]|0[0-7]{0,2}|[123][0-7]{2}|.)/\n\tvar charClass = /\\\\[wsd]|\\.|\\\\p{[^{}]+}/i\n\n\tvar rangeChar = '(?:[^\\\\\\\\-]|' + escape.source + ')';\n\tvar range = RegExp(rangeChar + '-' + rangeChar);\n\n\t// the name of a capturing group\n\tvar groupName = {\n\t\tpattern: /(<|')[^<>']+(?=[>']$)/,\n\t\tlookbehind: true,\n\t\talias: 'variable'\n\t};\n\n\tvar backreference = [\n\t\t/\\\\(?![123][0-7]{2})[1-9]/, // a backreference which is not an octal escape\n\t\t{\n\t\t\tpattern: /\\\\k<[^<>']+>/,\n\t\t\tinside: {\n\t\t\t\t'group-name': groupName\n\t\t\t}\n\t\t}\n\t];\n\n\tPrism.languages.regex = {\n\t\t'charset': {\n\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'charset-negation': {\n\t\t\t\t\tpattern: /(^\\[)\\^/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t},\n\t\t\t\t'charset-punctuation': /^\\[|\\]$/,\n\t\t\t\t'range': {\n\t\t\t\t\tpattern: range,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'escape': escape,\n\t\t\t\t\t\t'range-punctuation': /-/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'special-escape': specialEscape,\n\t\t\t\t'charclass': charClass,\n\t\t\t\t'backreference': backreference,\n\t\t\t\t'escape': escape\n\t\t\t}\n\t\t},\n\t\t'special-escape': specialEscape,\n\t\t'charclass': charClass,\n\t\t'backreference': backreference,\n\t\t'anchor': /[$^]|\\\\[ABbGZz]/,\n\t\t'escape': escape,\n\t\t'group': [\n\t\t\t{\n\t\t\t\t// https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html\n\t\t\t\t// https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs\n\n\t\t\t\t// (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)\n\t\t\t\tpattern: /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n\t\t\t\tinside: {\n\t\t\t\t\t'group-name': groupName\n\t\t\t\t}\n\t\t\t},\n\t\t\t/\\)/\n\t\t],\n\t\t'quantifier': /[+*?]|\\{(?:\\d+,?\\d*)\\}/,\n\t\t'alternation': /\\|/\n\t};\n\n\n\t[\n\t\t'actionscript',\n\t\t'coffescript',\n\t\t'flow',\n\t\t'javascript',\n\t\t'typescript',\n\t\t'vala'\n\t].forEach(function (lang) {\n\t\tvar grammar = Prism.languages[lang];\n\t\tif (grammar) {\n\t\t\tgrammar['regex'].inside = {\n\t\t\t\t'regex-flags': /[a-z]+$/,\n\t\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t\t'language-regex': {\n\t\t\t\t\tpattern: /[\\s\\S]+/,\n\t\t\t\t\tinside: Prism.languages.regex\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t});\n\n}(Prism))\n","!function(n){var e={pattern:/\\\\[\\\\(){}[\\]^$+*?|.]/,alias:\"escape\"},a=/\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|c[a-zA-Z]|0[0-7]{0,2}|[123][0-7]{2}|.)/,r=/\\\\[wsd]|\\.|\\\\p{[^{}]+}/i,i=\"(?:[^\\\\\\\\-]|\"+a.source+\")\",s=RegExp(i+\"-\"+i),t={pattern:/(<|')[^<>']+(?=[>']$)/,lookbehind:!0,alias:\"variable\"},c=[/\\\\(?![123][0-7]{2})[1-9]/,{pattern:/\\\\k<[^<>']+>/,inside:{\"group-name\":t}}];n.languages.regex={charset:{pattern:/((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,lookbehind:!0,inside:{\"charset-negation\":{pattern:/(^\\[)\\^/,lookbehind:!0},\"charset-punctuation\":/^\\[|\\]$/,range:{pattern:s,inside:{escape:a,\"range-punctuation\":/-/}},\"special-escape\":e,charclass:r,backreference:c,escape:a}},\"special-escape\":e,charclass:r,backreference:c,anchor:/[$^]|\\\\[ABbGZz]/,escape:a,group:[{pattern:/\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,inside:{\"group-name\":t}},/\\)/],quantifier:/[+*?]|\\{(?:\\d+,?\\d*)\\}/,alternation:/\\|/},[\"actionscript\",\"coffescript\",\"flow\",\"javascript\",\"typescript\",\"vala\"].forEach(function(e){var a=n.languages[e];a&&(a.regex.inside={\"regex-flags\":/[a-z]+$/,\"regex-delimiter\":/^\\/|\\/$/,\"language-regex\":{pattern:/[\\s\\S]+/,inside:n.languages.regex}})})}(Prism);","Prism.languages.renpy= {\n\t// TODO Write tests.\n\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])#.+/,\n\t\tlookbehind: true\n\t},\n\n\t'string': {\n\t\tpattern: /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2|(?:^#?(?:(?:[0-9a-fA-F]{2}){3}|(?:[0-9a-fA-F]){3})$)/m,\n\t\tgreedy: true\n\t},\n\n\t'function' : /[a-z_]\\w*(?=\\()/i,\n\n\t'property': /\\b(?:insensitive|idle|hover|selected_idle|selected_hover|background|position|alt|xpos|ypos|pos|xanchor|yanchor|anchor|xalign|yalign|align|xcenter|ycenter|xofsset|yoffset|ymaximum|maximum|xmaximum|xminimum|yminimum|minimum|xsize|ysizexysize|xfill|yfill|area|antialias|black_color|bold|caret|color|first_indent|font|size|italic|justify|kerning|language|layout|line_leading|line_overlap_split|line_spacing|min_width|newline_indent|outlines|rest_indent|ruby_style|slow_cps|slow_cps_multiplier|strikethrough|text_align|underline|hyperlink_functions|vertical|hinting|foreground|left_margin|xmargin|top_margin|bottom_margin|ymargin|left_padding|right_padding|xpadding|top_padding|bottom_padding|ypadding|size_group|child|hover_sound|activate_sound|mouse|focus_mask|keyboard_focus|bar_vertical|bar_invert|bar_resizing|left_gutter|right_gutter|top_gutter|bottom_gutter|left_bar|right_bar|top_bar|bottom_bar|thumb|thumb_shadow|thumb_offset|unscrollable|spacing|first_spacing|box_reverse|box_wrap|order_reverse|fit_first|ysize|thumbnail_width|thumbnail_height|help|text_ypos|text_xpos|idle_color|hover_color|selected_idle_color|selected_hover_color|insensitive_color|alpha|insensitive_background|hover_background|zorder|value|width|xadjustment|xanchoraround|xaround|xinitial|xoffset|xzoom|yadjustment|yanchoraround|yaround|yinitial|yzoom|zoom|ground|height|text_style|text_y_fudge|selected_insensitive|has_sound|has_music|has_voice|focus|hovered|image_style|length|minwidth|mousewheel|offset|prefix|radius|range|right_margin|rotate|rotate_pad|developer|screen_width|screen_height|window_title|name|version|windows_icon|default_fullscreen|default_text_cps|default_afm_time|main_menu_music|sample_sound|enter_sound|exit_sound|save_directory|enter_transition|exit_transition|intra_transition|main_game_transition|game_main_transition|end_splash_transition|end_game_transition|after_load_transition|window_show_transition|window_hide_transition|adv_nvl_transition|nvl_adv_transition|enter_yesno_transition|exit_yesno_transition|enter_replay_transition|exit_replay_transition|say_attribute_transition|directory_name|executable_name|include_update|window_icon|modal|google_play_key|google_play_salt|drag_name|drag_handle|draggable|dragged|droppable|dropped|narrator_menu|action|default_afm_enable|version_name|version_tuple|inside|fadeout|fadein|layers|layer_clipping|linear|scrollbars|side_xpos|side_ypos|side_spacing|edgescroll|drag_joined|drag_raise|drop_shadow|drop_shadow_color|subpixel|easein|easeout|time|crop|auto|update|get_installed_packages|can_update|UpdateVersion|Update|overlay_functions|translations|window_left_padding|show_side_image|show_two_window)\\b/,\n\n\t'tag': /\\b(?:label|image|menu|[hv]box|frame|text|imagemap|imagebutton|bar|vbar|screen|textbutton|buttoscreenn|fixed|grid|input|key|mousearea|side|timer|viewport|window|hotspot|hotbar|self|button|drag|draggroup|tag|mm_menu_frame|nvl|block|parallel)\\b|\\$/,\n\n\t'keyword' : /\\b(?:as|assert|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|pass|print|raise|return|try|while|yield|adjustment|alignaround|allow|angle|around|box_layout|cache|changed|child_size|clicked|clipping|corner1|corner2|default|delay|exclude|scope|slow|slow_abortable|slow_done|sound|style_group|substitute|suffix|transform_anchor|transpose|unhovered|config|theme|mm_root|gm_root|rounded_window|build|disabled_text|disabled|widget_selected|widget_text|widget_hover|widget|updater|behind|call|expression|hide|init|jump|onlayer|python|renpy|scene|set|show|transform|play|queue|stop|pause|define|window|repeat|contains|choice|on|function|event|animation|clockwise|counterclockwise|circles|knot|null|None|random|has|add|use|fade|dissolve|style|store|id|voice|center|left|right|less_rounded|music|movie|clear|persistent|ui)\\b/,\n\n\t'boolean' : /\\b(?:[Tt]rue|[Ff]alse)\\b/,\n\n\t'number' : /(?:\\b(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*)|\\B\\.\\d+)(?:e[+-]?\\d+)?j?/i,\n\n\t'operator' : /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not|with|at)\\b/,\n\n\t'punctuation' : /[{}[\\];(),.:]/\n};\n","Prism.languages.renpy={comment:{pattern:/(^|[^\\\\])#.+/,lookbehind:!0},string:{pattern:/(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2|(?:^#?(?:(?:[0-9a-fA-F]{2}){3}|(?:[0-9a-fA-F]){3})$)/m,greedy:!0},function:/[a-z_]\\w*(?=\\()/i,property:/\\b(?:insensitive|idle|hover|selected_idle|selected_hover|background|position|alt|xpos|ypos|pos|xanchor|yanchor|anchor|xalign|yalign|align|xcenter|ycenter|xofsset|yoffset|ymaximum|maximum|xmaximum|xminimum|yminimum|minimum|xsize|ysizexysize|xfill|yfill|area|antialias|black_color|bold|caret|color|first_indent|font|size|italic|justify|kerning|language|layout|line_leading|line_overlap_split|line_spacing|min_width|newline_indent|outlines|rest_indent|ruby_style|slow_cps|slow_cps_multiplier|strikethrough|text_align|underline|hyperlink_functions|vertical|hinting|foreground|left_margin|xmargin|top_margin|bottom_margin|ymargin|left_padding|right_padding|xpadding|top_padding|bottom_padding|ypadding|size_group|child|hover_sound|activate_sound|mouse|focus_mask|keyboard_focus|bar_vertical|bar_invert|bar_resizing|left_gutter|right_gutter|top_gutter|bottom_gutter|left_bar|right_bar|top_bar|bottom_bar|thumb|thumb_shadow|thumb_offset|unscrollable|spacing|first_spacing|box_reverse|box_wrap|order_reverse|fit_first|ysize|thumbnail_width|thumbnail_height|help|text_ypos|text_xpos|idle_color|hover_color|selected_idle_color|selected_hover_color|insensitive_color|alpha|insensitive_background|hover_background|zorder|value|width|xadjustment|xanchoraround|xaround|xinitial|xoffset|xzoom|yadjustment|yanchoraround|yaround|yinitial|yzoom|zoom|ground|height|text_style|text_y_fudge|selected_insensitive|has_sound|has_music|has_voice|focus|hovered|image_style|length|minwidth|mousewheel|offset|prefix|radius|range|right_margin|rotate|rotate_pad|developer|screen_width|screen_height|window_title|name|version|windows_icon|default_fullscreen|default_text_cps|default_afm_time|main_menu_music|sample_sound|enter_sound|exit_sound|save_directory|enter_transition|exit_transition|intra_transition|main_game_transition|game_main_transition|end_splash_transition|end_game_transition|after_load_transition|window_show_transition|window_hide_transition|adv_nvl_transition|nvl_adv_transition|enter_yesno_transition|exit_yesno_transition|enter_replay_transition|exit_replay_transition|say_attribute_transition|directory_name|executable_name|include_update|window_icon|modal|google_play_key|google_play_salt|drag_name|drag_handle|draggable|dragged|droppable|dropped|narrator_menu|action|default_afm_enable|version_name|version_tuple|inside|fadeout|fadein|layers|layer_clipping|linear|scrollbars|side_xpos|side_ypos|side_spacing|edgescroll|drag_joined|drag_raise|drop_shadow|drop_shadow_color|subpixel|easein|easeout|time|crop|auto|update|get_installed_packages|can_update|UpdateVersion|Update|overlay_functions|translations|window_left_padding|show_side_image|show_two_window)\\b/,tag:/\\b(?:label|image|menu|[hv]box|frame|text|imagemap|imagebutton|bar|vbar|screen|textbutton|buttoscreenn|fixed|grid|input|key|mousearea|side|timer|viewport|window|hotspot|hotbar|self|button|drag|draggroup|tag|mm_menu_frame|nvl|block|parallel)\\b|\\$/,keyword:/\\b(?:as|assert|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|pass|print|raise|return|try|while|yield|adjustment|alignaround|allow|angle|around|box_layout|cache|changed|child_size|clicked|clipping|corner1|corner2|default|delay|exclude|scope|slow|slow_abortable|slow_done|sound|style_group|substitute|suffix|transform_anchor|transpose|unhovered|config|theme|mm_root|gm_root|rounded_window|build|disabled_text|disabled|widget_selected|widget_text|widget_hover|widget|updater|behind|call|expression|hide|init|jump|onlayer|python|renpy|scene|set|show|transform|play|queue|stop|pause|define|window|repeat|contains|choice|on|function|event|animation|clockwise|counterclockwise|circles|knot|null|None|random|has|add|use|fade|dissolve|style|store|id|voice|center|left|right|less_rounded|music|movie|clear|persistent|ui)\\b/,boolean:/\\b(?:[Tt]rue|[Ff]alse)\\b/,number:/(?:\\b(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*)|\\B\\.\\d+)(?:e[+-]?\\d+)?j?/i,operator:/[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not|with|at)\\b/,punctuation:/[{}[\\];(),.:]/};","Prism.languages.rest = {\n\t'table': [\n\t\t{\n\t\t\tpattern: /(\\s*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1(?:[+|].+)+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /\\||(?:\\+[=-]+)+\\+/\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\s*)(?:=+ +)+=+(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1(?:=+ +)+=+(?=(?:\\r?\\n|\\r){2}|\\s*$)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /[=-]+/\n\t\t\t}\n\t\t}\n\t],\n\n\t// Directive-like patterns\n\n\t'substitution-def': {\n\t\tpattern: /(^\\s*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'substitution': {\n\t\t\t\tpattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\n\t\t\t\talias: 'attr-value',\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^\\||\\|$/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'directive': {\n\t\t\t\tpattern: /( +)[^:]+::/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'function',\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /::$/\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t'link-target': [\n\t\t{\n\t\t\tpattern: /(^\\s*\\.\\. )\\[[^\\]]+\\]/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^\\[|\\]$/\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /(^\\s*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^_|:$/\n\t\t\t}\n\t\t}\n\t],\n\t'directive': {\n\t\tpattern: /(^\\s*\\.\\. )[^:]+::/m,\n\t\tlookbehind: true,\n\t\talias: 'function',\n\t\tinside: {\n\t\t\t'punctuation': /::$/\n\t\t}\n\t},\n\t'comment': {\n\t\t// The two alternatives try to prevent highlighting of blank comments\n\t\tpattern: /(^\\s*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\n\t\tlookbehind: true\n\t},\n\n\t'title': [\n\t\t// Overlined and underlined\n\t\t{\n\t\t\tpattern: /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n\t\t\t\t'important': /.+/\n\t\t\t}\n\t\t},\n\n\t\t// Underlined only\n\t\t{\n\t\t\tpattern: /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n\t\t\t\t'important': /.+/\n\t\t\t}\n\t\t}\n\t],\n\t'hr': {\n\t\tpattern: /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\n\t\tlookbehind: true,\n\t\talias: 'punctuation'\n\t},\n\t'field': {\n\t\tpattern: /(^\\s*):[^:\\r\\n]+:(?= )/m,\n\t\tlookbehind: true,\n\t\talias: 'attr-name'\n\t},\n\t'command-line-option': {\n\t\tpattern: /(^\\s*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\n\t\tlookbehind: true,\n\t\talias: 'symbol'\n\t},\n\t'literal-block': {\n\t\tpattern: /::(?:\\r?\\n|\\r){2}([ \\t]+).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\n\t\tinside: {\n\t\t\t'literal-block-punctuation': {\n\t\t\t\tpattern: /^::/,\n\t\t\t\talias: 'punctuation'\n\t\t\t}\n\t\t}\n\t},\n\t'quoted-literal-block': {\n\t\tpattern: /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\n\t\tinside: {\n\t\t\t'literal-block-punctuation': {\n\t\t\t\tpattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\n\t\t\t\talias: 'punctuation'\n\t\t\t}\n\t\t}\n\t},\n\t'list-bullet': {\n\t\tpattern: /(^\\s*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\n\t\tlookbehind: true,\n\t\talias: 'punctuation'\n\t},\n\t'doctest-block': {\n\t\tpattern: /(^\\s*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /^>>>/\n\t\t}\n\t},\n\n\t'inline': [\n\t\t{\n\t\t\tpattern: /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s).*?[^\\s]\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'bold': {\n\t\t\t\t\tpattern: /(^\\*\\*).+(?=\\*\\*$)/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'italic': {\n\t\t\t\t\tpattern: /(^\\*).+(?=\\*$)/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'inline-literal': {\n\t\t\t\t\tpattern: /(^``).+(?=``$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'symbol'\n\t\t\t\t},\n\t\t\t\t'role': {\n\t\t\t\t\tpattern: /^:[^:]+:|:[^:]+:$/,\n\t\t\t\t\talias: 'function',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^:|:$/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'interpreted-text': {\n\t\t\t\t\tpattern: /(^`).+(?=`$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'attr-value'\n\t\t\t\t},\n\t\t\t\t'substitution': {\n\t\t\t\t\tpattern: /(^\\|).+(?=\\|$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'attr-value'\n\t\t\t\t},\n\t\t\t\t'punctuation': /\\*\\*?|``?|\\|/\n\t\t\t}\n\t\t}\n\t],\n\n\t'link': [\n\t\t{\n\t\t\tpattern: /\\[[^\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^\\[|\\]_$/\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /(?:\\b[a-z\\d](?:[_.:+]?[a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^_?`|`$|`?_?_$/\n\t\t\t}\n\t\t}\n\t],\n\n\t// Line block start,\n\t// quote attribution,\n\t// explicit markup start,\n\t// and anonymous hyperlink target shortcut (__)\n\t'punctuation': {\n\t\tpattern: /(^\\s*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,\n\t\tlookbehind: true\n\t}\n};","Prism.languages.rest={table:[{pattern:/(\\s*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1(?:[+|].+)+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/,lookbehind:!0,inside:{punctuation:/\\||(?:\\+[=-]+)+\\+/}},{pattern:/(\\s*)(?:=+ +)+=+(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1(?:=+ +)+=+(?=(?:\\r?\\n|\\r){2}|\\s*$)/,lookbehind:!0,inside:{punctuation:/[=-]+/}}],\"substitution-def\":{pattern:/(^\\s*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,lookbehind:!0,inside:{substitution:{pattern:/^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,alias:\"attr-value\",inside:{punctuation:/^\\||\\|$/}},directive:{pattern:/( +)[^:]+::/,lookbehind:!0,alias:\"function\",inside:{punctuation:/::$/}}}},\"link-target\":[{pattern:/(^\\s*\\.\\. )\\[[^\\]]+\\]/m,lookbehind:!0,alias:\"string\",inside:{punctuation:/^\\[|\\]$/}},{pattern:/(^\\s*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,lookbehind:!0,alias:\"string\",inside:{punctuation:/^_|:$/}}],directive:{pattern:/(^\\s*\\.\\. )[^:]+::/m,lookbehind:!0,alias:\"function\",inside:{punctuation:/::$/}},comment:{pattern:/(^\\s*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,lookbehind:!0},title:[{pattern:/^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,inside:{punctuation:/^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,important:/.+/}},{pattern:/(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,lookbehind:!0,inside:{punctuation:/[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,important:/.+/}}],hr:{pattern:/((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,lookbehind:!0,alias:\"punctuation\"},field:{pattern:/(^\\s*):[^:\\r\\n]+:(?= )/m,lookbehind:!0,alias:\"attr-name\"},\"command-line-option\":{pattern:/(^\\s*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,lookbehind:!0,alias:\"symbol\"},\"literal-block\":{pattern:/::(?:\\r?\\n|\\r){2}([ \\t]+).+(?:(?:\\r?\\n|\\r)\\1.+)*/,inside:{\"literal-block-punctuation\":{pattern:/^::/,alias:\"punctuation\"}}},\"quoted-literal-block\":{pattern:/::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,inside:{\"literal-block-punctuation\":{pattern:/^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,alias:\"punctuation\"}}},\"list-bullet\":{pattern:/(^\\s*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,lookbehind:!0,alias:\"punctuation\"},\"doctest-block\":{pattern:/(^\\s*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,lookbehind:!0,inside:{punctuation:/^>>>/}},inline:[{pattern:/(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s).*?[^\\s]\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,lookbehind:!0,inside:{bold:{pattern:/(^\\*\\*).+(?=\\*\\*$)/,lookbehind:!0},italic:{pattern:/(^\\*).+(?=\\*$)/,lookbehind:!0},\"inline-literal\":{pattern:/(^``).+(?=``$)/,lookbehind:!0,alias:\"symbol\"},role:{pattern:/^:[^:]+:|:[^:]+:$/,alias:\"function\",inside:{punctuation:/^:|:$/}},\"interpreted-text\":{pattern:/(^`).+(?=`$)/,lookbehind:!0,alias:\"attr-value\"},substitution:{pattern:/(^\\|).+(?=\\|$)/,lookbehind:!0,alias:\"attr-value\"},punctuation:/\\*\\*?|``?|\\|/}}],link:[{pattern:/\\[[^\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,alias:\"string\",inside:{punctuation:/^\\[|\\]_$/}},{pattern:/(?:\\b[a-z\\d](?:[_.:+]?[a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,alias:\"string\",inside:{punctuation:/^_?`|`$|`?_?_$/}}],punctuation:{pattern:/(^\\s*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,lookbehind:!0}};","Prism.languages.rip = {\n\t'comment': /#.*/,\n\n\t'keyword': /(?:=>|->)|\\b(?:class|if|else|switch|case|return|exit|try|catch|finally|raise)\\b/,\n\n\t'builtin': /@|\\bSystem\\b/,\n\n\t'boolean': /\\b(?:true|false)\\b/,\n\n\t'date': /\\b\\d{4}-\\d{2}-\\d{2}\\b/,\n\t'time': /\\b\\d{2}:\\d{2}:\\d{2}\\b/,\n\t'datetime': /\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\b/,\n\n\t'character': /\\B`[^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]\\b/,\n\n\t'regex': {\n\t\tpattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/(?=\\s*($|[\\r\\n,.;})]))/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\n\t'symbol': /:[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/,\n\t'string': {\n\t\tpattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'number': /[+-]?(?:(?:\\d+\\.\\d+)|(?:\\d+))/,\n\n\t'punctuation': /(?:\\.{2,3})|[`,.:;=\\/\\\\()<>\\[\\]{}]/,\n\n\t'reference': /[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/\n};\n","Prism.languages.rip={comment:/#.*/,keyword:/(?:=>|->)|\\b(?:class|if|else|switch|case|return|exit|try|catch|finally|raise)\\b/,builtin:/@|\\bSystem\\b/,boolean:/\\b(?:true|false)\\b/,date:/\\b\\d{4}-\\d{2}-\\d{2}\\b/,time:/\\b\\d{2}:\\d{2}:\\d{2}\\b/,datetime:/\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\b/,character:/\\B`[^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]\\b/,regex:{pattern:/(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/(?=\\s*($|[\\r\\n,.;})]))/,lookbehind:!0,greedy:!0},symbol:/:[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/,string:{pattern:/(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},number:/[+-]?(?:(?:\\d+\\.\\d+)|(?:\\d+))/,punctuation:/(?:\\.{2,3})|[`,.:;=\\/\\\\()<>\\[\\]{}]/,reference:/[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/};","Prism.languages.roboconf = {\n\t'comment': /#.*/,\n\t'keyword': {\n\t\t'pattern': /(^|\\s)(?:(?:facet|instance of)(?=[ \\t]+[\\w-]+[ \\t]*\\{)|(?:external|import)\\b)/,\n\t\tlookbehind: true\n\t},\n\t'component': {\n\t\tpattern: /[\\w-]+(?=[ \\t]*\\{)/,\n\t\talias: 'variable'\n\t},\n\t'property': /[\\w.-]+(?=[ \\t]*:)/,\n\t'value': {\n\t\tpattern: /(=[ \\t]*)[^,;]+/,\n\t\tlookbehind: true,\n\t\talias: 'attr-value'\n\t},\n\t'optional': {\n\t\tpattern: /\\(optional\\)/,\n\t\talias: 'builtin'\n\t},\n\t'wildcard': {\n\t\tpattern: /(\\.)\\*/,\n\t\tlookbehind: true,\n\t\talias: 'operator'\n\t},\n\t'punctuation': /[{},.;:=]/\n};","Prism.languages.roboconf={comment:/#.*/,keyword:{pattern:/(^|\\s)(?:(?:facet|instance of)(?=[ \\t]+[\\w-]+[ \\t]*\\{)|(?:external|import)\\b)/,lookbehind:!0},component:{pattern:/[\\w-]+(?=[ \\t]*\\{)/,alias:\"variable\"},property:/[\\w.-]+(?=[ \\t]*:)/,value:{pattern:/(=[ \\t]*)[^,;]+/,lookbehind:!0,alias:\"attr-value\"},optional:{pattern:/\\(optional\\)/,alias:\"builtin\"},wildcard:{pattern:/(\\.)\\*/,lookbehind:!0,alias:\"operator\"},punctuation:/[{},.;:=]/};","/**\n * Original by Samuel Flores\n *\n * Adds the following new token classes:\n * \t\tconstant, builtin, variable, symbol, regex\n */\n(function(Prism) {\n\tPrism.languages.ruby = Prism.languages.extend('clike', {\n\t\t'comment': [\n\t\t\t/#.*/,\n\t\t\t{\n\t\t\t\tpattern: /^=begin\\s[\\s\\S]*?^=end/m,\n\t\t\t\tgreedy: true\n\t\t\t}\n\t\t],\n\t\t'keyword': /\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/\n\t});\n\n\tvar interpolation = {\n\t\tpattern: /#\\{[^}]+\\}/,\n\t\tinside: {\n\t\t\t'delimiter': {\n\t\t\t\tpattern: /^#\\{|\\}$/,\n\t\t\t\talias: 'tag'\n\t\t\t},\n\t\t\trest: Prism.languages.ruby\n\t\t}\n\t};\n\n\tdelete Prism.languages.ruby.function;\n\n\tPrism.languages.insertBefore('ruby', 'keyword', {\n\t\t'regex': [\n\t\t\t{\n\t\t\t\tpattern: /%r([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[gim]{0,3}/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation': interpolation\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation': interpolation\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t// Here we need to specifically allow interpolation\n\t\t\t\tpattern: /%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation': interpolation\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation': interpolation\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation': interpolation\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t}\n\t\t],\n\t\t'variable': /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n\t\t'symbol': {\n\t\t\tpattern: /(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'method-definition': {\n\t\t\tpattern: /(\\bdef\\s+)[\\w.]+/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'function': /\\w+$/,\n\t\t\t\trest: Prism.languages.ruby\n\t\t\t}\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('ruby', 'number', {\n\t\t'builtin': /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,\n\t\t'constant': /\\b[A-Z]\\w*(?:[?!]|\\b)/\n\t});\n\n\tPrism.languages.ruby.string = [\n\t\t{\n\t\t\tpattern: /%[qQiIwWxs]?([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'interpolation': interpolation\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'interpolation': interpolation\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t// Here we need to specifically allow interpolation\n\t\t\tpattern: /%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'interpolation': interpolation\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'interpolation': interpolation\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'interpolation': interpolation\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /(\"|')(?:#\\{[^}]+\\}|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'interpolation': interpolation\n\t\t\t}\n\t\t}\n\t];\n\n\tPrism.languages.rb = Prism.languages.ruby;\n}(Prism));\n","!function(e){e.languages.ruby=e.languages.extend(\"clike\",{comment:[/#.*/,{pattern:/^=begin\\s[\\s\\S]*?^=end/m,greedy:!0}],keyword:/\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/});var n={pattern:/#\\{[^}]+\\}/,inside:{delimiter:{pattern:/^#\\{|\\}$/,alias:\"tag\"},rest:e.languages.ruby}};delete e.languages.ruby.function,e.languages.insertBefore(\"ruby\",\"keyword\",{regex:[{pattern:/%r([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[gim]{0,3}/,greedy:!0,inside:{interpolation:n}},{pattern:/%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,greedy:!0,inside:{interpolation:n}},{pattern:/%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,greedy:!0,inside:{interpolation:n}},{pattern:/%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,greedy:!0,inside:{interpolation:n}},{pattern:/%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,greedy:!0,inside:{interpolation:n}},{pattern:/(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,lookbehind:!0,greedy:!0}],variable:/[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,symbol:{pattern:/(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,lookbehind:!0},\"method-definition\":{pattern:/(\\bdef\\s+)[\\w.]+/,lookbehind:!0,inside:{function:/\\w+$/,rest:e.languages.ruby}}}),e.languages.insertBefore(\"ruby\",\"number\",{builtin:/\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,constant:/\\b[A-Z]\\w*(?:[?!]|\\b)/}),e.languages.ruby.string=[{pattern:/%[qQiIwWxs]?([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,greedy:!0,inside:{interpolation:n}},{pattern:/%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,greedy:!0,inside:{interpolation:n}},{pattern:/%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,greedy:!0,inside:{interpolation:n}},{pattern:/%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,greedy:!0,inside:{interpolation:n}},{pattern:/%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,greedy:!0,inside:{interpolation:n}},{pattern:/(\"|')(?:#\\{[^}]+\\}|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0,inside:{interpolation:n}}],e.languages.rb=e.languages.ruby}(Prism);","/* TODO\n\tAdd support for Markdown notation inside doc comments\n\tAdd support for nested block comments...\n\tMatch closure params even when not followed by dash or brace\n\tAdd better support for macro definition\n*/\n\nPrism.languages.rust = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'string': [\n\t\t{\n\t\t\tpattern: /b?r(#*)\"(?:\\\\.|(?!\"\\1)[^\\\\\\r\\n])*\"\\1/,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /b?\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'char': {\n\t\tpattern: /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u{(?:[\\da-fA-F]_*){1,6}|.)|[^\\\\\\r\\n\\t'])'/,\n\t\talias: 'string'\n\t},\n\t'lifetime-annotation': {\n\t\tpattern: /'[^\\s>']+/,\n\t\talias: 'symbol'\n\t},\n\t'keyword': /\\b(?:abstract|alignof|as|be|box|break|const|continue|crate|do|dyn|else|enum|extern|false|final|fn|for|if|impl|in|let|loop|match|mod|move|mut|offsetof|once|override|priv|pub|pure|ref|return|sizeof|static|self|Self|struct|super|true|trait|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/,\n\n\t'attribute': {\n\t\tpattern: /#!?\\[.+?\\]/,\n\t\tgreedy: true,\n\t\talias: 'attr-name'\n\t},\n\n\t'function': [\n\t\t/\\w+(?=\\s*\\()/,\n\t\t// Macros can use parens or brackets\n\t\t/\\w+!(?=\\s*\\(|\\[)/\n\t],\n\t'macro-rules': {\n\t\tpattern: /\\w+!/,\n\t\talias: 'function'\n\t},\n\n\t// Hex, oct, bin, dec numbers with visual separators and type suffix\n\t'number': /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:[iu](?:8|16|32|64)?|f32|f64))?\\b/,\n\n\t// Closure params should not be confused with bitwise OR |\n\t'closure-params': {\n\t\tpattern: /\\|[^|]*\\|(?=\\s*[{-])/,\n\t\tinside: {\n\t\t\t'punctuation': /[|:,]/,\n\t\t\t'operator': /[&*]/\n\t\t}\n\t},\n\t'punctuation': /[{}[\\];(),:]|\\.+|->/,\n\t'operator': /[-+*\\/%!^]=?|=[=>]?|@|&[&=]?|\\|[|=]?|<<?=?|>>?=?/\n};","Prism.languages.rust={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,lookbehind:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0}],string:[{pattern:/b?r(#*)\"(?:\\\\.|(?!\"\\1)[^\\\\\\r\\n])*\"\\1/,greedy:!0},{pattern:/b?\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,greedy:!0}],char:{pattern:/b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u{(?:[\\da-fA-F]_*){1,6}|.)|[^\\\\\\r\\n\\t'])'/,alias:\"string\"},\"lifetime-annotation\":{pattern:/'[^\\s>']+/,alias:\"symbol\"},keyword:/\\b(?:abstract|alignof|as|be|box|break|const|continue|crate|do|dyn|else|enum|extern|false|final|fn|for|if|impl|in|let|loop|match|mod|move|mut|offsetof|once|override|priv|pub|pure|ref|return|sizeof|static|self|Self|struct|super|true|trait|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/,attribute:{pattern:/#!?\\[.+?\\]/,greedy:!0,alias:\"attr-name\"},function:[/\\w+(?=\\s*\\()/,/\\w+!(?=\\s*\\(|\\[)/],\"macro-rules\":{pattern:/\\w+!/,alias:\"function\"},number:/\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:[iu](?:8|16|32|64)?|f32|f64))?\\b/,\"closure-params\":{pattern:/\\|[^|]*\\|(?=\\s*[{-])/,inside:{punctuation:/[|:,]/,operator:/[&*]/}},punctuation:/[{}[\\];(),:]|\\.+|->/,operator:/[-+*\\/%!^]=?|=[=>]?|@|&[&=]?|\\|[|=]?|<<?=?|>>?=?/};","Prism.languages.sas = {\n\t'datalines': {\n\t\tpattern: /^\\s*(?:(?:data)?lines|cards);[\\s\\S]+?(?:\\r?\\n|\\r);/im,\n\t\talias: 'string',\n\t\tinside: {\n\t\t\t'keyword': {\n\t\t\t\tpattern: /^(\\s*)(?:(?:data)?lines|cards)/i,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'punctuation': /;/\n\t\t}\n\t},\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^\\s*|;\\s*)\\*.*;/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t/\\/\\*[\\s\\S]+?\\*\\//\n\t],\n\t'datetime': {\n\t\t// '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt\n\t\tpattern: /'[^']+'(?:dt?|t)\\b/i,\n\t\talias: 'number'\n\t},\n\t'string': {\n\t\tpattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n\t\tgreedy: true\n\t},\n\t'keyword': /\\b(?:data|else|format|if|input|proc\\s\\w+|quit|run|then|libname|set|output|options)\\b/i,\n\t// Decimal (1.2e23), hexadecimal (0c1x)\n\t'number': /\\b(?:[\\da-f]+x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)/i,\n\t'operator': /\\*\\*?|\\|\\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\\/=&]|[~¬^]=?|\\b(?:eq|ne|gt|lt|ge|le|in|not)\\b/i,\n\t'punctuation': /[$%@.(){}\\[\\];,\\\\]/\n};\n","Prism.languages.sas={datalines:{pattern:/^\\s*(?:(?:data)?lines|cards);[\\s\\S]+?(?:\\r?\\n|\\r);/im,alias:\"string\",inside:{keyword:{pattern:/^(\\s*)(?:(?:data)?lines|cards)/i,lookbehind:!0},punctuation:/;/}},comment:[{pattern:/(^\\s*|;\\s*)\\*.*;/m,lookbehind:!0},/\\/\\*[\\s\\S]+?\\*\\//],datetime:{pattern:/'[^']+'(?:dt?|t)\\b/i,alias:\"number\"},string:{pattern:/([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,greedy:!0},keyword:/\\b(?:data|else|format|if|input|proc\\s\\w+|quit|run|then|libname|set|output|options)\\b/i,number:/\\b(?:[\\da-f]+x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)/i,operator:/\\*\\*?|\\|\\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\\/=&]|[~¬^]=?|\\b(?:eq|ne|gt|lt|ge|le|in|not)\\b/i,punctuation:/[$%@.(){}\\[\\];,\\\\]/};","(function(Prism) {\n\tPrism.languages.sass = Prism.languages.extend('css', {\n\t\t// Sass comments don't need to be closed, only indented\n\t\t'comment': {\n\t\t\tpattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t]+.+)*/m,\n\t\t\tlookbehind: true\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('sass', 'atrule', {\n\t\t// We want to consume the whole line\n\t\t'atrule-line': {\n\t\t\t// Includes support for = and + shortcuts\n\t\t\tpattern: /^(?:[ \\t]*)[@+=].+/m,\n\t\t\tinside: {\n\t\t\t\t'atrule': /(?:@[\\w-]+|[+=])/m\n\t\t\t}\n\t\t}\n\t});\n\tdelete Prism.languages.sass.atrule;\n\n\n\tvar variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n\tvar operator = [\n\t\t/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/,\n\t\t{\n\t\t\tpattern: /(\\s+)-(?=\\s)/,\n\t\t\tlookbehind: true\n\t\t}\n\t];\n\n\tPrism.languages.insertBefore('sass', 'property', {\n\t\t// We want to consume the whole line\n\t\t'variable-line': {\n\t\t\tpattern: /^[ \\t]*\\$.+/m,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /:/,\n\t\t\t\t'variable': variable,\n\t\t\t\t'operator': operator\n\t\t\t}\n\t\t},\n\t\t// We want to consume the whole line\n\t\t'property-line': {\n\t\t\tpattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s]+.*)/m,\n\t\t\tinside: {\n\t\t\t\t'property': [\n\t\t\t\t\t/[^:\\s]+(?=\\s*:)/,\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /(:)[^:\\s]+/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t'punctuation': /:/,\n\t\t\t\t'variable': variable,\n\t\t\t\t'operator': operator,\n\t\t\t\t'important': Prism.languages.sass.important\n\t\t\t}\n\t\t}\n\t});\n\tdelete Prism.languages.sass.property;\n\tdelete Prism.languages.sass.important;\n\n\t// Now that whole lines for other patterns are consumed,\n\t// what's left should be selectors\n\tPrism.languages.insertBefore('sass', 'punctuation', {\n\t\t'selector': {\n\t\t\tpattern: /([ \\t]*)\\S(?:,?[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,?[^,\\r\\n]+)*)*/,\n\t\t\tlookbehind: true\n\t\t}\n\t});\n\n}(Prism));","!function(e){e.languages.sass=e.languages.extend(\"css\",{comment:{pattern:/^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t]+.+)*/m,lookbehind:!0}}),e.languages.insertBefore(\"sass\",\"atrule\",{\"atrule-line\":{pattern:/^(?:[ \\t]*)[@+=].+/m,inside:{atrule:/(?:@[\\w-]+|[+=])/m}}}),delete e.languages.sass.atrule;var t=/\\$[-\\w]+|#\\{\\$[-\\w]+\\}/,a=[/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/,{pattern:/(\\s+)-(?=\\s)/,lookbehind:!0}];e.languages.insertBefore(\"sass\",\"property\",{\"variable-line\":{pattern:/^[ \\t]*\\$.+/m,inside:{punctuation:/:/,variable:t,operator:a}},\"property-line\":{pattern:/^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s]+.*)/m,inside:{property:[/[^:\\s]+(?=\\s*:)/,{pattern:/(:)[^:\\s]+/,lookbehind:!0}],punctuation:/:/,variable:t,operator:a,important:e.languages.sass.important}}}),delete e.languages.sass.property,delete e.languages.sass.important,e.languages.insertBefore(\"sass\",\"punctuation\",{selector:{pattern:/([ \\t]*)\\S(?:,?[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,?[^,\\r\\n]+)*)*/,lookbehind:!0}})}(Prism);","Prism.languages.scala = Prism.languages.extend('java', {\n\t'keyword': /<-|=>|\\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\\b/,\n\t'string': [\n\t\t{\n\t\t\tpattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'builtin': /\\b(?:String|Int|Long|Short|Byte|Boolean|Double|Float|Char|Any|AnyRef|AnyVal|Unit|Nothing)\\b/,\n\t'number': /\\b0x[\\da-f]*\\.?[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\n\t'symbol': /'[^\\d\\s\\\\]\\w*/\n});\ndelete Prism.languages.scala['class-name'];\ndelete Prism.languages.scala['function'];\n","Prism.languages.scala=Prism.languages.extend(\"java\",{keyword:/<-|=>|\\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\\b/,string:[{pattern:/\"\"\"[\\s\\S]*?\"\"\"/,greedy:!0},{pattern:/(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0}],builtin:/\\b(?:String|Int|Long|Short|Byte|Boolean|Double|Float|Char|Any|AnyRef|AnyVal|Unit|Nothing)\\b/,number:/\\b0x[\\da-f]*\\.?[\\da-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,symbol:/'[^\\d\\s\\\\]\\w*/}),delete Prism.languages.scala[\"class-name\"],delete Prism.languages.scala.function;","Prism.languages.scheme = {\n\t'comment': /;.*/,\n\t'string': {\n\t\tpattern: /\"(?:[^\"\\\\]|\\\\.)*\"|'[^()#'\\s]+/,\n\t\tgreedy: true\n\t},\n\t'character': {\n\t\tpattern: /#\\\\(?:[ux][a-fA-F\\d]+|[a-zA-Z]+|\\S)/,\n\t\talias: 'string'\n\t},\n\t'keyword': {\n\t\tpattern: /(\\()(?:define(?:-syntax|-library|-values)?|(?:case-)?lambda|let(?:\\*|rec)?(?:-values)?|else|if|cond|begin|delay(?:-force)?|parameterize|guard|set!|(?:quasi-)?quote|syntax-rules)(?=[()\\s])/,\n\t\tlookbehind: true\n\t},\n\t'builtin': {\n\t\tpattern: /(\\()(?:(?:cons|car|cdr|list|call-with-current-continuation|call\\/cc|append|abs|apply|eval)\\b|null\\?|pair\\?|boolean\\?|eof-object\\?|char\\?|procedure\\?|number\\?|port\\?|string\\?|vector\\?|symbol\\?|bytevector\\?)(?=[()\\s])/,\n\t\tlookbehind: true\n\t},\n\t'number': {\n\t\tpattern: /([\\s()])[-+]?\\d*\\.?\\d+(?:\\s*[-+]\\s*\\d*\\.?\\d+i)?\\b/,\n\t\tlookbehind: true\n\t},\n\t'boolean': /#[tf]/,\n\t'operator': {\n\t\tpattern: /(\\()(?:[-+*%\\/]|[<>]=?|=>?)(?=\\s|$)/,\n\t\tlookbehind: true\n\t},\n\t'function': {\n\t\tpattern: /(\\()[^()'\\s]+(?=[()\\s)]|$)/,\n\t\tlookbehind: true\n\t},\n\t'punctuation': /[()']/\n};\n","Prism.languages.scheme={comment:/;.*/,string:{pattern:/\"(?:[^\"\\\\]|\\\\.)*\"|'[^()#'\\s]+/,greedy:!0},character:{pattern:/#\\\\(?:[ux][a-fA-F\\d]+|[a-zA-Z]+|\\S)/,alias:\"string\"},keyword:{pattern:/(\\()(?:define(?:-syntax|-library|-values)?|(?:case-)?lambda|let(?:\\*|rec)?(?:-values)?|else|if|cond|begin|delay(?:-force)?|parameterize|guard|set!|(?:quasi-)?quote|syntax-rules)(?=[()\\s])/,lookbehind:!0},builtin:{pattern:/(\\()(?:(?:cons|car|cdr|list|call-with-current-continuation|call\\/cc|append|abs|apply|eval)\\b|null\\?|pair\\?|boolean\\?|eof-object\\?|char\\?|procedure\\?|number\\?|port\\?|string\\?|vector\\?|symbol\\?|bytevector\\?)(?=[()\\s])/,lookbehind:!0},number:{pattern:/([\\s()])[-+]?\\d*\\.?\\d+(?:\\s*[-+]\\s*\\d*\\.?\\d+i)?\\b/,lookbehind:!0},boolean:/#[tf]/,operator:{pattern:/(\\()(?:[-+*%\\/]|[<>]=?|=>?)(?=\\s|$)/,lookbehind:!0},function:{pattern:/(\\()[^()'\\s]+(?=[()\\s)]|$)/,lookbehind:!0},punctuation:/[()']/};","Prism.languages.scss = Prism.languages.extend('css', {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n\t\tlookbehind: true\n\t},\n\t'atrule': {\n\t\tpattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n\t\tinside: {\n\t\t\t'rule': /@[\\w-]+/\n\t\t\t// See rest below\n\t\t}\n\t},\n\t// url, compassified\n\t'url': /(?:[-a-z]+-)*url(?=\\()/i,\n\t// CSS selector regex is not appropriate for Sass\n\t// since there can be lot more things (var, @ directive, nesting..)\n\t// a selector must start at the end of a property or after a brace (end of other rules or nesting)\n\t// it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n\t// the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n\t// can \"pass\" as a selector- e.g: proper#{$erty})\n\t// this one was hard to do, so please be careful if you edit this one :)\n\t'selector': {\n\t\t// Initial look-ahead is used to prevent matching of blank selectors\n\t\tpattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()]|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,\n\t\tinside: {\n\t\t\t'parent': {\n\t\t\t\tpattern: /&/,\n\t\t\t\talias: 'important'\n\t\t\t},\n\t\t\t'placeholder': /%[-\\w]+/,\n\t\t\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n\t\t}\n\t},\n\t'property': {\n\t\tpattern: /(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n\t\tinside: {\n\t\t\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n\t\t}\n\t}\n});\n\nPrism.languages.insertBefore('scss', 'atrule', {\n\t'keyword': [\n\t\t/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i,\n\t\t{\n\t\t\tpattern: /( +)(?:from|through)(?= )/,\n\t\t\tlookbehind: true\n\t\t}\n\t]\n});\n\nPrism.languages.insertBefore('scss', 'important', {\n\t// var and interpolated vars\n\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\n\nPrism.languages.insertBefore('scss', 'function', {\n\t'placeholder': {\n\t\tpattern: /%[-\\w]+/,\n\t\talias: 'selector'\n\t},\n\t'statement': {\n\t\tpattern: /\\B!(?:default|optional)\\b/i,\n\t\talias: 'keyword'\n\t},\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'null': {\n\t\tpattern: /\\bnull\\b/,\n\t\talias: 'keyword'\n\t},\n\t'operator': {\n\t\tpattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n\t\tlookbehind: true\n\t}\n});\n\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\n","Prism.languages.scss=Prism.languages.extend(\"css\",{comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,lookbehind:!0},atrule:{pattern:/@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,inside:{rule:/@[\\w-]+/}},url:/(?:[-a-z]+-)*url(?=\\()/i,selector:{pattern:/(?=\\S)[^@;{}()]?(?:[^@;{}()]|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,inside:{parent:{pattern:/&/,alias:\"important\"},placeholder:/%[-\\w]+/,variable:/\\$[-\\w]+|#\\{\\$[-\\w]+\\}/}},property:{pattern:/(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,inside:{variable:/\\$[-\\w]+|#\\{\\$[-\\w]+\\}/}}}),Prism.languages.insertBefore(\"scss\",\"atrule\",{keyword:[/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i,{pattern:/( +)(?:from|through)(?= )/,lookbehind:!0}]}),Prism.languages.insertBefore(\"scss\",\"important\",{variable:/\\$[-\\w]+|#\\{\\$[-\\w]+\\}/}),Prism.languages.insertBefore(\"scss\",\"function\",{placeholder:{pattern:/%[-\\w]+/,alias:\"selector\"},statement:{pattern:/\\B!(?:default|optional)\\b/i,alias:\"keyword\"},boolean:/\\b(?:true|false)\\b/,null:{pattern:/\\bnull\\b/,alias:\"keyword\"},operator:{pattern:/(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,lookbehind:!0}}),Prism.languages.scss.atrule.inside.rest=Prism.languages.scss;","Prism.languages.smalltalk = {\n\t'comment': /\"(?:\"\"|[^\"])*\"/,\n\t'string': /'(?:''|[^'])*'/,\n\t'symbol': /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\n\t'block-arguments': {\n\t\tpattern: /(\\[\\s*):[^\\[|]*\\|/,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'variable': /:[\\da-z]+/i,\n\t\t\t'punctuation': /\\|/\n\t\t}\n\t},\n\t'temporary-variables': {\n\t\tpattern: /\\|[^|]+\\|/,\n\t\tinside: {\n\t\t\t'variable': /[\\da-z]+/i,\n\t\t\t'punctuation': /\\|/\n\t\t}\n\t},\n\t'keyword': /\\b(?:nil|true|false|self|super|new)\\b/,\n\t'character': {\n\t\tpattern: /\\$./,\n\t\talias: 'string'\n\t},\n\t'number': [\n\t\t/\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/,\n\t\t/\\b\\d+(?:\\.\\d+)?(?:e-?\\d+)?/\n\t],\n\t'operator': /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,\n\t'punctuation': /[.;:?\\[\\](){}]/\n};\n","Prism.languages.smalltalk={comment:/\"(?:\"\"|[^\"])*\"/,string:/'(?:''|[^'])*'/,symbol:/#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\"block-arguments\":{pattern:/(\\[\\s*):[^\\[|]*\\|/,lookbehind:!0,inside:{variable:/:[\\da-z]+/i,punctuation:/\\|/}},\"temporary-variables\":{pattern:/\\|[^|]+\\|/,inside:{variable:/[\\da-z]+/i,punctuation:/\\|/}},keyword:/\\b(?:nil|true|false|self|super|new)\\b/,character:{pattern:/\\$./,alias:\"string\"},number:[/\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/,/\\b\\d+(?:\\.\\d+)?(?:e-?\\d+)?/],operator:/[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,punctuation:/[.;:?\\[\\](){}]/};","/* TODO\n\tAdd support for variables inside double quoted strings\n\tAdd support for {php}\n*/\n\n(function(Prism) {\n\n\tPrism.languages.smarty = {\n\t\t'comment': /\\{\\*[\\s\\S]*?\\*\\}/,\n\t\t'delimiter': {\n\t\t\tpattern: /^\\{|\\}$/i,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t'number': /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n\t\t'variable': [\n\t\t\t/\\$(?!\\d)\\w+/,\n\t\t\t/#(?!\\d)\\w+#/,\n\t\t\t{\n\t\t\t\tpattern: /(\\.|->)(?!\\d)\\w+/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'function': [\n\t\t\t{\n\t\t\t\tpattern: /(\\|\\s*)@?(?!\\d)\\w+/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t/^\\/?(?!\\d)\\w+/,\n\t\t\t/(?!\\d)\\w+(?=\\()/\n\t\t],\n\t\t'attr-name': {\n\t\t\t// Value is made optional because it may have already been tokenized\n\t\t\tpattern: /\\w+\\s*=\\s*(?:(?!\\d)\\w+)?/,\n\t\t\tinside: {\n\t\t\t\t\"variable\": {\n\t\t\t\t\tpattern: /(=\\s*)(?!\\d)\\w+/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t\"operator\": /=/\n\t\t\t}\n\t\t},\n\t\t'punctuation': [\n\t\t\t/[\\[\\]().,:`]|->/\n\t\t],\n\t\t'operator': [\n\t\t\t/[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/,\n\t\t\t/\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/,\n\t\t\t/\\b(?:eq|neq?|gt|lt|gt?e|lt?e|not|mod|or|and)\\b/\n\t\t],\n\t\t'keyword': /\\b(?:false|off|on|no|true|yes)\\b/\n\t};\n\n\t// Tokenize all inline Smarty expressions\n\tPrism.hooks.add('before-tokenize', function(env) {\n\t\tvar smartyPattern = /\\{\\*[\\s\\S]*?\\*\\}|\\{[\\s\\S]+?\\}/g;\n\t\tvar smartyLitteralStart = '{literal}';\n\t\tvar smartyLitteralEnd = '{/literal}';\n\t\tvar smartyLitteralMode = false;\n\n\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'smarty', smartyPattern, function (match) {\n\t\t\t// Smarty tags inside {literal} block are ignored\n\t\t\tif(match === smartyLitteralEnd) {\n\t\t\t\tsmartyLitteralMode = false;\n\t\t\t}\n\n\t\t\tif(!smartyLitteralMode) {\n\t\t\t\tif(match === smartyLitteralStart) {\n\t\t\t\t\tsmartyLitteralMode = true;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t});\n\n\t// Re-insert the tokens after tokenizing\n\tPrism.hooks.add('after-tokenize', function(env) {\n\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'smarty');\n\t});\n\n}(Prism));","!function(n){n.languages.smarty={comment:/\\{\\*[\\s\\S]*?\\*\\}/,delimiter:{pattern:/^\\{|\\}$/i,alias:\"punctuation\"},string:/([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,number:/\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,variable:[/\\$(?!\\d)\\w+/,/#(?!\\d)\\w+#/,{pattern:/(\\.|->)(?!\\d)\\w+/,lookbehind:!0},{pattern:/(\\[)(?!\\d)\\w+(?=\\])/,lookbehind:!0}],function:[{pattern:/(\\|\\s*)@?(?!\\d)\\w+/,lookbehind:!0},/^\\/?(?!\\d)\\w+/,/(?!\\d)\\w+(?=\\()/],\"attr-name\":{pattern:/\\w+\\s*=\\s*(?:(?!\\d)\\w+)?/,inside:{variable:{pattern:/(=\\s*)(?!\\d)\\w+/,lookbehind:!0},operator:/=/}},punctuation:[/[\\[\\]().,:`]|->/],operator:[/[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/,/\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/,/\\b(?:eq|neq?|gt|lt|gt?e|lt?e|not|mod|or|and)\\b/],keyword:/\\b(?:false|off|on|no|true|yes)\\b/},n.hooks.add(\"before-tokenize\",function(e){var t=!1;n.languages[\"markup-templating\"].buildPlaceholders(e,\"smarty\",/\\{\\*[\\s\\S]*?\\*\\}|\\{[\\s\\S]+?\\}/g,function(e){return\"{/literal}\"===e&&(t=!1),!t&&(\"{literal}\"===e&&(t=!0),!0)})}),n.hooks.add(\"after-tokenize\",function(e){n.languages[\"markup-templating\"].tokenizePlaceholders(e,\"smarty\")})}(Prism);","(function (Prism) {\n\tvar stringPattern = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n\tvar numberPattern = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/;\n\n\tPrism.languages.soy = {\n\t\t'comment': [\n\t\t\t/\\/\\*[\\s\\S]*?\\*\\//,\n\t\t\t{\n\t\t\t\tpattern: /(\\s)\\/\\/.*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t}\n\t\t],\n\t\t'command-arg': {\n\t\t\tpattern: /({+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\t'punctuation': /\\./\n\t\t\t}\n\t\t},\n\t\t'parameter': {\n\t\t\tpattern: /({+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'variable'\n\t\t},\n\t\t'keyword': [\n\t\t\t{\n\t\t\t\tpattern: /({+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t/\\b(?:any|as|attributes|bool|css|float|in|int|js|html|list|map|null|number|string|uri)\\b/\n\t\t],\n\t\t'delimiter': {\n\t\t\tpattern: /^{+\\/?|\\/?}+$/,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'property': /\\w+(?==)/,\n\t\t'variable': {\n\t\t\tpattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+]))*/,\n\t\t\tinside: {\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: stringPattern,\n\t\t\t\t\tgreedy: true\n\t\t\t\t},\n\t\t\t\t'number': numberPattern,\n\t\t\t\t'punctuation': /[\\[\\].?]/\n\t\t\t}\n\t\t},\n\t\t'string': {\n\t\t\tpattern: stringPattern,\n\t\t\tgreedy: true\n\t\t},\n\t\t'function': [\n\t\t\t/\\w+(?=\\()/,\n\t\t\t{\n\t\t\t\tpattern: /(\\|[^\\S\\r\\n]*)\\w+/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t'number': numberPattern,\n\t\t'operator': /\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,\n\t\t'punctuation': /[{}()\\[\\]|.,:]/\n\t};\n\n\t// Tokenize all inline Soy expressions\n\tPrism.hooks.add('before-tokenize', function (env) {\n\t\tvar soyPattern = /{{.+?}}|{.+?}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g;\n\t\tvar soyLitteralStart = '{literal}';\n\t\tvar soyLitteralEnd = '{/literal}';\n\t\tvar soyLitteralMode = false;\n\n\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'soy', soyPattern, function (match) {\n\t\t\t// Soy tags inside {literal} block are ignored\n\t\t\tif (match === soyLitteralEnd) {\n\t\t\t\tsoyLitteralMode = false;\n\t\t\t}\n\n\t\t\tif (!soyLitteralMode) {\n\t\t\t\tif (match === soyLitteralStart) {\n\t\t\t\t\tsoyLitteralMode = true;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t});\n\n\t// Re-insert the tokens after tokenizing\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'soy');\n\t});\n\n}(Prism));","!function(t){var e=/([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,a=/\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/;t.languages.soy={comment:[/\\/\\*[\\s\\S]*?\\*\\//,{pattern:/(\\s)\\/\\/.*/,lookbehind:!0,greedy:!0}],\"command-arg\":{pattern:/({+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,lookbehind:!0,alias:\"string\",inside:{punctuation:/\\./}},parameter:{pattern:/({+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,lookbehind:!0,alias:\"variable\"},keyword:[{pattern:/({+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,lookbehind:!0},/\\b(?:any|as|attributes|bool|css|float|in|int|js|html|list|map|null|number|string|uri)\\b/],delimiter:{pattern:/^{+\\/?|\\/?}+$/,alias:\"punctuation\"},property:/\\w+(?==)/,variable:{pattern:/\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+]))*/,inside:{string:{pattern:e,greedy:!0},number:a,punctuation:/[\\[\\].?]/}},string:{pattern:e,greedy:!0},function:[/\\w+(?=\\()/,{pattern:/(\\|[^\\S\\r\\n]*)\\w+/,lookbehind:!0}],boolean:/\\b(?:true|false)\\b/,number:a,operator:/\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,punctuation:/[{}()\\[\\]|.,:]/},t.hooks.add(\"before-tokenize\",function(e){var a=!1;t.languages[\"markup-templating\"].buildPlaceholders(e,\"soy\",/{{.+?}}|{.+?}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g,function(e){return\"{/literal}\"===e&&(a=!1),!a&&(\"{literal}\"===e&&(a=!0),!0)})}),t.hooks.add(\"after-tokenize\",function(e){t.languages[\"markup-templating\"].tokenizePlaceholders(e,\"soy\")})}(Prism);","Prism.languages.sql = {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n\t\tlookbehind: true\n\t},\n\t'variable': [\n\t\t{\n\t\t\tpattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n\t\t\tgreedy: true\n\t\t},\n\t\t/@[\\w.$]+/\n\t],\n\t'string': {\n\t\tpattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n\t\tgreedy: true,\n\t\tlookbehind: true\n\t},\n\t'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i, // Should we highlight user defined functions too?\n\t'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n\t'boolean': /\\b(?:TRUE|FALSE|NULL)\\b/i,\n\t'number': /\\b0x[\\da-f]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+\\b/i,\n\t'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n\t'punctuation': /[;[\\]()`,.]/\n};\n","Prism.languages.sql={comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,lookbehind:!0},variable:[{pattern:/@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,greedy:!0},/@[\\w.$]+/],string:{pattern:/(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,greedy:!0,lookbehind:!0},function:/\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,keyword:/\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,boolean:/\\b(?:TRUE|FALSE|NULL)\\b/i,number:/\\b0x[\\da-f]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+\\b/i,operator:/[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,punctuation:/[;[\\]()`,.]/};","(function (Prism) {\n\tvar inside = {\n\t\t'url': /url\\(([\"']?).*?\\1\\)/i,\n\t\t'string': {\n\t\t\tpattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'interpolation': null, // See below\n\t\t'func': null, // See below\n\t\t'important': /\\B!(?:important|optional)\\b/i,\n\t\t'keyword': {\n\t\t\tpattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'hexcode': /#[\\da-f]{3,6}/i,\n\t\t'number': /\\b\\d+(?:\\.\\d+)?%?/,\n\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t'operator': [\n\t\t\t// We want non-word chars around \"-\" because it is\n\t\t\t// accepted in property names.\n\t\t\t/~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.+|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/\n\t\t],\n\t\t'punctuation': /[{}()\\[\\];:,]/\n\t};\n\n\tinside['interpolation'] = {\n\t\tpattern: /\\{[^\\r\\n}:]+\\}/,\n\t\talias: 'variable',\n\t\tinside: {\n\t\t\t'delimiter': {\n\t\t\t\tpattern: /^{|}$/,\n\t\t\t\talias: 'punctuation'\n\t\t\t},\n\t\t\trest: inside\n\t\t}\n\t};\n\tinside['func'] = {\n\t\tpattern: /[\\w-]+\\([^)]*\\).*/,\n\t\tinside: {\n\t\t\t'function': /^[^(]+/,\n\t\t\trest: inside\n\t\t}\n\t};\n\n\tPrism.languages.stylus = {\n\t\t'comment': {\n\t\t\tpattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'atrule-declaration': {\n\t\t\tpattern: /(^\\s*)@.+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'atrule': /^@[\\w-]+/,\n\t\t\t\trest: inside\n\t\t\t}\n\t\t},\n\t\t'variable-declaration': {\n\t\t\tpattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'variable': /^\\S+/,\n\t\t\t\trest: inside\n\t\t\t}\n\t\t},\n\n\t\t'statement': {\n\t\t\tpattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tkeyword: /^\\S+/,\n\t\t\t\trest: inside\n\t\t\t}\n\t\t},\n\n\t\t// A property/value pair cannot end with a comma or a brace\n\t\t// It cannot have indented content unless it ended with a semicolon\n\t\t'property-declaration': {\n\t\t\tpattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'property': {\n\t\t\t\t\tpattern: /^[^\\s:]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'interpolation': inside.interpolation\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\trest: inside\n\t\t\t}\n\t\t},\n\n\n\n\t\t// A selector can contain parentheses only as part of a pseudo-element\n\t\t// It can span multiple lines.\n\t\t// It must end with a comma or an accolade or have indented content.\n\t\t'selector': {\n\t\t\tpattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'interpolation': inside.interpolation,\n\t\t\t\t'punctuation': /[{},]/\n\t\t\t}\n\t\t},\n\n\t\t'func': inside.func,\n\t\t'string': inside.string,\n\t\t'interpolation': inside.interpolation,\n\t\t'punctuation': /[{}()\\[\\];:.]/\n\t};\n}(Prism));","!function(n){var t={url:/url\\(([\"']?).*?\\1\\)/i,string:{pattern:/(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,greedy:!0},interpolation:null,func:null,important:/\\B!(?:important|optional)\\b/i,keyword:{pattern:/(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,lookbehind:!0},hexcode:/#[\\da-f]{3,6}/i,number:/\\b\\d+(?:\\.\\d+)?%?/,boolean:/\\b(?:true|false)\\b/,operator:[/~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.+|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],punctuation:/[{}()\\[\\];:,]/};t.interpolation={pattern:/\\{[^\\r\\n}:]+\\}/,alias:\"variable\",inside:{delimiter:{pattern:/^{|}$/,alias:\"punctuation\"},rest:t}},t.func={pattern:/[\\w-]+\\([^)]*\\).*/,inside:{function:/^[^(]+/,rest:t}},n.languages.stylus={comment:{pattern:/(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,lookbehind:!0},\"atrule-declaration\":{pattern:/(^\\s*)@.+/m,lookbehind:!0,inside:{atrule:/^@[\\w-]+/,rest:t}},\"variable-declaration\":{pattern:/(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,lookbehind:!0,inside:{variable:/^\\S+/,rest:t}},statement:{pattern:/(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,lookbehind:!0,inside:{keyword:/^\\S+/,rest:t}},\"property-declaration\":{pattern:/((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,lookbehind:!0,inside:{property:{pattern:/^[^\\s:]+/,inside:{interpolation:t.interpolation}},rest:t}},selector:{pattern:/(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,lookbehind:!0,inside:{interpolation:t.interpolation,punctuation:/[{},]/}},func:t.func,string:t.string,interpolation:t.interpolation,punctuation:/[{}()\\[\\];:.]/}}(Prism);","// issues: nested multiline comments\nPrism.languages.swift = Prism.languages.extend('clike', {\n\t'string': {\n\t\tpattern: /(\"|')(\\\\(?:\\((?:[^()]|\\([^)]+\\))+\\)|\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /\\\\\\((?:[^()]|\\([^)]+\\))+\\)/,\n\t\t\t\tinside: {\n\t\t\t\t\tdelimiter: {\n\t\t\t\t\t\tpattern: /^\\\\\\(|\\)$/,\n\t\t\t\t\t\talias: 'variable'\n\t\t\t\t\t}\n\t\t\t\t\t// See rest below\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t'keyword': /\\b(?:as|associativity|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic(?:Type)?|else|enum|extension|fallthrough|final|for|func|get|guard|if|import|in|infix|init|inout|internal|is|lazy|left|let|mutating|new|none|nonmutating|operator|optional|override|postfix|precedence|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|Self|set|static|struct|subscript|super|switch|throws?|try|Type|typealias|unowned|unsafe|var|weak|where|while|willSet|__(?:COLUMN__|FILE__|FUNCTION__|LINE__))\\b/,\n\t'number': /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n\t'constant': /\\b(?:nil|[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n\t'atrule': /@\\b(?:IB(?:Outlet|Designable|Action|Inspectable)|class_protocol|exported|noreturn|NS(?:Copying|Managed)|objc|UIApplicationMain|auto_closure)\\b/,\n\t'builtin': /\\b(?:[A-Z]\\S+|abs|advance|alignof(?:Value)?|assert|contains|count(?:Elements)?|debugPrint(?:ln)?|distance|drop(?:First|Last)|dump|enumerate|equal|filter|find|first|getVaList|indices|isEmpty|join|last|lexicographicalCompare|map|max(?:Element)?|min(?:Element)?|numericCast|overlaps|partition|print(?:ln)?|reduce|reflect|reverse|sizeof(?:Value)?|sort(?:ed)?|split|startsWith|stride(?:of(?:Value)?)?|suffix|swap|toDebugString|toString|transcode|underestimateCount|unsafeBitCast|with(?:ExtendedLifetime|Unsafe(?:MutablePointers?|Pointers?)|VaList))\\b/\n});\nPrism.languages.swift['string'].inside['interpolation'].inside.rest = Prism.languages.swift;\n","Prism.languages.swift=Prism.languages.extend(\"clike\",{string:{pattern:/(\"|')(\\\\(?:\\((?:[^()]|\\([^)]+\\))+\\)|\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0,inside:{interpolation:{pattern:/\\\\\\((?:[^()]|\\([^)]+\\))+\\)/,inside:{delimiter:{pattern:/^\\\\\\(|\\)$/,alias:\"variable\"}}}}},keyword:/\\b(?:as|associativity|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic(?:Type)?|else|enum|extension|fallthrough|final|for|func|get|guard|if|import|in|infix|init|inout|internal|is|lazy|left|let|mutating|new|none|nonmutating|operator|optional|override|postfix|precedence|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|Self|set|static|struct|subscript|super|switch|throws?|try|Type|typealias|unowned|unsafe|var|weak|where|while|willSet|__(?:COLUMN__|FILE__|FUNCTION__|LINE__))\\b/,number:/\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,constant:/\\b(?:nil|[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,atrule:/@\\b(?:IB(?:Outlet|Designable|Action|Inspectable)|class_protocol|exported|noreturn|NS(?:Copying|Managed)|objc|UIApplicationMain|auto_closure)\\b/,builtin:/\\b(?:[A-Z]\\S+|abs|advance|alignof(?:Value)?|assert|contains|count(?:Elements)?|debugPrint(?:ln)?|distance|drop(?:First|Last)|dump|enumerate|equal|filter|find|first|getVaList|indices|isEmpty|join|last|lexicographicalCompare|map|max(?:Element)?|min(?:Element)?|numericCast|overlaps|partition|print(?:ln)?|reduce|reflect|reverse|sizeof(?:Value)?|sort(?:ed)?|split|startsWith|stride(?:of(?:Value)?)?|suffix|swap|toDebugString|toString|transcode|underestimateCount|unsafeBitCast|with(?:ExtendedLifetime|Unsafe(?:MutablePointers?|Pointers?)|VaList))\\b/}),Prism.languages.swift.string.inside.interpolation.inside.rest=Prism.languages.swift;","Prism.languages.t4 = Prism.languages['t4-cs'] = Prism.languages['t4-templating'].createT4('csharp');\n","Prism.languages.t4=Prism.languages[\"t4-cs\"]=Prism.languages[\"t4-templating\"].createT4(\"csharp\");","(function (Prism) {\n\n\tfunction createBlock(prefix, inside, contentAlias) {\n\t\treturn {\n\t\t\tpattern: RegExp('<#' + prefix + '[\\\\s\\\\S]*?#>'),\n\t\t\talias: 'block',\n\t\t\tinside: {\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: RegExp('^<#' + prefix + '|#>$'),\n\t\t\t\t\talias: 'important'\n\t\t\t\t},\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /[\\s\\S]+/,\n\t\t\t\t\tinside: inside,\n\t\t\t\t\talias: contentAlias\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction createT4(insideLang) {\n\t\tvar grammar = Prism.languages[insideLang];\n\t\tvar className = 'language-' + insideLang;\n\n\t\treturn {\n\t\t\t'block': {\n\t\t\t\tpattern: /<#[\\s\\S]+?#>/,\n\t\t\t\tinside: {\n\t\t\t\t\t'directive': createBlock('@', {\n\t\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\t\tpattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/,\n\t\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t\t'punctuation': /^=|^[\"']|[\"']$/\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'keyword': /\\w+(?=\\s)/,\n\t\t\t\t\t\t'attr-name': /\\w+/\n\t\t\t\t\t}),\n\t\t\t\t\t'expression': createBlock('=', grammar, className),\n\t\t\t\t\t'class-feature': createBlock('\\\\+', grammar, className),\n\t\t\t\t\t'standard': createBlock('', grammar, className)\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tPrism.languages['t4-templating'] = Object.defineProperty({}, 'createT4', { value: createT4 });\n\n}(Prism));\n","!function(n){function i(e,t,a){return{pattern:RegExp(\"<#\"+e+\"[\\\\s\\\\S]*?#>\"),alias:\"block\",inside:{delimiter:{pattern:RegExp(\"^<#\"+e+\"|#>$\"),alias:\"important\"},content:{pattern:/[\\s\\S]+/,inside:t,alias:a}}}}n.languages[\"t4-templating\"]=Object.defineProperty({},\"createT4\",{value:function(e){var t=n.languages[e],a=\"language-\"+e;return{block:{pattern:/<#[\\s\\S]+?#>/,inside:{directive:i(\"@\",{\"attr-value\":{pattern:/=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/,inside:{punctuation:/^=|^[\"']|[\"']$/}},keyword:/\\w+(?=\\s)/,\"attr-name\":/\\w+/}),expression:i(\"=\",t,a),\"class-feature\":i(\"\\\\+\",t,a),standard:i(\"\",t,a)}}}}})}(Prism);","Prism.languages['t4-vb'] = Prism.languages['t4-templating'].createT4('visual-basic');\n","Prism.languages[\"t4-vb\"]=Prism.languages[\"t4-templating\"].createT4(\"visual-basic\");","Prism.languages.tap = {\n\tfail: /not ok[^#{\\n\\r]*/,\n\tpass: /ok[^#{\\n\\r]*/,\n\tpragma: /pragma [+-][a-z]+/,\n\tbailout: /bail out!.*/i,\n\tversion: /TAP version \\d+/i,\n\tplan: /\\d+\\.\\.\\d+(?: +#.*)?/,\n\tsubtest: {\n\t\tpattern: /# Subtest(?:: .*)?/,\n\t\tgreedy: true\n\t},\n\tpunctuation: /[{}]/,\n\tdirective: /#.*/,\n\tyamlish: {\n\t\tpattern: /(^[^\\S\\r\\n]*)---(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?[^\\S\\r\\n]*\\.\\.\\.$/m,\n\t\tlookbehind: true,\n\t\tinside: Prism.languages.yaml,\n\t\talias: 'language-yaml'\n\t}\n};\n","Prism.languages.tap={fail:/not ok[^#{\\n\\r]*/,pass:/ok[^#{\\n\\r]*/,pragma:/pragma [+-][a-z]+/,bailout:/bail out!.*/i,version:/TAP version \\d+/i,plan:/\\d+\\.\\.\\d+(?: +#.*)?/,subtest:{pattern:/# Subtest(?:: .*)?/,greedy:!0},punctuation:/[{}]/,directive:/#.*/,yamlish:{pattern:/(^[^\\S\\r\\n]*)---(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?[^\\S\\r\\n]*\\.\\.\\.$/m,lookbehind:!0,inside:Prism.languages.yaml,alias:\"language-yaml\"}};","Prism.languages.tcl = {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])#.*/,\n\t\tlookbehind: true\n\t},\n\t'string': {\n\t\tpattern: /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n\t\tgreedy: true\n\t},\n\t'variable': [\n\t\t{\n\t\t\tpattern: /(\\$)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\$){[^}]+}/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^\\s*set[ \\t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/m,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'function': {\n\t\tpattern: /(^\\s*proc[ \\t]+)[^\\s]+/m,\n\t\tlookbehind: true\n\t},\n\t'builtin': [\n\t\t{\n\t\t\tpattern: /(^\\s*)(?:proc|return|class|error|eval|exit|for|foreach|if|switch|while|break|continue)\\b/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t/\\b(?:elseif|else)\\b/\n\t],\n\t'scope': {\n\t\tpattern: /(^\\s*)(?:global|upvar|variable)\\b/m,\n\t\tlookbehind: true,\n\t\talias: 'constant'\n\t},\n\t'keyword': {\n\t\tpattern: /(^\\s*|\\[)(?:after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|Safe_Base|scan|seek|set|socket|source|split|string|subst|Tcl|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|wordBreak(?:After|Before)|test|vars)|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\\b/m,\n\t\tlookbehind: true\n\t},\n\t'operator': /!=?|\\*\\*?|==|&&?|\\|\\|?|<[=<]?|>[=>]?|[-+~\\/%?^]|\\b(?:eq|ne|in|ni)\\b/,\n\t'punctuation': /[{}()\\[\\]]/\n};\n","Prism.languages.tcl={comment:{pattern:/(^|[^\\\\])#.*/,lookbehind:!0},string:{pattern:/\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,greedy:!0},variable:[{pattern:/(\\$)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/,lookbehind:!0},{pattern:/(\\$){[^}]+}/,lookbehind:!0},{pattern:/(^\\s*set[ \\t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/m,lookbehind:!0}],function:{pattern:/(^\\s*proc[ \\t]+)[^\\s]+/m,lookbehind:!0},builtin:[{pattern:/(^\\s*)(?:proc|return|class|error|eval|exit|for|foreach|if|switch|while|break|continue)\\b/m,lookbehind:!0},/\\b(?:elseif|else)\\b/],scope:{pattern:/(^\\s*)(?:global|upvar|variable)\\b/m,lookbehind:!0,alias:\"constant\"},keyword:{pattern:/(^\\s*|\\[)(?:after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|Safe_Base|scan|seek|set|socket|source|split|string|subst|Tcl|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|wordBreak(?:After|Before)|test|vars)|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\\b/m,lookbehind:!0},operator:/!=?|\\*\\*?|==|&&?|\\|\\|?|<[=<]?|>[=>]?|[-+~\\/%?^]|\\b(?:eq|ne|in|ni)\\b/,punctuation:/[{}()\\[\\]]/};","(function (Prism) {\n\t// We don't allow for pipes inside parentheses\n\t// to not break table pattern |(. foo |). bar |\n\tvar modifierRegex = /(?:\\([^|)]+\\)|\\[[^\\]]+\\]|\\{[^}]+\\})+/.source;\n\tvar modifierTokens = {\n\t\t'css': {\n\t\t\tpattern: /\\{[^}]+\\}/,\n\t\t\tinside: {\n\t\t\t\trest: Prism.languages.css\n\t\t\t}\n\t\t},\n\t\t'class-id': {\n\t\t\tpattern: /(\\()[^)]+(?=\\))/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'attr-value'\n\t\t},\n\t\t'lang': {\n\t\t\tpattern: /(\\[)[^\\]]+(?=\\])/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'attr-value'\n\t\t},\n\t\t// Anything else is punctuation (the first pattern is for row/col spans inside tables)\n\t\t'punctuation': /[\\\\\\/]\\d+|\\S/\n\t};\n\n\n\tvar textile = Prism.languages.textile = Prism.languages.extend('markup', {\n\t\t'phrase': {\n\t\t\tpattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\n\t\t\t\t// h1. Header 1\n\t\t\t\t'block-tag': {\n\t\t\t\t\tpattern: RegExp('^[a-z]\\\\w*(?:' + modifierRegex + '|[<>=()])*\\\\.'),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'modifier': {\n\t\t\t\t\t\t\tpattern: RegExp('(^[a-z]\\\\w*)(?:' + modifierRegex + '|[<>=()])+(?=\\\\.)'),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: modifierTokens\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'tag': /^[a-z]\\w*/,\n\t\t\t\t\t\t'punctuation': /\\.$/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// # List item\n\t\t\t\t// * List item\n\t\t\t\t'list': {\n\t\t\t\t\tpattern: RegExp('^[*#]+(?:' + modifierRegex + ')?\\\\s+.+', 'm'),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'modifier': {\n\t\t\t\t\t\t\tpattern: RegExp('(^[*#]+)' + modifierRegex),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: modifierTokens\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /^[*#]+/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// | cell | cell | cell |\n\t\t\t\t'table': {\n\t\t\t\t\t// Modifiers can be applied to the row: {color:red}.|1|2|3|\n\t\t\t\t\t// or the cell: |{color:red}.1|2|3|\n\t\t\t\t\tpattern: RegExp('^(?:(?:' + modifierRegex + '|[<>=()^~])+\\\\.\\\\s*)?(?:\\\\|(?:(?:' + modifierRegex + '|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+\\\\.)?[^|]*)+\\\\|', 'm'),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'modifier': {\n\t\t\t\t\t\t\t// Modifiers for rows after the first one are\n\t\t\t\t\t\t\t// preceded by a pipe and a line feed\n\t\t\t\t\t\t\tpattern: RegExp('(^|\\\\|(?:\\\\r?\\\\n|\\\\r)?)(?:' + modifierRegex + '|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+(?=\\\\.)'),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: modifierTokens\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /\\||^\\./\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t'inline': {\n\t\t\t\t\tpattern: RegExp('(\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])(?:' + modifierRegex + ')?.+?\\\\1'),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t// Note: superscripts and subscripts are not handled specifically\n\n\t\t\t\t\t\t// *bold*, **bold**\n\t\t\t\t\t\t'bold': {\n\t\t\t\t\t\t\tpattern: RegExp('(^(\\\\*\\\\*?)(?:' + modifierRegex + ')?).+?(?=\\\\2)'),\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// _italic_, __italic__\n\t\t\t\t\t\t'italic': {\n\t\t\t\t\t\t\tpattern: RegExp('(^(__?)(?:' + modifierRegex + ')?).+?(?=\\\\2)'),\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// ??cite??\n\t\t\t\t\t\t'cite': {\n\t\t\t\t\t\t\tpattern: RegExp('(^\\\\?\\\\?(?:' + modifierRegex + ')?).+?(?=\\\\?\\\\?)'),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: 'string'\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// @code@\n\t\t\t\t\t\t'code': {\n\t\t\t\t\t\t\tpattern: RegExp('(^@(?:' + modifierRegex + ')?).+?(?=@)'),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: 'keyword'\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// +inserted+\n\t\t\t\t\t\t'inserted': {\n\t\t\t\t\t\t\tpattern: RegExp('(^\\\\+(?:' + modifierRegex + ')?).+?(?=\\\\+)'),\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// -deleted-\n\t\t\t\t\t\t'deleted': {\n\t\t\t\t\t\t\tpattern: RegExp('(^-(?:' + modifierRegex + ')?).+?(?=-)'),\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t// %span%\n\t\t\t\t\t\t'span': {\n\t\t\t\t\t\t\tpattern: RegExp('(^%(?:' + modifierRegex + ')?).+?(?=%)'),\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t'modifier': {\n\t\t\t\t\t\t\tpattern: RegExp('(^\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])' + modifierRegex),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: modifierTokens\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /[*_%?@+\\-^~]+/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// [alias]http://example.com\n\t\t\t\t'link-ref': {\n\t\t\t\t\tpattern: /^\\[[^\\]]+\\]\\S+$/m,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'string': {\n\t\t\t\t\t\t\tpattern: /(\\[)[^\\]]+(?=\\])/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'url': {\n\t\t\t\t\t\t\tpattern: /(\\])\\S+$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /[\\[\\]]/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// \"text\":http://example.com\n\t\t\t\t// \"text\":link-ref\n\t\t\t\t'link': {\n\t\t\t\t\tpattern: RegExp('\"(?:' + modifierRegex + ')?[^\"]+\":.+?(?=[^\\\\w/]?(?:\\\\s|$))'),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'text': {\n\t\t\t\t\t\t\tpattern: RegExp('(^\"(?:' + modifierRegex + ')?)[^\"]+(?=\")'),\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'modifier': {\n\t\t\t\t\t\t\tpattern: RegExp('(^\")' + modifierRegex),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: modifierTokens\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'url': {\n\t\t\t\t\t\t\tpattern: /(:).+/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /[\":]/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// !image.jpg!\n\t\t\t\t// !image.jpg(Title)!:http://example.com\n\t\t\t\t'image': {\n\t\t\t\t\tpattern: RegExp('!(?:' + modifierRegex + '|[<>=()])*[^!\\\\s()]+(?:\\\\([^)]+\\\\))?!(?::.+?(?=[^\\\\w/]?(?:\\\\s|$)))?'),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'source': {\n\t\t\t\t\t\t\tpattern: RegExp('(^!(?:' + modifierRegex + '|[<>=()])*)[^!\\\\s()]+(?:\\\\([^)]+\\\\))?(?=!)'),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: 'url'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'modifier': {\n\t\t\t\t\t\t\tpattern: RegExp('(^!)(?:' + modifierRegex + '|[<>=()])+'),\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\tinside: modifierTokens\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'url': {\n\t\t\t\t\t\t\tpattern: /(:).+/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /[!:]/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// Footnote[1]\n\t\t\t\t'footnote': {\n\t\t\t\t\tpattern: /\\b\\[\\d+\\]/,\n\t\t\t\t\talias: 'comment',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /\\[|\\]/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// CSS(Cascading Style Sheet)\n\t\t\t\t'acronym': {\n\t\t\t\t\tpattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'comment': {\n\t\t\t\t\t\t\tpattern: /(\\()[^)]+(?=\\))/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /[()]/\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// Prism(C)\n\t\t\t\t'mark': {\n\t\t\t\t\tpattern: /\\b\\((?:TM|R|C)\\)/,\n\t\t\t\t\talias: 'comment',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /[()]/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tvar phraseInside = textile['phrase'].inside;\n\tvar nestedPatterns = {\n\t\t'inline': phraseInside['inline'],\n\t\t'link': phraseInside['link'],\n\t\t'image': phraseInside['image'],\n\t\t'footnote': phraseInside['footnote'],\n\t\t'acronym': phraseInside['acronym'],\n\t\t'mark': phraseInside['mark']\n\t};\n\n\t// Only allow alpha-numeric HTML tags, not XML tags\n\ttextile.tag.pattern = /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i;\n\n\t// Allow some nesting\n\tvar phraseInlineInside = phraseInside['inline'].inside;\n\tphraseInlineInside['bold'].inside = nestedPatterns;\n\tphraseInlineInside['italic'].inside = nestedPatterns;\n\tphraseInlineInside['inserted'].inside = nestedPatterns;\n\tphraseInlineInside['deleted'].inside = nestedPatterns;\n\tphraseInlineInside['span'].inside = nestedPatterns;\n\n\t// Allow some styles inside table cells\n\tvar phraseTableInside = phraseInside['table'].inside;\n\tphraseTableInside['inline'] = nestedPatterns['inline'];\n\tphraseTableInside['link'] = nestedPatterns['link'];\n\tphraseTableInside['image'] = nestedPatterns['image'];\n\tphraseTableInside['footnote'] = nestedPatterns['footnote'];\n\tphraseTableInside['acronym'] = nestedPatterns['acronym'];\n\tphraseTableInside['mark'] = nestedPatterns['mark'];\n\n}(Prism));\n","!function(e){var n=\"(?:\\\\([^|)]+\\\\)|\\\\[[^\\\\]]+\\\\]|\\\\{[^}]+\\\\})+\",i={css:{pattern:/\\{[^}]+\\}/,inside:{rest:e.languages.css}},\"class-id\":{pattern:/(\\()[^)]+(?=\\))/,lookbehind:!0,alias:\"attr-value\"},lang:{pattern:/(\\[)[^\\]]+(?=\\])/,lookbehind:!0,alias:\"attr-value\"},punctuation:/[\\\\\\/]\\d+|\\S/},t=e.languages.textile=e.languages.extend(\"markup\",{phrase:{pattern:/(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,lookbehind:!0,inside:{\"block-tag\":{pattern:RegExp(\"^[a-z]\\\\w*(?:\"+n+\"|[<>=()])*\\\\.\"),inside:{modifier:{pattern:RegExp(\"(^[a-z]\\\\w*)(?:\"+n+\"|[<>=()])+(?=\\\\.)\"),lookbehind:!0,inside:i},tag:/^[a-z]\\w*/,punctuation:/\\.$/}},list:{pattern:RegExp(\"^[*#]+(?:\"+n+\")?\\\\s+.+\",\"m\"),inside:{modifier:{pattern:RegExp(\"(^[*#]+)\"+n),lookbehind:!0,inside:i},punctuation:/^[*#]+/}},table:{pattern:RegExp(\"^(?:(?:\"+n+\"|[<>=()^~])+\\\\.\\\\s*)?(?:\\\\|(?:(?:\"+n+\"|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+\\\\.)?[^|]*)+\\\\|\",\"m\"),inside:{modifier:{pattern:RegExp(\"(^|\\\\|(?:\\\\r?\\\\n|\\\\r)?)(?:\"+n+\"|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+(?=\\\\.)\"),lookbehind:!0,inside:i},punctuation:/\\||^\\./}},inline:{pattern:RegExp(\"(\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])(?:\"+n+\")?.+?\\\\1\"),inside:{bold:{pattern:RegExp(\"(^(\\\\*\\\\*?)(?:\"+n+\")?).+?(?=\\\\2)\"),lookbehind:!0},italic:{pattern:RegExp(\"(^(__?)(?:\"+n+\")?).+?(?=\\\\2)\"),lookbehind:!0},cite:{pattern:RegExp(\"(^\\\\?\\\\?(?:\"+n+\")?).+?(?=\\\\?\\\\?)\"),lookbehind:!0,alias:\"string\"},code:{pattern:RegExp(\"(^@(?:\"+n+\")?).+?(?=@)\"),lookbehind:!0,alias:\"keyword\"},inserted:{pattern:RegExp(\"(^\\\\+(?:\"+n+\")?).+?(?=\\\\+)\"),lookbehind:!0},deleted:{pattern:RegExp(\"(^-(?:\"+n+\")?).+?(?=-)\"),lookbehind:!0},span:{pattern:RegExp(\"(^%(?:\"+n+\")?).+?(?=%)\"),lookbehind:!0},modifier:{pattern:RegExp(\"(^\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])\"+n),lookbehind:!0,inside:i},punctuation:/[*_%?@+\\-^~]+/}},\"link-ref\":{pattern:/^\\[[^\\]]+\\]\\S+$/m,inside:{string:{pattern:/(\\[)[^\\]]+(?=\\])/,lookbehind:!0},url:{pattern:/(\\])\\S+$/,lookbehind:!0},punctuation:/[\\[\\]]/}},link:{pattern:RegExp('\"(?:'+n+')?[^\"]+\":.+?(?=[^\\\\w/]?(?:\\\\s|$))'),inside:{text:{pattern:RegExp('(^\"(?:'+n+')?)[^\"]+(?=\")'),lookbehind:!0},modifier:{pattern:RegExp('(^\")'+n),lookbehind:!0,inside:i},url:{pattern:/(:).+/,lookbehind:!0},punctuation:/[\":]/}},image:{pattern:RegExp(\"!(?:\"+n+\"|[<>=()])*[^!\\\\s()]+(?:\\\\([^)]+\\\\))?!(?::.+?(?=[^\\\\w/]?(?:\\\\s|$)))?\"),inside:{source:{pattern:RegExp(\"(^!(?:\"+n+\"|[<>=()])*)[^!\\\\s()]+(?:\\\\([^)]+\\\\))?(?=!)\"),lookbehind:!0,alias:\"url\"},modifier:{pattern:RegExp(\"(^!)(?:\"+n+\"|[<>=()])+\"),lookbehind:!0,inside:i},url:{pattern:/(:).+/,lookbehind:!0},punctuation:/[!:]/}},footnote:{pattern:/\\b\\[\\d+\\]/,alias:\"comment\",inside:{punctuation:/\\[|\\]/}},acronym:{pattern:/\\b[A-Z\\d]+\\([^)]+\\)/,inside:{comment:{pattern:/(\\()[^)]+(?=\\))/,lookbehind:!0},punctuation:/[()]/}},mark:{pattern:/\\b\\((?:TM|R|C)\\)/,alias:\"comment\",inside:{punctuation:/[()]/}}}}}),a=t.phrase.inside,o={inline:a.inline,link:a.link,image:a.image,footnote:a.footnote,acronym:a.acronym,mark:a.mark};t.tag.pattern=/<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i;var r=a.inline.inside;r.bold.inside=o,r.italic.inside=o,r.inserted.inside=o,r.deleted.inside=o,r.span.inside=o;var d=a.table.inside;d.inline=o.inline,d.link=o.link,d.image=o.image,d.footnote=o.footnote,d.acronym=o.acronym,d.mark=o.mark}(Prism);","(function (Prism) {\n\n\t// pattern: /(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\.|[^\\\\\"\\r\\n])*\")/\n\tvar key = \"(?:[\\\\w-]+|'[^'\\n\\r]*'|\\\"(?:\\\\.|[^\\\\\\\\\\\"\\r\\n])*\\\")\";\n\n\tPrism.languages.toml = {\n\t\t'comment': {\n\t\t\tpattern: /#.*/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'table': {\n\t\t\tpattern: RegExp(\"(\\\\[\\\\s*)\" + key + \"(?:\\\\s*\\\\.\\\\s*\" + key + \")*(?=\\\\s*\\\\])\"),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\talias: 'class-name'\n\t\t},\n\t\t'key': {\n\t\t\tpattern: RegExp(\"(^\\\\s*|[{,]\\\\s*)\" + key + \"(?:\\\\s*\\\\.\\\\s*\" + key + \")*(?=\\\\s*=)\", \"m\"),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\talias: 'property'\n\t\t},\n\t\t'string': {\n\t\t\tpattern: /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'date': [\n\t\t\t{\n\t\t\t\t// Offset Date-Time, Local Date-Time, Local Date\n\t\t\t\tpattern: /\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?/i,\n\t\t\t\talias: 'number'\n\t\t\t},\n\t\t\t{\n\t\t\t\t// Local Time\n\t\t\t\tpattern: /\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?/i,\n\t\t\t\talias: 'number'\n\t\t\t}\n\t\t],\n\t\t'number': /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?(?:inf|nan)\\b/,\n\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t'punctuation': /[.,=[\\]{}]/\n\t};\n}(Prism));\n","!function(e){var d=\"(?:[\\\\w-]+|'[^'\\n\\r]*'|\\\"(?:\\\\.|[^\\\\\\\\\\\"\\r\\n])*\\\")\";Prism.languages.toml={comment:{pattern:/#.*/,greedy:!0},table:{pattern:RegExp(\"(\\\\[\\\\s*)\"+d+\"(?:\\\\s*\\\\.\\\\s*\"+d+\")*(?=\\\\s*\\\\])\"),lookbehind:!0,greedy:!0,alias:\"class-name\"},key:{pattern:RegExp(\"(^\\\\s*|[{,]\\\\s*)\"+d+\"(?:\\\\s*\\\\.\\\\s*\"+d+\")*(?=\\\\s*=)\",\"m\"),lookbehind:!0,greedy:!0,alias:\"property\"},string:{pattern:/\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,greedy:!0},date:[{pattern:/\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?/i,alias:\"number\"},{pattern:/\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?/i,alias:\"number\"}],number:/(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?(?:inf|nan)\\b/,boolean:/\\b(?:true|false)\\b/,punctuation:/[.,=[\\]{}]/}}();","var typescript = Prism.util.clone(Prism.languages.typescript);\nPrism.languages.tsx = Prism.languages.extend('jsx', typescript);","var typescript=Prism.util.clone(Prism.languages.typescript);Prism.languages.tsx=Prism.languages.extend(\"jsx\",typescript);","(function(Prism) {\n\n\tPrism.languages.tt2 = Prism.languages.extend('clike', {\n\t\tcomment: {\n\t\t\tpattern: /#.*|\\[%#[\\s\\S]*?%\\]/,\n\t\t\tlookbehind: true\n\t\t},\n\t\tkeyword: /\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|TAGS|THROW|TRY|SWITCH|UNLESS|USE|WHILE|WRAPPER)\\b/,\n\t\tpunctuation: /[[\\]{},()]/\n\t});\n\n\tPrism.languages.insertBefore('tt2', 'number', {\n\t\toperator: /=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|or|not)\\b/,\n\t\tvariable: {\n\t\t\tpattern: /[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*/i\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('tt2', 'keyword', {\n\t\t'delimiter': {\n\t\t\tpattern: /^(?:\\[%|%%)-?|-?%]$/,\n\t\t\talias: 'punctuation'\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('tt2', 'string', {\n\t\t'single-quoted-string': {\n\t\t\tpattern: /'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string'\n\t\t},\n\t\t'double-quoted-string': {\n\t\t\tpattern: /\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\tvariable: {\n\t\t\t\t\tpattern: /\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t// The different types of TT2 strings \"replace\" the C-like standard string\n\tdelete Prism.languages.tt2.string;\n\n\tPrism.hooks.add('before-tokenize', function(env) {\n\t\tvar tt2Pattern = /\\[%[\\s\\S]+?%\\]/g;\n\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'tt2', tt2Pattern);\n\t});\n\n\tPrism.hooks.add('after-tokenize', function(env) {\n\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'tt2');\n\t});\n\n}(Prism));\n","!function(t){t.languages.tt2=t.languages.extend(\"clike\",{comment:{pattern:/#.*|\\[%#[\\s\\S]*?%\\]/,lookbehind:!0},keyword:/\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|TAGS|THROW|TRY|SWITCH|UNLESS|USE|WHILE|WRAPPER)\\b/,punctuation:/[[\\]{},()]/}),t.languages.insertBefore(\"tt2\",\"number\",{operator:/=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|or|not)\\b/,variable:{pattern:/[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*/i}}),t.languages.insertBefore(\"tt2\",\"keyword\",{delimiter:{pattern:/^(?:\\[%|%%)-?|-?%]$/,alias:\"punctuation\"}}),t.languages.insertBefore(\"tt2\",\"string\",{\"single-quoted-string\":{pattern:/'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,greedy:!0,alias:\"string\"},\"double-quoted-string\":{pattern:/\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,greedy:!0,alias:\"string\",inside:{variable:{pattern:/\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i}}}}),delete t.languages.tt2.string,t.hooks.add(\"before-tokenize\",function(e){t.languages[\"markup-templating\"].buildPlaceholders(e,\"tt2\",/\\[%[\\s\\S]+?%\\]/g)}),t.hooks.add(\"after-tokenize\",function(e){t.languages[\"markup-templating\"].tokenizePlaceholders(e,\"tt2\")})}(Prism);","Prism.languages.twig = {\n\t'comment': /\\{#[\\s\\S]*?#\\}/,\n\t'tag': {\n\t\tpattern: /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}/,\n\t\tinside: {\n\t\t\t'ld': {\n\t\t\t\tpattern: /^(?:\\{\\{-?|\\{%-?\\s*\\w+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^(?:\\{\\{|\\{%)-?/,\n\t\t\t\t\t'keyword': /\\w+/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'rd': {\n\t\t\t\tpattern: /-?(?:%\\}|\\}\\})$/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /.+/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^['\"]|['\"]$/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'keyword': /\\b(?:even|if|odd)\\b/,\n\t\t\t'boolean': /\\b(?:true|false|null)\\b/,\n\t\t\t'number': /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n\t\t\t'operator': [\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\s)(?:and|b-and|b-xor|b-or|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t/[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\n\t\t\t],\n\t\t\t'property': /\\b[a-zA-Z_]\\w*\\b/,\n\t\t\t'punctuation': /[()\\[\\]{}:.,]/\n\t\t}\n\t},\n\n\t// The rest can be parsed as HTML\n\t'other': {\n\t\t// We want non-blank matches\n\t\tpattern: /\\S(?:[\\s\\S]*\\S)?/,\n\t\tinside: Prism.languages.markup\n\t}\n};\n","Prism.languages.twig={comment:/\\{#[\\s\\S]*?#\\}/,tag:{pattern:/\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}/,inside:{ld:{pattern:/^(?:\\{\\{-?|\\{%-?\\s*\\w+)/,inside:{punctuation:/^(?:\\{\\{|\\{%)-?/,keyword:/\\w+/}},rd:{pattern:/-?(?:%\\}|\\}\\})$/,inside:{punctuation:/.+/}},string:{pattern:/(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,inside:{punctuation:/^['\"]|['\"]$/}},keyword:/\\b(?:even|if|odd)\\b/,boolean:/\\b(?:true|false|null)\\b/,number:/\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,operator:[{pattern:/(\\s)(?:and|b-and|b-xor|b-or|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,lookbehind:!0},/[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/],property:/\\b[a-zA-Z_]\\w*\\b/,punctuation:/[()\\[\\]{}:.,]/}},other:{pattern:/\\S(?:[\\s\\S]*\\S)?/,inside:Prism.languages.markup}};","Prism.languages.typescript = Prism.languages.extend('javascript', {\n\t// From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words\n\t'keyword': /\\b(?:abstract|as|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|var|void|while|with|yield)\\b/,\n\t'builtin': /\\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\\b/,\n});\n\nPrism.languages.ts = Prism.languages.typescript;\n","Prism.languages.typescript=Prism.languages.extend(\"javascript\",{keyword:/\\b(?:abstract|as|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|var|void|while|with|yield)\\b/,builtin:/\\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\\b/}),Prism.languages.ts=Prism.languages.typescript;","Prism.languages.vala = Prism.languages.extend('clike', {\n\t// Classes copied from prism-csharp\n\t'class-name': [\n\t\t{\n\t\t\t// (Foo bar, Bar baz)\n\t\t\tpattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=(?:\\?\\s+|\\*?\\s+\\*?)\\w+)/,\n\t\t\tinside: {\n\t\t\t\tpunctuation: /\\./\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t// [Foo]\n\t\t\tpattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tpunctuation: /\\./\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t// class Foo : Bar\n\t\t\tpattern: /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tpunctuation: /\\./\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t// class Foo\n\t\t\tpattern: /((?:\\b(?:class|interface|new|struct|enum)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tpunctuation: /\\./\n\t\t\t}\n\t\t}\n\t],\n\t'constant': /\\b[A-Z0-9_]+\\b/,\n\t'function': /\\w+(?=\\s*\\()/,\n\t'keyword': /\\b(?:bool|char|double|float|null|size_t|ssize_t|string|unichar|void|int|int8|int16|int32|int64|long|short|uchar|uint|uint8|uint16|uint32|uint64|ulong|ushort|class|delegate|enum|errordomain|interface|namespace|struct|break|continue|do|for|foreach|return|while|else|if|switch|assert|case|default|abstract|const|dynamic|ensures|extern|inline|internal|override|private|protected|public|requires|signal|static|virtual|volatile|weak|async|owned|unowned|try|catch|finally|throw|as|base|construct|delete|get|in|is|lock|new|out|params|ref|sizeof|set|this|throws|typeof|using|value|var|yield)\\b/i,\n\t'number': /(?:\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?:f|u?l?)?/i,\n\t'operator': /\\+\\+|--|&&|\\|\\||<<=?|>>=?|=>|->|~|[+\\-*\\/%&^|=!<>]=?|\\?\\??|\\.\\.\\./,\n\t'punctuation': /[{}[\\];(),.:]/\n});\n\nPrism.languages.insertBefore('vala','string', {\n\t'raw-string': {\n\t\tpattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n\t\tgreedy: true,\n\t\talias: 'string'\n\t},\n\t'template-string': {\n\t\tpattern: /@\"[\\s\\S]*?\"/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /\\$(?:\\([^)]*\\)|[a-zA-Z]\\w*)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'delimiter': {\n\t\t\t\t\t\tpattern: /^\\$\\(?|\\)$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.vala\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nPrism.languages.insertBefore('vala', 'keyword', {\n\t'regex': {\n\t\tpattern: /\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[imsx]{0,4}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n\t\tgreedy: true\n\t}\n});","Prism.languages.vala=Prism.languages.extend(\"clike\",{\"class-name\":[{pattern:/\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=(?:\\?\\s+|\\*?\\s+\\*?)\\w+)/,inside:{punctuation:/\\./}},{pattern:/(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,lookbehind:!0,inside:{punctuation:/\\./}},{pattern:/(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,lookbehind:!0,inside:{punctuation:/\\./}},{pattern:/((?:\\b(?:class|interface|new|struct|enum)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,lookbehind:!0,inside:{punctuation:/\\./}}],constant:/\\b[A-Z0-9_]+\\b/,function:/\\w+(?=\\s*\\()/,keyword:/\\b(?:bool|char|double|float|null|size_t|ssize_t|string|unichar|void|int|int8|int16|int32|int64|long|short|uchar|uint|uint8|uint16|uint32|uint64|ulong|ushort|class|delegate|enum|errordomain|interface|namespace|struct|break|continue|do|for|foreach|return|while|else|if|switch|assert|case|default|abstract|const|dynamic|ensures|extern|inline|internal|override|private|protected|public|requires|signal|static|virtual|volatile|weak|async|owned|unowned|try|catch|finally|throw|as|base|construct|delete|get|in|is|lock|new|out|params|ref|sizeof|set|this|throws|typeof|using|value|var|yield)\\b/i,number:/(?:\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?:f|u?l?)?/i,operator:/\\+\\+|--|&&|\\|\\||<<=?|>>=?|=>|->|~|[+\\-*\\/%&^|=!<>]=?|\\?\\??|\\.\\.\\./,punctuation:/[{}[\\];(),.:]/}),Prism.languages.insertBefore(\"vala\",\"string\",{\"raw-string\":{pattern:/\"\"\"[\\s\\S]*?\"\"\"/,greedy:!0,alias:\"string\"},\"template-string\":{pattern:/@\"[\\s\\S]*?\"/,greedy:!0,inside:{interpolation:{pattern:/\\$(?:\\([^)]*\\)|[a-zA-Z]\\w*)/,inside:{delimiter:{pattern:/^\\$\\(?|\\)$/,alias:\"punctuation\"},rest:Prism.languages.vala}},string:/[\\s\\S]+/}}}),Prism.languages.insertBefore(\"vala\",\"keyword\",{regex:{pattern:/\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[imsx]{0,4}(?=\\s*($|[\\r\\n,.;})\\]]))/,greedy:!0}});","Prism.languages.vbnet = Prism.languages.extend(\"basic\", {\n\t'keyword': /(?:\\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDEC|CDBL|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEFAULT|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LINE INPUT|LET|LIB|LIKE|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPERATOR|OPEN|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHORT|SINGLE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SYNCLOCK|SWAP|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\\$|\\b)/i,\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(?:!|REM\\b).+/i,\n\t\t\tinside: {\n\t\t\t\t'keyword': /^REM/i\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])'.*/,\n\t\t\tlookbehind: true\n\t\t}\n\t]\n});\n","Prism.languages.vbnet=Prism.languages.extend(\"basic\",{keyword:/(?:\\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDEC|CDBL|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEFAULT|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LINE INPUT|LET|LIB|LIKE|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPERATOR|OPEN|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHORT|SINGLE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SYNCLOCK|SWAP|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\\$|\\b)/i,comment:[{pattern:/(?:!|REM\\b).+/i,inside:{keyword:/^REM/i}},{pattern:/(^|[^\\\\:])'.*/,lookbehind:!0}]});","(function (Prism) {\n\tPrism.languages.velocity = Prism.languages.extend('markup', {});\n\n\tvar velocity = {\n\t\t'variable': {\n\t\t\tpattern: /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+])*|{[^}]+})/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: {} // See below\n\t\t},\n\t\t'string': {\n\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'number': /\\b\\d+\\b/,\n\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t'operator': /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n\t\t'punctuation': /[(){}[\\]:,.]/\n\t};\n\n\tvelocity.variable.inside = {\n\t\t'string': velocity['string'],\n\t\t'function': {\n\t\t\tpattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'number': velocity['number'],\n\t\t'boolean': velocity['boolean'],\n\t\t'punctuation': velocity['punctuation']\n\t};\n\n\tPrism.languages.insertBefore('velocity', 'comment', {\n\t\t'unparsed': {\n\t\t\tpattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?]]#/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^#\\[\\[|]]#$/\n\t\t\t}\n\t\t},\n\t\t'velocity-comment': [\n\t\t\t{\n\t\t\t\tpattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\talias: 'comment'\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(^|[^\\\\])##.*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\talias: 'comment'\n\t\t\t}\n\t\t],\n\t\t'directive': {\n\t\t\tpattern: /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tkeyword: {\n\t\t\t\t\tpattern: /^#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})|\\bin\\b/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /[{}]/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\trest: velocity\n\t\t\t}\n\t\t},\n\t\t'variable': velocity['variable']\n\t});\n\n\tPrism.languages.velocity['tag'].inside['attr-value'].inside.rest = Prism.languages.velocity;\n\n}(Prism));","!function(e){e.languages.velocity=e.languages.extend(\"markup\",{});var n={variable:{pattern:/(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+])*|{[^}]+})/i,lookbehind:!0,inside:{}},string:{pattern:/\"[^\"]*\"|'[^']*'/,greedy:!0},number:/\\b\\d+\\b/,boolean:/\\b(?:true|false)\\b/,operator:/[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,punctuation:/[(){}[\\]:,.]/};n.variable.inside={string:n.string,function:{pattern:/([^\\w-])[a-z][\\w-]*(?=\\()/,lookbehind:!0},number:n.number,boolean:n.boolean,punctuation:n.punctuation},e.languages.insertBefore(\"velocity\",\"comment\",{unparsed:{pattern:/(^|[^\\\\])#\\[\\[[\\s\\S]*?]]#/,lookbehind:!0,greedy:!0,inside:{punctuation:/^#\\[\\[|]]#$/}},\"velocity-comment\":[{pattern:/(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,lookbehind:!0,greedy:!0,alias:\"comment\"},{pattern:/(^|[^\\\\])##.*/,lookbehind:!0,greedy:!0,alias:\"comment\"}],directive:{pattern:/(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,lookbehind:!0,inside:{keyword:{pattern:/^#@?(?:[a-z][\\w-]*|{[a-z][\\w-]*})|\\bin\\b/,inside:{punctuation:/[{}]/}},rest:n}},variable:n.variable}),e.languages.velocity.tag.inside[\"attr-value\"].inside.rest=e.languages.velocity}(Prism);","Prism.languages.verilog = {\n\t'comment': /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n\t'string': {\n\t\tpattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n\t\tgreedy: true\n\t},\n\t// support for any kernel function (ex: $display())\n\t'property': /\\B\\$\\w+\\b/,\n\t// support for user defined constants (ex: `define)\n\t'constant': /\\B`\\w+\\b/,\n\t'function': /\\w+(?=\\()/,\n\t// support for verilog and system verilog keywords\n\t'keyword': /\\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|class|case|casex|casez|cell|chandle|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endspecify|endsequence|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_onevent|pulsestyle_ondetect|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\\b/,\n\t// bold highlighting for all verilog and system verilog logic blocks\n\t'important': /\\b(?:always_latch|always_comb|always_ff|always)\\b ?@?/,\n\t// support for time ticks, vectors, and real numbers\n\t'number': /\\B##?\\d+|(?:\\b\\d+)?'[odbh] ?[\\da-fzx_?]+|\\b\\d*[._]?\\d+(?:e[-+]?\\d+)?/i,\n\t'operator': /[-+{}^~%*\\/?=!<>&|]+/,\n\t'punctuation': /[[\\];(),.:]/\n};","Prism.languages.verilog={comment:/\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,string:{pattern:/\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,greedy:!0},property:/\\B\\$\\w+\\b/,constant:/\\B`\\w+\\b/,function:/\\w+(?=\\()/,keyword:/\\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|class|case|casex|casez|cell|chandle|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endspecify|endsequence|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_onevent|pulsestyle_ondetect|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\\b/,important:/\\b(?:always_latch|always_comb|always_ff|always)\\b ?@?/,number:/\\B##?\\d+|(?:\\b\\d+)?'[odbh] ?[\\da-fzx_?]+|\\b\\d*[._]?\\d+(?:e[-+]?\\d+)?/i,operator:/[-+{}^~%*\\/?=!<>&|]+/,punctuation:/[[\\];(),.:]/};","Prism.languages.vhdl = {\n\t'comment': /--.+/,\n\t// support for all logic vectors\n\t'vhdl-vectors': {\n\t\t'pattern': /\\b[oxb]\"[\\da-f_]+\"|\"[01uxzwlh-]+\"/i,\n\t\t'alias': 'number'\n\t},\n\t// support for operator overloading included\n\t'quoted-function': {\n\t\tpattern: /\"\\S+?\"(?=\\()/,\n\t\talias: 'function'\n\t},\n\t'string': /\"(?:[^\\\\\"\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n\t'constant': /\\b(?:use|library)\\b/i,\n\t// support for predefined attributes included\n\t'keyword': /\\b(?:'active|'ascending|'base|'delayed|'driving|'driving_value|'event|'high|'image|'instance_name|'last_active|'last_event|'last_value|'left|'leftof|'length|'low|'path_name|'pos|'pred|'quiet|'range|'reverse_range|'right|'rightof|'simple_name|'stable|'succ|'transaction|'val|'value|access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with)\\b/i,\n\t'boolean': /\\b(?:true|false)\\b/i,\n\t'function': /\\w+(?=\\()/,\n\t// decimal, based, physical, and exponential numbers supported\n\t'number': /'[01uxzwlh-]'|\\b(?:\\d+#[\\da-f_.]+#|\\d[\\d_.]*)(?:e[-+]?\\d+)?/i,\n\t'operator': /[<>]=?|:=|[-+*/&=]|\\b(?:abs|not|mod|rem|sll|srl|sla|sra|rol|ror|and|or|nand|xnor|xor|nor)\\b/i,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n","Prism.languages.vhdl={comment:/--.+/,\"vhdl-vectors\":{pattern:/\\b[oxb]\"[\\da-f_]+\"|\"[01uxzwlh-]+\"/i,alias:\"number\"},\"quoted-function\":{pattern:/\"\\S+?\"(?=\\()/,alias:\"function\"},string:/\"(?:[^\\\\\"\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,constant:/\\b(?:use|library)\\b/i,keyword:/\\b(?:'active|'ascending|'base|'delayed|'driving|'driving_value|'event|'high|'image|'instance_name|'last_active|'last_event|'last_value|'left|'leftof|'length|'low|'path_name|'pos|'pred|'quiet|'range|'reverse_range|'right|'rightof|'simple_name|'stable|'succ|'transaction|'val|'value|access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with)\\b/i,boolean:/\\b(?:true|false)\\b/i,function:/\\w+(?=\\()/,number:/'[01uxzwlh-]'|\\b(?:\\d+#[\\da-f_.]+#|\\d[\\d_.]*)(?:e[-+]?\\d+)?/i,operator:/[<>]=?|:=|[-+*/&=]|\\b(?:abs|not|mod|rem|sll|srl|sla|sra|rol|ror|and|or|nand|xnor|xor|nor)\\b/i,punctuation:/[{}[\\];(),.:]/};","Prism.languages.vim = {\n\t'string': /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,\n\t'comment': /\".*/,\n\t'function': /\\w+(?=\\()/,\n\t'keyword': /\\b(?:ab|abbreviate|abc|abclear|abo|aboveleft|al|all|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|ar|args|argu|argument|as|ascii|bad|badd|ba|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bN|bNext|bo|botright|bp|bprevious|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|br|brewind|bro|browse|bufdo|b|buffer|buffers|bun|bunload|bw|bwipeout|ca|cabbrev|cabc|cabclear|caddb|caddbuffer|cad|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cgetb|cgetbuffer|cgete|cgetexpr|cg|cgetfile|c|change|changes|chd|chdir|che|checkpath|checkt|checktime|cla|clast|cl|clist|clo|close|cmapc|cmapclear|cnew|cnewer|cn|cnext|cN|cNext|cnf|cnfile|cNfcNfile|cnorea|cnoreabbrev|col|colder|colo|colorscheme|comc|comclear|comp|compiler|conf|confirm|con|continue|cope|copen|co|copy|cpf|cpfile|cp|cprevious|cq|cquit|cr|crewind|cuna|cunabbrev|cu|cunmap|cw|cwindow|debugg|debuggreedy|delc|delcommand|d|delete|delf|delfunction|delm|delmarks|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|di|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|earlier|echoe|echoerr|echom|echomsg|echon|e|edit|el|else|elsei|elseif|em|emenu|endfo|endfor|endf|endfunction|endfun|en|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fina|finally|fin|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|folddoc|folddoclosed|foldd|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|ha|hardcopy|h|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iuna|iunabbrev|iu|iunmap|j|join|ju|jumps|k|keepalt|keepj|keepjumps|kee|keepmarks|laddb|laddbuffer|lad|laddexpr|laddf|laddfile|lan|language|la|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|let|left|lefta|leftabove|lex|lexpr|lf|lfile|lfir|lfirst|lgetb|lgetbuffer|lgete|lgetexpr|lg|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|l|list|ll|lla|llast|lli|llist|lmak|lmake|lm|lmap|lmapc|lmapclear|lnew|lnewer|lne|lnext|lN|lNext|lnf|lnfile|lNf|lNfile|ln|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lpf|lpfile|lp|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|mak|make|ma|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkvie|mkview|mkv|mkvimrc|mod|mode|m|move|mzf|mzfile|mz|mzscheme|nbkey|new|n|next|N|Next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|omapc|omapclear|on|only|o|open|opt|options|ou|ounmap|pc|pclose|ped|pedit|pe|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|p|print|P|Print|profd|profdel|prof|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptN|ptNext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|pyf|pyfile|py|python|qa|qall|q|quit|quita|quitall|r|read|rec|recover|redi|redir|red|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|rub|ruby|rubyd|rubydo|rubyf|rubyfile|ru|runtime|rv|rviminfo|sal|sall|san|sandbox|sa|sargument|sav|saveas|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbN|sbNext|sbp|sbprevious|sbr|sbrewind|sb|sbuffer|scripte|scriptencoding|scrip|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sla|slast|sl|sleep|sm|smagic|sm|smap|smapc|smapclear|sme|smenu|sn|snext|sN|sNext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|sor|sort|so|source|spelld|spelldump|spe|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|sp|split|spr|sprevious|sre|srewind|sta|stag|startg|startgreplace|star|startinsert|startr|startreplace|stj|stjump|st|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tab|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabnew|tabn|tabnext|tabN|tabNext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|ta|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tm|tmenu|tn|tnext|tN|tNext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tu|tunmenu|una|unabbreviate|u|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|verb|verbose|ve|version|vert|vertical|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|vi|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|wa|wall|wh|while|winc|wincmd|windo|winp|winpos|win|winsize|wn|wnext|wN|wNext|wp|wprevious|wq|wqa|wqall|w|write|ws|wsverb|wv|wviminfo|X|xa|xall|x|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|XMLent|XMLns|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,\n\t'builtin': /\\b(?:autocmd|acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|t_AB|t_AF|t_al|t_AL|t_bc|t_cd|t_ce|t_Ce|t_cl|t_cm|t_Co|t_cs|t_Cs|t_CS|t_CV|t_da|t_db|t_dl|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_fs|t_IE|t_IS|t_k1|t_K1|t_k2|t_k3|t_K3|t_k4|t_K4|t_k5|t_K5|t_k6|t_K6|t_k7|t_K7|t_k8|t_K8|t_k9|t_K9|t_KA|t_kb|t_kB|t_KB|t_KC|t_kd|t_kD|t_KD|t_ke|t_KE|t_KF|t_KG|t_kh|t_KH|t_kI|t_KI|t_KJ|t_KK|t_kl|t_KL|t_kN|t_kP|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_RI|t_RV|t_Sb|t_se|t_Sf|t_SI|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_WP|t_WS|t_xs|t_ZH|t_ZR)\\b/,\n\t'number': /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n\t'operator': /\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,\n\t'punctuation': /[{}[\\](),;:]/\n};","Prism.languages.vim={string:/\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,comment:/\".*/,function:/\\w+(?=\\()/,keyword:/\\b(?:ab|abbreviate|abc|abclear|abo|aboveleft|al|all|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|ar|args|argu|argument|as|ascii|bad|badd|ba|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bN|bNext|bo|botright|bp|bprevious|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|br|brewind|bro|browse|bufdo|b|buffer|buffers|bun|bunload|bw|bwipeout|ca|cabbrev|cabc|cabclear|caddb|caddbuffer|cad|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cgetb|cgetbuffer|cgete|cgetexpr|cg|cgetfile|c|change|changes|chd|chdir|che|checkpath|checkt|checktime|cla|clast|cl|clist|clo|close|cmapc|cmapclear|cnew|cnewer|cn|cnext|cN|cNext|cnf|cnfile|cNfcNfile|cnorea|cnoreabbrev|col|colder|colo|colorscheme|comc|comclear|comp|compiler|conf|confirm|con|continue|cope|copen|co|copy|cpf|cpfile|cp|cprevious|cq|cquit|cr|crewind|cuna|cunabbrev|cu|cunmap|cw|cwindow|debugg|debuggreedy|delc|delcommand|d|delete|delf|delfunction|delm|delmarks|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|di|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|earlier|echoe|echoerr|echom|echomsg|echon|e|edit|el|else|elsei|elseif|em|emenu|endfo|endfor|endf|endfunction|endfun|en|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fina|finally|fin|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|folddoc|folddoclosed|foldd|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|ha|hardcopy|h|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iuna|iunabbrev|iu|iunmap|j|join|ju|jumps|k|keepalt|keepj|keepjumps|kee|keepmarks|laddb|laddbuffer|lad|laddexpr|laddf|laddfile|lan|language|la|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|let|left|lefta|leftabove|lex|lexpr|lf|lfile|lfir|lfirst|lgetb|lgetbuffer|lgete|lgetexpr|lg|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|l|list|ll|lla|llast|lli|llist|lmak|lmake|lm|lmap|lmapc|lmapclear|lnew|lnewer|lne|lnext|lN|lNext|lnf|lnfile|lNf|lNfile|ln|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lpf|lpfile|lp|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|mak|make|ma|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkvie|mkview|mkv|mkvimrc|mod|mode|m|move|mzf|mzfile|mz|mzscheme|nbkey|new|n|next|N|Next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|omapc|omapclear|on|only|o|open|opt|options|ou|ounmap|pc|pclose|ped|pedit|pe|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|p|print|P|Print|profd|profdel|prof|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptN|ptNext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|pyf|pyfile|py|python|qa|qall|q|quit|quita|quitall|r|read|rec|recover|redi|redir|red|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|rub|ruby|rubyd|rubydo|rubyf|rubyfile|ru|runtime|rv|rviminfo|sal|sall|san|sandbox|sa|sargument|sav|saveas|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbN|sbNext|sbp|sbprevious|sbr|sbrewind|sb|sbuffer|scripte|scriptencoding|scrip|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sla|slast|sl|sleep|sm|smagic|sm|smap|smapc|smapclear|sme|smenu|sn|snext|sN|sNext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|sor|sort|so|source|spelld|spelldump|spe|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|sp|split|spr|sprevious|sre|srewind|sta|stag|startg|startgreplace|star|startinsert|startr|startreplace|stj|stjump|st|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tab|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabnew|tabn|tabnext|tabN|tabNext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|ta|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tm|tmenu|tn|tnext|tN|tNext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tu|tunmenu|una|unabbreviate|u|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|verb|verbose|ve|version|vert|vertical|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|vi|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|wa|wall|wh|while|winc|wincmd|windo|winp|winpos|win|winsize|wn|wnext|wN|wNext|wp|wprevious|wq|wqa|wqall|w|write|ws|wsverb|wv|wviminfo|X|xa|xall|x|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|XMLent|XMLns|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,builtin:/\\b(?:autocmd|acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|t_AB|t_AF|t_al|t_AL|t_bc|t_cd|t_ce|t_Ce|t_cl|t_cm|t_Co|t_cs|t_Cs|t_CS|t_CV|t_da|t_db|t_dl|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_fs|t_IE|t_IS|t_k1|t_K1|t_k2|t_k3|t_K3|t_k4|t_K4|t_k5|t_K5|t_k6|t_K6|t_k7|t_K7|t_k8|t_K8|t_k9|t_K9|t_KA|t_kb|t_kB|t_KB|t_KC|t_kd|t_kD|t_KD|t_ke|t_KE|t_KF|t_KG|t_kh|t_KH|t_kI|t_KI|t_KJ|t_KK|t_kl|t_KL|t_kN|t_kP|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_RI|t_RV|t_Sb|t_se|t_Sf|t_SI|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_WP|t_WS|t_xs|t_ZH|t_ZR)\\b/,number:/\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,operator:/\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,punctuation:/[{}[\\](),;:]/};","Prism.languages['visual-basic'] = {\n\t'comment': {\n\t\tpattern: /(?:['‘’]|REM\\b).*/i,\n\t\tinside: {\n\t\t\t'keyword': /^REM/i\n\t\t}\n\t},\n\t'directive': {\n\t\tpattern: /#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:[^\\S\\r\\n]_[^\\S\\r\\n]*(?:\\r\\n?|\\n)|.)+/i,\n\t\talias: 'comment',\n\t\tgreedy: true\n\t},\n\t'string': {\n\t\tpattern: /[\"“”](?:[\"“”]{2}|[^\"“”])*[\"“”]C?/i,\n\t\tgreedy: true\n\t},\n\t'date': {\n\t\tpattern: /#[^\\S\\r\\n]*(?:\\d+([/-])\\d+\\1\\d+(?:[^\\S\\r\\n]+(?:\\d+[^\\S\\r\\n]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[^\\S\\r\\n]*(?:AM|PM))?))?|(?:\\d+[^\\S\\r\\n]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[^\\S\\r\\n]*(?:AM|PM))?))[^\\S\\r\\n]*#/i,\n\t\talias: 'builtin'\n\t},\n\t'number': /(?:(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)(?:E[+-]?\\d+)?|&[HO][\\dA-F]+)(?:U?[ILS]|[FRD])?/i,\n\t'boolean': /\\b(?:True|False|Nothing)\\b/i,\n\t'keyword': /\\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|TypeOf|U(?:Integer|Long|Short)|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Xor)\\b/i,\n\t'operator': [\n\t\t/[+\\-*/\\\\^<=>&#@$%!]/,\n\t\t{\n\t\t\tpattern: /([^\\S\\r\\n])_(?=[^\\S\\r\\n]*[\\r\\n])/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'punctuation': /[{}().,:?]/\n};\n\nPrism.languages.vb = Prism.languages['visual-basic'];","Prism.languages[\"visual-basic\"]={comment:{pattern:/(?:['‘’]|REM\\b).*/i,inside:{keyword:/^REM/i}},directive:{pattern:/#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:[^\\S\\r\\n]_[^\\S\\r\\n]*(?:\\r\\n?|\\n)|.)+/i,alias:\"comment\",greedy:!0},string:{pattern:/[\"“”](?:[\"“”]{2}|[^\"“”])*[\"“”]C?/i,greedy:!0},date:{pattern:/#[^\\S\\r\\n]*(?:\\d+([/-])\\d+\\1\\d+(?:[^\\S\\r\\n]+(?:\\d+[^\\S\\r\\n]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[^\\S\\r\\n]*(?:AM|PM))?))?|(?:\\d+[^\\S\\r\\n]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[^\\S\\r\\n]*(?:AM|PM))?))[^\\S\\r\\n]*#/i,alias:\"builtin\"},number:/(?:(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)(?:E[+-]?\\d+)?|&[HO][\\dA-F]+)(?:U?[ILS]|[FRD])?/i,boolean:/\\b(?:True|False|Nothing)\\b/i,keyword:/\\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|TypeOf|U(?:Integer|Long|Short)|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Xor)\\b/i,operator:[/[+\\-*/\\\\^<=>&#@$%!]/,{pattern:/([^\\S\\r\\n])_(?=[^\\S\\r\\n]*[\\r\\n])/,lookbehind:!0}],punctuation:/[{}().,:?]/},Prism.languages.vb=Prism.languages[\"visual-basic\"];","Prism.languages.wasm = {\n\t'comment': [\n\t\t/\\(;[\\s\\S]*?;\\)/,\n\t\t{\n\t\t\tpattern: /;;.*/,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n\t\tgreedy: true\n\t},\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /\\b(?:align|offset)=/,\n\t\t\tinside: {\n\t\t\t\t'operator': /=/\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /\\./\n\t\t\t}\n\t\t},\n\t\t/\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/\n\t],\n\t'variable': /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^_`|~]+/i,\n\t'number': /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n\t'punctuation': /[()]/\n};","Prism.languages.wasm={comment:[/\\(;[\\s\\S]*?;\\)/,{pattern:/;;.*/,greedy:!0}],string:{pattern:/\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,greedy:!0},keyword:[{pattern:/\\b(?:align|offset)=/,inside:{operator:/=/}},{pattern:/\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,inside:{punctuation:/\\./}},/\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],variable:/\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^_`|~]+/i,number:/[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,punctuation:/[()]/};","Prism.languages.wiki = Prism.languages.extend('markup', {\n\t'block-comment': {\n\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n\t\tlookbehind: true,\n\t\talias: 'comment'\n\t},\n\t'heading': {\n\t\tpattern: /^(=+).+?\\1/m,\n\t\tinside: {\n\t\t\t'punctuation': /^=+|=+$/,\n\t\t\t'important': /.+/\n\t\t}\n\t},\n\t'emphasis': {\n\t\t// TODO Multi-line\n\t\tpattern: /('{2,5}).+?\\1/,\n\t\tinside: {\n\t\t\t'bold italic': {\n\t\t\t\tpattern: /(''''').+?(?=\\1)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'bold': {\n\t\t\t\tpattern: /(''')[^'](?:.*?[^'])?(?=\\1)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'italic': {\n\t\t\t\tpattern: /('')[^'](?:.*?[^'])?(?=\\1)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'punctuation': /^''+|''+$/\n\t\t}\n\t},\n\t'hr': {\n\t\tpattern: /^-{4,}/m,\n\t\talias: 'punctuation'\n\t},\n\t'url': [\n\t\t/ISBN +(?:97[89][ -]?)?(?:\\d[ -]?){9}[\\dx]\\b|(?:RFC|PMID) +\\d+/i,\n\t\t/\\[\\[.+?\\]\\]|\\[.+?\\]/\n\t],\n\t'variable': [\n\t\t/__[A-Z]+__/,\n\t\t// FIXME Nested structures should be handled\n\t\t// {{formatnum:{{#expr:{{{3}}}}}}}\n\t\t/\\{{3}.+?\\}{3}/,\n\t\t/\\{\\{.+?\\}\\}/\n\t],\n\t'symbol': [\n\t\t/^#redirect/im,\n\t\t/~{3,5}/\n\t],\n\t// Handle table attrs:\n\t// {|\n\t// ! style=\"text-align:left;\"| Item\n\t// |}\n\t'table-tag': {\n\t\tpattern: /((?:^|[|!])[|!])[^|\\r\\n]+\\|(?!\\|)/m,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'table-bar': {\n\t\t\t\tpattern: /\\|$/,\n\t\t\t\talias: 'punctuation'\n\t\t\t},\n\t\t\trest: Prism.languages.markup['tag'].inside\n\t\t}\n\t},\n\t'punctuation': /^(?:\\{\\||\\|\\}|\\|-|[*#:;!|])|\\|\\||!!/m\n});\n\nPrism.languages.insertBefore('wiki', 'tag', {\n\t// Prevent highlighting inside <nowiki>, <source> and <pre> tags\n\t'nowiki': {\n\t\tpattern: /<(nowiki|pre|source)\\b[\\s\\S]*?>[\\s\\S]*?<\\/\\1>/i,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /<(?:nowiki|pre|source)\\b[\\s\\S]*?>|<\\/(?:nowiki|pre|source)>/i,\n\t\t\t\tinside: Prism.languages.markup['tag'].inside\n\t\t\t}\n\t\t}\n\t}\n});\n","Prism.languages.wiki=Prism.languages.extend(\"markup\",{\"block-comment\":{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,lookbehind:!0,alias:\"comment\"},heading:{pattern:/^(=+).+?\\1/m,inside:{punctuation:/^=+|=+$/,important:/.+/}},emphasis:{pattern:/('{2,5}).+?\\1/,inside:{\"bold italic\":{pattern:/(''''').+?(?=\\1)/,lookbehind:!0},bold:{pattern:/(''')[^'](?:.*?[^'])?(?=\\1)/,lookbehind:!0},italic:{pattern:/('')[^'](?:.*?[^'])?(?=\\1)/,lookbehind:!0},punctuation:/^''+|''+$/}},hr:{pattern:/^-{4,}/m,alias:\"punctuation\"},url:[/ISBN +(?:97[89][ -]?)?(?:\\d[ -]?){9}[\\dx]\\b|(?:RFC|PMID) +\\d+/i,/\\[\\[.+?\\]\\]|\\[.+?\\]/],variable:[/__[A-Z]+__/,/\\{{3}.+?\\}{3}/,/\\{\\{.+?\\}\\}/],symbol:[/^#redirect/im,/~{3,5}/],\"table-tag\":{pattern:/((?:^|[|!])[|!])[^|\\r\\n]+\\|(?!\\|)/m,lookbehind:!0,inside:{\"table-bar\":{pattern:/\\|$/,alias:\"punctuation\"},rest:Prism.languages.markup.tag.inside}},punctuation:/^(?:\\{\\||\\|\\}|\\|-|[*#:;!|])|\\|\\||!!/m}),Prism.languages.insertBefore(\"wiki\",\"tag\",{nowiki:{pattern:/<(nowiki|pre|source)\\b[\\s\\S]*?>[\\s\\S]*?<\\/\\1>/i,inside:{tag:{pattern:/<(?:nowiki|pre|source)\\b[\\s\\S]*?>|<\\/(?:nowiki|pre|source)>/i,inside:Prism.languages.markup.tag.inside}}}});","(function(Prism) {\n\tPrism.languages.xeora = Prism.languages.extend('markup', {\n\t\t'constant': {\n\t\t\tpattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': {\n\t\t\t\t\tpattern: /\\$/\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'variable': {\n\t\t\tpattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': {\n\t\t\t\t\tpattern: /[$.]/\n\t\t\t\t},\n\t\t\t\t'operator': {\n\t\t\t\t\tpattern: /#+|[-+*~=^@]/\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'function-inline': {\n\t\t\tpattern: /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?\\$/,\n\t\t\tinside: {\n\t\t\t\t'variable': {\n\t\t\t\t\tpattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': {\n\t\t\t\t\t\t\tpattern: /[,.|]/\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'operator': {\n\t\t\t\t\t\t\tpattern: /#+|[-+*~=^@]/\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'punctuation': {\n\t\t\t\t\tpattern: /\\$\\w:|[$:?.,|]/\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'function'\n\t\t},\n\t\t'function-block': {\n\t\t\tpattern: /\\$XF:{[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?}:XF\\$/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': {\n\t\t\t\t\tpattern: /[$:{}?.,|]/\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'function'\n\t\t},\n\t\t'directive-inline': {\n\t\t\tpattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\/\\w.]+\\$/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': {\n\t\t\t\t\tpattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'tag': {\n\t\t\t\t\t\t\tpattern: /#\\d/\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'function'\n\t\t},\n\t\t'directive-block-open': {\n\t\t\tpattern: /\\$\\w+:{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\w.]+:{(![A-Z]+)?/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': {\n\t\t\t\t\tpattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'tag': {\n\t\t\t\t\t\t\tpattern: /#\\d/\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'attribute': {\n\t\t\t\t\tpattern: /![A-Z]+$/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': {\n\t\t\t\t\t\t\tpattern: /!/\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\talias: 'keyword'\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'function'\n\t\t},\n\t\t'directive-block-separator': {\n\t\t\tpattern: /}:[-\\w.]+:{/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': {\n\t\t\t\t\tpattern: /[:{}]/\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'function'\n\t\t},\n\t\t'directive-block-close': {\n\t\t\tpattern: /}:[-\\w.]+\\$/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': {\n\t\t\t\t\tpattern: /[:{}$]/\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'function'\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('inside', 'punctuation', {\n\t\t'variable': Prism.languages.xeora['function-inline'].inside['variable']\n\t}, Prism.languages.xeora[\"function-block\"]);\n\n\tPrism.languages.xeoracube = Prism.languages.xeora;\n\n}(Prism));","!function(n){n.languages.xeora=n.languages.extend(\"markup\",{constant:{pattern:/\\$(?:DomainContents|PageRenderDuration)\\$/,inside:{punctuation:{pattern:/\\$/}}},variable:{pattern:/\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,inside:{punctuation:{pattern:/[$.]/},operator:{pattern:/#+|[-+*~=^@]/}}},\"function-inline\":{pattern:/\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?\\$/,inside:{variable:{pattern:/(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,inside:{punctuation:{pattern:/[,.|]/},operator:{pattern:/#+|[-+*~=^@]/}}},punctuation:{pattern:/\\$\\w:|[$:?.,|]/}},alias:\"function\"},\"function-block\":{pattern:/\\$XF:{[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?}:XF\\$/,inside:{punctuation:{pattern:/[$:{}?.,|]/}},alias:\"function\"},\"directive-inline\":{pattern:/\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\/\\w.]+\\$/,inside:{punctuation:{pattern:/\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,inside:{tag:{pattern:/#\\d/}}}},alias:\"function\"},\"directive-block-open\":{pattern:/\\$\\w+:{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\w.]+:{(![A-Z]+)?/,inside:{punctuation:{pattern:/\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,inside:{tag:{pattern:/#\\d/}}},attribute:{pattern:/![A-Z]+$/,inside:{punctuation:{pattern:/!/}},alias:\"keyword\"}},alias:\"function\"},\"directive-block-separator\":{pattern:/}:[-\\w.]+:{/,inside:{punctuation:{pattern:/[:{}]/}},alias:\"function\"},\"directive-block-close\":{pattern:/}:[-\\w.]+\\$/,inside:{punctuation:{pattern:/[:{}$]/}},alias:\"function\"}}),n.languages.insertBefore(\"inside\",\"punctuation\",{variable:n.languages.xeora[\"function-inline\"].inside.variable},n.languages.xeora[\"function-block\"]),n.languages.xeoracube=n.languages.xeora}(Prism);","Prism.languages.xojo = {\n\t'comment': {\n\t\tpattern: /(?:'|\\/\\/|Rem\\b).+/i,\n\t\tinside: {\n\t\t\t'keyword': /^Rem/i\n\t\t}\n\t},\n\t'string': {\n\t\tpattern: /\"(?:\"\"|[^\"])*\"/,\n\t\tgreedy: true\n\t},\n\t'number': [\n\t\t/(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n\t\t/&[bchou][a-z\\d]+/i\n\t],\n\t'symbol': /#(?:If|Else|ElseIf|Endif|Pragma)\\b/i,\n\t'keyword': /\\b(?:AddHandler|App|Array|As(?:signs)?|By(?:Ref|Val)|Break|Call|Case|Catch|Const|Continue|CurrentMethodName|Declare|Dim|Do(?:wnTo)?|Each|Else(?:If)?|End|Exit|Extends|False|Finally|For|Global|If|In|Lib|Loop|Me|Next|Nil|Optional|ParamArray|Raise(?:Event)?|ReDim|Rem|RemoveHandler|Return|Select|Self|Soft|Static|Step|Super|Then|To|True|Try|Ubound|Until|Using|Wend|While)\\b/i,\n\t'operator': /<[=>]?|>=?|[+\\-*\\/\\\\^=]|\\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|Xor|WeakAddressOf)\\b/i,\n\t'punctuation': /[.,;:()]/\n};","Prism.languages.xojo={comment:{pattern:/(?:'|\\/\\/|Rem\\b).+/i,inside:{keyword:/^Rem/i}},string:{pattern:/\"(?:\"\"|[^\"])*\"/,greedy:!0},number:[/(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,/&[bchou][a-z\\d]+/i],symbol:/#(?:If|Else|ElseIf|Endif|Pragma)\\b/i,keyword:/\\b(?:AddHandler|App|Array|As(?:signs)?|By(?:Ref|Val)|Break|Call|Case|Catch|Const|Continue|CurrentMethodName|Declare|Dim|Do(?:wnTo)?|Each|Else(?:If)?|End|Exit|Extends|False|Finally|For|Global|If|In|Lib|Loop|Me|Next|Nil|Optional|ParamArray|Raise(?:Event)?|ReDim|Rem|RemoveHandler|Return|Select|Self|Soft|Static|Step|Super|Then|To|True|Try|Ubound|Until|Using|Wend|While)\\b/i,operator:/<[=>]?|>=?|[+\\-*\\/\\\\^=]|\\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|Xor|WeakAddressOf)\\b/i,punctuation:/[.,;:()]/};","(function (Prism) {\n\n\tPrism.languages.xquery = Prism.languages.extend('markup', {\n\t\t'xquery-comment': {\n\t\t\tpattern: /\\(:[\\s\\S]*?:\\)/,\n\t\t\tgreedy: true,\n\t\t\talias: \"comment\"\n\t\t},\n\t\t'string': {\n\t\t\tpattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'extension': {\n\t\t\tpattern: /\\(#.+?#\\)/,\n\t\t\talias: 'symbol'\n\t\t},\n\t\t'variable': /\\$[\\w-:]+/,\n\t\t'axis': {\n\t\t\tpattern: /(^|[^-])(?:ancestor(?:-or-self)?|attribute|child|descendant(?:-or-self)?|following(?:-sibling)?|parent|preceding(?:-sibling)?|self)(?=::)/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'operator'\n\t\t},\n\t\t'keyword-operator': {\n\t\t\tpattern: /(^|[^:-])\\b(?:and|castable as|div|eq|except|ge|gt|idiv|instance of|intersect|is|le|lt|mod|ne|or|union)\\b(?=$|[^:-])/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'operator'\n\t\t},\n\t\t'keyword': {\n\t\t\tpattern: /(^|[^:-])\\b(?:as|ascending|at|base-uri|boundary-space|case|cast as|collation|construction|copy-namespaces|declare|default|descending|else|empty (?:greatest|least)|encoding|every|external|for|function|if|import|in|inherit|lax|let|map|module|namespace|no-inherit|no-preserve|option|order(?: by|ed|ing)?|preserve|return|satisfies|schema|some|stable|strict|strip|then|to|treat as|typeswitch|unordered|validate|variable|version|where|xquery)\\b(?=$|[^:-])/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'function': /[\\w-]+(?::[\\w-]+)*(?=\\s*\\()/,\n\t\t'xquery-element': {\n\t\t\tpattern: /(element\\s+)[\\w-]+(?::[\\w-]+)*/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'tag'\n\t\t},\n\t\t'xquery-attribute': {\n\t\t\tpattern: /(attribute\\s+)[\\w-]+(?::[\\w-]+)*/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'attr-name'\n\t\t},\n\t\t'builtin': {\n\t\t\tpattern: /(^|[^:-])\\b(?:attribute|comment|document|element|processing-instruction|text|xs:(?:anyAtomicType|anyType|anyURI|base64Binary|boolean|byte|date|dateTime|dayTimeDuration|decimal|double|duration|ENTITIES|ENTITY|float|gDay|gMonth|gMonthDay|gYear|gYearMonth|hexBinary|ID|IDREFS?|int|integer|language|long|Name|NCName|negativeInteger|NMTOKENS?|nonNegativeInteger|nonPositiveInteger|normalizedString|NOTATION|positiveInteger|QName|short|string|time|token|unsigned(?:Byte|Int|Long|Short)|untyped(?:Atomic)?|yearMonthDuration))\\b(?=$|[^:-])/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'number': /\\b\\d+(?:\\.\\d+)?(?:E[+-]?\\d+)?/,\n\t\t'operator': [\n\t\t\t/[+*=?|@]|\\.\\.?|:=|!=|<[=<]?|>[=>]?/,\n\t\t\t{\n\t\t\t\tpattern: /(\\s)-(?=\\s)/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'punctuation': /[[\\](){},;:/]/\n\t});\n\n\tPrism.languages.xquery.tag.pattern = /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|{(?!{)(?:{(?:{[^}]*}|[^}])*}|[^}])+}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i;\n\tPrism.languages.xquery['tag'].inside['attr-value'].pattern = /=(?:(\"|')(?:\\\\[\\s\\S]|{(?!{)(?:{(?:{[^}]*}|[^}])*}|[^}])+}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i;\n\tPrism.languages.xquery['tag'].inside['attr-value'].inside['punctuation'] = /^=\"|\"$/;\n\tPrism.languages.xquery['tag'].inside['attr-value'].inside['expression'] = {\n\t\t// Allow for two levels of nesting\n\t\tpattern: /{(?!{)(?:{(?:{[^}]*}|[^}])*}|[^}])+}/,\n\t\tinside: {\n\t\t\trest: Prism.languages.xquery\n\t\t},\n\t\t'alias': 'language-xquery'\n\t};\n\n\t// The following will handle plain text inside tags\n\tvar stringifyToken = function (token) {\n\t\tif (typeof token === 'string') {\n\t\t\treturn token;\n\t\t}\n\t\tif (typeof token.content === 'string') {\n\t\t\treturn token.content;\n\t\t}\n\t\treturn token.content.map(stringifyToken).join('');\n\t};\n\n\tvar walkTokens = function (tokens) {\n\t\tvar openedTags = [];\n\t\tfor (var i = 0; i < tokens.length; i++) {\n\t\t\tvar token = tokens[i];\n\t\t\tvar notTagNorBrace = false;\n\n\t\t\tif (typeof token !== 'string') {\n\t\t\t\tif (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n\t\t\t\t\t// We found a tag, now find its kind\n\n\t\t\t\t\tif (token.content[0].content[0].content === '</') {\n\t\t\t\t\t\t// Closing tag\n\t\t\t\t\t\tif (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n\t\t\t\t\t\t\t// Pop matching opening tag\n\t\t\t\t\t\t\topenedTags.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (token.content[token.content.length - 1].content === '/>') {\n\t\t\t\t\t\t\t// Autoclosed tag, ignore\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Opening tag\n\t\t\t\t\t\t\topenedTags.push({\n\t\t\t\t\t\t\t\ttagName: stringifyToken(token.content[0].content[1]),\n\t\t\t\t\t\t\t\topenedBraces: 0\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (\n\t\t\t\t\topenedTags.length > 0 && token.type === 'punctuation' && token.content === '{' &&\n\t\t\t\t\t// Ignore `{{`\n\t\t\t\t\t(!tokens[i + 1] || tokens[i + 1].type !== 'punctuation' || tokens[i + 1].content !== '{') &&\n\t\t\t\t\t(!tokens[i - 1] || tokens[i - 1].type !== 'plain-text' || tokens[i - 1].content !== '{')\n\t\t\t\t) {\n\t\t\t\t\t// Here we might have entered an XQuery expression inside a tag\n\t\t\t\t\topenedTags[openedTags.length - 1].openedBraces++;\n\n\t\t\t\t} else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n\n\t\t\t\t\t// Here we might have left an XQuery expression inside a tag\n\t\t\t\t\topenedTags[openedTags.length - 1].openedBraces--;\n\n\t\t\t\t} else if (token.type !== 'comment') {\n\t\t\t\t\tnotTagNorBrace = true\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (notTagNorBrace || typeof token === 'string') {\n\t\t\t\tif (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n\t\t\t\t\t// Here we are inside a tag, and not inside an XQuery expression.\n\t\t\t\t\t// That's plain text: drop any tokens matched.\n\t\t\t\t\tvar plainText = stringifyToken(token);\n\n\t\t\t\t\t// And merge text with adjacent text\n\t\t\t\t\tif (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n\t\t\t\t\t\tplainText += stringifyToken(tokens[i + 1]);\n\t\t\t\t\t\ttokens.splice(i + 1, 1);\n\t\t\t\t\t}\n\t\t\t\t\tif (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n\t\t\t\t\t\tplainText = stringifyToken(tokens[i - 1]) + plainText;\n\t\t\t\t\t\ttokens.splice(i - 1, 1);\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (/^\\s+$/.test(plainText)) {\n\t\t\t\t\t\ttokens[i] = plainText;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (token.content && typeof token.content !== 'string') {\n\t\t\t\twalkTokens(token.content);\n\t\t\t}\n\t\t}\n\t};\n\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tif (env.language !== 'xquery') {\n\t\t\treturn;\n\t\t}\n\t\twalkTokens(env.tokens);\n\t});\n\n}(Prism));","!function(r){r.languages.xquery=r.languages.extend(\"markup\",{\"xquery-comment\":{pattern:/\\(:[\\s\\S]*?:\\)/,greedy:!0,alias:\"comment\"},string:{pattern:/([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,greedy:!0},extension:{pattern:/\\(#.+?#\\)/,alias:\"symbol\"},variable:/\\$[\\w-:]+/,axis:{pattern:/(^|[^-])(?:ancestor(?:-or-self)?|attribute|child|descendant(?:-or-self)?|following(?:-sibling)?|parent|preceding(?:-sibling)?|self)(?=::)/,lookbehind:!0,alias:\"operator\"},\"keyword-operator\":{pattern:/(^|[^:-])\\b(?:and|castable as|div|eq|except|ge|gt|idiv|instance of|intersect|is|le|lt|mod|ne|or|union)\\b(?=$|[^:-])/,lookbehind:!0,alias:\"operator\"},keyword:{pattern:/(^|[^:-])\\b(?:as|ascending|at|base-uri|boundary-space|case|cast as|collation|construction|copy-namespaces|declare|default|descending|else|empty (?:greatest|least)|encoding|every|external|for|function|if|import|in|inherit|lax|let|map|module|namespace|no-inherit|no-preserve|option|order(?: by|ed|ing)?|preserve|return|satisfies|schema|some|stable|strict|strip|then|to|treat as|typeswitch|unordered|validate|variable|version|where|xquery)\\b(?=$|[^:-])/,lookbehind:!0},function:/[\\w-]+(?::[\\w-]+)*(?=\\s*\\()/,\"xquery-element\":{pattern:/(element\\s+)[\\w-]+(?::[\\w-]+)*/,lookbehind:!0,alias:\"tag\"},\"xquery-attribute\":{pattern:/(attribute\\s+)[\\w-]+(?::[\\w-]+)*/,lookbehind:!0,alias:\"attr-name\"},builtin:{pattern:/(^|[^:-])\\b(?:attribute|comment|document|element|processing-instruction|text|xs:(?:anyAtomicType|anyType|anyURI|base64Binary|boolean|byte|date|dateTime|dayTimeDuration|decimal|double|duration|ENTITIES|ENTITY|float|gDay|gMonth|gMonthDay|gYear|gYearMonth|hexBinary|ID|IDREFS?|int|integer|language|long|Name|NCName|negativeInteger|NMTOKENS?|nonNegativeInteger|nonPositiveInteger|normalizedString|NOTATION|positiveInteger|QName|short|string|time|token|unsigned(?:Byte|Int|Long|Short)|untyped(?:Atomic)?|yearMonthDuration))\\b(?=$|[^:-])/,lookbehind:!0},number:/\\b\\d+(?:\\.\\d+)?(?:E[+-]?\\d+)?/,operator:[/[+*=?|@]|\\.\\.?|:=|!=|<[=<]?|>[=>]?/,{pattern:/(\\s)-(?=\\s)/,lookbehind:!0}],punctuation:/[[\\](){},;:/]/}),r.languages.xquery.tag.pattern=/<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|{(?!{)(?:{(?:{[^}]*}|[^}])*}|[^}])+}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,r.languages.xquery.tag.inside[\"attr-value\"].pattern=/=(?:(\"|')(?:\\\\[\\s\\S]|{(?!{)(?:{(?:{[^}]*}|[^}])*}|[^}])+}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i,r.languages.xquery.tag.inside[\"attr-value\"].inside.punctuation=/^=\"|\"$/,r.languages.xquery.tag.inside[\"attr-value\"].inside.expression={pattern:/{(?!{)(?:{(?:{[^}]*}|[^}])*}|[^}])+}/,inside:{rest:r.languages.xquery},alias:\"language-xquery\"};var s=function(e){return\"string\"==typeof e?e:\"string\"==typeof e.content?e.content:e.content.map(s).join(\"\")},l=function(e){for(var t=[],n=0;n<e.length;n++){var a=e[n],o=!1;if(\"string\"!=typeof a&&(\"tag\"===a.type&&a.content[0]&&\"tag\"===a.content[0].type?\"</\"===a.content[0].content[0].content?0<t.length&&t[t.length-1].tagName===s(a.content[0].content[1])&&t.pop():\"/>\"===a.content[a.content.length-1].content||t.push({tagName:s(a.content[0].content[1]),openedBraces:0}):!(0<t.length&&\"punctuation\"===a.type&&\"{\"===a.content)||e[n+1]&&\"punctuation\"===e[n+1].type&&\"{\"===e[n+1].content||e[n-1]&&\"plain-text\"===e[n-1].type&&\"{\"===e[n-1].content?0<t.length&&0<t[t.length-1].openedBraces&&\"punctuation\"===a.type&&\"}\"===a.content?t[t.length-1].openedBraces--:\"comment\"!==a.type&&(o=!0):t[t.length-1].openedBraces++),(o||\"string\"==typeof a)&&0<t.length&&0===t[t.length-1].openedBraces){var i=s(a);n<e.length-1&&(\"string\"==typeof e[n+1]||\"plain-text\"===e[n+1].type)&&(i+=s(e[n+1]),e.splice(n+1,1)),0<n&&(\"string\"==typeof e[n-1]||\"plain-text\"===e[n-1].type)&&(i=s(e[n-1])+i,e.splice(n-1,1),n--),/^\\s+$/.test(i)?e[n]=i:e[n]=new r.Token(\"plain-text\",i,null,i)}a.content&&\"string\"!=typeof a.content&&l(a.content)}};r.hooks.add(\"after-tokenize\",function(e){\"xquery\"===e.language&&l(e.tokens)})}(Prism);","Prism.languages.yaml = {\n\t'scalar': {\n\t\tpattern: /([\\-:]\\s*(?:![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/,\n\t\tlookbehind: true,\n\t\talias: 'string'\n\t},\n\t'comment': /#.*/,\n\t'key': {\n\t\tpattern: /(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,\n\t\tlookbehind: true,\n\t\talias: 'atrule'\n\t},\n\t'directive': {\n\t\tpattern: /(^[ \\t]*)%.+/m,\n\t\tlookbehind: true,\n\t\talias: 'important'\n\t},\n\t'datetime': {\n\t\tpattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?)(?=[ \\t]*(?:$|,|]|}))/m,\n\t\tlookbehind: true,\n\t\talias: 'number'\n\t},\n\t'boolean': {\n\t\tpattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:true|false)[ \\t]*(?=$|,|]|})/im,\n\t\tlookbehind: true,\n\t\talias: 'important'\n\t},\n\t'null': {\n\t\tpattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:null|~)[ \\t]*(?=$|,|]|})/im,\n\t\tlookbehind: true,\n\t\talias: 'important'\n\t},\n\t'string': {\n\t\tpattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2(?=[ \\t]*(?:$|,|]|}|\\s*#))/m,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'number': {\n\t\tpattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,\n\t\tlookbehind: true\n\t},\n\t'tag': /![^\\s]+/,\n\t'important': /[&*][\\w]+/,\n\t'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n};\n\nPrism.languages.yml = Prism.languages.yaml;","Prism.languages.yaml={scalar:{pattern:/([\\-:]\\s*(?:![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/,lookbehind:!0,alias:\"string\"},comment:/#.*/,key:{pattern:/(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,lookbehind:!0,alias:\"atrule\"},directive:{pattern:/(^[ \\t]*)%.+/m,lookbehind:!0,alias:\"important\"},datetime:{pattern:/([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?)(?=[ \\t]*(?:$|,|]|}))/m,lookbehind:!0,alias:\"number\"},boolean:{pattern:/([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:true|false)[ \\t]*(?=$|,|]|})/im,lookbehind:!0,alias:\"important\"},null:{pattern:/([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:null|~)[ \\t]*(?=$|,|]|})/im,lookbehind:!0,alias:\"important\"},string:{pattern:/([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2(?=[ \\t]*(?:$|,|]|}|\\s*#))/m,lookbehind:!0,greedy:!0},number:{pattern:/([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,lookbehind:!0},tag:/![^\\s]+/,important:/[&*][\\w]+/,punctuation:/---|[:[\\]{}\\-,|>?]|\\.\\.\\./},Prism.languages.yml=Prism.languages.yaml;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _unistBuilder = _interopRequireDefault(require(\"unist-builder\"));\n\nvar _mime = _interopRequireDefault(require(\"mime\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = function _default(h, node) {\n  var uri = node.uri,\n      desc = node.desc;\n  var props = {\n    href: uri.raw\n  };\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title;\n  }\n\n  var type = _mime.default.getType(uri.raw);\n\n  if (type && type.startsWith(\"image\")) {\n    props = {\n      src: uri.raw,\n      alt: desc\n    };\n    return h(node, \"img\", props);\n  }\n\n  return h(node, \"a\", props, [(0, _unistBuilder.default)(\"text\", desc)]);\n};\n\nexports.default = _default;","'use strict';\n\nvar Mime = require('./Mime');\nmodule.exports = new Mime(require('./types/standard'), require('./types/other'));\n","'use strict';\n\n/**\n * @param typeMap [Object] Map of MIME type -> Array[extensions]\n * @param ...\n */\nfunction Mime() {\n  this._types = Object.create(null);\n  this._extensions = Object.create(null);\n\n  for (var i = 0; i < arguments.length; i++) {\n    this.define(arguments[i]);\n  }\n\n  this.define = this.define.bind(this);\n  this.getType = this.getType.bind(this);\n  this.getExtension = this.getExtension.bind(this);\n}\n\n/**\n * Define mimetype -> extension mappings.  Each key is a mime-type that maps\n * to an array of extensions associated with the type.  The first extension is\n * used as the default extension for the type.\n *\n * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});\n *\n * If a type declares an extension that has already been defined, an error will\n * be thrown.  To suppress this error and force the extension to be associated\n * with the new type, pass `force`=true.  Alternatively, you may prefix the\n * extension with \"*\" to map the type to extension, without mapping the\n * extension to the type.\n *\n * e.g. mime.define({'audio/wav', ['wav']}, {'audio/x-wav', ['*wav']});\n *\n *\n * @param map (Object) type definitions\n * @param force (Boolean) if true, force overriding of existing definitions\n */\nMime.prototype.define = function(typeMap, force) {\n  for (var type in typeMap) {\n    var extensions = typeMap[type].map(function(t) {return t.toLowerCase()});\n    type = type.toLowerCase();\n\n    for (var i = 0; i < extensions.length; i++) {\n      var ext = extensions[i];\n\n      // '*' prefix = not the preferred type for this extension.  So fixup the\n      // extension, and skip it.\n      if (ext[0] == '*') {\n        continue;\n      }\n\n      if (!force && (ext in this._types)) {\n        throw new Error(\n          'Attempt to change mapping for \"' + ext +\n          '\" extension from \"' + this._types[ext] + '\" to \"' + type +\n          '\". Pass `force=true` to allow this, otherwise remove \"' + ext +\n          '\" from the list of extensions for \"' + type + '\".'\n        );\n      }\n\n      this._types[ext] = type;\n    }\n\n    // Use first extension as default\n    if (force || !this._extensions[type]) {\n      var ext = extensions[0];\n      this._extensions[type] = (ext[0] != '*') ? ext : ext.substr(1)\n    }\n  }\n};\n\n/**\n * Lookup a mime type based on extension\n */\nMime.prototype.getType = function(path) {\n  path = String(path);\n  var last = path.replace(/^.*[/\\\\]/, '').toLowerCase();\n  var ext = last.replace(/^.*\\./, '').toLowerCase();\n\n  var hasPath = last.length < path.length;\n  var hasDot = ext.length < last.length - 1;\n\n  return (hasDot || !hasPath) && this._types[ext] || null;\n};\n\n/**\n * Return file extension associated with a mime type\n */\nMime.prototype.getExtension = function(type) {\n  type = /^\\s*([^;\\s]*)/.test(type) && RegExp.$1;\n  return type && this._extensions[type.toLowerCase()] || null;\n};\n\nmodule.exports = Mime;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bold = bold;\nexports.italic = italic;\nexports.code = code;\nexports.underline = underline;\nexports.verbatim = verbatim;\nexports.strikeThrough = strikeThrough;\n\nvar _transform = require(\"../transform\");\n\nfunction bold(h, node) {\n  return h(node, 'strong', (0, _transform.all)(h, node));\n}\n\nfunction italic(h, node) {\n  return h(node, 'i', (0, _transform.all)(h, node));\n}\n\nfunction code(h, node) {\n  return h(node, 'code', (0, _transform.all)(h, node));\n}\n\nfunction underline(h, node) {\n  return h(node, 'u', (0, _transform.all)(h, node));\n}\n\nfunction verbatim(h, node) {\n  return h(node, 'code', (0, _transform.all)(h, node));\n}\n\nfunction strikeThrough(h, node) {\n  return h(node, 'del', (0, _transform.all)(h, node));\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _transform = require(\"../transform\");\n\n/* Transform a list. */\nvar _default = function _default(h, node) {\n  var props = {};\n  var name = node.ordered ? 'ol' : 'ul';\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start;\n  }\n\n  return h(node, name, props, (0, _transform.all)(h, node));\n};\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _transform = require(\"../transform\");\n\nvar _default = function _default(h, node) {\n  var props = {};\n  var result = (0, _transform.all)(h, node);\n\n  if (typeof node.checked === \"boolean\") {\n    result.unshift(h(null, 'input', {\n      type: 'checkbox',\n      checked: node.checked,\n      disabled: true\n    }));\n  }\n\n  return h(node, 'li', props, result);\n};\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.table = table;\nexports.tableRow = tableRow;\nexports.tableCell = tableCell;\n\nvar _transform = require(\"../transform\");\n\nfunction table(h, node) {\n  return h(node, 'table', (0, _transform.all)(h, node));\n}\n\nfunction tableRow(h, node) {\n  return h(node, 'tr', (0, _transform.all)(h, node));\n}\n\nfunction tableCell(h, node) {\n  return h(node, 'td', (0, _transform.all)(h, node));\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _default = function _default(h, node) {\n  return h(node, 'hr');\n};\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _unistBuilder = _interopRequireDefault(require(\"unist-builder\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = function _default(h, node) {\n  return (0, _unistBuilder.default)('raw', node.value);\n};\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _transform = require(\"../transform\");\n\nvar _default = function _default(h, node) {\n  return h(node, 'p', (0, _transform.all)(h, node));\n};\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.definition = definition;\nexports.reference = reference;\n\nvar _unistBuilder = _interopRequireDefault(require(\"unist-builder\"));\n\nvar _transform = require(\"../transform\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction definition(h, node) {\n  var label = node.label;\n  var props = {\n    id: \"fn-\".concat(label),\n    className: \"footnote\",\n    dataLabel: label\n  };\n  return h(node, \"div\", props, (0, _transform.all)(h, node));\n}\n\nfunction reference(h, node) {\n  var label = node.label;\n  return h(node, \"sup\", {\n    id: \"fnref-\".concat(label)\n  }, [h(node, \"a\", {\n    href: \"#fn-\".concat(label)\n  }, [(0, _unistBuilder.default)(\"text\", label)])]);\n}","'use strict'\nmodule.exports = require('./lib')\n","'use strict'\n\nvar html = require('property-information/html')\nvar svg = require('property-information/svg')\nvar voids = require('html-void-elements')\nvar omission = require('./omission')\nvar one = require('./one')\n\nmodule.exports = toHtml\n\nvar quotationMark = '\"'\nvar apostrophe = \"'\"\n\n// Stringify the given hast node.\nfunction toHtml(node, options) {\n  var settings = options || {}\n  var quote = settings.quote || quotationMark\n  var alternative = quote === quotationMark ? apostrophe : quotationMark\n  var smart = settings.quoteSmart\n\n  if (quote !== quotationMark && quote !== apostrophe) {\n    throw new Error(\n      'Invalid quote `' +\n        quote +\n        '`, expected `' +\n        apostrophe +\n        '` or `' +\n        quotationMark +\n        '`'\n    )\n  }\n\n  return one(\n    {\n      valid: settings.allowParseErrors ? 0 : 1,\n      safe: settings.allowDangerousCharacters ? 0 : 1,\n      schema: settings.space === 'svg' ? svg : html,\n      omit: settings.omitOptionalTags && omission,\n      quote: quote,\n      alternative: smart ? alternative : null,\n      unquoted: Boolean(settings.preferUnquoted),\n      tight: settings.tightAttributes,\n      tightDoctype: Boolean(settings.tightDoctype),\n      tightLists: settings.tightCommaSeparatedLists,\n      tightClose: settings.tightSelfClosing,\n      collapseEmpty: settings.collapseEmptyAttributes,\n      dangerous: settings.allowDangerousHTML,\n      voids: settings.voids || voids.concat(),\n      entities: settings.entities || {},\n      close: settings.closeSelfClosing,\n      closeEmpty: settings.closeEmptyElements\n    },\n    node\n  )\n}\n","'use strict'\nexports.opening = require('./opening')\nexports.closing = require('./closing')\n","'use strict'\n\nvar convert = require('unist-util-is/convert')\nvar element = require('hast-util-is-element')\nvar before = require('./util/siblings').before\nvar first = require('./util/first')\nvar place = require('./util/place')\nvar whiteSpaceLeft = require('./util/white-space-left')\nvar closing = require('./closing')\nvar omission = require('./omission')\n\nvar own = {}.hasOwnProperty\n\nvar isComment = convert('comment')\n\nvar uniqueHeadMetadata = ['title', 'base']\nvar meta = ['meta', 'link', 'script', 'style', 'template']\nvar tableContainers = ['thead', 'tbody']\nvar tableRow = 'tr'\n\nmodule.exports = omission({\n  html: html,\n  head: head,\n  body: body,\n  colgroup: colgroup,\n  tbody: tbody\n})\n\n// Whether to omit `<html>`.\nfunction html(node) {\n  var head = first(node)\n  return !head || !isComment(head)\n}\n\n// Whether to omit `<head>`.\nfunction head(node) {\n  var children = node.children\n  var length = children.length\n  var map = {}\n  var index = -1\n  var child\n  var name\n\n  while (++index < length) {\n    child = children[index]\n    name = child.tagName\n\n    if (element(child, uniqueHeadMetadata)) {\n      if (own.call(map, name)) {\n        return false\n      }\n\n      map[name] = true\n    }\n  }\n\n  return Boolean(length)\n}\n\n// Whether to omit `<body>`.\nfunction body(node) {\n  var head = first(node, true)\n\n  return (\n    !head || (!isComment(head) && !whiteSpaceLeft(head) && !element(head, meta))\n  )\n}\n\n// Whether to omit `<colgroup>`.\n// The spec describes some logic for the opening tag, but it’s easier to\n// implement in the closing tag, to the same effect, so we handle it there\n// instead.\nfunction colgroup(node, index, parent) {\n  var prev = before(parent, index)\n  var head = first(node, true)\n\n  // Previous colgroup was already omitted.\n  if (element(prev, 'colgroup') && closing(prev, place(parent, prev), parent)) {\n    return false\n  }\n\n  return head && element(head, 'col')\n}\n\n// Whether to omit `<tbody>`.\nfunction tbody(node, index, parent) {\n  var prev = before(parent, index)\n  var head = first(node)\n\n  // Previous table section was already omitted.\n  if (\n    element(prev, tableContainers) &&\n    closing(prev, place(parent, prev), parent)\n  ) {\n    return false\n  }\n\n  return head && element(head, tableRow)\n}\n","'use strict'\n\nvar after = require('./siblings').after\n\nmodule.exports = first\n\n// Get the first child in `parent`.\nfunction first(parent, includeWhiteSpace) {\n  return after(parent, -1, includeWhiteSpace)\n}\n","'use strict'\n\nmodule.exports = place\n\n// Get the position of `node` in `parent`.\nfunction place(parent, child) {\n  return parent && parent.children && parent.children.indexOf(child)\n}\n","'use strict'\n\nmodule.exports = decimal\n\n// Check if the given character code, or the character code at the first\n// character, is decimal.\nfunction decimal(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n","'use strict'\n\nvar xtend = require('xtend')\nvar svg = require('property-information/svg')\nvar find = require('property-information/find')\nvar spaces = require('space-separated-tokens').stringify\nvar commas = require('comma-separated-tokens').stringify\nvar entities = require('stringify-entities')\nvar ccount = require('ccount')\nvar all = require('./all')\nvar constants = require('./constants')\n\nmodule.exports = element\n\nvar space = ' '\nvar quotationMark = '\"'\nvar apostrophe = \"'\"\nvar equalsTo = '='\nvar lessThan = '<'\nvar greaterThan = '>'\nvar slash = '/'\n\n// Stringify an element `node`.\nfunction element(ctx, node, index, parent) {\n  var parentSchema = ctx.schema\n  var name = node.tagName\n  var value = ''\n  var selfClosing\n  var close\n  var omit\n  var root = node\n  var content\n  var attrs\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    ctx.schema = svg\n  }\n\n  attrs = attributes(ctx, node.properties)\n\n  if (ctx.schema.space === 'svg') {\n    omit = false\n    close = true\n    selfClosing = ctx.closeEmpty\n  } else {\n    omit = ctx.omit\n    close = ctx.close\n    selfClosing = ctx.voids.indexOf(name.toLowerCase()) !== -1\n\n    if (name === 'template') {\n      root = node.content\n    }\n  }\n\n  content = all(ctx, root)\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  selfClosing = content ? false : selfClosing\n\n  if (attrs || !omit || !omit.opening(node, index, parent)) {\n    value = lessThan + name + (attrs ? space + attrs : '')\n\n    if (selfClosing && close) {\n      if (!ctx.tightClose || attrs.charAt(attrs.length - 1) === slash) {\n        value += space\n      }\n\n      value += slash\n    }\n\n    value += greaterThan\n  }\n\n  value += content\n\n  if (!selfClosing && (!omit || !omit.closing(node, index, parent))) {\n    value += lessThan + slash + name + greaterThan\n  }\n\n  ctx.schema = parentSchema\n\n  return value\n}\n\n// Stringify all attributes.\nfunction attributes(ctx, props) {\n  var values = []\n  var key\n  var value\n  var result\n  var length\n  var index\n  var last\n\n  for (key in props) {\n    value = props[key]\n\n    if (value == null) {\n      continue\n    }\n\n    result = attribute(ctx, key, value)\n\n    if (result) {\n      values.push(result)\n    }\n  }\n\n  length = values.length\n  index = -1\n\n  while (++index < length) {\n    result = values[index]\n    last = null\n\n    if (ctx.tight) {\n      last = result.charAt(result.length - 1)\n    }\n\n    // In tight mode, don’t add a space after quoted attributes.\n    if (index !== length - 1 && last !== quotationMark && last !== apostrophe) {\n      values[index] = result + space\n    }\n  }\n\n  return values.join('')\n}\n\n// Stringify one attribute.\nfunction attribute(ctx, key, value) {\n  var schema = ctx.schema\n  var info = find(schema, key)\n  var name = info.attribute\n\n  if (info.overloadedBoolean && (value === name || value === '')) {\n    value = true\n  } else if (\n    info.boolean ||\n    (info.overloadedBoolean && typeof value !== 'string')\n  ) {\n    value = Boolean(value)\n  }\n\n  if (\n    value == null ||\n    value === false ||\n    (typeof value === 'number' && isNaN(value))\n  ) {\n    return ''\n  }\n\n  name = attributeName(ctx, name)\n\n  if (value === true) {\n    // There is currently only one boolean property in SVG: `[download]` on\n    // `<a>`.\n    // This property does not seem to work in browsers (FF, Sa, Ch), so I can’t\n    // test if dropping the value works.\n    // But I assume that it should:\n    //\n    // ```html\n    // <!doctype html>\n    // <svg viewBox=\"0 0 100 100\">\n    //   <a href=https://example.com download>\n    //     <circle cx=50 cy=40 r=35 />\n    //   </a>\n    // </svg>\n    // ```\n    //\n    // See: <https://github.com/wooorm/property-information/blob/master/lib/svg.js>\n    return name\n  }\n\n  return name + attributeValue(ctx, key, value, info)\n}\n\n// Stringify the attribute name.\nfunction attributeName(ctx, name) {\n  // Always encode without parse errors in non-HTML.\n  var valid = ctx.schema.space === 'html' ? ctx.valid : 1\n  var subset = constants.name[valid][ctx.safe]\n\n  return entities(name, xtend(ctx.entities, {subset: subset}))\n}\n\n// Stringify the attribute value.\nfunction attributeValue(ctx, key, value, info) {\n  var options = ctx.entities\n  var quote = ctx.quote\n  var alternative = ctx.alternative\n  var unquoted\n  var subset\n\n  if (typeof value === 'object' && 'length' in value) {\n    // `spaces` doesn’t accept a second argument, but it’s given here just to\n    // keep the code cleaner.\n    value = (info.commaSeparated ? commas : spaces)(value, {\n      padLeft: !ctx.tightLists\n    })\n  }\n\n  value = String(value)\n\n  if (value || !ctx.collapseEmpty) {\n    unquoted = value\n\n    // Check unquoted value.\n    if (ctx.unquoted) {\n      subset = constants.unquoted[ctx.valid][ctx.safe]\n      unquoted = entities(\n        value,\n        xtend(options, {subset: subset, attribute: true})\n      )\n    }\n\n    // If `value` contains entities when unquoted…\n    if (!ctx.unquoted || unquoted !== value) {\n      // If the alternative is less common than `quote`, switch.\n      if (alternative && ccount(value, quote) > ccount(value, alternative)) {\n        quote = alternative\n      }\n\n      subset = quote === apostrophe ? constants.single : constants.double\n      // Always encode without parse errors in non-HTML.\n      subset = subset[ctx.schema.space === 'html' ? ctx.valid : 1][ctx.safe]\n\n      value = entities(value, xtend(options, {subset: subset, attribute: true}))\n\n      value = quote + value + quote\n    }\n\n    // Don’t add a `=` for unquoted empties.\n    value = value ? equalsTo + value : value\n  }\n\n  return value\n}\n","'use strict'\n\nexports.parse = parse\nexports.stringify = stringify\n\nvar trim = require('trim')\n\nvar comma = ','\nvar space = ' '\nvar empty = ''\n\n/* Parse comma-separated tokens to an array. */\nfunction parse(value) {\n  var values = []\n  var input = String(value || empty)\n  var index = input.indexOf(comma)\n  var lastIndex = 0\n  var end = false\n  var val\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    val = trim(input.slice(lastIndex, index))\n\n    if (val || !end) {\n      values.push(val)\n    }\n\n    lastIndex = index + 1\n    index = input.indexOf(comma, lastIndex)\n  }\n\n  return values\n}\n\n/* Compile an array to comma-separated tokens.\n * `options.padLeft` (default: `true`) pads a space left of each\n * token, and `options.padRight` (default: `false`) pads a space\n * to the right of each token. */\nfunction stringify(values, options) {\n  var settings = options || {}\n  var left = settings.padLeft === false ? empty : space\n  var right = settings.padRight ? space : empty\n\n  /* Ensure the last empty entry is seen. */\n  if (values[values.length - 1] === empty) {\n    values = values.concat(empty)\n  }\n\n  return trim(values.join(right + comma + left))\n}\n","'use strict'\n\n// Characters.\nvar nil = '\\0'\nvar ampersand = '&'\nvar space = ' '\nvar tab = '\\t'\nvar graveAccent = '`'\nvar quotationMark = '\"'\nvar apostrophe = \"'\"\nvar equalsTo = '='\nvar lessThan = '<'\nvar greaterThan = '>'\nvar slash = '/'\nvar lineFeed = '\\n'\nvar carriageReturn = '\\r'\nvar formFeed = '\\f'\n\nvar whitespace = [space, tab, lineFeed, carriageReturn, formFeed]\n\n// See: <https://html.spec.whatwg.org/#attribute-name-state>.\nvar name = whitespace.concat(ampersand, slash, greaterThan, equalsTo)\n\n// See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\nvar unquoted = whitespace.concat(ampersand, greaterThan)\nvar unquotedSafe = unquoted.concat(\n  nil,\n  quotationMark,\n  apostrophe,\n  lessThan,\n  equalsTo,\n  graveAccent\n)\n\n// See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\nvar singleQuoted = [ampersand, apostrophe]\n\n// See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\nvar doubleQuoted = [ampersand, quotationMark]\n\n// Maps of subsets.\n// Each value is a matrix of tuples.\n// The first value causes parse errors, the second is valid.\n// Of both values, the first value is unsafe, and the second is safe.\nmodule.exports = {\n  name: [\n    [name, name.concat(quotationMark, apostrophe, graveAccent)],\n    [\n      name.concat(nil, quotationMark, apostrophe, lessThan),\n      name.concat(nil, quotationMark, apostrophe, lessThan, graveAccent)\n    ]\n  ],\n  unquoted: [[unquoted, unquotedSafe], [unquotedSafe, unquotedSafe]],\n  single: [\n    [singleQuoted, singleQuoted.concat(quotationMark, graveAccent)],\n    [\n      singleQuoted.concat(nil),\n      singleQuoted.concat(nil, quotationMark, graveAccent)\n    ]\n  ],\n  double: [\n    [doubleQuoted, doubleQuoted.concat(apostrophe, graveAccent)],\n    [\n      doubleQuoted.concat(nil),\n      doubleQuoted.concat(nil, apostrophe, graveAccent)\n    ]\n  ]\n}\n","'use strict'\n\nmodule.exports = doctype\n\n// Stringify a doctype `node`.\nfunction doctype(ctx, node) {\n  var sep = ctx.tightDoctype ? '' : ' '\n  var name = node.name\n  var pub = node.public\n  var sys = node.system\n  var val = ['<!doctype']\n\n  if (name) {\n    val.push(sep, name)\n\n    if (pub != null) {\n      val.push(' public', sep, smart(pub))\n    } else if (sys != null) {\n      val.push(' system')\n    }\n\n    if (sys != null) {\n      val.push(sep, smart(sys))\n    }\n  }\n\n  return val.join('') + '>'\n}\n\nfunction smart(value) {\n  var quote = value.indexOf('\"') === -1 ? '\"' : \"'\"\n  return quote + value + quote\n}\n","'use strict'\n\nmodule.exports = comment\n\n// Stringify a comment `node`.\nfunction comment(ctx, node) {\n  return '<!--' + node.value + '-->'\n}\n","'use strict'\n\nvar text = require('./text')\n\nmodule.exports = raw\n\n// Stringify `raw`.\nfunction raw(ctx, node) {\n  return ctx.dangerous ? node.value : text(ctx, node)\n}\n","const Parser = require('./parser')\n\nfunction parse(string, options = require('./defaults')) {\n  const parser = new Parser(options)\n  return parser.parse(string)\n}\n\nmodule.exports = {\n  Parser,\n  parse,\n}\n","const Lexer = require('./lexer')\nconst Node = require('./node')\n\nfunction Parser(options = require('./defaults')) {\n  this.options = options\n  this.lexer = new Lexer(this.options)\n  this.prefix = []\n  this._aks = {} // Affiliated Keywords\n  this._cel = 0 // Consecutive Empty Lines\n}\n\nParser.prototype.peek = function() {\n  if (this.prefix.length > 0) return this.prefix[0]\n  return this.getToken(this.cursor + 1)\n}\n\nParser.prototype.hasNext = function() {\n  return this.prefix.length > 0 || this.cursor + 1 < this.lines.length\n}\n\nParser.prototype.consume = function() {\n  if (this.prefix.length > 0) return this.prefix.shift()\n  this.cursor++\n  return this.getToken(this.cursor)\n}\n\nParser.prototype.next = function() {\n  return this.consume()\n}\n\nParser.prototype.getToken = function(index) {\n  var self = this\n  if (index >= self.lines.length) { return undefined }\n  if (index >= self.tokens.length) {\n    const start = self.tokens.length\n    for (var i = start; i <= index; i++) {\n      self.tokens.push(self.lexer.tokenize(self.lines[i]))\n    }\n  }\n  return self.tokens[index]\n}\n\nParser.prototype.downgradeToLine = function(index) {\n  const { raw } = this.tokens[index]\n  this.tokens[index] = { name: `line`, raw, data: { content: raw.trim() }}\n}\n\nParser.prototype.tryTo = function(process) {\n  const restorePoint = this.cursor\n  const result = process.bind(this)()\n  if (result) { return result }\n  this.cursor = restorePoint\n  return result\n}\n\nParser.prototype.processor = require('./processors')\n\nParser.prototype.parse = function(string) {\n  var self = this\n  const document = new Node('root').with({ meta: {} })\n  self.cursor = -1\n  self.lines = string.split('\\n') // TODO: more robust lines?\n  self.tokens = []\n  return this.parseSection(document)\n}\n\n/* Total Awareness -- according to Ross */\nParser.prototype.unagi = function(element) {\n  if (Object.keys(this._aks).length === 0) return element\n  element.attributes = this._aks\n  return element\n}\n\nParser.prototype.parseSection = function(section) {\n  const token = this.peek()\n  if (!token) return section\n  if (token.name !== `blank`) this._cel = 0 // reset consecutive empty lines\n  const p = this.processor[token.name]\n  if (p) {\n    return p.bind(this)(token, section)\n  }\n  this.consume()\n  this._aks = {}\n  return this.parseSection(section)\n}\n\nmodule.exports = Parser\n","const { escape } = require('./utils')\n\nfunction Syntax() {\n  this.rules = []\n}\n\nSyntax.prototype = {\n  define: function(name, pattern, post = () => { return {} }) {\n    this.rules.push({\n      name,\n      pattern,\n      post,\n    })\n  },\n\n  update: function(name, pattern) {\n    const i = this.rules.findIndex(r => r.name === name)\n    var newRule = { name, post: () => {} }\n    if (i !== -1) {\n      newRule = this.rules.splice(i, 1)[0]\n    }\n    newRule.pattern = pattern\n    this.rules.splice(i, 0, newRule)\n  }\n}\n\nvar org = new Syntax()\n\nfunction headlinePattern(todos = ['TODO', 'DONE']) {\n  return RegExp(`^(\\\\*+)\\\\s+(?:(${todos.map(escape).join('|')})\\\\s+)?(?:\\\\[#(A|B|C)\\\\]\\\\s+)?(.*?)\\\\s*(:(?:\\\\w+:)+)?$`)\n}\n\norg.define('headline', headlinePattern(), m => {\n  const level = m[1].length\n  const keyword = m[2]\n  const priority = m[3]\n  const content = m[4]\n  const tags = (m[5] || '').split(':').map( str => str.trim()).filter(String)\n  return { level, keyword, priority, content, tags }\n})\n\norg.define('keyword', /^\\s*#\\+(\\w+):\\s*(.*)$/, m => {\n  const key = m[1]\n  const value = m[2]\n  return { key, value }\n})\n\nconst PLANNING_KEYWORDS = ['DEADLINE', 'SCHEDULED', 'CLOSED']\norg.define('planning', RegExp(`^\\\\s*(${PLANNING_KEYWORDS.join('|')}):\\\\s*(.+)$`), m => {\n  const keyword = m[1]\n  const timestamp = m[2]\n  return { keyword, timestamp }\n})\n\norg.define('block.begin', /^\\s*#\\+begin_(\\w+)(.*)$/i, m => {\n  const type = m[1]\n  const params = m[2].split(' ').map( str => str.trim()).filter(String)\n  return { type, params }\n})\n\norg.define('block.end', /^\\s*#\\+end_(\\w+)$/i, m => {\n  const type = m[1]\n  return { type }\n})\n\norg.define('drawer.end', /^\\s*:end:\\s*$/i)\n\norg.define('drawer.begin', /^\\s*:(\\w+):\\s*$/, m => {\n  const type = m[1]\n  return { type }\n})\n\norg.define('list.item', /^(\\s*)([-+]|\\d+[.)])\\s+(?:\\[(x|X|-| )\\])?(.*)$/, m => {\n  const indent = m[1].length\n  const bullet = m[2]\n  const content = m[4]\n  var ordered = true\n  if ( [`-`, `+`].includes(bullet) ) {\n    ordered = false\n  }\n\n  var result = { indent, ordered, content }\n  if (m[3]) {\n    var checked = m[3] !== ' '\n    result.checked = checked\n  }\n  return result\n})\n\norg.define('table.separator', /^\\s*\\|-/)\n\norg.define('table.row', /^\\s*\\|(\\s*.+\\|)+\\s*$/, m => {\n  const cells = m[1].split('|').map( str => str.trim()).filter(String)\n  return { cells }\n})\n\norg.define('horizontalRule', /^\\s*-{5,}\\s*$/)\n\norg.define('comment', /^\\s*#\\s.*$/)\n\norg.define('footnote', /^\\[fn:(\\w+)\\]\\s+(.*)$/, m => {\n  const label = m[1]\n  const content = m[2]\n  return { label, content }\n})\n\nfunction Lexer(options = require('./defaults')) {\n  this.syntax = org\n  const { todos } = options\n  if (todos) {\n    this.updateTODOs(todos)\n  }\n}\n\nLexer.prototype = {\n  tokenize: function (input) {\n    for ( const { name, pattern, post } of this.syntax.rules ) {\n      const m = pattern.exec(input)\n      if (!m) { continue }\n      var token = { name, raw: input }\n      token.data = post(m)\n      return token\n    }\n\n    const trimed = input.trim()\n    if (trimed === '') {\n      return { name: `blank`, raw: input }\n    }\n\n    return { name: `line`, raw: input }\n  },\n\n  updateTODOs: function(todos) {\n    this.syntax.update(`headline`, headlinePattern(todos))\n  }\n\n}\n\nmodule.exports = Lexer\n","var matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g\n\nfunction escape(str) {\n  if (typeof str !== 'string') {\n    throw new TypeError('Expected a string')\n  }\n  return str.replace(matchOperatorsRe, '\\\\$&')\n}\n\nmodule.exports = { escape }\n","const keyword = require('./keyword')\nconst headline = require('./headline')\nconst line = require('./line')\nconst block = require('./block')\nconst list = require('./list')\nconst table = require('./table')\nconst horizontalRule = require('./horizontal-rule')\nconst footnote = require('./footnote')\nconst blank = require('./blank')\n\nmodule.exports = {\n  keyword,\n  headline,\n  line,\n  \"block.begin\": block,\n  \"list.item\": list,\n  \"table.row\": table,\n  horizontalRule,\n  footnote,\n  blank,\n}\n","const Node = require('../node')\n\nfunction process(token, section) {\n  const { key, value } = token.data\n  switch (key) {\n  case `TODO`:\n    if (section.type !== `root`) break\n    const todos = value.split(/\\s|\\|/g).filter(String)\n    section.meta.todos = todos\n    this.lexer.updateTODOs(todos)\n    break\n  case `HTML`:\n    section.push(new Node(`html`).with({ value }))\n    break\n  case `CAPTION`:\n  case `HEADER`:\n  case `NAME`:\n  case `PLOT`:\n  case `RESULTS`:\n    this._aks[key] = value\n    break\n  default:\n    if (section.type === `root`) {\n      let field = key.toLowerCase()\n        if (!section.meta[field]) {\n          section.meta[field] = value;\n        }\n        else {\n          if (!Array.isArray(section.meta[field])) {\n            let list = [];\n            list.push(section.meta[field])\n            section.meta[field] = list\n          }\n          section.meta[field].push(value)\n        }\n    }\n    break\n  }\n  this.consume()\n  return this.parseSection(section)\n}\n\nmodule.exports = process\n","const Node = require('../node')\nconst inlineParse = require('../inline').parse\n\nfunction parsePlanning() {\n  const token = this.next()\n  if (!token || token.name !== `planning`) { return undefined }\n  return new Node('planning').with(token.data)\n}\n\nfunction parseDrawer() {\n  const begin = this.next()\n  var lines = []\n  while (this.hasNext()) {\n    const t = this.next()\n    if ( t.name === `headline` ) { return undefined }\n    if (t.name === `drawer.end` ) {\n      return new Node('drawer').with({ name: begin.data.type, value: lines.join(`\\n`) })\n    }\n    lines.push(t.raw)\n  }\n  return undefined\n}\n\nfunction process(token, section) {\n  if (section.type === `footnote.definition`) return section // headline breaks footnote\n  const { level, keyword, priority, tags, content } = token.data\n  const currentLevel = section.level || 0\n  if (level <= currentLevel) { return section }\n  this.consume()\n  const text = inlineParse(content)\n  var headline = new Node('headline', text).with({\n    level, keyword, priority, tags\n  })\n  const planning = this.tryTo(parsePlanning)\n  if (planning) {\n    headline.push(planning)\n  }\n\n  while (this.hasNext() && this.peek().name === `drawer.begin`) {\n    let drawer = this.tryTo(parseDrawer)\n    if (!drawer) { // broken drawer\n      this.downgradeToLine(this.cursor + 1)\n      break\n    }\n    headline.push(drawer)\n  }\n  const newSection = new Node(`section`).with({ level })\n  newSection.push(headline)\n  section.push(this.parseSection(this.unagi(newSection)))\n  this._aks = {}\n  return this.parseSection(section)\n}\n\nmodule.exports = process\n","const URL_PATTERN = /(?:([a-z][a-z0-9+.-]*):)?(.*)/\n\nfunction parse(link) {\n  var result = { raw: link }\n  const m = URL_PATTERN.exec(link)\n  if (!m) return result\n  result.protocol = (m[1] || (isFilePath(m[2]) ? `file` : `internal`)).toLowerCase()\n  result.location = m[2]\n  return processFilePath(result)\n\n  function isFilePath(str) {\n    return str.match(/^\\.{0,2}\\//)\n  }\n}\n\nfunction processFilePath(link) {\n  if (link.protocol !== `file`) return link\n  // const pattern = /([^:]*?)(?:::(.*))?/\n  const pattern = /(.*?)::(.*)/\n  const m = pattern.exec(link.location)\n  if (!m) return link\n  if (m[2]) {\n    link.location = m[1]\n    link.query = processQuery(m[2])\n  }\n  return link\n}\n\nfunction processQuery(q) {\n  const ln = parseInt(q)\n  if (ln) {\n    return { ln }\n  }\n  if (q.startsWith(`*`)) {\n    const headline = q.replace(/^\\*+/, '')\n    return { headline }\n  }\n  return { text: q }\n}\n\nmodule.exports = parse\n","const Node = require('../node')\nconst inlineParse = require('../inline').parse\n\nfunction process(token, section) {\n\n  var nodes = []\n  while (this.hasNext()) {\n    const token = this.peek()\n    // also eats broken block/drawer ends\n    if (![`line`, `block.end`, `drawer.end`].includes(token.name)) break\n    this.consume()\n    push(token.raw.trim())\n  }\n  section.push(new Node(`paragraph`, nodes))\n\n  this._aks = {}\n  return this.parseSection(section)\n\n  function push(line) {\n    let newNodes = inlineParse(line)\n    // merge text newNodes\n    if (nodes.length > 0 &&\n        nodes[nodes.length - 1].type === `text` &&\n        newNodes.length > 0 &&\n        newNodes[0].type === `text`) {\n      const n = newNodes.shift()\n      let last = nodes.pop()\n      last.value = `${last.value} ${n.value}`\n      nodes.push(last)\n    }\n\n    nodes = [...nodes, ...newNodes]\n  }\n}\n\nmodule.exports = process\n","const Node = require('../node')\n\nfunction parseBlock() {\n  const t = this.next()\n  const { data: { type, params } } = t\n  var lines = []\n  while (this.hasNext()) {\n    const t = this.next()\n    if ( t.name === `headline` ) { return undefined }\n    if (t.name === `block.end` && t.data.type.toUpperCase() === type.toUpperCase() ) {\n      if (t.data.type.toUpperCase() === `EXPORT`) {\n        const format = params[0]\n        return new Node(format).with({ value: lines.join(`\\n`) })\n      }\n      return new Node('block').with({ name: type.toUpperCase(), params, value: lines.join(`\\n`) })\n    }\n    lines.push(t.raw)\n  }\n  return undefined\n}\n\nfunction process(token, section) {\n  const block = this.tryTo(parseBlock)\n  if (block) section.push(this.unagi(block))\n  else this.downgradeToLine(this.cursor + 1)\n  this._aks = {}\n  return this.parseSection(section)\n}\n\nmodule.exports = process\n","const Node = require('../node')\nconst inlineParse = require('../inline').parse\n\nfunction process(token, section) {\n\n  var self = this\n\n  const parseListItem = () => {\n    const { indent, content, ordered, checked } = self.next().data\n    var lines = [content]\n    const item = new Node(`list.item`).with({ ordered })\n    if (checked !== undefined) {\n      item.checked = checked\n    }\n    while (self.hasNext()) {\n      const { name, raw } = self.peek()\n      if (name !== `line`) break\n      const lineIndent = raw.search(/\\S/)\n      if (lineIndent <= indent) break\n      lines.push(self.next().raw.trim())\n    }\n    item.push(inlineParse(lines.join(` `)))\n    return item\n  }\n\n  const parseList = level => {\n    const list = new Node(`list`)\n    while (self.hasNext()) {\n      const token = self.peek()\n      if ( token.name !== `list.item` ) break\n      const { indent } = token.data\n      if (indent <= level) break\n      const item = parseListItem()\n      item.push(parseList(indent))\n      list.push(item)\n    }\n    if (list.children.length > 0) { // list\n      list.ordered = list.children[0].ordered\n      return list\n    }\n    return undefined\n  }\n\n  section.push(this.unagi(parseList(-1)))\n  this._aks = {}\n  return this.parseSection(section)\n}\n\nmodule.exports = process\n","const Node = require('../node')\nconst inlineParse = require('../inline').parse\n\nfunction process(token, section) {\n\n  var self = this\n\n  const parseTable = () => {\n    const table = new Node(`table`)\n    while (self.hasNext()) {\n      const token = self.peek()\n      if ( !token.name.startsWith(`table.`) ) break\n      self.consume()\n      if (token.name === `table.separator`) {\n        table.push(new Node(`table.separator`))\n        continue\n      }\n      if ( token.name !== `table.row` ) break\n      const cells = token.data.cells.map(c => new Node(`table.cell`, inlineParse(c)))\n      const row = new Node(`table.row`, cells)\n      table.push(row)\n    }\n    return table\n  }\n\n  const table = this.unagi(parseTable())\n  section.push(table)\n\n  return this.parseSection(section)\n}\n\nmodule.exports = process\n","const Node = require('../node')\n\nfunction process(token, section) {\n  this.consume()\n  section.push(new Node(`horizontalRule`))\n  this._aks = {}\n  return this.parseSection(section)\n}\n\nmodule.exports = process\n","const Node = require('../node')\n\nfunction process(token, section) {\n\n  if (section.type === `footnote.definition`) return section // footnote breaks footnote\n  var self = this\n\n  const parseFootnote = () => {\n    const { label, content } = self.next().data\n    self.prefix = [{ name: `line`, raw: content, data: { content: content.trim() } }]\n    return self.parseSection(new Node(`footnote.definition`).with({ label }))\n  }\n  section.push(parseFootnote())\n  self._aks = {}\n  return self.parseSection(section)\n}\n\nmodule.exports = process\n","function process(token, section) {\n  var self = this\n  self._cel++\n  self.consume()\n  if (section.type === `footnote` && self._cel > 1) return section\n  self._aks = {}\n  return self.parseSection(section)\n}\n\nmodule.exports = process\n"],"sourceRoot":""}