{"version":3,"sources":["webpack:///./src/components/profile.js","webpack:///./src/templates/about.js","webpack:///./src/components/title.js","webpack:///./src/components/page.js","webpack:///./src/components/content.js"],"names":["Profile","p","photo","css","width","height","Object","core_browser_esm","src","img","alt","AboutTemplate","render","post","this","props","data","orgContent","margins","theme","profile","meta","profile_alt","page","title","site","siteMetadata","profile_Profile","content","html","hideTitle","Component","pageQuery","withTheme","Title","Helmet_default","a","property","children","Page","title_Title","Content","hide","_ref","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","small","dangerouslySetInnerHTML","__html"],"mappings":"sJAGaA,EAAU,SAAAC,GACrB,IAAMC,EAAQC,cAAH,aACIF,EAAEG,MADN,eAEKH,EAAEI,OAFP,oHAWX,OACEC,OAAAC,EAAA,IAAAD,CAAA,WACEA,OAAAC,EAAA,IAAAD,CAAA,OAAKH,IAAKD,EAAOM,IAAKP,EAAEQ,IAAKC,IAAKT,EAAES,4DCVpCC,4FACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,WACrBC,EAAYJ,KAAKC,MAAMI,MAAvBD,QACAE,EAAYP,EAAKQ,KAAjBD,QACFV,EAAMG,EAAKQ,KAAKC,YACtB,OACEhB,OAAAC,EAAA,IAAAD,CAACiB,EAAA,EAAD,CAAMC,MAAOX,EAAKQ,KAAKG,MAAOC,KAAMX,KAAKC,MAAMC,KAAKS,KAAKC,aAAaF,OACpElB,OAAAC,EAAA,IAAAD,CAACqB,EAAD,CAASvB,MAAOc,EAAQE,QAASf,OAAQa,EAAQE,QAASX,IAAKW,EAASV,IAAKA,IAC7EJ,OAAAC,EAAA,IAAAD,CAACsB,EAAA,EAAD,CAASC,KAAMhB,EAAKgB,KAAMC,WAAW,SATjBC,aAiBfC,GAFEC,sBAAUtB,GAEH,mFChBTuB,EAAQ,SAAAjC,GAAC,OACpBK,OAAAC,EAAA,IAAAD,CAAA,WACEA,OAAAC,EAAA,IAAAD,CAAC6B,EAAAC,EAAD,KACE9B,OAAAC,EAAA,IAAAD,CAAA,QAAM+B,SAAS,WAAWT,QAAS3B,EAAEuB,QACrClB,OAAAC,EAAA,IAAAD,CAAA,cATakB,EASKvB,EAAEuB,MATAC,EASOxB,EAAEwB,KAR5BD,EACKA,EAAV,MAAqBC,EADFA,KAUhBxB,EAAEqC,UAXW,IAACd,EAAOC,mCCAnB,IAAMc,EAAO,SAAAtC,GAAC,OACnBK,OAAAC,EAAA,IAAAD,CAACkC,EAAD,CAAOhB,MAAOvB,EAAEuB,MAAOC,KAAMxB,EAAEwB,MAC7BnB,OAAAC,EAAA,IAAAD,CAAA,eACGL,EAAEqC,oKCHIG,EAAU,SAAAxC,GACrB,IAAMyC,EAAIC,EAYV,OACErC,OAAAsC,EAAA,IAAAtC,CAAA,OAAKH,IARK,SAAAgB,GAAK,OAAIhB,aAAJ,CACbF,EAAE6B,UAAYY,EAAO,GADR,sBAGIvB,EAAMD,QAAQ2B,MAHlB,yBASZC,wBAAyB,CAAEC,OAAQ9C,EAAE4B","file":"component---src-templates-about-js-f7e526bdbd40f3061214.js","sourcesContent":["import React from 'react'\nimport { css } from '@emotion/core'\n\nexport const Profile = p => {\n  const photo = css`\n    max-width: ${p.width};\n    max-height: ${p.height};\n    float: right;\n    display: block;\n    @media screen and (max-width: 700px) {\n      float: none;\n      margin: 1em auto !important;\n      width: 50%;\n    }\n  `\n  return (\n    <div>\n      <img css={photo} src={p.img} alt={p.alt} />\n    </div>\n  )\n}\n","import React, { Component } from \"react\"\nimport { Content } from '../components/content'\nimport { Page } from '../components/page'\nimport { Profile } from '../components/profile'\nimport { graphql } from 'gatsby'\nimport { withTheme } from 'emotion-theming'\n\nclass AboutTemplate extends Component {\n  render() {\n    const post = this.props.data.orgContent\n    const { margins } = this.props.theme\n    const { profile } = post.meta\n    const alt = post.meta.profile_alt\n    return (\n      <Page title={post.meta.title} site={this.props.data.site.siteMetadata.title}>\n        <Profile width={margins.profile} height={margins.profile} img={profile} alt={alt} />\n        <Content html={post.html} hideTitle={true} />\n      </Page>\n    )\n  }\n}\n\nexport default withTheme(AboutTemplate)\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    ...Title\n    orgContent(fields: {slug: {eq: $slug}}) {\n      ...Content\n    }\n  }\n`\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\nconst makeTitle = (title, site) => {\n  if (!title) return site\n  return `${title} - ${site}`\n}\n\nexport const Title = p => (\n  <div>\n    <Helmet>\n      <meta property=\"og:title\" content={p.title} />\n      <title>{makeTitle(p.title, p.site)}</title>\n    </Helmet>\n    {p.children}\n  </div>\n)\n","import React from 'react'\nimport { Title } from '../components/title'\n\nexport const Page = p => (\n  <Title title={p.title} site={p.site}>\n    <article>\n      {p.children}\n    </article>\n  </Title>\n)\n","import React from 'react'\nimport { css } from '@emotion/core'\n\nexport const Content = p => {\n  const hide = css`\n    div:first-of-type h1 {\n      display: none;\n    }\n  `\n  const org = theme => css`\n    ${p.hideTitle ? hide : ''}\n    div {\n      margin-bottom: ${theme.margins.small};\n      text-align: 'left';\n    }\n  `\n  return (\n    <div css={org}\n       dangerouslySetInnerHTML={{ __html: p.html }} />\n  )\n}\n"],"sourceRoot":""}