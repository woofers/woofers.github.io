{"pageProps":{"post":{"meta":{"layout":"post","title":"Using Anchors in Bitbucket Markdown Documents","date":"Tue, 23 Oct 2018 00:00:00 GMT"},"content":"---\nlayout: post\ntitle: Using Anchors in Bitbucket Markdown Documents\ndate: 2018-10-23\n---\n\n# Using Anchors in Bitbucket Markdown Documents\n\nUsing [Markdown](https://daringfireball.net/projects/markdown/syntax) to write content is a joy; gone are the days of clunky and [slow word processors](https://support.microsoft.com/en-ca/help/918793/how-to-optimize-word-2007-and-word-2010).  Leveraging *HTML* tags for complete control over your document when needed and falling back to a simple and constant syntax for simpler operations works great.  Most [VCS](https://en.wikipedia.org/wiki/Version_control) hosting platforms will recognize the extension and render it. For larger documents typically organizing sections using a table of contents with anchors is an easy and streamlined process.\n\n\n<a id=\"org5d8e85b\"></a>\n\n## Leveraging HTML Anchors\n\nIn most documents I find myself doing something like this:\n\n```markdown\n# Table of Contents\n\n- [Battle Snake 2019](#orgf9ab559)\n    -   [Strategy](#org889b147)\n        -   [Drawbacks](#orgfb85c54)\n    -   [Battle History](#orgcfa9a90)\n    -   [Screenshots](#orgc2991ca)\n    -   [Usage](#org7bfc615)\n        -   [Prerequisites](#orge6d4f36)\n        -   [Test Server](#orgf8ef52a)\n        -   [Run Locally](#org73d091b)\n        -   [Deployment](#org3a27619)\n    -   [Acknowledgments](#org4a0f7fb)\n```\n\nAnd then later on linking the header to an *HTML* anchor:\n\n```markdown\n<a id=\"org889b147\"></a>\n\n## Strategy\n```\n\nThen any other place you want to refer to a section can be done using that ID:\n\n```markdown\nAnother drawback of our [strategy](#org889b147) was ...\n```\n\nThis renders great in [Github](https://github.com/woofers/battle-snake-2018/blob/master/README.md#table-of-contents) and is done automatically when using [Org mode](https://orgmode.org/)'s Markdown exporter.\n\n\n<a id=\"org2c309d3\"></a>\n\n## This Should Work in Bitbucket Cloud Right?\n\n<h4 style='padding-left: 35px'><i class=\"fas fa-exclamation-triangle\"></i> You would be wrong</h4>\n\nBitbucket Cloud very closely follows [John Gruber](https://daringfireball.net/projects/markdown/syntax)'s original Markdown specification with the exception of *HTML* tags.  Attempting to use *HTML* anchors will simply display the escaped *HTML* along with broken links.\n\n\n<a id=\"org920925d\"></a>\n\n### Why?\n\nStraight from [Atlassian](https://confluence.atlassian.com/bitbucket/readme-content-221449772.html#READMEcontent-ExtensionsandLanguages):\n\n> We don't support arbitrary HTML in Markdown, for example <table> tags.\n\nBitbucket Cloud uses [Python Markdown](https://github.com/Python-Markdown/markdown) to render its Markdown files with the [Safe Mode](https://github.com/Python-Markdown/markdown/blob/b62ddeda02fadcd09def9354eb2ef46a7562a106/docs/reference.md#the-details) option **escape** enabled.  This option simply escapes all *HTML* tags to `plain text`.\n\nThis is inconvenient as it greatly limits the customizability of Bitbucket Markdown documents however it prevents Bitbucket from needing to worry about malicious *HTML* and *scripts* being injected.\n\nI have seen [claims](https://confluence.atlassian.com/bitbucketserver/markdown-syntax-guide-776639995.html#Markdownsyntaxguide-readmeREADMEfiles) that *HTML* tags on the self-hosted Bitbucket Server are enabled however I am not able to confirm this.\n\n\n<a id=\"orgcf677b8\"></a>\n\n## How Does Github Handle It Then?\n\nGithub uses [CommonMarker](https://github.com/gjtorikian/commonmarker) which is a Ruby wrapper of [cmark](https://github.com/commonmark/cmark), a C implementation of the [CommonMark](https://commonmark.org/) spec which whitelists [some HTML tags](https://spec.commonmark.org/0.21/#raw-html).\n\nYou won't be able to [embed Youtube videos](https://stackoverflow.com/a/14945782) however the spec for Github's markup rendering is [documented](https://github.com/github/markup) to a much greater extent than that of Bitbucket.\n\n\n<a id=\"orgfe3586a\"></a>\n\n## Exploiting HTML IDs\n\nWhile there is no solution to allow the use of raw *HTML* in Bitbucket documents, anchors to headers and table of contents can still be displayed in Bitbucket Cloud.\n\n\n<a id=\"orga315bae\"></a>\n\n### Anchors\n\nThis can be done by utilizing the fact that all Markdown headers when rendered in Bitbucket will contain an *HTML ID* in the form:\n\n`markdown-header-[kebab-case-header]`\n\nFor example anchoring to this section in Bitbucket would be done with:\n\n`markdown-header-anchors`\n\nAll **spaces** will be replaced with **hyphens** and all **special characters** (*including dots*) will be **removed**.  The ID will also be all **lower-case**.\n\nLinking to the **strategy** section from our previous example would look like:\n\n```markdown\nAnother drawback of our [strategy](#markdown-header-strategy) was ...\n```\n\nThis is not ideal as it won't work in other Markdown renderers however it does allow the use of anchors for those who plan to display content exclusively in Bitbucket.  An *HTML* anchor tag can't be enterted for compatibility since Bitbucket will render it as plain-text.\n\n\n<a id=\"org3053679\"></a>\n\n### Table of Contents\n\nWhile the above technique of using anchors could be employed to manually generate a table of contents, a better solution does exist.  By simply inserting the TOC directive as follows, a table of contents should be generated in-place:\n\n```markdown\n[TOC]\n```\n\n<a id=\"org574c01b\"></a>\n\n### Why Does This Work?\n\nThe short answer is that the [Bitbucket Wiki](https://confluence.atlassian.com/bitbucket/add-a-table-of-contents-to-a-wiki-221451163.html) documents this directive.  The more in-depth answer is that the Python Markdown extension [TOC](https://github.com/Python-Markdown/markdown/blob/master/docs/extensions/toc.md) is being used.  This means that this solution will only work for any renderers powered by Python Markdown.\n\n\n<a id=\"org154d3d7\"></a>\n\n## Too Much Trouble for Anchors?\n\nFor those who were hoping Markdown would be the one true universal format, **its not there** *yet*.  For now to avoid all of this craziness I would recommend simply using Github.  However if you are really stuck with the Bitbucket ecosystem, *as I am at work*, the following should do the trick.\n","post":"anchors-in-bitbucket"},"title":"Using Anchors in Bitbucket Markdown Documents"},"__N_SSG":true}