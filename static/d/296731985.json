{"data":{"site":{"siteMetadata":{"exclude":[["discord-jam-2","DOGE: BOIS"],["woofers3d","Woofers 3D"],["ludum-dare-44","ALIEN, e x p a n s i o n ."],["react-pico-8","React PICO-8"],["react-yat","React YAT"],["opengraph-api"],["org-invoice-template"],["react-ludum-dare"],["woofers.github.io"],["kangaroo-country"],["chess"],["resume"],["java-formatter"],["battlesnake-2018"],["battlesnake-java-template"],["libgdx-tools-installer"],["challenger-deep-rofi"],["dotfiles"],["k9-krew"],["course-codes-bugs"],["noto-emoji-react"],["react-chameleon-theme-color"],["qmk-indicator"],["quefrency-case"]]}},"allRepositories":{"edges":[{"node":{"name":"quefrency-case","description":"üî™ ‚å®Ô∏è Files for my custom Quefrency keyboard case","url":"https://github.com/woofers/quefrency-case","homepage":"","stars":{"totalCount":0},"license":{"name":"Creative Commons Attribution 4.0 International"},"topics":{"nodes":[]},"readme":{"text":"\n\n# Quefrency Case\n\n**Files for my custom Quefrency keyboard case**\n\nOriginal case by [Chris Gutierrez](https://www.thingiverse.com/aureumleonis/about) and is available [here](https://www.thingiverse.com/thing:4236595).\n\nModified to fit the 60% right half of the Quefrency.\n"},"readmeOrg":null}},{"node":{"name":"qmk-indicator","description":"‚å®Ô∏è üí° Send Emacs vi mode to keyboard to control LED indicator light","url":"https://github.com/woofers/qmk-indicator","homepage":"","stars":{"totalCount":0},"license":null,"topics":{"nodes":[{"topic":{"name":"emacs"}},{"topic":{"name":"qmk"}}]},"readme":{"text":"\r\n\r\n# QMK Indicator\r\n\r\n**Send Emacs vi mode to keyboard to control LED indicator light**\r\n\r\nCode to control the LED indicator on my keyboard to display the emacs vi mode.\r\n"},"readmeOrg":{"text":"\r\n#+TITLE:\tQMK Indicator\r\n#+AUTHOR:\tJaxson Van Doorn\r\n#+EMAIL:\tjaxson.vandoorn@gmail.com\r\n#+OPTIONS:  num:nil toc:nil\r\n\r\n* QMK Indicator\r\n*Send Emacs vi mode to keyboard to control LED indicator light*\r\n\r\nCode to control the LED indicator on my keyboard to display the emacs vi mode.\r\n"}}},{"node":{"name":"noto-emoji-react","description":"Unicode 12.0 React SVG bindings for Noto Color Emoji font","url":"https://github.com/woofers/noto-emoji-react","homepage":"","stars":{"totalCount":1},"license":{"name":"Apache License 2.0"},"topics":{"nodes":[]},"readme":null,"readmeOrg":null}},{"node":{"name":"react-yat","description":"üåÄ üî† üìú Yet Another Typer component for React","url":"https://github.com/woofers/react-yat","homepage":"","stars":{"totalCount":2},"license":{"name":"MIT License"},"topics":{"nodes":[]},"readme":{"text":"\n\n# React Yet Another Typer\n\n[![img](https://github.com/woofers/react-yat/workflows/build/badge.svg)](https://github.com/woofers/react-yat/actions) [![img](https://david-dm.org/woofers/react-yat.svg)](https://www.npmjs.com/package/react-yat) [![img](https://badge.fury.io/js/react-yat.svg)](https://www.npmjs.com/package/react-yat) [![img](https://img.shields.io/npm/dt/react-yat.svg)](https://www.npmjs.com/package/react-yat) [![img](https://img.shields.io/npm/l/react-yat.svg)](https://github.com/woofers/react-yat/blob/master/LICENSE)\n\n`react-yat` is yet another typer component for React.\n\n\n# Why?\n\nWhile many other React typer components exists, `react-yat`\naims to be the most accessible and simplest to use.\n\nThis is achieved by allowing users to pass React children to the typer\nrather than a list of strings.  This allows visual content\nto be properly described by way of `ARIA` attributes.\nIt also comes with the advantage that many elements can\nbe wrapped to form a single token to be typed out as one\nor styling each text token differently.\n\nAdditionally `react-yat` uses a visually hidden\n`aria-live` region which contains the complete\ntyped out value which is read by screenreaders.\n\n\n# Installation\n\n**Yarn**\n\n    yarn add react-yat\n\n**npm**\n\n    npm install react-yat\n\n\n# Usage\n\n```jsx\nimport React from 'react'\nimport { Typer, TyperElement } from 'react-yat'\n\nconst App = () => {\n  return (\n    <h4>\n      <Typer prefix=\"I\" cursorWidth={3.9}>\n        <TyperElement>build games <span role=\"img\" aria-label=\"controller\">üéÆ</span></TyperElement>\n        <TyperElement>design apps <span role=\"img\" aria-label=\"paintbrush\">üñå</span></TyperElement>\n        <TyperElement>craft tools <span role=\"img\" aria-label=\"wrench\">üîß</span></TyperElement>\n        <TyperElement>have fun <span role=\"img\" aria-label=\"smile\">:)</span></TyperElement>\n        <TyperElement><span>stick</span> <span>toghther</span></TyperElement>\n      </Typer>\n    </h4>\n  )\n}\n\nexport default App\n```\n\nSimply add the component to the React application using JSX.\n\n\n## Props\n\n\n### Children\n\nThe elements to typed out. **Required**\n\nEach direct child of `Typer` must be of type `TyperElement`.\n\n\n### Prefix\n\n`prefix` is appended to the start of the typed out values. **Default:** None\n\nCan be any value of type `ReactNode`.\n\n\n### Cursor\n\n`cursor` indicates if the cursor is displayed. **Default:** `true`\n\n\n### Cursor Delay\n\n`cursorDelay` indicates the time it takes for the cursor to blink in seconds. **Default:** `2`\n\n\n### Cursor Width\n\n`cursorWidth` is a scale factor applied to the width of the cursor. **Default:** `1.75`\n\n\n### Type Delay\n\n`typeDelay` indicates the time it takes for a single token to be added in milliseconds. **Default:** `65`\n\n\n### Delete Delay\n\n`deleteDelay` indicates the time it takes for a single token to be deleted in milliseconds. **Default:** `55`\n\n\n### Completed Delay\n\n`completedDelay` indicates how long the typer waits when it is finished typing in milliseconds. **Default:** `3000`\n\n\n### Empty Delay\n\n`emptyDelay` indicates how long the typer waits when it is empty in milliseconds. **Default:** `1000`\n"},"readmeOrg":{"text":"\n#+TITLE:    React Yet Another Typer\n#+AUTHOR:\tJaxson Van Doorn\n#+EMAIL:\tjaxson.vandoorn@gmail.com\n#+OPTIONS:  num:nil toc:nil\n\n* React Yet Another Typer\n\n[[https://github.com/woofers/react-yat/actions][https://github.com/woofers/react-yat/workflows/build/badge.svg]] [[https://www.npmjs.com/package/react-yat][https://david-dm.org/woofers/react-yat.svg]] [[https://www.npmjs.com/package/react-yat][https://badge.fury.io/js/react-yat.svg]] [[https://www.npmjs.com/package/react-yat][https://img.shields.io/npm/dt/react-yat.svg]] [[https://github.com/woofers/react-yat/blob/master/LICENSE][https://img.shields.io/npm/l/react-yat.svg]]\n\n~react-yat~ is yet another typer component for React.\n\n* Why?\n\nWhile many other React typer components exists, ~react-yat~\naims to be the most accessible and simplest to use.\n\nThis is achieved by allowing users to pass React children to the typer\nrather than a list of strings.  This allows visual content\nto be properly described by way of ~ARIA~ attributes.\nIt also comes with the advantage that many elements can\nbe wrapped to form a single token to be typed out as one\nor styling each text token differently.\n\nAdditionally ~react-yat~ uses a visually hidden\n~aria-live~ region which contains the complete\ntyped out value which is read by screenreaders.\n\n* Installation\n\n*Yarn*\n#+BEGIN_SRC\nyarn add react-yat\n#+END_SRC\n\n*npm*\n#+BEGIN_SRC\nnpm install react-yat\n#+END_SRC\n\n* Usage\n\n#+BEGIN_SRC js\nimport React from 'react'\nimport { Typer, TyperElement } from 'react-yat'\n\nconst App = () => {\n  return (\n    <h4>\n      <Typer prefix=\"I\" cursorWidth={3.9}>\n        <TyperElement>build games <span role=\"img\" aria-label=\"controller\">üéÆ</span></TyperElement>\n        <TyperElement>design apps <span role=\"img\" aria-label=\"paintbrush\">üñå</span></TyperElement>\n        <TyperElement>craft tools <span role=\"img\" aria-label=\"wrench\">üîß</span></TyperElement>\n        <TyperElement>have fun <span role=\"img\" aria-label=\"smile\">:)</span></TyperElement>\n        <TyperElement><span>stick</span> <span>toghther</span></TyperElement>\n      </Typer>\n    </h4>\n  )\n}\n\nexport default App\n#+END_SRC\n\nSimply add the component to the React application using JSX.\n\n** Props\n*** Children\nThe elements to typed out. *Required*\n\nEach direct child of ~Typer~ must be of type ~TyperElement~.\n\n*** Prefix\n~prefix~ is appended to the start of the typed out values. *Default:* None\n\nCan be any value of type ~ReactNode~.\n\n*** Cursor\n\n~cursor~ indicates if the cursor is displayed. *Default:* ~true~\n*** Cursor Delay\n\n~cursorDelay~ indicates the time it takes for the cursor to blink in seconds. *Default:* ~2~\n*** Cursor Width\n\n~cursorWidth~ is a scale factor applied to the width of the cursor. *Default:* ~1.75~\n*** Type Delay\n\n~typeDelay~ indicates the time it takes for a single token to be added in milliseconds. *Default:* ~65~\n\n*** Delete Delay\n\n~deleteDelay~ indicates the time it takes for a single token to be deleted in milliseconds. *Default:* ~55~\n*** Completed Delay\n\n~completedDelay~ indicates how long the typer waits when it is finished typing in milliseconds. *Default:* ~3000~\n\n*** Empty Delay\n\n~emptyDelay~ indicates how long the typer waits when it is empty in milliseconds. *Default:* ~1000~\n"}}},{"node":{"name":"course-codes-bugs","description":"course.codes Public Bug Tracker","url":"https://github.com/woofers/course-codes-bugs","homepage":"https://course.codes/","stars":{"totalCount":0},"license":null,"topics":{"nodes":[]},"readme":{"text":"# course-codes-bugs\ncourse.codes Public Bug Tracker\n"},"readmeOrg":null}},{"node":{"name":"react-dialog-polyfill","description":"üñ±Ô∏è  üí¨ <dialog> element bundled with polyfill for React","url":"https://github.com/woofers/react-dialog-polyfill","homepage":"","stars":{"totalCount":0},"license":{"name":"MIT License"},"topics":{"nodes":[]},"readme":{"text":"\n\n# React Dialog Polyfill\n\n[![img](https://github.com/woofers/react-dialog-polyfill/workflows/build/badge.svg)](https://github.com/woofers/react-dialog-polyfill/actions) [![img](https://david-dm.org/woofers/react-dialog-polyfill.svg)](https://www.npmjs.com/package/react-dialog-polyfill) [![img](https://badge.fury.io/js/react-dialog-polyfill.svg)](https://www.npmjs.com/package/react-dialog-polyfill) [![img](https://img.shields.io/npm/dt/react-dialog-polyfill.svg)](https://www.npmjs.com/package/react-dialog-polyfill) [![img](https://img.shields.io/npm/l/react-dialog-polyfill.svg)](https://github.com/woofers/react-dialog-polyfill/blob/master/LICENSE)\n\n`<dialog>` element bundled with polyfill for React\n\n\n# Why?\n\nWhile many other more feature-rich React modal components exists, `react-dialog-polyfill`\naims to be a simple binding of the native `<dialog>` element for React.\n\nDifferences from most of the existing components:\n\n-   Native browser support in browsers like Chrome and Opera\n-   Polyfill for un-supported browsers\n-   Avoids using `React.createPortal`, allowing SSR in natively supported browsers\n-   Dialog always will display in-front of other elements regardless of `z-index`\n-   Selected info from dialog can be returned via `<form>` element\n-   Well suited for Electron apps\n\n\n# Installation\n\n**Yarn**\n\n    yarn add react-dialog-polyfill\n\n**npm**\n\n    npm install react-dialog-polyfill\n\n\n# Usage\n\n```jsx\nimport React, { useState } from 'react'\nimport { Modal, Dialog } from 'react-dialog-polyfill'\n\nconst App = () => {\n  const [dialog, setDialog] = useState(true)\n  const [modal, setModal] = useState(true)\n  return (\n    <div>\n      <Dialog open={dialog} onClose={(e, dialog) => alert('You closed the dialog')}>\n        <div>This is a dialog. Click \"Close\".</div>\n        <button onClick={() => setDialog(false)}>Close</button>\n      </Dialog>\n      <Modal open={modal}\n        onCancel={(e, dialog) => {\n          setModal(false)\n          alert('You canceled the modal')\n        }}\n        onClose={(e, dialog) => {\n          setModal(false)\n          const value = dialog.returnValue\n          if (value) alert(`You answered \"${dialog.returnValue}\" to the modal`)\n        }}\n      >\n        <form method=\"dialog\">\n          <div>\n            This is a modal.\n            Press <pre style={{ display: 'inline-block' }}>Escape</pre> to cancel.\n          </div>\n          <div>Do you like modals?</div>\n          <button type=\"submit\" value=\"no\">No</button>\n          <button type=\"submit\" value=\"yes\" autoFocus>Yes</button>\n        </form>\n      </Modal>\n    </div>\n  )\n}\n\nexport default App\n```\n\nSimply add the desired component to the React application using JSX.\n\nThe Modal component will block interaction with other elements when it is open, while the Dialog component will not.\n\n\n## Props\n\n\n### Open\n\n`open` indicates if the modal is open. **Default:** `false`\n\n\n### On Close\n\n`onClose` runs when the modal is explicitly closed. **Default:** `(event, modal) => {}`\n\nThat is the `open` prop state is toggled from `true` to `false`.\n\nThis means that having `onCancel={() => setModal(false)}` will call `onClose` from within `onCancel`.\n\n\n### On Cancel (Modal Only)\n\n`onCancel` runs when the modal is canceled using `Escape`. **Default:** `(event, modal) => {}`\n\nBy default the modal itself will not close as `open` will still be set however the event will trigger.\n\nIt is recommended to set `onCancel={() => setModal(false)}` to have the modal close when `Escape` is pressed.\n"},"readmeOrg":{"text":"\n#+TITLE:    React Dialog Ployfill\n#+AUTHOR:\tJaxson Van Doorn\n#+EMAIL:\tjaxson.vandoorn@gmail.com\n#+OPTIONS:  num:nil toc:nil\n\n* React Dialog Polyfill\n\n[[https://github.com/woofers/react-dialog-polyfill/actions][https://github.com/woofers/react-dialog-polyfill/workflows/build/badge.svg]] [[https://www.npmjs.com/package/react-dialog-polyfill][https://david-dm.org/woofers/react-dialog-polyfill.svg]] [[https://www.npmjs.com/package/react-dialog-polyfill][https://badge.fury.io/js/react-dialog-polyfill.svg]] [[https://www.npmjs.com/package/react-dialog-polyfill][https://img.shields.io/npm/dt/react-dialog-polyfill.svg]] [[https://github.com/woofers/react-dialog-polyfill/blob/master/LICENSE][https://img.shields.io/npm/l/react-dialog-polyfill.svg]]\n\n~<dialog>~ element bundled with polyfill for React\n\n* Why?\n\nWhile many other more feature-rich React modal components exists, ~react-dialog-polyfill~\naims to be a simple binding of the native ~<dialog>~ element for React.\n\nDifferences from most of the existing components:\n\n- Native browser support in browsers like Chrome and Opera\n- Polyfill for un-supported browsers\n- Avoids using ~React.createPortal~, allowing SSR in natively supported browsers\n- Dialog always will display in-front of other elements regardless of ~z-index~\n- Selected info from dialog can be returned via ~<form>~ element\n- Well suited for Electron apps\n\n* Installation\n\n*Yarn*\n#+BEGIN_SRC\nyarn add react-dialog-polyfill\n#+END_SRC\n\n*npm*\n#+BEGIN_SRC\nnpm install react-dialog-polyfill\n#+END_SRC\n\n* Usage\n\n#+BEGIN_SRC js\nimport React, { useState } from 'react'\nimport { Modal, Dialog } from 'react-dialog-polyfill'\n\nconst App = () => {\n  const [dialog, setDialog] = useState(true)\n  const [modal, setModal] = useState(true)\n  return (\n    <div>\n      <Dialog open={dialog} onClose={(e, dialog) => alert('You closed the dialog')}>\n        <div>This is a dialog. Click \"Close\".</div>\n        <button onClick={() => setDialog(false)}>Close</button>\n      </Dialog>\n      <Modal open={modal}\n        onCancel={(e, dialog) => {\n          setModal(false)\n          alert('You canceled the modal')\n        }}\n        onClose={(e, dialog) => {\n          setModal(false)\n          const value = dialog.returnValue\n          if (value) alert(`You answered \"${dialog.returnValue}\" to the modal`)\n        }}\n      >\n        <form method=\"dialog\">\n          <div>\n            This is a modal.\n            Press <pre style={{ display: 'inline-block' }}>Escape</pre> to cancel.\n          </div>\n          <div>Do you like modals?</div>\n          <button type=\"submit\" value=\"no\">No</button>\n          <button type=\"submit\" value=\"yes\" autoFocus>Yes</button>\n        </form>\n      </Modal>\n    </div>\n  )\n}\n\nexport default App\n#+END_SRC\n\nSimply add the desired component to the React application using JSX.\n\nThe Modal component will block interaction with other elements when it is open, while the Dialog component will not.\n\n** Props\n*** Open\n~open~ indicates if the modal is open. *Default:* ~false~\n*** On Close\n~onClose~ runs when the modal is explicitly closed. *Default:* ~(event, modal) => {}~\n\nThat is the ~open~ prop state is toggled from ~true~ to ~false~.\n\nThis means that having ~onCancel={() => setModal(false)}~ will call ~onClose~ from within ~onCancel~.\n*** On Cancel (Modal Only)\n\n~onCancel~ runs when the modal is canceled using ~Escape~. *Default:* ~(event, modal) => {}~\n\nBy default the modal itself will not close as ~open~ will still be set however the event will trigger.\n\nIt is recommended to set ~onCancel={() => setModal(false)}~ to have the modal close when ~Escape~ is pressed.\n"}}},{"node":{"name":"discord-jam-2","description":"üë®‚ÄçüöÄ üî≠ üåå Discord Jam 2 Game Entry","url":"https://github.com/woofers/discord-jam-2","homepage":"https://jaxson.vandoorn.ca/projects/discord-jam-2/play/","stars":{"totalCount":1},"license":{"name":"GNU General Public License v3.0"},"topics":{"nodes":[{"topic":{"name":"game"}},{"topic":{"name":"discord-jam-2"}},{"topic":{"name":"pico-8"}},{"topic":{"name":"lua"}},{"topic":{"name":"jam"}},{"topic":{"name":"djam2"}}]},"readme":{"text":"\n\n# DOGE: BOIS\n\n**DOGE: BOIS** - Dangerous Orbit Genesis: Endgame; Beyond our Intergalactic Space\n\nSmall game created in under 48 hours for [Discord Jam 2](https://itch.io/jam/discord-jam-2) with the theme of **Space**.\n\nOur game takes place in **space** and is controlled only using the **SPACE** key.\n\nGame is built using [Lua](https://www.lua.org/), with the [PICO-8](https://www.lexaloffle.com/pico-8.php) Fantasy Console.\n\n**[Discord Jam 2 Page](https://itch.io/jam/discord-jam-2/rate/473619)**\n\n**[Play Updated Version](https://jaxson.vandoorn.ca/projects/discord-jam-2/play/)**\n\n**[Play Original Version](https://woofers.itch.io/dogebois)** entered in [Discord Jam 2](https://itch.io/jam/discord-jam-2)\n\n![img](./screenshots/1.png \"Title Screen\")\n\n[![img](./screenshots/results.png \"Discord Jam 2 Results\")](https://itch.io/jam/discord-jam-2/rate/473619)\n\nRanked from **12 ratings**. Score is adjusted from raw score by the median number of ratings per game in the jam.\n\n\n## Story\n\nCommander DB (Dog Bonez) is in a pickle. He left his Nano-Bulbous-Gravitron-Phaser v3, a cosmic dog toy, at home.\nHis issue is that his home, the kennel planet, is on the other side of the galaxy 5 000 000 dog years away.\n\nUsing nearby planets' gravitational pull, DB aims to use the power of ORBITing gravity to make it home a couple of dog years shorter.\n\n\n## Instructions\n\nHop to the orbit of the next planet using the **SPACE** key.\nThe tip of the ship should be pointed at the planet you intend to move to.\nIf you miscalculate the trajectory of the planet, you will orbit in-space forever and need to restart.\nYou can not move to planets in the opposite direction of travel as the gravitational force is moving strongly to the right\nand attempting to move against it will result in the shuttle doing a flip.\n\n\n## Controls\n\n-   **Space** - Jump planets / menu\n\n\n## Screenshots\n\n![img](./screenshots/2.png \"Gameplay 1\")\n\n![img](./screenshots/3.png \"Gameplay 2\")\n\n![img](./screenshots/4.png \"Gameplay 3\")\n\n![img](./screenshots/5.png \"Gameplay 4\")\n\n\n## Credits\n\n-   **[Avery Suzuki](https://www.instagram.com/suzukiavery/)** - Art\n-   **[Parker Swinton](https://github.com/ParkerSwinton)** - Programing\n-   **[Jaxson Van Doorn](https://github.com/woofers)** - Programing + Art\n-   **[Phil Vellacott](https://github.com/pvellacott)** - Sound Effects + Story\n"},"readmeOrg":{"text":"\n\n\n#+TITLE:\tDOGE: BOIS\n#+AUTHOR:\tAvery Suzuki, Parker Swinton, Jaxson Van Doorn, Phil Vellacott\n#+EMAIL:\tjaxson.vandoorn@gmail.com\n#+OPTIONS:  num:nil toc:nil\n\n* DOGE: BOIS\n\n*DOGE: BOIS* - Dangerous Orbit Genesis: Endgame; Beyond our Intergalactic Space\n\nSmall game created in under 48 hours for [[https://itch.io/jam/discord-jam-2][Discord Jam 2]] with the theme of *Space*.\n\nOur game takes place in *space* and is controlled only using the *SPACE* key.\n\nGame is built using [[https://www.lua.org/][Lua]], with the [[https://www.lexaloffle.com/pico-8.php][PICO-8]] Fantasy Console.\n\n*[[https://itch.io/jam/discord-jam-2/rate/473619][Discord Jam 2 Page]]*\n\n*[[https://jaxson.vandoorn.ca/projects/discord-jam-2/play/][Play Updated Version]]*\n\n*[[https://woofers.itch.io/dogebois][Play Original Version]]* entered in [[https://itch.io/jam/discord-jam-2][Discord Jam 2]]\n\n#+CAPTION: Title Screen\n#+NAME:    Title Sreen\n[[./screenshots/1.png]]\n\n#+CAPTION: Discord Jam 2 Results\n#+NAME:    Discord Jam 2 Results\n[[https://itch.io/jam/discord-jam-2/rate/473619][./screenshots/results.png]]\n\nRanked from *12 ratings*. Score is adjusted from raw score by the median number of ratings per game in the jam.\n\n** Story\nCommander DB (Dog Bonez) is in a pickle. He left his Nano-Bulbous-Gravitron-Phaser v3, a cosmic dog toy, at home.\nHis issue is that his home, the kennel planet, is on the other side of the galaxy 5 000 000 dog years away.\n\nUsing nearby planets' gravitational pull, DB aims to use the power of ORBITing gravity to make it home a couple of dog years shorter.\n** Instructions\n\nHop to the orbit of the next planet using the *SPACE* key.\nThe tip of the ship should be pointed at the planet you intend to move to.\nIf you miscalculate the trajectory of the planet, you will orbit in-space forever and need to restart.\nYou can not move to planets in the opposite direction of travel as the gravitational force is moving strongly to the right\nand attempting to move against it will result in the shuttle doing a flip.\n\n** Controls\n\n- *Space* - Jump planets / menu\n\n** Screenshots\n#+CAPTION: Gameplay 1\n#+NAME:    Gameplay 1\n[[./screenshots/2.png]]\n\n#+CAPTION: Gameplay 2\n#+NAME:    Gameplay 2\n[[./screenshots/3.png]]\n\n#+CAPTION: Gameplay 3\n#+NAME:    Gameplay 3\n[[./screenshots/4.png]]\n\n#+CAPTION: Gameplay 4\n#+NAME:    Gameplay 4\n[[./screenshots/5.png]]\n\n** Credits\n\n- *[[https://www.instagram.com/suzukiavery/][Avery Suzuki]]* - Art\n- *[[https://github.com/ParkerSwinton][Parker Swinton]]* - Programing\n- *[[https://github.com/woofers][Jaxson Van Doorn]]* - Programing + Art\n- *[[https://github.com/pvellacott][Phil Vellacott]]* - Sound Effects + Story\n"}}},{"node":{"name":"opengraph-api","description":"Open Graph Image as a Service - generate cards for Twitter, Facebook, Slack, etc","url":"https://github.com/woofers/opengraph-api","homepage":"https://opengraph.vandoorn.ca/","stars":{"totalCount":0},"license":{"name":"MIT License"},"topics":{"nodes":[]},"readme":{"text":"# [Open Graph Image as a Service](https://og-image.now.sh)\n\n<a href=\"https://twitter.com/zeithq/status/1092587111985881088\">\n    <img align=\"right\" src=\"https://raw.githubusercontent.com/zeit/og-image/master/public/tweet.png\" height=\"300\" />\n</a>\n\nServerless service that generates dynamic Open Graph images that you can embed in your `<meta>` tags.\n\nFor each keystroke, headless chromium is used to render an HTML page and take a screenshot of the result which gets cached.\n\nSee the image embedded in the tweet for a real use case.\n\n\n## What is an Open Graph Image?\n\nHave you ever posted a hyperlink to Twitter, Facebook, or Slack and seen an image popup?\nHow did your social network know how to \"unfurl\" the URL and get an image?\nThe answer is in your `<head>`.\n\nThe [Open Graph protocol](http://ogp.me) says you can put a `<meta>` tag in the `<head>` of a webpage to define this image.\n\nIt looks like the following:\n\n```html\n<head>\n  <title>Title</title>\n  <meta property=\"og:image\" content=\"http://example.com/logo.jpg\" />\n</head>\n```\n\n## Why use this service?\n\nRead the [blog post](https://zeit.co/blog/social-og-image-cards-as-a-service) for more info on the \"Why\" part.\n\nThe short answer is that it would take a long time to painstakingly design an image for every single blog post. And we don't want the exact same image for every blog post because that wouldn't make the article stand out when it was shared to Twitter. \n\nThat's where `og-image.now.sh` comes in. We can simply pass the title of our blog post to our generator service and it will generate the image for us on the fly!\n\nIt looks like the following:\n\n```html\n<head>\n  <title>Hello World</title>\n  <meta property=\"og:image\" content=\"https://og-image.now.sh/Hello%20World.png\" />\n</head>\n```\n\nNow try changing the text `Hello%20World` to the title of your choosing and watch the magic happen ‚ú®\n\n## Deploy your own\n\nYou'll want to fork this repository and deploy your own image generator.\n\n1. Click the fork button at the top right of GitHub\n2. Clone the repo to your local machine with `git clone URL_OF_FORKED_REPO_HERE`\n3. Change directory with `cd og-image`\n4. Make changes by swapping out images, changing colors, etc (see [contributing](https://github.com/zeit/og-image/blob/master/CONTRIBUTING.md) for more info)\n5. Run locally with `now dev` and visit [localhost:3000](http://localhost:3000)  (if nothing happens, run `npm install -g now`)\n6. Deploy to the cloud by running `now` and you'll get a unique URL\n7. Setup [GitHub](https://zeit.co/github) to autodeply on push\n\nAlternatively, you can do a one-click to deploy with the button below.\n\n[![Deploy to now](https://deploy.now.sh/static/button.svg)](https://zeit.co/new/project?template=zeit/og-image)\n\nOnce you have an image generator that sparks joy, you can setup [automatic Now + GitHub](https://zeit.co/github) deployments so that pushing to master is also deploying to production! üöÄ\n\n## Authors\n\n- Steven ([@styfle](https://twitter.com/styfle)) - [ZEIT](https://zeit.co)\n- Evil Rabbit ([@evilrabbit](https://twitter.com/evilrabbit_)) - [ZEIT](https://zeit.co)\n"},"readmeOrg":null}},{"node":{"name":"ludum-dare-badges","description":"üèÜ SVG & PNG badges for Ludum Dare Game Jam results","url":"https://github.com/woofers/ludum-dare-badges","homepage":"https://ldjam.tools/","stars":{"totalCount":0},"license":{"name":"MIT License"},"topics":{"nodes":[{"topic":{"name":"react"}},{"topic":{"name":"reactjs"}},{"topic":{"name":"widget"}},{"topic":{"name":"ludum-dare"}},{"topic":{"name":"component"}},{"topic":{"name":"api"}},{"topic":{"name":"svg"}},{"topic":{"name":"png"}},{"topic":{"name":"badge"}}]},"readme":{"text":"\n\n# @ludum-dare-badges\n\n[![img](https://github.com/woofers/ludum-dare-badges/workflows/build/badge.svg)](https://github.com/woofers/ludum-dare-badges/actions)\n\nAPI used to dynamically generate SVG and PNG Ludum Dare results badges in real-time.\n\n**[Live Demo](https://badges.vandoorn.ca)**\n\n**Note:** This project is community made and not endorsed by the offical Ludum Dare creator(s).\n\n\n# Packages\n\nThis monorepo is split up into the following packages:\n\n-   **[@ludum-dare-badges/api](https://github.com/woofers/ludum-dare-badges/tree/master/packages/api)** - Serveless API used to generate SVG & PNG badges\n-   **[@ludum-dare-badges/demo](https://github.com/woofers/ludum-dare-badges/tree/master/packages/demo)** - Demo site used to showcase how to build a API query for a badge\n-   **[@ludum-dare-badges/react](https://github.com/woofers/ludum-dare-badges/tree/master/packages/react)** - React wrapper component which forms and calls the API based off passed props.\n\n\n# Examples\n\n**SVG Badge:**\n\n![img](https://badges.vandoorn.ca/44/alien-e-x-p-a-n-s-i-o-n/badge.svg \"SVG Badge\")\n\n**PNG Badge:**\n\n![img](https://badges.vandoorn.ca/44/alien-e-x-p-a-n-s-i-o-n/badge.png \"PNG Badge\")\n\n\n# Usage\n\nSimply form the API query using your game's Ludum Dare entry page path.\n\nThe path is in the form `:event/:game/badge.<type>` where:\n\n-   `event` - Ludum Dare event number (eg. `44` for Ludum Dare 44)\n-   `game` - Game title in the URL of the Ludum Dare entry page.\n-   `type` - File type.  Can be either `svg` or `png`.  `svg` is recommenced if it is supported.\n\nFor example the SVG badge for [ALIEN, e x p a n s i o n .](https://ldjam.com/events/ludum-dare/44/alien-e-x-p-a-n-s-i-o-n)\nthe path would be `44/alien-e-x-p-a-n-s-i-o-n/badge.svg`\n\nYou can also think of it as adding `/badge.svg` to the existing Ludum Dare path:\n\n![img](./packages/api/screenshots/url.png \"URL Path\")\n\n\n## Hosted\n\nThis path can be appended to the domain of `ldjam.tools` to form the image URL:\n\n    ldjam.tools/44/alien-e-x-p-a-n-s-i-o-n/badge.svg\n\nOr more generalized:\n\n    ldjam.tools/:id/:game/badge.<type>\n\n`badges.vandoorn.ca` may also be used as the domain.\n\n\n## Self Hosting\n\nSelf hosting can done easily though [Now](https://zeit.co/now)'s serverless platform.\n\n[![img](https://deploy.now.sh/static/button.svg \"Deploy to now\")](https://zeit.co/new/project?template=woofers/ludum-dare-badges)\n\nSimply install the [Now CLI](https://github.com/zeit/now-cli) with:\n\n**Yarn**\n\n    yarn global add now\n\n**npm**\n\n    npm install -g now\n\nand type `now deploy` in the root of the monorepo.\n\nTo form the API query follow the steps above with and replace the domain\nwith the domain of your self hosted instance:\n\n    <example.com>/:id/:game/badge.<type>\n"},"readmeOrg":{"text":"\n#+TITLE:    @ludum-dare-badges\n#+AUTHOR:\tJaxson Van Doorn\n#+EMAIL:\tjaxson.vandoorn@gmail.com\n#+OPTIONS:  num:nil toc:nil\n\n* @ludum-dare-badges\n\n[[https://github.com/woofers/ludum-dare-badges/actions][https://github.com/woofers/ludum-dare-badges/workflows/build/badge.svg]]\n\nAPI used to dynamically generate SVG and PNG Ludum Dare results badges in real-time.\n\n*[[https://badges.vandoorn.ca][Live Demo]]*\n\n*Note:* This project is community made and not endorsed by the offical Ludum Dare creator(s).\n* Packages\n\nThis monorepo is split up into the following packages:\n\n- *[[https://github.com/woofers/ludum-dare-badges/tree/master/packages/api][@ludum-dare-badges/api]]* - Serveless API used to generate SVG & PNG badges\n- *[[https://github.com/woofers/ludum-dare-badges/tree/master/packages/demo][@ludum-dare-badges/demo]]* - Demo site used to showcase how to build a API query for a badge\n- *[[https://github.com/woofers/ludum-dare-badges/tree/master/packages/react][@ludum-dare-badges/react]]* - React wrapper component which forms and calls the API based off passed props.\n\n* Examples\n\n*SVG Badge:*\n\n#+CAPTION: SVG Badge\n#+NAME:    SVG Badge\nhttps://badges.vandoorn.ca/44/alien-e-x-p-a-n-s-i-o-n/badge.svg\n\n*PNG Badge:*\n\n#+CAPTION: PNG Badge\n#+NAME:    PNG Badge\nhttps://badges.vandoorn.ca/44/alien-e-x-p-a-n-s-i-o-n/badge.png\n\n* Usage\nSimply form the API query using your game's Ludum Dare entry page path.\n\nThe path is in the form ~:event/:game/badge.<type>~ where:\n\n- ~event~ - Ludum Dare event number (eg. ~44~ for Ludum Dare 44)\n- ~game~ - Game title in the URL of the Ludum Dare entry page.\n- ~type~ - File type.  Can be either ~svg~ or ~png~.  ~svg~ is recommenced if it is supported.\n\nFor example the SVG badge for [[https://ldjam.com/events/ludum-dare/44/alien-e-x-p-a-n-s-i-o-n][ALIEN, e x p a n s i o n .]]\nthe path would be ~44/alien-e-x-p-a-n-s-i-o-n/badge.svg~\n\nYou can also think of it as adding ~/badge.svg~ to the existing Ludum Dare path:\n\n#+CAPTION: URL Path\n#+NAME:    URL Path\n[[./packages/api/screenshots/url.png]]\n\n** Hosted\nThis path can be appended to the domain of ~ldjam.tools~ to form the image URL:\n\n#+BEGIN_SRC\nldjam.tools/44/alien-e-x-p-a-n-s-i-o-n/badge.svg\n#+END_SRC\n\nOr more generalized:\n\n#+BEGIN_SRC\nldjam.tools/:id/:game/badge.<type>\n#+END_SRC\n\n~badges.vandoorn.ca~ may also be used as the domain.\n** Self Hosting\n\nSelf hosting can done easily though [[https://zeit.co/now][Now]]'s serverless platform.\n\n#+CAPTION: Deploy to now\n[[https://zeit.co/new/project?template=woofers/ludum-dare-badges][https://deploy.now.sh/static/button.svg]]\n\nSimply install the [[https://github.com/zeit/now-cli][Now CLI]] with:\n\n*Yarn*\n#+BEGIN_SRC\nyarn global add now\n#+END_SRC\n\n*npm*\n#+BEGIN_SRC\nnpm install -g now\n#+END_SRC\n\nand type ~now deploy~ in the root of the monorepo.\n\nTo form the API query follow the steps above with and replace the domain\nwith the domain of your self hosted instance:\n\n#+BEGIN_SRC\n<example.com>/:id/:game/badge.<type>\n#+END_SRC\n"}}},{"node":{"name":"react-ludum-dare","description":"üìë Display Ludum Dare Game Jam results in React","url":"https://github.com/woofers/react-ludum-dare","homepage":"https://jaxson.vandoorn.ca/react-ludum-dare/","stars":{"totalCount":1},"license":{"name":"MIT License"},"topics":{"nodes":[{"topic":{"name":"react"}},{"topic":{"name":"reactjs"}},{"topic":{"name":"widget"}},{"topic":{"name":"ludum-dare"}},{"topic":{"name":"component"}}]},"readme":{"text":"\n\n# React Ludum Dare\n\n![img](https://img.shields.io/badge/status-deprecated-d43d3d) [![img](https://david-dm.org/woofers/react-ludum-dare.svg)](https://www.npmjs.com/package/react-ludum-dare) [![img](https://badge.fury.io/js/react-ludum-dare.svg)](https://www.npmjs.com/package/react-ludum-dare) [![img](https://img.shields.io/npm/dt/react-ludum-dare.svg)](https://www.npmjs.com/package/react-ludum-dare) [![img](https://img.shields.io/npm/l/react-ludum-dare.svg)](https://github.com/woofers/react-ludum-dare/blob/master/License.txt)\n\n\n### WARNING: This package is deprecated and no longer maintained.\n\n\n### Development has been moved to **[@ludum-dare-badges/react](https://github.com/woofers/ludum-dare-badges/tree/master/packages/react)**; consider migrating.\n\nDisplay Ludum Dare Game Jam results in React.\n\n**[Live Demo](https://jaxson.vandoorn.ca/react-ludum-dare/)**\n\n**Note:** This project is community made and not endorsed by the offical Ludum Dare creator(s).\n\n![img](./screenshots/widget.png \"Widget\")\n\n\n# Installation\n\n**Yarn**\n\n    yarn add react-ludum-dare\n\n**npm**\n\n    npm install react-ludum-dare\n\n\n# Usage\n\n```jsx\nimport React from 'react'\nimport Widget from 'react-ludum-dare'\n\nconst App = () => (\n  <Widget game=\"44/alien-e-x-p-a-n-s-i-o-n\"\n          showIcons={true}\n          usePlaceholder={false}\n  />\n)\n```\n\nSimply add the game widget to the React application using JSX.\n\n\n## Props\n\n\n### Game\n\nThe namespace of the game on the ldjam site **Required**\n\n`game` requires both the Ludum Dare number and the game title (eg. `44/alien-e-x-p-a-n-s-i-o-n`  for Ludum Dare 44)\n\n\n### Show Icons\n\n`showIcons` indicates if icons are shown. **Default:** `false`\n\nIf un-set no icon will be placed beside any category.\n\n\n### Use Placeholder\n\n`usePlaceholder` indicates if placeholder content should be used when loading. **Default:** `false`\n\nIf un-set the component will simply be hidden until data is loaded from the Ludum Dare API.\n"},"readmeOrg":{"text":"\n#+TITLE:    React Ludum Dare\n#+AUTHOR:\tJaxson Van Doorn\n#+EMAIL:\tjaxson.vandoorn@gmail.com\n#+OPTIONS:  num:nil toc:nil\n\n* React Ludum Dare\n\n[[https://img.shields.io/badge/status-deprecated-d43d3d]] [[https://www.npmjs.com/package/react-ludum-dare][https://david-dm.org/woofers/react-ludum-dare.svg]] [[https://www.npmjs.com/package/react-ludum-dare][https://badge.fury.io/js/react-ludum-dare.svg]] [[https://www.npmjs.com/package/react-ludum-dare][https://img.shields.io/npm/dt/react-ludum-dare.svg]] [[https://github.com/woofers/react-ludum-dare/blob/master/License.txt][https://img.shields.io/npm/l/react-ludum-dare.svg]]\n*** WARNING: This package is deprecated and no longer maintained.\n*** Development has been moved to *[[https://github.com/woofers/ludum-dare-badges/tree/master/packages/react][@ludum-dare-badges/react]]*; consider migrating.\n\nDisplay Ludum Dare Game Jam results in React.\n\n*[[https://jaxson.vandoorn.ca/react-ludum-dare/][Live Demo]]*\n\n*Note:* This project is community made and not endorsed by the offical Ludum Dare creator(s).\n\n#+CAPTION: Widget\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\n[[./screenshots/widget.png]]\n\n* Installation\n\n*Yarn*\n#+BEGIN_SRC\nyarn add react-ludum-dare\n#+END_SRC\n\n*npm*\n#+BEGIN_SRC\nnpm install react-ludum-dare\n#+END_SRC\n\n* Usage\n\n#+BEGIN_SRC js\nimport React from 'react'\nimport Widget from 'react-ludum-dare'\n\nconst App = () => (\n  <Widget game=\"44/alien-e-x-p-a-n-s-i-o-n\"\n          showIcons={true}\n          usePlaceholder={false}\n  />\n)\n#+END_SRC\n\nSimply add the game widget to the React application using JSX.\n\n** Props\n*** Game\nThe namespace of the game on the ldjam site *Required*\n\n~game~ requires both the Ludum Dare number and the game title (eg. ~44/alien-e-x-p-a-n-s-i-o-n~  for Ludum Dare 44)\n*** Show Icons\n~showIcons~ indicates if icons are shown. *Default:* ~false~\n\nIf un-set no icon will be placed beside any category.\n*** Use Placeholder\n~usePlaceholder~ indicates if placeholder content should be used when loading. *Default:* ~false~\n\nIf un-set the component will simply be hidden until data is loaded from the Ludum Dare API.\n"}}},{"node":{"name":"react-pico-8","description":"üïπÔ∏è üëæ Run PICO-8 game cartridges in React","url":"https://github.com/woofers/react-pico-8","homepage":"https://jaxson.vandoorn.ca/react-pico-8/","stars":{"totalCount":1},"license":{"name":"MIT License"},"topics":{"nodes":[{"topic":{"name":"react"}},{"topic":{"name":"reactjs"}},{"topic":{"name":"component"}},{"topic":{"name":"pico-8"}}]},"readme":{"text":"\n\n# React PICO-8\n\n[![img](https://github.com/woofers/react-pico-8/workflows/build/badge.svg)](https://github.com/woofers/react-pico-8/actions) [![img](https://david-dm.org/woofers/react-pico-8.svg)](https://www.npmjs.com/package/react-pico-8) [![img](https://badge.fury.io/js/react-pico-8.svg)](https://www.npmjs.com/package/react-pico-8) [![img](https://img.shields.io/npm/dt/react-pico-8.svg)](https://www.npmjs.com/package/react-pico-8) [![img](https://img.shields.io/npm/l/react-pico-8.svg)](https://github.com/woofers/react-pico-8/blob/master/License.txt)\n\nRun [PICO-8](https://lexaloffle.com/pico-8.php) game cartridges using a cusomtizable React component.\n\n**[Live Demo](https://jaxson.vandoorn.ca/react-pico-8/)**\n\n**Note:** This project is community made and not endorsed by Lexaloffle or the offical [PICO-8](https://www.lexaloffle.com/pico-8.php) Fantasy Console.\n\n![img](./screenshots/boot.gif \"PICO-8 Player\")\n\n\n# Installation\n\n**Yarn**\n\n    yarn add react-pico-8\n\n**npm**\n\n    npm install react-pico-8\n\n\n# Usage\n\n```jsx\nimport React from 'react'\nimport Pico8 from 'react-pico-8'\nimport { Controls,\n         Reset,\n         Pause,\n         Sound,\n         Carts,\n         Fullscreen } from 'react-pico-8/buttons'\n\nconst App = () => (\n  <Pico8 src=\"index.js\"\n         autoPlay={true}\n         legacyButtons={false}\n         hideCursor={false}\n         center={true}\n         blockKeys={false}\n         usePointer={true}\n         unpauseOnReset={true}\n         placeholder=\"placeholder.png\"\n  >\n    <Controls/>\n    <Reset/>\n    <Pause/>\n    <Sound/>\n    <Carts/>\n    <Fullscreen/>\n  </Pico8>\n)\n```\n\nSimply add the game widget to the React application using JSX.\n\nBe sure to include the `.js` `src` of the game cartridge generated from [PICO-8](https://lexaloffle.com/pico-8.php)'s web export.\n\nIf no buttons are nested in the component then the default [PICO-8](https://lexaloffle.com/pico-8.php) buttons will be used.\n\n\n## Props\n\n\n### Src\n\nSource of the game cartridge.  **Required**\n\nThis can be obtained from [PICO-8](https://lexaloffle.com/pico-8.php) by loading a game cart, then typing the command `export index.html`.\n\n[PICO-8](https://lexaloffle.com/pico-8.php) produces two files: the cartridge `index.js` and the player `index.html`.\n\nSince `react-pico-8` already has the game player embeded, only the `.js` file needs to be provided as the `src`.\n\n\n### Auto Play\n\n`autoPlay` indicates if the game canvas should attempt to auto-play on page-load. **Default:** `true`\n\n\n### Legacy Buttons\n\n`legacyButtons` is used to select the type of buttons. **Default:** `false`\n\n\n### Hide Cursor\n\n`hideCusor` indicates if the cursor is hidden over the game canvas when the game is playing.  **Default:** `false`\n\n\n### Center\n\n`center` indicates if the game is centred outside of fullscreen mode. **Default:** `true`\n\n\n### Block Keys\n\nIf `blockKeys` is set keys which are used to interact with the game are blocked from scrolling when the game is running.\n\nIf un-set keys will only be blocked when the canvas is focused.  **Default:** `false`\n\n\n### Use Pointer\n\nIf `usePointer` is set the pointer hand will be used on buttons.\n\nIf un-set a normal cursor will be used on all buttons which do not lead to a new page. **Default:** `true`\n\n\n### Unpause On Reset\n\nIf `unpauseOnReset` is set hitting the reset button when paused will instantly reset the game.\n\nIf un-set the game will need to be resumed before it resets. **Default:** `true`\n\n\n### Placeholder\n\nThe image to be used as a placeholder prior to starting the game.  If un-set, a black background will be used.  **Default:** `''`\n"},"readmeOrg":{"text":"\n#+TITLE:    React PICO-8\n#+AUTHOR:\tJaxson Van Doorn\n#+EMAIL:\tjaxson.vandoorn@gmail.com\n#+OPTIONS:  num:nil toc:nil\n\n* React PICO-8\n\n[[https://github.com/woofers/react-pico-8/actions][https://github.com/woofers/react-pico-8/workflows/build/badge.svg]] [[https://www.npmjs.com/package/react-pico-8][https://david-dm.org/woofers/react-pico-8.svg]] [[https://www.npmjs.com/package/react-pico-8][https://badge.fury.io/js/react-pico-8.svg]] [[https://www.npmjs.com/package/react-pico-8][https://img.shields.io/npm/dt/react-pico-8.svg]] [[https://github.com/woofers/react-pico-8/blob/master/License.txt][https://img.shields.io/npm/l/react-pico-8.svg]]\n\nRun [[https://lexaloffle.com/pico-8.php][PICO-8]] game cartridges using a cusomtizable React component.\n\n*[[https://jaxson.vandoorn.ca/react-pico-8/][Live Demo]]*\n\n*Note:* This project is community made and not endorsed by Lexaloffle or the offical [[https://www.lexaloffle.com/pico-8.php][PICO-8]] Fantasy Console.\n\n#+CAPTION: PICO-8 Player\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\n[[./screenshots/boot.gif]]\n\n* Installation\n\n*Yarn*\n#+BEGIN_SRC\nyarn add react-pico-8\n#+END_SRC\n\n*npm*\n#+BEGIN_SRC\nnpm install react-pico-8\n#+END_SRC\n\n* Usage\n\n#+BEGIN_SRC js\nimport React from 'react'\nimport Pico8 from 'react-pico-8'\nimport { Controls,\n         Reset,\n         Pause,\n         Sound,\n         Carts,\n         Fullscreen } from 'react-pico-8/buttons'\n\nconst App = () => (\n  <Pico8 src=\"index.js\"\n         autoPlay={true}\n         legacyButtons={false}\n         hideCursor={false}\n         center={true}\n         blockKeys={false}\n         usePointer={true}\n         unpauseOnReset={true}\n         placeholder=\"placeholder.png\"\n  >\n    <Controls/>\n    <Reset/>\n    <Pause/>\n    <Sound/>\n    <Carts/>\n    <Fullscreen/>\n  </Pico8>\n)\n#+END_SRC\n\nSimply add the game widget to the React application using JSX.\n\nBe sure to include the ~.js~ ~src~ of the game cartridge generated from [[https://lexaloffle.com/pico-8.php][PICO-8]]'s web export.\n\nIf no buttons are nested in the component then the default [[https://lexaloffle.com/pico-8.php][PICO-8]] buttons will be used.\n\n** Props\n*** Src\nSource of the game cartridge.  *Required*\n\nThis can be obtained from [[https://lexaloffle.com/pico-8.php][PICO-8]] by loading a game cart, then typing the command ~export index.html~.\n\n[[https://lexaloffle.com/pico-8.php][PICO-8]] produces two files: the cartridge ~index.js~ and the player ~index.html~.\n\nSince ~react-pico-8~ already has the game player embeded, only the ~.js~ file needs to be provided as the ~src~.\n*** Auto Play\n~autoPlay~ indicates if the game canvas should attempt to auto-play on page-load. *Default:* ~true~\n*** Legacy Buttons\n~legacyButtons~ is used to select the type of buttons. *Default:* ~false~\n*** Hide Cursor\n~hideCusor~ indicates if the cursor is hidden over the game canvas when the game is playing.  *Default:* ~false~\n*** Center\n~center~ indicates if the game is centred outside of fullscreen mode. *Default:* ~true~\n*** Block Keys\nIf ~blockKeys~ is set keys which are used to interact with the game are blocked from scrolling when the game is running.\n\nIf un-set keys will only be blocked when the canvas is focused.  *Default:* ~false~\n*** Use Pointer\n\nIf ~usePointer~ is set the pointer hand will be used on buttons.\n\nIf un-set a normal cursor will be used on all buttons which do not lead to a new page. *Default:* ~true~\n\n*** Unpause On Reset\n\nIf ~unpauseOnReset~ is set hitting the reset button when paused will instantly reset the game.\n\nIf un-set the game will need to be resumed before it resets. *Default:* ~true~\n\n*** Placeholder\nThe image to be used as a placeholder prior to starting the game.  If un-set, a black background will be used.  *Default:* ~''~\n"}}},{"node":{"name":"ludum-dare-44","description":"üé≤ Ludum Dare Game Jam Entry","url":"https://github.com/woofers/ludum-dare-44","homepage":"https://jaxson.vandoorn.ca/projects/ludum-dare-44/play/","stars":{"totalCount":0},"license":{"name":"GNU General Public License v3.0"},"topics":{"nodes":[{"topic":{"name":"game"}},{"topic":{"name":"ludumdare44"}},{"topic":{"name":"ludum-dare"}},{"topic":{"name":"ludum-dare-44"}},{"topic":{"name":"lua"}},{"topic":{"name":"pico-8"}},{"topic":{"name":"moonscript"}}]},"readme":{"text":"\n\n# ALIEN, e x p a n s i o n .\n\nSmall game created in under 48 hours for [Ludum Dare 44](https://ldjam.com/events/ludum-dare/44) with the theme of **Your life is currency**.\n\nGame is built using [Lua](https://www.lua.org/) and [MoonScript](https://moonscript.org/), with the [PICO-8](https://www.lexaloffle.com/pico-8.php) Fantasy Console.\n\nEntered as a [Ludum Dare 44](https://ldjam.com/events/ludum-dare/44) **compo** game.\n\n**[Ludum Dare Page](https://ldjam.com/events/ludum-dare/44/alien-e-x-p-a-n-s-i-o-n)**\n\n**[Play Updated Game](https://jaxson.vandoorn.ca/projects/ludum-dare-44/play/)**\n\n**[Play Original Version](https://jaxson.vandoorn.ca/ludum-dare-44/)** entered in [Ludum Dare 44](https://ldjam.com/events/ludum-dare/44)\n\n**[Lexaloffle BBS Page](https://www.lexaloffle.com/bbs/?tid=34861)**\n\n![img](./screenshots/title-screen.gif \"Title Screen\")\n\n![img](https://badges.vandoorn.ca/44/alien-e-x-p-a-n-s-i-o-n/badge.svg \"Ludum Dare Results\")\n\n\n## Instructions\n\nPlay as an alien bounty hunter attempting to amass a small fortune by capturing human manned ships using a state-of-the-art vortex laser.\n\nYou will be payed by some of the galaxies top scientists who aim to study these humans.\n\nBe careful as hitting human ships will deplete your life meter and more importantly will lead to unwarranted attention and hence will detract from your score/pay.\n\nHowever capturing a human will restore a small amount of life and the increase your score.  Additionally flying past human ships will also add to your score.\n\nCapture as many ships as possible to achieve a high payday and satisfy the scientists.\n\n\n## Controls\n\n-   **Arrows Keys** - Control your ship\n-   **X Key** - Fire vortex laser / Advance menus\n-   **Z Key** - Change camera settings (menu)\n\n\n## Building\n\nThis project uses [p8](https://github.com/jozanza/p8) to structure its source files.\n\nAdditionally `luamin` to reduce the total [PICO-8](https://www.lexaloffle.com/pico-8.php) compressed cartridge size.\n\nIn order to build a `.p8` file simply install `p8` and `luamin` using `npm install -g p8 luamin` .\n\nThen build with `./build.sh` in the root of the project foler.  This will generate a `alien-expansion.p8` file.\n\n\n## Screenshots\n\n![img](./screenshots/game-1.png \"Gameplay 1\")\n\n![img](./screenshots/game-2.png \"Gameplay 2\")\n\n![img](./screenshots/game-3.png \"Gameplay 3\")\n"},"readmeOrg":{"text":"\n#+TITLE:\tALIEN, e x p a n s i o n .\n#+AUTHOR:\tJaxson Van Doorn\n#+EMAIL:\tjaxson.vandoorn@gmail.com\n#+OPTIONS:  num:nil toc:nil\n\n* ALIEN, e x p a n s i o n .\n\nSmall game created in under 48 hours for [[https://ldjam.com/events/ludum-dare/44][Ludum Dare 44]] with the theme of *Your life is currency*.\n\nGame is built using [[https://www.lua.org/][Lua]] and [[https://moonscript.org/][MoonScript]], with the [[https://www.lexaloffle.com/pico-8.php][PICO-8]] Fantasy Console.\n\nEntered as a [[https://ldjam.com/events/ludum-dare/44][Ludum Dare 44]] *compo* game.\n\n*[[https://ldjam.com/events/ludum-dare/44/alien-e-x-p-a-n-s-i-o-n][Ludum Dare Page]]*\n\n*[[https://jaxson.vandoorn.ca/projects/ludum-dare-44/play/][Play Updated Game]]*\n\n*[[https://jaxson.vandoorn.ca/ludum-dare-44/][Play Original Version]]* entered in [[https://ldjam.com/events/ludum-dare/44][Ludum Dare 44]]\n\n*[[https://www.lexaloffle.com/bbs/?tid=34861][Lexaloffle BBS Page]]*\n\n#+CAPTION: Title Screen\n#+NAME:    Title Sreen\n[[./screenshots/title-screen.gif]]\n\n#+CAPTION: Ludum Dare Results\n#+NAME:    Ludum Dare Results\nhttps://badges.vandoorn.ca/44/alien-e-x-p-a-n-s-i-o-n/badge.svg\n\n** Instructions\n\nPlay as an alien bounty hunter attempting to amass a small fortune by capturing human manned ships using a state-of-the-art vortex laser.\n\nYou will be payed by some of the galaxies top scientists who aim to study these humans.\n\nBe careful as hitting human ships will deplete your life meter and more importantly will lead to unwarranted attention and hence will detract from your score/pay.\n\nHowever capturing a human will restore a small amount of life and the increase your score.  Additionally flying past human ships will also add to your score.\n\nCapture as many ships as possible to achieve a high payday and satisfy the scientists.\n** Controls\n\n- *Arrows Keys* - Control your ship\n- *X Key* - Fire vortex laser / Advance menus\n- *Z Key* - Change camera settings (menu)\n\n** Building\nThis project uses [[https://github.com/jozanza/p8][p8]] to structure its source files.\n\nAdditionally ~luamin~ to reduce the total [[https://www.lexaloffle.com/pico-8.php][PICO-8]] compressed cartridge size.\n\nIn order to build a ~.p8~ file simply install ~p8~ and ~luamin~ using ~npm install -g p8 luamin~ .\n\nThen build with ~./build.sh~ in the root of the project foler.  This will generate a ~alien-expansion.p8~ file.\n\n** Screenshots\n\n#+CAPTION: Gameplay 1\n#+NAME:    Gameplay 1\n[[./screenshots/game-1.png]]\n\n#+CAPTION: Gameplay 2\n#+NAME:    Gameplay 2\n[[./screenshots/game-2.png]]\n\n#+CAPTION: Gameplay 3\n#+NAME:    Gameplay 3\n[[./screenshots/game-3.png]]\n"}}},{"node":{"name":"react-chameleon-theme-color","description":"ü¶é üêâ  Style mobile browser's menu bars to match the current in-scope CSS color","url":"https://github.com/woofers/react-chameleon-theme-color","homepage":"https://jaxson.vandoorn.ca/react-chameleon-theme-color/","stars":{"totalCount":0},"license":{"name":"MIT License"},"topics":{"nodes":[{"topic":{"name":"react"}},{"topic":{"name":"react-js"}},{"topic":{"name":"component"}},{"topic":{"name":"meta"}},{"topic":{"name":"tag"}},{"topic":{"name":"theme-color"}},{"topic":{"name":"android"}},{"topic":{"name":"ios"}},{"topic":{"name":"windows"}},{"topic":{"name":"windows-phone"}}]},"readme":{"text":"\n\n# React Chameleon Theme Color\n\n[![img](https://github.com/woofers/react-chameleon/workflows/build/badge.svg)](https://github.com/woofers/react-chameleon/actions) [![img](https://david-dm.org/woofers/react-chameleon-theme-color.svg)](https://www.npmjs.com/package/react-chameleon-theme-color) [![img](https://badge.fury.io/js/react-chameleon-theme-color.svg)](https://www.npmjs.com/package/react-chameleon-theme-color) [![img](https://img.shields.io/npm/dt/react-chameleon-theme-color.svg)](https://www.npmjs.com/package/react-chameleon-theme-color) [![img](https://img.shields.io/npm/l/react-chameleon-theme-color.svg)](https://github.com/woofers/react-chameleon-theme-color/blob/master/License.txt)\n\nA simple React component to set the theme color of mobile browsers menu bars.\n\n\n# Devices\n\nThe effect of this component varies by device and by browser.  See demo on a mobile device.\n\n**[Live Demo](https://jaxson.vandoorn.ca/react-chameleon-theme-color/)**\n\n![img](./screenshots/chrome.png \"Android Chrome\")\n\n\n## Android\n\nThe [theme-color](https://developers.google.com/web/updates/2014/11/Support-for-theme-color-in-Chrome-39-for-Android) meta attribute is set to the target color.\n\nThis should take effect for Chrome and Opera.\n\n\n## iOS\n\nFor iOS the [apple-mobile-web-app-status-bar-style](https://stackoverflow.com/a/40786240/9129020) meta tag is set.\n\nAs Safari only allows either a solid grey, black or transparent status bar,\nthe `contrastRatio` is used as a threshold to determine what value the meta tag should be.\n\nIf the contrast ratio of the color against pure white is greater than the set `contrastRatio`,\nthe value will be set to `black-translucent` which is a transparent status bar with black text.\n\nOtherwise, the status bar will be set to `default`\nwhich is a grey status bar with black text.\n\nAdditionally, [apple-mobile-web-app-capable](https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariHTMLRef/Articles/MetaTags.html#//apple_ref/doc/uid/TP40008193-SW3) is also set which hides the address-bar.\n\n\n## Windows Phone\n\nSets the `msapplication-navbutton-color` to the target color.\n\n\n# Installation\n\n**Yarn**\n\n    yarn add react-chameleon-theme-color\n\n**npm**\n\n    npm install react-chameleon-theme-color\n\n\n# Usage\n\n```jsx\nimport React from 'react'\nimport { ThemeColor, ChameleonThemeColor } from 'react-chameleon-theme-color'\n\nconst App = () => (\n  <div style={{ background: \"#123\", padding: \"200px\" }}>\n    <ChameleonThemeColor contrastRatio={1.6} />\n    {/* or you can set the color manually */}\n    <ThemeColor color=\"#123\" contrastRatio={1.6} />\n  </div>\n)\n```\n\nSimply add either the `ThemeColor` or `ChameleonThemeColor` component to the React application using JSX.\n\nThe `ChameleonThemeColor` component will set the target color to the first set in-scope CSS color at runtime.\n\nAlternatively the `ThemeColor` component will set the target color to the value of the `color` prop.\n\n\n## Props\n\n\n### Contrast-Ratio\n\nThe `contrastRatio` property can be set to control the sensitivity required for a custom color to be used on Apple devices.\nThe higher the value, the more contrast will be provided between the status bar text and background however it will\nalso be more likely for the status bar color to be set.\n\n**Default:** `1.6`\n\n\n### Color\n\nThe `color` property controls the target color for the status bar.\n\nOnly used for the `ThemeColor` component as `ChameleonThemeColor` component sets this automatically.\n\nIf set to `false`, no meta attributes will be set, causing each browser to fallback to its respective default.\n\n**Default:** `false`\n"},"readmeOrg":{"text":"\n#+TITLE:    React Chameleon Theme Color\n#+AUTHOR:\tJaxson Van Doorn\n#+EMAIL:\tjaxson.vandoorn@gmail.com\n#+OPTIONS:  num:nil toc:nil\n\n* React Chameleon Theme Color\n\n[[https://github.com/woofers/react-chameleon/actions][https://github.com/woofers/react-chameleon/workflows/build/badge.svg]] [[https://www.npmjs.com/package/react-chameleon-theme-color][https://david-dm.org/woofers/react-chameleon-theme-color.svg]] [[https://www.npmjs.com/package/react-chameleon-theme-color][https://badge.fury.io/js/react-chameleon-theme-color.svg]] [[https://www.npmjs.com/package/react-chameleon-theme-color][https://img.shields.io/npm/dt/react-chameleon-theme-color.svg]] [[https://github.com/woofers/react-chameleon-theme-color/blob/master/License.txt][https://img.shields.io/npm/l/react-chameleon-theme-color.svg]]\n\nA simple React component to set the theme color of mobile browsers menu bars.\n\n* Devices\n\nThe effect of this component varies by device and by browser.  See demo on a mobile device.\n\n*[[https://jaxson.vandoorn.ca/react-chameleon-theme-color/][Live Demo]]*\n\n#+CAPTION: Android Chrome\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\n[[./screenshots/chrome.png]]\n\n** Android\n\nThe [[https://developers.google.com/web/updates/2014/11/Support-for-theme-color-in-Chrome-39-for-Android][theme-color]] meta attribute is set to the target color.\n\nThis should take effect for Chrome and Opera.\n** iOS\n\nFor iOS the [[https://stackoverflow.com/a/40786240/9129020][apple-mobile-web-app-status-bar-style]] meta tag is set.\n\nAs Safari only allows either a solid grey, black or transparent status bar,\nthe ~contrastRatio~ is used as a threshold to determine what value the meta tag should be.\n\nIf the contrast ratio of the color against pure white is greater than the set ~contrastRatio~,\nthe value will be set to ~black-translucent~ which is a transparent status bar with black text.\n\nOtherwise, the status bar will be set to ~default~\nwhich is a grey status bar with black text.\n\nAdditionally, [[https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariHTMLRef/Articles/MetaTags.html#//apple_ref/doc/uid/TP40008193-SW3][apple-mobile-web-app-capable]] is also set which hides the address-bar.\n\n** Windows Phone\n\nSets the ~msapplication-navbutton-color~ to the target color.\n\n* Installation\n\n*Yarn*\n#+BEGIN_SRC\nyarn add react-chameleon-theme-color\n#+END_SRC\n\n*npm*\n#+BEGIN_SRC\nnpm install react-chameleon-theme-color\n#+END_SRC\n\n* Usage\n\n#+BEGIN_SRC js\nimport React from 'react'\nimport { ThemeColor, ChameleonThemeColor } from 'react-chameleon-theme-color'\n\nconst App = () => (\n  <div style={{ background: \"#123\", padding: \"200px\" }}>\n    <ChameleonThemeColor contrastRatio={1.6} />\n    {/* or you can set the color manually */}\n    <ThemeColor color=\"#123\" contrastRatio={1.6} />\n  </div>\n)\n#+END_SRC\n\nSimply add either the ~ThemeColor~ or ~ChameleonThemeColor~ component to the React application using JSX.\n\nThe ~ChameleonThemeColor~ component will set the target color to the first set in-scope CSS color at runtime.\n\nAlternatively the ~ThemeColor~ component will set the target color to the value of the ~color~ prop.\n\n** Props\n*** Contrast-Ratio\nThe ~contrastRatio~ property can be set to control the sensitivity required for a custom color to be used on Apple devices.\nThe higher the value, the more contrast will be provided between the status bar text and background however it will\nalso be more likely for the status bar color to be set.\n\n*Default:* ~1.6~\n*** Color\n\nThe ~color~ property controls the target color for the status bar.\n\nOnly used for the ~ThemeColor~ component as ~ChameleonThemeColor~ component sets this automatically.\n\nIf set to ~false~, no meta attributes will be set, causing each browser to fallback to its respective default.\n\n*Default:* ~false~\n"}}},{"node":{"name":"battlesnake-java-template","description":"üêç ‚Äè‚Äè‚ÄéBattlesnake starter using Gradle, GSON and Servlets üêç ","url":"https://github.com/woofers/battlesnake-java-template","homepage":"https://battlesnake.io","stars":{"totalCount":0},"license":{"name":"GNU General Public License v3.0"},"topics":{"nodes":[]},"readme":{"text":"\n# Table of Contents\n\n-   [Battlesnake Template](#org0f72bd7)\n    -   [About](#org037056d)\n    -   [Usage](#org13dbb15)\n        -   [Prerequisites](#orgc3d5570)\n        -   [Test Board](#orgfcf9300)\n        -   [Run Locally](#org6e620be)\n        -   [Deployment](#orgc3f22c5)\n    -   [Acknowledgments](#org0f4301b)\n\n\n\n<a id=\"org0f72bd7\"></a>\n\n# Battlesnake Template\n\n<img height=\"120\" width=\"120\" src=\"screenshots/advanced.png\" />\n\nA un-official [Battlesnake](https://www.battlesnake.io) template written in Java.\n\nBattlesnake documentation can be found at [docs.battlesnake.io](https://docs.battlesnake.io).\n\n[![img](https://www.herokucdn.com/deploy/button.png)](https://heroku.com/deploy)\n\n\n<a id=\"org037056d\"></a>\n\n## About\n\nThis template is different from the official Java [Battlesnake.io Template](https://github.com/battlesnakeio/starter-snake-java) in a few ways:\n\n-   GSON is used for JSON serialization rather than Jackson\n-   Pure Java Servlets are used rather than the Spark Framework\n-   Tomcat is used as the servlet container rather than Jetty which is used by default by Spark\n-   Gradle is used as the build tool rather than Maven\n\nThe official Java [Template](https://github.com/battlesnakeio/starter-snake-java) is also simpler and smaller\nhowever this template comes out-of-the-box with the following additional features:\n\n-   Logging support using Log4j2\n-   Logs server response time\n-   Code formatting, removing used imports using spotless\n\n\n<a id=\"org13dbb15\"></a>\n\n## Usage\n\n\n<a id=\"orgc3d5570\"></a>\n\n### Prerequisites\n\n1.  Install JDK 11 or higher\n2.  Install Docker + Docker compose (required for [Docker container method](#org6458b36))\n3.  Install Heroku CLI (required for [Heroku CLI method](#orgb98a84b))\n4.  Install .war Heroku deployment plug-in `heroku plugins:install heroku-cli-deploy` ) (required for [Heroku CLI method](#orgb98a84b))\n5.  Create a Heroku App online or using the Heroku CLI with `heroku create <name>`\n\n    (alternatively any other hosting service can be used)\n\n\n<a id=\"orgfcf9300\"></a>\n\n### Test Board\n\n**Online**\n\nGoto [play.battlesnake.io](https://play.battlesnake.io)\n\n\n<a id=\"org6e620be\"></a>\n\n### Run Locally\n\n**Gradle**\n\n1.  Run the project using either `./gradle run` or `gradlew run` for UNIX and Windows platforms respectively.  This will build and run the project as a \\`JAR\\` using [Webapp Runner](https://github.com/jsimone/webapp-runner).\n2.  Use `http://localhost:8080` as the snake URL.\n\n**Docker**\n<a id=\"org6458b36\"></a>\n\n1.  Build the project using either `./gradle build` or `gradlew build` for UNIX and Windows platforms respectively.\n2.  Run the Docker Tomcat image in a container with `docker-compose up`.\n3.  Use `http://localhost:8080/battlesnake` as the snake URL.\n\n\n<a id=\"orgc3f22c5\"></a>\n\n### Deployment\n\n**Heroku-GitHub Integration**\n\n1.  Go the dashboard for the Heroku app.\n2.  Click on the `deploy` tab.\n3.  Scroll down to the `Deployment method` and select `GitHub`.\n4.  Enter the repository name and click `Connect`.\n\n**Heroku CLI**\n<a id=\"orgb98a84b\"></a>\n\n1.  Build .war file `./gradlew build`\n2.  Deploy to Heroku `heroku war:deploy build/libs/battlesnake.war --app <name>`\n3.  Use `https://[name].herokuapp.com/` as the snake URL.\n\n\n<a id=\"org0f4301b\"></a>\n\n## Acknowledgments\n\n-   **Built by** [Ben Austin](https://github.com/austinben) and [Jaxson Van Doorn](https://github.com/woofers)\n-   **Adapted from** [tflinz's snake](https://github.com/tflinz/BasicBattleSnake2018)\n-   **Designed for** [Battlesnake.io](https://github.com/battlesnakeio) competition\n\n<img align=\"left\" height=\"120\" width=\"120\" src=\"screenshots/advanced.png\" />\n"},"readmeOrg":{"text":"\n#+TITLE:\tBattlesnake 2019\n#+AUTHOR:\tJaxson Van Doorn\n#+EMAIL:\tjaxson.vandoorn@gmail.com\n#+OPTIONS:  num:nil\n\n* Battlesnake Template\n\n@@html:<img height=\"120\" width=\"120\" src=\"screenshots/advanced.png\" />@@\n\nA un-official [[https://www.battlesnake.io][Battlesnake]] template written in Java.\n\nBattlesnake documentation can be found at [[https://docs.battlesnake.io][docs.battlesnake.io]].\n\n[[https://heroku.com/deploy][https://www.herokucdn.com/deploy/button.png]]\n\n** About\n\nThis template is different from the official Java [[https://github.com/battlesnakeio/starter-snake-java][Battlesnake.io Template]] in a few ways:\n\n- GSON is used for JSON serialization rather than Jackson\n- Pure Java Servlets are used rather than the Spark Framework\n- Tomcat is used as the servlet container rather than Jetty which is used by default by Spark\n- Gradle is used as the build tool rather than Maven\n\nThe official Java [[https://github.com/battlesnakeio/starter-snake-java][Template]] is also simpler and smaller\nhowever this template comes out-of-the-box with the following additional features:\n\n- Logging support using Log4j2\n- Logs server response time\n- Code formatting, removing used imports using spotless\n\n** Usage\n*** Prerequisites\n1. Install JDK 11 or higher\n2. Install Docker + Docker compose (required for [[sec:docker][Docker container method]])\n3. Install Heroku CLI (required for [[sec:heroku-cli][Heroku CLI method]])\n4. Install .war Heroku deployment plug-in ~heroku plugins:install heroku-cli-deploy~ ) (required for [[sec:heroku-cli][Heroku CLI method]])\n5. Create a Heroku App online or using the Heroku CLI with ~heroku create <name>~\n\n   (alternatively any other hosting service can be used)\n*** Test Board\n*Online*\n\nGoto [[https://play.battlesnake.io][play.battlesnake.io]]\n*** Run Locally\n*Gradle*\n\n1. Run the project using either ~./gradle run~ or ~gradlew run~ for UNIX and Windows platforms respectively.  This will build and run the project as a `JAR` using [[https://github.com/jsimone/webapp-runner][Webapp Runner]].\n2. Use ~http://localhost:8080~ as the snake URL.\n\n*Docker*\n<<sec:docker>>\n\n1. Build the project using either ~./gradle build~ or ~gradlew build~ for UNIX and Windows platforms respectively.\n2. Run the Docker Tomcat image in a container with ~docker-compose up~.\n3. Use ~http://localhost:8080/battlesnake~ as the snake URL.\n*** Deployment\n\n*Heroku-GitHub Integration*\n\n1. Go the dashboard for the Heroku app.\n2. Click on the ~deploy~ tab.\n3. Scroll down to the ~Deployment method~ and select ~GitHub~.\n4. Enter the repository name and click ~Connect~.\n\n*Heroku CLI*\n<<sec:heroku-cli>>\n\n1. Build .war file ~./gradlew build~\n2. Deploy to Heroku ~heroku war:deploy build/libs/battlesnake.war --app <name>~\n3. Use ~https://[name].herokuapp.com/~ as the snake URL.\n** Acknowledgments\n\n-  *Built by* [[https://github.com/austinben][Ben Austin]] and [[https://github.com/woofers][Jaxson Van Doorn]]\n-  *Adapted from* [[https://github.com/tflinz/BasicBattleSnake2018][tflinz's snake]]\n-  *Designed for* [[https://github.com/battlesnakeio][Battlesnake.io]] competition\n\n@@html:<img align=\"left\" height=\"120\" width=\"120\" src=\"screenshots/advanced.png\" />@@\n"}}},{"node":{"name":"react-wavify","description":"üèùÔ∏è üåä  Animated wave component for React ","url":"https://github.com/woofers/react-wavify","homepage":"https://jaxson.vandoorn.ca/react-wavify/","stars":{"totalCount":43},"license":{"name":"MIT License"},"topics":{"nodes":[{"topic":{"name":"react"}},{"topic":{"name":"reactjs"}},{"topic":{"name":"component"}},{"topic":{"name":"svg"}},{"topic":{"name":"animation"}},{"topic":{"name":"wave"}}]},"readme":{"text":"\n\n# React Wavify\n\n[![img](https://github.com/woofers/react-wavify/workflows/build/badge.svg)](https://github.com/woofers/react-wavify/actions) [![img](https://david-dm.org/woofers/react-wavify.svg)](https://www.npmjs.com/package/react-wavify) [![img](https://badge.fury.io/js/react-wavify.svg)](https://www.npmjs.com/package/react-wavify) [![img](https://img.shields.io/npm/dt/react-wavify.svg)](https://www.npmjs.com/package/react-wavify) [![img](https://img.shields.io/npm/l/react-wavify.svg)](https://github.com/woofers/react-wavify/blob/master/License.txt)\n\nA simple React component which creates an animated wave.\n\n**[Live Demo](https://jaxson.vandoorn.ca/react-wavify/)**\n\nThis component is heavily adapted from [Miko≈Çaj Stolarski](https://github.com/grimor)'s awesome [Codepen](https://codepen.io/grimor/pen/qbXLdN)\nand is functionally similar to [Benjamin Grauwin](http://benjamin.grauwin.me/)'s [Wavify](https://github.com/peacepostman/wavify) plug-in.\n\n![img](./screenshots/wave.gif \"Wave\")\n\n\n# Installation\n\n**Yarn**\n\n    yarn add react-wavify\n\n**npm**\n\n    npm install react-wavify\n\n\n# Usage\n\n```jsx\nimport React from 'react'\nimport Wave from 'react-wavify'\n\nconst App = () => (\n  <Wave fill='#f79902'\n        paused={false}\n        options={{\n          height: 20,\n          amplitude: 20,\n          speed: 0.15,\n          points: 3\n        }}\n  />\n)\n```\n\nSimply add the Wave component to the React application using JSX.\n\nThe wave's width will scale to fit the parent container.\n\n\n## Props\n\n\n### Fill\n\nThe `fill` property can be set to anything that a SVG path can accept (usually gradients or colors). **Default:** `#FFF`\n\n\n### Paused\n\nThe `paused` property controls the play state of the animation. **Default:** `false`\n\nIf set to `true` the wave animation will pause.\n\n\n### Options\n\nThe component supports a variety of options to affect how the wave is rendered.\n\nAny omitted options will be set to the default value.\n\n-   `height` - Height of the wave relative to the SVG element. **Default:** `20`\n-   `amplitude` - Amplitude of the rendered wave. **Default:** `20`\n-   `speed` - Speed that the wave animation plays at. **Default:** `0.15`\n-   `points` - Amount of points used to form the wave.\n    Can not be less than `1`. **Default:** `3`\n\n\n### Pass Through Props\n\nAny other props such as `id`, `className` or `style` will be passed through to the root of the component.\n\nOther props such as `opacity` or `stroke` will be passed to the SVG path element.\n\nAny other elements can be passed inside the SVG component itself.\n\nInner `<defs>` elements can be used to add gradients, clipping paths, or masks.\n\n##### Using a Gradient\n\n```jsx\n<Wave fill=\"url(#gradient)\">\n  <defs>\n    <linearGradient id=\"gradient\" gradientTransform=\"rotate(90)\">\n      <stop offset=\"10%\"  stopColor=\"#d4af37\" />\n      <stop offset=\"90%\" stopColor=\"#f00\" />\n    </linearGradient>\n  </defs>\n</Wave>\n```\n\n![img](./screenshots/wave-grad.gif \"Gradient Wave\")\n\n##### Using a Clipping Path\n\n```jsx\n<Wave fill=\"#e62315\" mask=\"url(#mask)\" options={{ points: 20, speed: 0.2, amplitude: 40 }}>\n  {/* Example adapted from https://developer.mozilla.org/en-US/docs/Web/SVG/Element/mask */}\n  <mask id=\"mask\">\n    <path d=\"M10,35 A20,20,0,0,1,50,35 A20,20,0,0,1,90,35 Q90,65,50,95 Q10,65,10,35 Z\" fill=\"white\" />\n  </mask>\n</Wave>\n```\n\n![img](./screenshots/wave-heart.gif \"Clipping Path Wave\")\n\n##### Using a Mask\n\n```jsx\n<Wave mask=\"url(#mask)\" fill=\"#1277b0\" >\n  <defs>\n    <linearGradient id=\"gradient\" gradientTransform=\"rotate(90)\">\n      <stop offset=\"0\" stopColor=\"white\" />\n      <stop offset=\"0.5\" stopColor=\"black\" />\n    </linearGradient>\n    <mask id=\"mask\">\n      <rect x=\"0\" y=\"0\" width=\"2000\" height=\"200\" fill=\"url(#gradient)\"  />\n    </mask>\n  </defs>\n</Wave>\n```\n\n![img](./screenshots/wave-mask.gif \"Mask Wave\")\n"},"readmeOrg":{"text":"\n#+TITLE:    React Wavify\n#+AUTHOR:\tJaxson Van Doorn\n#+EMAIL:\tjaxson.vandoorn@gmail.com\n#+OPTIONS:  num:nil toc:nil\n\n* React Wavify\n\n[[https://github.com/woofers/react-wavify/actions][https://github.com/woofers/react-wavify/workflows/build/badge.svg]] [[https://www.npmjs.com/package/react-wavify][https://david-dm.org/woofers/react-wavify.svg]] [[https://www.npmjs.com/package/react-wavify][https://badge.fury.io/js/react-wavify.svg]] [[https://www.npmjs.com/package/react-wavify][https://img.shields.io/npm/dt/react-wavify.svg]] [[https://github.com/woofers/react-wavify/blob/master/License.txt][https://img.shields.io/npm/l/react-wavify.svg]]\n\nA simple React component which creates an animated wave.\n\n*[[https://jaxson.vandoorn.ca/react-wavify/][Live Demo]]*\n\nThis component is heavily adapted from [[https://github.com/grimor][Miko≈Çaj Stolarski]]'s awesome [[https://codepen.io/grimor/pen/qbXLdN][Codepen]]\nand is functionally similar to [[http://benjamin.grauwin.me/][Benjamin Grauwin]]'s [[https://github.com/peacepostman/wavify][Wavify]] plug-in.\n\n#+CAPTION: Wave\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\n[[./screenshots/wave.gif]]\n\n* Installation\n\n*Yarn*\n#+BEGIN_SRC\nyarn add react-wavify\n#+END_SRC\n\n*npm*\n#+BEGIN_SRC\nnpm install react-wavify\n#+END_SRC\n\n* Usage\n\n#+BEGIN_SRC js\nimport React from 'react'\nimport Wave from 'react-wavify'\n\nconst App = () => (\n  <Wave fill='#f79902'\n        paused={false}\n        options={{\n          height: 20,\n          amplitude: 20,\n          speed: 0.15,\n          points: 3\n        }}\n  />\n)\n#+END_SRC\n\nSimply add the Wave component to the React application using JSX.\n\nThe wave's width will scale to fit the parent container.\n** Props\n*** Fill\nThe ~fill~ property can be set to anything that a SVG path can accept (usually gradients or colors). *Default:* ~#FFF~\n*** Paused\n\nThe ~paused~ property controls the play state of the animation. *Default:* ~false~\n\nIf set to ~true~ the wave animation will pause.\n*** Options\nThe component supports a variety of options to affect how the wave is rendered.\n\nAny omitted options will be set to the default value.\n\n- ~height~ - Height of the wave relative to the SVG element. *Default:* ~20~\n- ~amplitude~ - Amplitude of the rendered wave. *Default:* ~20~\n- ~speed~ - Speed that the wave animation plays at. *Default:* ~0.15~\n- ~points~ - Amount of points used to form the wave.\n             Can not be less than ~1~. *Default:* ~3~\n*** Pass Through Props\nAny other props such as ~id~, ~className~ or ~style~ will be passed through to the root of the component.\n\nOther props such as ~opacity~ or ~stroke~ will be passed to the SVG path element.\n\nAny other elements can be passed inside the SVG component itself.\n\nInner ~<defs>~ elements can be used to add gradients, clipping paths, or masks.\n**** Using a Gradient\n\n#+BEGIN_SRC js\n<Wave fill=\"url(#gradient)\">\n  <defs>\n    <linearGradient id=\"gradient\" gradientTransform=\"rotate(90)\">\n      <stop offset=\"10%\"  stopColor=\"#d4af37\" />\n      <stop offset=\"90%\" stopColor=\"#f00\" />\n    </linearGradient>\n  </defs>\n</Wave>\n#+END_SRC\n\n#+CAPTION: Gradient Wave\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\n[[./screenshots/wave-grad.gif]]\n\n**** Using a Clipping Path\n\n#+BEGIN_SRC js\n<Wave fill=\"#e62315\" mask=\"url(#mask)\" options={{ points: 20, speed: 0.2, amplitude: 40 }}>\n  {/* Example adapted from https://developer.mozilla.org/en-US/docs/Web/SVG/Element/mask */}\n  <mask id=\"mask\">\n    <path d=\"M10,35 A20,20,0,0,1,50,35 A20,20,0,0,1,90,35 Q90,65,50,95 Q10,65,10,35 Z\" fill=\"white\" />\n  </mask>\n</Wave>\n#+END_SRC\n\n#+CAPTION: Clipping Path Wave\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\n[[./screenshots/wave-heart.gif]]\n\n**** Using a Mask\n\n#+BEGIN_SRC js\n<Wave mask=\"url(#mask)\" fill=\"#1277b0\" >\n  <defs>\n    <linearGradient id=\"gradient\" gradientTransform=\"rotate(90)\">\n      <stop offset=\"0\" stopColor=\"white\" />\n      <stop offset=\"0.5\" stopColor=\"black\" />\n    </linearGradient>\n    <mask id=\"mask\">\n      <rect x=\"0\" y=\"0\" width=\"2000\" height=\"200\" fill=\"url(#gradient)\"  />\n    </mask>\n  </defs>\n</Wave>\n#+END_SRC\n\n#+CAPTION: Mask Wave\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\n[[./screenshots/wave-mask.gif]]\n"}}},{"node":{"name":"org-invoice-template","description":"üìö A template to create invoices using Org mode clock reports","url":"https://github.com/woofers/org-invoice-template","homepage":"","stars":{"totalCount":3},"license":{"name":"GNU General Public License v3.0"},"topics":{"nodes":[{"topic":{"name":"latex"}},{"topic":{"name":"org-mode"}},{"topic":{"name":"invoice"}}]},"readme":null,"readmeOrg":{"text":"\n#+TITLE:    Org Mode Invoice Template\n#+AUTHOR:\tJaxson Van Doorn\n#+EMAIL:\tjaxson.vandoorn@gmail.com\n#+OPTIONS:  num:nil toc:nil\n\n\nA set of Org and LaTeX files which generate invoices using Org clock reports.\n\n#+NAME: Example Invoice\n#+ATTR_HTML: :alt Example Invoice :style margin-left: auto; margin-right: auto;\n[[./examples/invoice.png]]\n\nThis template is heavily based on the template shown on [[http://notes.secretsauce.net/notes/2014/10/01_org-mode-for-invoices.html][Dima Kogan's blog]].\n\nThe styling is based on [[https://github.com/treyhunner/invoices][Trey Hunner's invoice template]].\n\n* Usage\n\nSimply start clocking time using Org clocks in ~content/timesheet.org~.\nThe file should already contain an example timesheet.\n\nThen edit ~content/info.org~ to include the correct date, consultant and client info.\n\nThen when it's time to generate the invoice, go into ~content/invoice.org~\nand run ~org-invoice-generate~.\n\nAll of the info from the timesheet will be used to\nfill-in the /Services Breakdown/ and /Balance Due/ fields.\n\nFinally, export ~content/invoice.org~ as a LaTeX PDF to output the completed invoice.\n\nThe process should look something like this:\n\n#+NAME: Invoice Generation\n#+ATTR_HTML: :alt Invoice Generation :style margin-left: auto; margin-right: auto;\n[[./screenshots/emacs.gif]]\n"}}},{"node":{"name":"resume","description":"üìù Source files for my resume using Org mode and LaTeX","url":"https://github.com/woofers/resume","homepage":"https://jaxson.vandoorn.ca/resume/jaxsonvd-resume.pdf","stars":{"totalCount":2},"license":{"name":"Other"},"topics":{"nodes":[{"topic":{"name":"resume"}},{"topic":{"name":"latex"}},{"topic":{"name":"org-mode"}},{"topic":{"name":"org"}}]},"readme":{"text":"\n# Resume\n\n**Source files for my resume using org-mode and LaTeX**\n\nUses *Emacs Org mode* with a custom *LaTeX* style sheet.  As a result it can be compiled in many formats such as *LaTeX PDF*, *Markdown* and *Bootstrap* HTML.\n\nRequires enumitem package for lists and fontspec for icons.\n\nCompiled with XeLaTeX.\n\n# LaTeX PDF\n\n[![alt text](./examples/latex/resume.png \"Resume\")](./examples/latex/resume.pdf)\n"},"readmeOrg":null}},{"node":{"name":"woofers.github.io","description":"üåé  Personal site and portfolio","url":"https://github.com/woofers/woofers.github.io","homepage":"https://jaxson.vandoorn.ca","stars":{"totalCount":1},"license":{"name":"MIT License"},"topics":{"nodes":[{"topic":{"name":"gatsbyjs"}},{"topic":{"name":"gatsby"}},{"topic":{"name":"site"}},{"topic":{"name":"org-mode"}},{"topic":{"name":"org"}},{"topic":{"name":"react"}},{"topic":{"name":"reactjs"}}]},"readme":{"text":"\n\n# [jaxson.vandoorn.ca](https://jaxson.vandoorn.ca)\n\n[![img](https://github.com/woofers/woofers.github.io/workflows/build/badge.svg)](https://github.com/woofers/woofers.github.io/actions)\n\nA [Gatsby](https://www.gatsbyjs.org/) based site built using static [Org Mode](https://orgmode.org/) content with [Orga](https://github.com/xiaoxinghu/orgajs).\n\nAutomated deploy to [Github Pages](https://pages.github.com/) is configured using [GitHub Actions](https://github.com/features/actions).\n\n\n# Goals\n\n1.  Be easy to update and maintain content.  Ideally with simple [Org Mode](https://orgmode.org/) markup.\n2.  Take full-advantage of wide screen sizes while still scaling to a wide-variety of screen sizes.\n3.  Load quickly; nothing is worse than a *slow* site.\n\n\n# Modules\n\nThis sites uses a variety of open-source modules to keep the lights on.  Here are some of the key plug-ins:\n\n-   [Gatsby](https://www.gatsbyjs.org/) provides an extremely easy [React](https://reactjs.org/) + [Webpack](https://webpack.js.org/) with a great plug-in ecosystem allowing content to be pulled in any format.\n-   [Orga](https://github.com/xiaoxinghu/orgajs) allows [Org Mode](https://orgmode.org/) parsing using the [Gatsby Node APIs](https://www.gatsbyjs.org/docs/node-apis/).  A useful example and the skeleton of this site can be found [here](https://github.com/xiaoxinghu/gatsby-orga).\n-   Code highlighting on posts is powered by [Prism](https://prismjs.com/).\n-   [emotion](https://emotion.sh/) dynamically generate CSS for different components.\n-   [Font Awesome](https://github.com/danawoodman/react-fontawesome) is used to easily add vector icons.\n-   [typography.js](https://github.com/KyleAMathews/typography.js) handles font styling.\n\n\n# Usage\n\n\n### Running Locally\n\nRunning locally for development can be done with:\n\n-   `yarn install` or `npm install` to install the required modules.\n-   `yarn dev` or `npm dev` to host locally in development mode.\n\nNow going to [localhost:8000](http://localhost:8000) will display the site.\n\n\n## Building for Deployment\n\nBuilding the static site can be done with:\n\n-   `yarn build` or `npm build`.\n\nA `public` folder will be generated with the created bundle.\n"},"readmeOrg":{"text":"\n#+AUTHOR:\tJaxson Van Doorn\n#+EMAIL:\tjaxson.vandoorn@gmail.com\n#+OPTIONS:  num:nil toc:nil\n* [[https://jaxson.vandoorn.ca][jaxson.vandoorn.ca]]\n\n[[https://github.com/woofers/woofers.github.io/actions][https://github.com/woofers/woofers.github.io/workflows/build/badge.svg]]\n\nA [[https://www.gatsbyjs.org/][Gatsby]] based site built using static [[https://orgmode.org/][Org Mode]] content with [[https://github.com/xiaoxinghu/orgajs][Orga]].\n\nAutomated deploy to [[https://pages.github.com/][Github Pages]] is configured using [[https://github.com/features/actions][GitHub Actions]].\n\n* Goals\n1) Be easy to update and maintain content.  Ideally with simple [[https://orgmode.org/][Org Mode]] markup.\n2) Take full-advantage of wide screen sizes while still scaling to a wide-variety of screen sizes.\n3) Load quickly; nothing is worse than a /slow/ site.\n\n* Modules\n\nThis sites uses a variety of open-source modules to keep the lights on.  Here are some of the key plug-ins:\n\n- [[https://www.gatsbyjs.org/][Gatsby]] provides an extremely easy [[https://reactjs.org/][React]] + [[https://webpack.js.org/][Webpack]] with a great plug-in ecosystem allowing content to be pulled in any format.\n- [[https://github.com/xiaoxinghu/orgajs][Orga]] allows [[https://orgmode.org/][Org Mode]] parsing using the [[https://www.gatsbyjs.org/docs/node-apis/][Gatsby Node APIs]].  A useful example and the skeleton of this site can be found [[https://github.com/xiaoxinghu/gatsby-orga][here]].\n- Code highlighting on posts is powered by [[https://prismjs.com/][Prism]].\n- [[https://emotion.sh/][emotion]] dynamically generate CSS for different components.\n- [[https://github.com/danawoodman/react-fontawesome][Font Awesome]] is used to easily add vector icons.\n- [[https://github.com/KyleAMathews/typography.js][typography.js]] handles font styling.\n\n* Usage\n*** Running Locally\nRunning locally for development can be done with:\n- ~yarn install~ or ~npm install~ to install the required modules.\n- ~yarn dev~ or ~npm dev~ to host locally in development mode.\nNow going to [[http://localhost:8000][localhost:8000]] will display the site.\n\n** Building for Deployment\n\nBuilding the static site can be done with:\n- ~yarn build~ or ~npm build~.\nA ~public~ folder will be generated with the created bundle.\n"}}},{"node":{"name":"libgdx-tools-installer","description":"‚å®Ô∏è A simple script to install LibGDX Command Line Tools","url":"https://github.com/woofers/libgdx-tools-installer","homepage":"","stars":{"totalCount":0},"license":{"name":"MIT License"},"topics":{"nodes":[]},"readme":{"text":"\r\n\r\n# libgdx-tools-installer\r\n\r\n**A simple script to install LibGDX Command Line Tools**\r\n\r\nThe suite of extremely useful LibGDX tools are hidden behind lots of documentation and long commands.  The `libgdx-tools-installer` aliases all these tools and install them, as well as their GUI counterparts.\r\n\r\n\r\n## Usage\r\n\r\nSpecific info on usage of the LibGDX tools can be found [here.](https://libgdx.badlogicgames.com/tools.html)\r\n\r\n**Warning:** The installation scripts provided are very simple and have minimal logical.  It could possibly execute unexpected actions if installing into a write protected folder. Use at your own risk!\r\n\r\n\r\n### Installation\r\n\r\nSimply run `sudo wget -O - https://raw.githubusercontent.com/woofers/libgdx-tools-installer/master/install.sh | sudo bash`\r\n\r\nWhat this does is clone this repo into a folder in the current directory named `libgdx-tools`.  It stores the install location into `~/.gdxtools`. Then it then downloads the latest LibGDX nightly build with fbx-conv.  Then it links some scripts into `/usr/bin` for allow for easy execution from the command line.\r\n\r\n-   `fbx-conv` will run fbx-conv.\r\n\r\n-   `fbx-conv-gui` will run fbx-conv as a GUI (Documentation found [here](https://github.com/ASneakyFox/libgdx-fbxconv-gui)).\r\n\r\n-   `texture-packer` will run the LibGDX Texture Packer.\r\n\r\n-   `texture-packer-gui` will run the LibGDX Texture Packer as a GUI (Documentation found [here](https://github.com/crashinvaders/gdx-texture-packer-gui)).\r\n\r\n-   `tiled-packer` will run the LibGDX Tiled Packer.\r\n\r\n\r\n### Uninstallation\r\n\r\nRun the `uninstall.sh` in the install directory with `sudo ./uninstall.sh`.\r\n\r\n\r\n### Update\r\n\r\nRun the `update.sh` in the install directory with `sudo ./update.sh`.\r\n"},"readmeOrg":{"text":"\r\n#+TITLE:\tlibgdx-tools-installer\r\n#+AUTHOR:\tJaxson Van Doorn\r\n#+EMAIL:\tjaxson.vandoorn@gmail.com\r\n#+OPTIONS:  num:nil toc:nil\r\n\r\n* libgdx-tools-installer\r\n*A simple script to install LibGDX Command Line Tools*\r\n\r\nThe suite of extremely useful LibGDX tools are hidden behind lots of documentation and long commands.  The ~libgdx-tools-installer~ aliases all these tools and install them, as well as their GUI counterparts.\r\n\r\n** Usage\r\n\r\nSpecific info on usage of the LibGDX tools can be found [[https://libgdx.badlogicgames.com/tools.html][here.]]\r\n\r\n*Warning:* The installation scripts provided are very simple and have minimal logical.  It could possibly execute unexpected actions if installing into a write protected folder. Use at your own risk!\r\n\r\n*** Installation\r\n\r\nSimply run ~sudo wget -O - https://raw.githubusercontent.com/woofers/libgdx-tools-installer/master/install.sh | sudo bash~\r\n\r\nWhat this does is clone this repo into a folder in the current directory named ~libgdx-tools~.  It stores the install location into ~~/.gdxtools~. Then it then downloads the latest LibGDX nightly build with fbx-conv.  Then it links some scripts into ~/usr/bin~ for allow for easy execution from the command line.\r\n\r\n- ~fbx-conv~ will run fbx-conv.\r\n\r\n- ~fbx-conv-gui~ will run fbx-conv as a GUI (Documentation found [[https://github.com/ASneakyFox/libgdx-fbxconv-gui][here]]).\r\n\r\n- ~texture-packer~ will run the LibGDX Texture Packer.\r\n\r\n- ~texture-packer-gui~ will run the LibGDX Texture Packer as a GUI (Documentation found [[https://github.com/crashinvaders/gdx-texture-packer-gui][here]]).\r\n\r\n- ~tiled-packer~ will run the LibGDX Tiled Packer.\r\n\r\n*** Uninstallation\r\nRun the ~uninstall.sh~ in the install directory with ~sudo ./uninstall.sh~.\r\n*** Update\r\nRun the ~update.sh~ in the install directory with ~sudo ./update.sh~.\r\n"}}},{"node":{"name":"battlesnake","description":"üêç Battlesnakes for 2018, 2019 and 2020 üêç","url":"https://github.com/woofers/battlesnake","homepage":"https://battlesnake-liquid.herokuapp.com/","stars":{"totalCount":3},"license":{"name":"GNU General Public License v3.0"},"topics":{"nodes":[{"topic":{"name":"battlesnakeio"}},{"topic":{"name":"battlesnake"}},{"topic":{"name":"java"}},{"topic":{"name":"api"}},{"topic":{"name":"gson"}}]},"readme":{"text":"\n\n# Battlesnake\n\n<img height=\"120\" width=\"120\" src=\"screenshots/advanced.png\" />\n\n\nA simple [Battlesnake](https://play.battlesnake.com/) written in Java.\n\nDeployed to [https://battlesnake-liquid.herokuapp.com/](https://battlesnake-liquid.herokuapp.com/)\n\nBattlesnake documentation can be found at <https://docs.battlesnake.com/>.\n\n[![img](https://www.herokucdn.com/deploy/button.png)](https://heroku.com/deploy)\n\n## Competition History\n\nVariations of this snake have participated in multiple Battlesnake competitions.\n\n* Competed in the veteran division of Battlesnake: Stay Home and Code as  üööü¶¥üê∂ ùó™ùóîùóüùóßùóòùó• üëë üöí\n\n* Competed in the expert division of Battlesnake 2019 & Battlesnake 2019 Winter Classic as  üêç ‚Äè‚Äè‚ÄéùôéùôêùôãùôÄùôç ùôéùôáùôÑùôàùôÄùôî ‚Äèüêç - [View Snake](https://github.com/woofers/battlesnake-2019/tree/battlesnake-2019)\n\n* Competed in the intermediate division Battlesnake 2018 as **Solid Snake** - [View Snake](https://github.com/woofers/battlesnake-2019/tree/battlesnake-2018)\n\n## Strategy\n\nOur snake's strategy was aggresive. For each turn, if the snake wasn't\nthe largest on the board, or if the health was below a specific\nthreshold, the snake would navigate towards the closest food. Otherwise,\nit would try to target the other snakes' heads to either eliminate the\nopponent in a head-on collision or trap them by cutting off their path.\n\n## Tournament - Stay Home and Code\n\nThe snake beat six other competitors the second round of Group B to qualify for the Quaterfinals, where it was eliminated. There were 32\ncompetitors in the veteran division. Our games were played on a 11x11 board with 4 food spawned at start.\n\nTimestamp on the [BattlesnakeOfficial Twitch stream](https://www.twitch.tv/videos/602731416) is [2:16:32-2:25:35](https://www.twitch.tv/videos/602731416?t=02h16m32s) for Group B, and [4:04:08-4:15:18](https://www.twitch.tv/videos/602731416?t=04h04m08s) for Quaterfinals.\n\n**[Group B - Round 1](https://clips.twitch.tv/BeautifulCuteKleeResidentSleeper)**\n\n**[Group B - Round 2](https://clips.twitch.tv/CrackyElegantWaspPartyTime)**\n\n**[Quaterfinals - Round 1](https://clips.twitch.tv/WrongBitterDragonflyRitzMitz)**\n\n**[Quaterfinals - Round 2](https://clips.twitch.tv/PluckyElegantMouseEleGiggle)**\n\n**[Quaterfinals - Round 3](https://clips.twitch.tv/WanderingHonorableCurlewPeteZaroll)**\n\n\n## Usage\n\n\n### Prerequisites\n\n1.  Install JDK 11 or higher\n2.  Install Docker + Docker compose (required for [Docker container method](#orgfd68ec6))\n3.  Install Heroku CLI (required for [Heroku CLI method](#org8843ce7))\n4.  Install .war Heroku deployment plug-in `heroku plugins:install heroku-cli-deploy` ) (required for [Heroku CLI method](#org8843ce7))\n5.  Create a Heroku App online or using the Heroku CLI with `heroku create <name>`\n\n    (alternatively any other hosting service can be used)\n\n\n### Test Board\n\n**Online**\n\nGoto [play.battlesnake.io](https://play.battlesnake.io)\n\n\n### Run Locally\n\n**Gradle**\n\n1.  Run the project using either `./gradle run` or `gradlew run` for UNIX and Windows platforms respectively.  This will build and run the project as a \\`JAR\\` using [Webapp Runner](https://github.com/jsimone/webapp-runner).\n2.  Use `http://localhost:8080` as the snake URL.\n\n**Docker**\n<a id=\"orgfd68ec6\"></a>\n\n1.  Build the project using either `./gradle build` or `gradlew build` for UNIX and Windows platforms respectively.\n2.  Run the Docker Tomcat image in a container with `docker-compose up`.\n3.  Use `http://localhost:8080/battlesnake` as the snake URL.\n\n\n### Deployment\n\n**Heroku-GitHub Integration**\n\n1.  Go the dashboard for the Heroku app.\n2.  Click on the `deploy` tab.\n3.  Scroll down to the `Deployment method` and select `GitHub`.\n4.  Enter the repository name and click `Connect`.\n\n**Heroku CLI**\n<a id=\"org8843ce7\"></a>\n\n1.  Build .war file `./gradlew build`\n2.  Deploy to Heroku `heroku war:deploy build/libs/battlesnake.war --app <name>`\n3.  Use `https://[name].herokuapp.com/` as the snake URL.\n\n\n## Acknowledgments\n\n-   **Built by** [Jaxson Van Doorn](https://github.com/woofers) and [Ben Austin](https://github.com/austinben)\n-   **Adapted from** [tflinz's snake](https://github.com/tflinz/BasicBattleSnake2018)\n-   **Designed for** [Battlesnake Official's](https://github.com/battlesnakeofficial) competition\n\n<img align=\"left\" height=\"120\" width=\"120\" src=\"screenshots/advanced.png\" />\n"},"readmeOrg":{"text":"* Battlesnake\n  :PROPERTIES:\n  :CUSTOM_ID: battlesnake\n  :END:\n\nA simple [[https://play.battlesnake.com/][Battlesnake]] written in Java.\n\nDeployed to [[https://battlesnake-liquid.herokuapp.com/]]\n\nBattlesnake documentation can be found at\n[[https://docs.battlesnake.com/]].\n\n[[https://heroku.com/deploy][https://www.herokucdn.com/deploy/button.png]]\n\n** Competition History\n   :PROPERTIES:\n   :CUSTOM_ID: competition-history\n   :END:\n\nVariations of this snake have participated in multiple Battlesnake\ncompetitions.\n\n- Competed in the veteran division of Battlesnake: Stay Home and Code as\n  üööü¶¥üê∂ ùó™ùóîùóüùóßùóòùó• üëë üöí\n\n- Competed in the expert division of Battlesnake 2019 & Battlesnake 2019\n  Winter Classic as üêç ‚Äè‚Äè‚ÄéùôéùôêùôãùôÄùôç ùôéùôáùôÑùôàùôÄùôî ‚Äèüêç -\n  [[https://github.com/woofers/battlesnake-2019/tree/battlesnake-2019][View\n  Snake]]\n\n- Competed in the intermediate division Battlesnake 2018 as *Solid\n  Snake* -\n  [[https://github.com/woofers/battlesnake-2019/tree/battlesnake-2018][View\n  Snake]]\n\n** Strategy\n   :PROPERTIES:\n   :CUSTOM_ID: strategy\n   :END:\n\nOur snake's strategy was aggresive. For each turn, if the snake wasn't\nthe largest on the board, or if the health was below a specific\nthreshold, the snake would navigate towards the closest food. Otherwise,\nit would try to target the other snakes' heads to either eliminate the\nopponent in a head-on collision or trap them by cutting off their path.\n\n** Tournament - Stay Home and Code\n   :PROPERTIES:\n   :CUSTOM_ID: tournament---stay-home-and-code\n   :END:\n\nThe snake beat six other competitors the second round of Group B to\nqualify for the Quaterfinals, where it was eliminated. There were 32\ncompetitors in the veteran division. Our games were played on a 11x11\nboard with 4 food spawned at start.\n\nTimestamp on the\n[[https://www.twitch.tv/videos/602731416][BattlesnakeOfficial Twitch\nstream]] is\n[[https://www.twitch.tv/videos/602731416?t=02h16m32s][2:16:32-2:25:35]]\nfor Group B, and\n[[https://www.twitch.tv/videos/602731416?t=04h04m08s][4:04:08-4:15:18]]\nfor Quaterfinals.\n\n*[[https://clips.twitch.tv/BeautifulCuteKleeResidentSleeper][Group B -\nRound 1]]*\n\n*[[https://clips.twitch.tv/CrackyElegantWaspPartyTime][Group B - Round\n2]]*\n\n*[[https://clips.twitch.tv/WrongBitterDragonflyRitzMitz][Quaterfinals -\nRound 1]]*\n\n*[[https://clips.twitch.tv/PluckyElegantMouseEleGiggle][Quaterfinals -\nRound 2]]*\n\n*[[https://clips.twitch.tv/WanderingHonorableCurlewPeteZaroll][Quaterfinals -\nRound 3]]*\n\n** Usage\n   :PROPERTIES:\n   :CUSTOM_ID: usage\n   :END:\n\n*** Prerequisites\n    :PROPERTIES:\n    :CUSTOM_ID: prerequisites\n    :END:\n\n1. Install JDK 11 or higher\n\n2. Install Docker + Docker compose (required for [[#orgfd68ec6][Docker\n   container method]])\n\n3. Install Heroku CLI (required for [[#org8843ce7][Heroku CLI method]])\n\n4. Install .war Heroku deployment plug-in\n   =heroku plugins:install heroku-cli-deploy= ) (required for\n   [[#org8843ce7][Heroku CLI method]])\n\n5. Create a Heroku App online or using the Heroku CLI with\n   =heroku create <name>=\n\n   (alternatively any other hosting service can be used)\n\n*** Test Board\n    :PROPERTIES:\n    :CUSTOM_ID: test-board\n    :END:\n\n*Online*\n\nGoto [[https://play.battlesnake.io][play.battlesnake.io]]\n\n*** Run Locally\n    :PROPERTIES:\n    :CUSTOM_ID: run-locally\n    :END:\n\n*Gradle*\n\n1. Run the project using either =./gradle run= or =gradlew run= for UNIX\n   and Windows platforms respectively. This will build and run the\n   project as a `JAR` using\n   [[https://github.com/jsimone/webapp-runner][Webapp Runner]].\n2. Use =http://localhost:8080= as the snake URL.\n\n*Docker*\n\n1. Build the project using either =./gradle build= or =gradlew build=\n   for UNIX and Windows platforms respectively.\n2. Run the Docker Tomcat image in a container with =docker-compose up=.\n3. Use =http://localhost:8080/battlesnake= as the snake URL.\n\n*** Deployment\n    :PROPERTIES:\n    :CUSTOM_ID: deployment\n    :END:\n\n*Heroku-GitHub Integration*\n\n1. Go the dashboard for the Heroku app.\n2. Click on the =deploy= tab.\n3. Scroll down to the =Deployment method= and select =GitHub=.\n4. Enter the repository name and click =Connect=.\n\n*Heroku CLI*\n\n1. Build .war file =./gradlew build=\n2. Deploy to Heroku\n   =heroku war:deploy build/libs/battlesnake.war --app <name>=\n3. Use =https://[name].herokuapp.com/= as the snake URL.\n\n** Acknowledgments\n   :PROPERTIES:\n   :CUSTOM_ID: acknowledgments\n   :END:\n\n- *Built by* [[https://github.com/woofers][Jaxson Van Doorn]] and\n  [[https://github.com/austinben][Ben Austin]]\n- *Adapted from*\n  [[https://github.com/tflinz/BasicBattleSnake2018][tflinz's snake]]\n- *Designed for* [[https://github.com/battlesnakeofficial][Battlesnake\n  Official's]] competition\n"}}},{"node":{"name":"challenger-deep-rofi","description":"üìä A dark theme for the Rofi application launcher","url":"https://github.com/woofers/challenger-deep-rofi","homepage":"","stars":{"totalCount":0},"license":{"name":"GNU General Public License v3.0"},"topics":{"nodes":[]},"readme":{"text":"\r\n\r\n# Challenger Deep Rofi Theme\r\n\r\n**A dark theme for the Rofi application launcher.**\r\n\r\nInspired by [Challenger Deep](https://github.com/MaxSt/challenger-deep) Emacs Theme by [MaxSt](https://github.com/MaxSt).  Configuration file adapted from this [config](https://github.com/ganifladi/linux/blob/master/config/rofi/config) by [Richard Rabe](https://github.com/ganifladi).\r\n\r\n![img](./screenshots/rofi.png \"Challenger Deep Theme Screenshot\")\r\n"},"readmeOrg":{"text":"\r\n#+TITLE:\tChallenger Deep Rofi Theme\r\n#+AUTHOR:\tJaxson Van Doorn\r\n#+EMAIL:\tjaxson.vandoorn@gmail.com\r\n#+OPTIONS:  num:nil toc:nil\r\n\r\n* Challenger Deep Rofi Theme\r\n*A dark theme for the Rofi application launcher.*\r\n\r\nInspired by [[https://github.com/MaxSt/challenger-deep][Challenger Deep]] Emacs Theme by [[https://github.com/MaxSt][MaxSt]].  Configuration file adapted from this [[https://github.com/ganifladi/linux/blob/master/config/rofi/config][config]] by [[https://github.com/ganifladi][Richard Rabe]].\r\n\r\n#+CAPTION: Challenger Deep Theme Screenshot\r\n#+NAME:    Challenger Deep Theme Screenshot\r\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\r\n[[./screenshots/rofi.png]]\r\n"}}},{"node":{"name":"kangaroo-country","description":"üèùÔ∏è Play as two kangaroos trying to traverse the outback","url":"https://github.com/woofers/kangaroo-country","homepage":"","stars":{"totalCount":0},"license":null,"topics":{"nodes":[{"topic":{"name":"kangaroo"}},{"topic":{"name":"kangaroo-country"}},{"topic":{"name":"outback"}},{"topic":{"name":"actionscript"}},{"topic":{"name":"flash"}},{"topic":{"name":"sidescroller"}}]},"readme":{"text":"\r\n\r\n# Kangaroo Country\r\n\r\n**Play as two kangaroos trying to traverse the outback**\r\n\r\n*Kangaroo Country* is a 2D game built built in Actionscrpt 3 for Programming 12.  Game features two fully completed levels.  More levels can be easily added by using a Tile Map Editor.\r\n\r\n\r\n## Downloads\r\n\r\nLatest releases can be found [here](https://github.com/woofers/kangaroo-country/releases).\r\n\r\n\r\n## Screenshots\r\n\r\n![img](./screenshots/title.png \"Title Screen\")\r\n\r\n![img](./screenshots/ball.png \"Ball\")\r\n\r\n![img](./screenshots/bridge.png \"Bridge\")\r\n\r\n![img](./screenshots/leap.png \"Leap\")\r\n\r\n![img](./screenshots/level2.png \"Level 2\")\r\n\r\n![img](./screenshots/float_bridge.png \"Floating Bridge\")\r\n"},"readmeOrg":{"text":"\r\n#+TITLE:\tKangaroo Country\r\n#+AUTHOR:\tJaxson Van Doorn\r\n#+EMAIL:\tjaxson.vandoorn@gmail.com\r\n#+OPTIONS:  num:nil toc:nil\r\n\r\n* Kangaroo Country\r\n*Play as two kangaroos trying to traverse the outback*\r\n\r\n/Kangaroo Country/ is a 2D game built built in Actionscrpt 3 for Programming 12.  Game features two fully completed levels.  More levels can be easily added by using a Tile Map Editor.\r\n\r\n** Downloads\r\nLatest releases can be found [[https://github.com/woofers/kangaroo-country/releases][here]].\r\n** Screenshots\r\n\r\n#+CAPTION: Title Screen\r\n#+NAME:    Title Screen\r\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\r\n[[./screenshots/title.png]]\r\n\r\n#+CAPTION: Ball\r\n#+NAME:    Ball\r\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\r\n[[./screenshots/ball.png]]\r\n\r\n#+CAPTION: Bridge\r\n#+NAME:    Bridge\r\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\r\n[[./screenshots/bridge.png]]\r\n\r\n#+CAPTION: Leap\r\n#+NAME:    Leap\r\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\r\n[[./screenshots/leap.png]]\r\n\r\n#+CAPTION: Level 2\r\n#+NAME:    Level 2\r\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\r\n[[./screenshots/level2.png]]\r\n\r\n#+CAPTION: Floating Bridge\r\n#+NAME:    Floating Bridge\r\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\r\n[[./screenshots/float_bridge.png]]\r\n"}}},{"node":{"name":"chess","description":"üëë Lightweight Chess game implemented using Java Swing UI","url":"https://github.com/woofers/chess","homepage":"","stars":{"totalCount":0},"license":{"name":"GNU General Public License v3.0"},"topics":{"nodes":[{"topic":{"name":"chess"}},{"topic":{"name":"java"}},{"topic":{"name":"swing"}},{"topic":{"name":"strategy"}}]},"readme":{"text":"<div id=\"table-of-contents\">\r\n<h2>Table of Contents</h2>\r\n<div id=\"text-table-of-contents\">\r\n<ul>\r\n<li><a href=\"#sec-1\">Chess</a>\r\n<ul>\r\n<li><a href=\"#sec-1-1\">Downloads</a></li>\r\n<li><a href=\"#sec-1-2\">Screenshots</a></li>\r\n<li><a href=\"#sec-1-3\">Acknowledgments</a></li>\r\n<li><a href=\"#sec-1-4\">Other Projects</a></li>\r\n</ul>\r\n</li>\r\n</ul>\r\n</div>\r\n</div>\r\n\r\n\r\n# Chess<a id=\"sec-1\" name=\"sec-1\"></a>\r\n\r\n**Lightweight Chess game implemented using Java Swing UI**\r\n\r\n## Downloads<a id=\"sec-1-1\" name=\"sec-1-1\"></a>\r\n\r\nLatest releases can be found [here](https://github.com/woofers/chess/releases).\r\n\r\n## Screenshots<a id=\"sec-1-2\" name=\"sec-1-2\"></a>\r\n\r\n![img](./screenshots/move.gif \"Movement\")\r\n\r\n![img](./screenshots/undo.gif \"Undo\")\r\n\r\n![img](./screenshots/default.png \"Default Board\")\r\n\r\n![img](./screenshots/knight.png \"Knight\")\r\n\r\n## Acknowledgments<a id=\"sec-1-3\" name=\"sec-1-3\"></a>\r\n\r\n-   **GPL 3.0 2016**, *Jaxson Van Doorn*\r\n\r\n## Other Projects<a id=\"sec-1-4\" name=\"sec-1-4\"></a>\r\n\r\n-   [Woofers3D](https://github.com/woofers/woofers3d)\r\n\r\n-   [Whale](https://github.com/woofers/whale)\r\n\r\n-   [K9Krew](https://github.com/woofers/k9-krew)\r\n\r\n-   [Dotfiles](https://github.com/woofers/dotfiles)\r\n"},"readmeOrg":{"text":"\r\n#+TITLE:\tChess\r\n#+AUTHOR:\tJaxson Van Doorn\r\n#+EMAIL:\tjaxson.vandoorn@gmail.com\r\n#+OPTIONS:  num:nil\r\n\r\n* Chess\r\n*Lightweight Chess game implemented using Java Swing UI*\r\n\r\n** Downloads\r\nLatest releases can be found [[https://github.com/woofers/chess/releases][here]].\r\n** Screenshots\r\n\r\n#+CAPTION: Movement\r\n#+NAME:    Movement\r\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\r\n[[./screenshots/move.gif]]\r\n\r\n#+CAPTION: Undo\r\n#+NAME:    Undo\r\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\r\n[[./screenshots/undo.gif]]\r\n\r\n#+CAPTION: Default Board\r\n#+NAME:    Default Board\r\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\r\n[[./screenshots/default.png]]\r\n\r\n#+CAPTION: Knight\r\n#+NAME:    Knight\r\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\r\n[[./screenshots/knight.png]]\r\n\r\n** Acknowledgments\r\n**** *GPL 3.0 2016*, /Jaxson Van Doorn/\r\n** Other Projects\r\n**** [[https://github.com/woofers/woofers3d][Woofers3D]]\r\n**** [[https://github.com/woofers/whale][Whale]]\r\n**** [[https://github.com/woofers/k9-krew][K9Krew]]\r\n**** [[https://github.com/woofers/dotfiles][Dotfiles]]\r\n"}}},{"node":{"name":"dotfiles","description":"üêß Custom config files for better workflow on Linux","url":"https://github.com/woofers/dotfiles","homepage":"","stars":{"totalCount":4},"license":{"name":"GNU General Public License v3.0"},"topics":{"nodes":[{"topic":{"name":"dotfiles"}},{"topic":{"name":"emacs"}},{"topic":{"name":"vim"}},{"topic":{"name":"tmux"}},{"topic":{"name":"zsh"}},{"topic":{"name":"powerline"}},{"topic":{"name":"airline"}},{"topic":{"name":"neovim"}},{"topic":{"name":"mintty"}},{"topic":{"name":"gnome-terminal"}},{"topic":{"name":"nemo"}},{"topic":{"name":"compton"}},{"topic":{"name":"dunst"}},{"topic":{"name":"git"}},{"topic":{"name":"gtk"}},{"topic":{"name":"i3"}},{"topic":{"name":"ranger"}},{"topic":{"name":"rofi"}}]},"readme":{"text":"# Dotfiles\n\n## Description\n\n**Custom config files for better workflow on Linux**\n\nHere all my dotfiles which I use on both my desktop and my school laptop.\n\nI run Debian on both machines, however their are specific settings for\nWindows Subsystems for Linux in Mintty when I absolutely must use windows for development.\n\nMost config files are symlinked using `install.sh`.\n\n**Warning:** The installation script provided is very specific to my needs and does some **dangerous stuff** such as upgrading the kernel, appending to the file system table and configuring graphics drivers.\nAll commands in `install.sh` as a whole is likely to break/overwrite something in a existing Linux install.  I only use `install.sh` to configure fresh Linux installs.\nMake sure you understand what each files does before you use it.  Use at your own risk!\n\n## Workflow\n\n### Distro\n\nI currently run Debian 9 with GNOME as its super pretty, user-friendly and light.\n\n### Desktop Enviroment\n\nFor my main window manager I use i3 for easier mouse-less navigation and nice tilling, ensuring no wasted screen real estate.  Specifically I use the i3-gaps fork which makes things a little less cramped.\n\nFor window composting I use Compton to provide nice shadows and transparency.\n\nMy application launcher is Rofi which lets me launch and switch apps in a Spotlight like manner.\n\nFor a file manger I use Nautilus with Papirus icons (Looks like MacOS).  I was using Nemo for a while but I found Nautilus to be better in terms of the layout.\n\nTo keep most apps looking fresh I use the Arc GTK theme which is the best dark theme I have ever come across.\n\nFor better Linux fonts I use Infinality to mimic MacOS font styling.  I also use the System San Francisco font as my standard font which looks beautiful when browsing the web.\n\nMy notifications are delivered through dunst making each notification customizable and non-intrusive.\n\n### Audio\n\nFor managing my audio and volume levels I use pavucontrol which is a really simple audio mixer app under Linux.\n\n### Documents\n\nPDF viewing is done using the default Debian reader Evince.\n\n### Text Editing\n\nMost of my text editing/word-processioning happens in Emacs however for the occasionally last ditch edit I use Neovim when I really screwed something up and am stuck in TTY.  The Org mode plugin in Emacs allows me to export LaTeX, replacing any office suite software.  Emacs also allows me to use a UNIX like shell when I'm on Windows which is always a plus.  However the biggest reason I use Emacs is its modal editing thanks to evil-mode and great git integration with git gutter and Magit.  Composing email with this modal editing is really nice in Emacs with mu4e and mbsync despite the complex setup and broken links.  Emacs' Dired mode also provides a really great way to batch rename files as if it was text.  In short, I really like using Emacs.\n\n### Terminal\n\nI use the standard GNOME Terminal running ZSH as my main shell with TMUX for multiplexing.  Having a native shell beats out the Lisp interrupted shell of Emacs thanks to the great auto-complete and vi mode of ZSH.\n\n### Web\n\nFor web browsing I still use Chrome for its syncing features despite the privacy problems.\n\n### Drawing\n\nFor tablet drawing on my laptop I use Xournal since it has great stylus support and tracks nicely.\n\n### Multimedia\n\nAny photo manipulation still happens with Photoshop under WINE.  While I feel that GIMP is a capable program I don't think I will ever be able to adapt after using Photoshop for many years.\n\nFor 3D modeling and rendering Blender does the job as its supper flexible and fast under Linux (when compared to its Windows port).\n\n### Windows Subsystems for Linux\n\nWhen I must run Windows, I run Ubuntu under Windows Subsystems for Linux in Mintty.  Mintty supports 256 colors which most Windows terminal emulators are missing.  In my ZSH config it is setup to alias any program in `system32` which means that I can run tons of native Windows commands in a UNIX shell which is neat.\n\n## Usage\n\nI don't recommend that anyone copy and install this whole config (See warning).  However if you insist on doing so simply clone the repo and run `sudo ./install.sh`.\n\nI highly suggest that you cherry pick the elements you want into your own config and build your own config.\n\nWhile this can be intimidating it will result in a system configured better to your needs.  I hope that this repo will provide a good example of the extreme tweakabilty of Linux.\n\n## Screenshots\n\n### i3wm\n\n![img](./screenshots/i3-1.png \"i3wm1\")\n\n![img](./screenshots/i3-2.png \"i3wm2\")\n\n### Emacs\n\n![img](./screenshots/emacs.png \"Emacs using a custom powerline with challenger-deep\")\n\n![img](./screenshots/emacs2.png \"Emacs using the Helm narrowing completion framework\")\n\nMy Emacs setup consist of [challenger-deep](https://github.com/MaxSt/challenger-deep) as a theme with a custom [Powerline](https://github.com/milkypostman/powerline).\nEmacs setup also heavly relies on [Helm](https://github.com/emacs-helm/helm)\n\n### Neovim\n\n![img](./screenshots/vim.png \"Neovim using Airline and NERDTree\")\n\nNeovim config uses [dracula-vim](https://github.com/dracula/vim).\nAirline theme is **light** from [airline-themes](https://github.com/vim-airline/vim-airline-themes).\n\n### Mintty\n\nMintty uses [dracula-mintty](https://github.com/dracula/mintty) for its color definitions.\n\n### Tmux\n\n![img](./screenshots/tmux.png \"Tmux using usings splits and a custom theme\")\n\nTmux uses a modified version of [tmux-airline-dracula](https://github.com/sei40kr/tmux-airline-dracula) named **wracula** which matches **BASH** and **ZSH**.\n\n### BASH and ZSH\n\n![img](./screenshots/zsh.png \"ZSH using Oh My ZSH with the git and syntax plugins\")\n\nThis config contains a modified versions of both [agnoster-zsh-theme](https://github.com/agnoster/agnoster-zsh-theme) and [agnoster-bash](https://gist.github.com/kruton/8345450) dubbed *wagnoster* for **BASH** and **ZSH**.\nLS Color are tweaked version of **dircolors.ansi-dark** from [Solarized Color Theme for GNU](https://github.com/seebi/dircolors-solarized).\nZSH addtionaly uses [zsh-syntax-highlighting](https://github.com/zsh-users/zsh-syntax-highlighting) package.\n"},"readmeOrg":{"text":"\n#+TITLE:\tDotfiles\n#+AUTHOR:\tJaxson Van Doorn\n#+EMAIL:\tjaxson.vandoorn@gmail.com\n#+OPTIONS:  num:nil toc:nil\n\n* Dotfiles\n** Description\n\n*Custom config files for better workflow on Linux*\n\nHere all my dotfiles which I use on both my desktop and my school laptop.\n\nI run Debian on both machines, however their are specific settings for\nWindows Subsystems for Linux in Mintty when I absolutely must use windows for development.\n\nMost config files are symlinked using ~install.sh~.\n\n*Warning:* The installation script provided is very specific to my needs and does some *dangerous stuff* such as upgrading the kernel, appending to the file system table and configuring graphics drivers.\nAll commands in ~install.sh~ as a whole is likely to break/overwrite something in a existing Linux install.  I only use ~install.sh~ to configure fresh Linux installs.\nMake sure you understand what each files does before you use it.  Use at your own risk!\n\n** Workflow\n*** Distro\n\nI currently run Debian 9 with GNOME as its super pretty, user-friendly and light.\n\n*** Desktop Enviroment\n\nFor my main window manager I use i3 for easier mouse-less navigation and nice tilling, ensuring no wasted screen real estate.  Specifically I use the i3-gaps fork which makes things a little less cramped.\n\nFor window composting I use Compton to provide nice shadows and transparency.\n\nMy application launcher is Rofi which lets me launch and switch apps in a Spotlight like manner.\n\nFor a file manger I use Nautilus with Papirus icons (Looks like MacOS).  I was using Nemo for a while but I found Nautilus to be better in terms of the layout.\n\nTo keep most apps looking fresh I use the Arc GTK theme which is the best dark theme I have ever come across.\n\nFor better Linux fonts I use Infinality to mimic MacOS font styling.  I also use the System San Francisco font as my standard font which looks beautiful when browsing the web.\n\nMy notifications are delivered through dunst making each notification customizable and non-intrusive.\n\n*** Audio\n\nFor managing my audio and volume levels I use pavucontrol which is a really simple audio mixer app under Linux.\n\n*** Documents\n\nPDF viewing is done using the default Debian reader Evince.\n\n*** Text Editing\n\nMost of my text editing/word-processioning happens in Emacs however for the occasionally last ditch edit I use Neovim when I really screwed something up and am stuck in TTY.  The Org mode plugin in Emacs allows me to export LaTeX, replacing any office suite software.  Emacs also allows me to use a UNIX like shell when I'm on Windows which is always a plus.  However the biggest reason I use Emacs is its modal editing thanks to evil-mode and great git integration with git gutter and Magit.  Composing email with this modal editing is really nice in Emacs with mu4e and mbsync despite the complex setup and broken links.  Emacs' Dired mode also provides a really great way to batch rename files as if it was text.  In short, I really like using Emacs.\n\n*** Terminal\n\nI use the standard GNOME Terminal running ZSH as my main shell with TMUX for multiplexing.  Having a native shell beats out the Lisp interrupted shell of Emacs thanks to the great auto-complete and vi mode of ZSH.\n\n*** Web\n\nFor web browsing I still use Chrome for its syncing features despite the privacy problems.\n\n*** Drawing\n\nFor tablet drawing on my laptop I use Xournal since it has great stylus support and tracks nicely.\n\n*** Multimedia\n\nAny photo manipulation still happens with Photoshop under WINE.  While I feel that GIMP is a capable program I don't think I will ever be able to adapt after using Photoshop for many years.\n\nFor 3D modeling and rendering Blender does the job as its supper flexible and fast under Linux (when compared to its Windows port).\n\n*** Windows Subsystems for Linux\n\nWhen I must run Windows, I run Ubuntu under Windows Subsystems for Linux in Mintty.  Mintty supports 256 colors which most Windows terminal emulators are missing.  In my ZSH config it is setup to alias any program in ~system32~ which means that I can run tons of native Windows commands in a UNIX shell which is neat.\n\n** Usage\n\nI don't recommend that anyone copy and install this whole config (See warning).  However if you insist on doing so simply clone the repo and run ~sudo ./install.sh~.\n\nI highly suggest that you cherry pick the elements you want into your own config and build your own config.\n\nWhile this can be intimidating it will result in a system configured better to your needs.  I hope that this repo will provide a good example of the extreme tweakabilty of Linux.\n\n** Screenshots\n*** i3wm\n\n#+CAPTION: i3wm1\n#+NAME:    i3wm Screenshot 1\n[[./screenshots/i3-1.png]]\n\n#+CAPTION: i3wm2\n#+NAME:    i3wm Screenshot 2\n[[./screenshots/i3-2.png]]\n\n*** Emacs\n\n#+CAPTION: Emacs using a custom powerline with challenger-deep\n#+NAME:    Emacs Screenshot 1\n[[./screenshots/emacs.png]]\n\n#+CAPTION: Emacs using the Helm narrowing completion framework\n#+NAME:    Emacs Screenshot 2\n[[./screenshots/emacs2.png]]\n\nMy Emacs setup consist of [[https://github.com/MaxSt/challenger-deep][challenger-deep]] as a theme with a custom [[https://github.com/milkypostman/powerline][Powerline]].\nEmacs setup also heavly relies on [[https://github.com/emacs-helm/helm][Helm]]\n\n*** Neovim\n\n#+CAPTION: Neovim using Airline and NERDTree\n#+NAME:    Neovim Screenshot\n[[./screenshots/vim.png]]\n\nNeovim config uses [[https://github.com/dracula/vim][dracula-vim]].\nAirline theme is *light* from [[https://github.com/vim-airline/vim-airline-themes][airline-themes]].\n\n*** Mintty\n\nMintty uses [[https://github.com/dracula/mintty][dracula-mintty]] for its color definitions.\n\n*** Tmux\n\n#+CAPTION: Tmux using usings splits and a custom theme\n#+NAME:    Tmux Screenshot\n[[./screenshots/tmux.png]]\n\nTmux uses a modified version of [[https://github.com/sei40kr/tmux-airline-dracula][tmux-airline-dracula]] named *wracula* which matches *BASH* and *ZSH*.\n\n*** BASH and ZSH\n\n#+CAPTION: ZSH using Oh My ZSH with the git and syntax plugins\n#+NAME:    ZSH Screenshot\n[[./screenshots/zsh.png]]\n\nThis config contains a modified versions of both [[https://github.com/agnoster/agnoster-zsh-theme][agnoster-zsh-theme]] and [[https://gist.github.com/kruton/8345450][agnoster-bash]] dubbed /wagnoster/ for *BASH* and *ZSH*.\nLS Color are tweaked version of *dircolors.ansi-dark* from [[https://github.com/seebi/dircolors-solarized][Solarized Color Theme for GNU]].\nZSH addtionaly uses [[https://github.com/zsh-users/zsh-syntax-highlighting][zsh-syntax-highlighting]] package.\n"}}},{"node":{"name":"java-formatter","description":"‚òï A Java Formatter Style for Eclipse","url":"https://github.com/woofers/java-formatter","homepage":"","stars":{"totalCount":0},"license":{"name":"GNU General Public License v3.0"},"topics":{"nodes":[{"topic":{"name":"java"}},{"topic":{"name":"eclipse"}},{"topic":{"name":"formatter"}}]},"readme":{"text":"# Java Formatter\r\n\r\n**A Java Formatter Style for Eclipse**\r\n\r\nSimple set of Java rules that mimic [Michael Breen's Rational Java Indentation and Style](http://mbreen.com/javastyle.html) and [GNU Standards](https://www.gnu.org/prep/standards/html_node/Formatting.html).\r\n\r\n![img](./screenshots/format.png \"Format\")\r\n\r\n## Acknowledgments\r\n\r\n-   **GPL 2016-2017**, *Jaxson Van Doorn*\r\n\r\n## Other Projects\r\n\r\n-   [Woofers3D](https://github.com/woofers/woofers3d)\r\n\r\n-   [Whale](https://github.com/woofers/whale)\r\n\r\n-   [K9Krew](https://github.com/woofers/k9-krew)\r\n\r\n-   [Dotfiles](https://github.com/woofers/dotfiles)\r\n"},"readmeOrg":{"text":"\r\n#+TITLE:\tJava Formatter\r\n#+AUTHOR:\tJaxson Van Doorn\r\n#+EMAIL:\tjaxson.vandoorn@gmail.com\r\n#+OPTIONS:  num:nil toc:nil\r\n\r\n* Java Formatter\r\n*A Java Formatter Style for Eclipse*\r\n\r\nSimple set of Java rules that mimic [[http://mbreen.com/javastyle.html][Michael Breen's Rational Java Indentation and Style]] and [[https://www.gnu.org/prep/standards/html_node/Formatting.html][GNU Standards]].\r\n\r\n#+CAPTION: Format\r\n#+NAME:    Format\r\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\r\n[[./screenshots/format.png]]\r\n\r\n** Acknowledgments\r\n**** *GPL 2016-2017*, /Jaxson Van Doorn/\r\n** Other Projects\r\n**** [[https://github.com/woofers/woofers3d][Woofers3D]]\r\n**** [[https://github.com/woofers/whale][Whale]]\r\n**** [[https://github.com/woofers/k9-krew][K9Krew]]\r\n**** [[https://github.com/woofers/dotfiles][Dotfiles]]\r\n"}}},{"node":{"name":"woofers3d","description":"üê∂ A 3D game API designed to be effortless and simple to use.  Based on LibGDX, Bullet and Box2D","url":"https://github.com/woofers/woofers3d","homepage":"","stars":{"totalCount":2},"license":{"name":"GNU General Public License v3.0"},"topics":{"nodes":[{"topic":{"name":"libgdx"}},{"topic":{"name":"3d"}},{"topic":{"name":"2d"}},{"topic":{"name":"api"}},{"topic":{"name":"sidescroller"}},{"topic":{"name":"bullet-physics"}},{"topic":{"name":"box2d"}},{"topic":{"name":"gson"}},{"topic":{"name":"dog"}},{"topic":{"name":"android"}},{"topic":{"name":"windows"}},{"topic":{"name":"linux"}},{"topic":{"name":"osx"}},{"topic":{"name":"html"}}]},"readme":{"text":"\r\n\r\n# Woofers3D\r\n\r\n**A 3D game API designed to be effortless and simple to use.**\r\n\r\nSupports modern features such as Ray Tracing, Chasing Camera, States and 3D Model Importing.\r\n\r\nBuilt with [LibGDX](https://github.com/libgdx/libgdx), [Bullet Physics](https://github.com/bulletphysics/bullet3) and [Box2D](https://github.com/erincatto/Box2D).\r\n\r\n\r\n## Screenshots\r\n\r\n![img](./screenshots/1.gif \"Woofers3D\")\r\n\r\n![img](./screenshots/2.gif \"Woofers3D\")\r\n\r\n![img](./screenshots/1.png \"Woofers3D\")\r\n\r\n![img](./screenshots/2.png \"Woofers3D\")\r\n\r\n![img](./screenshots/3.png \"Woofers3D\")\r\n"},"readmeOrg":{"text":"\r\n#+TITLE:\tWoofers3D\r\n#+AUTHOR:\tJaxson Van Doorn\r\n#+EMAIL:\tjaxson.vandoorn@gmail.com\r\n#+OPTIONS:  num:nil toc:nil\r\n\r\n* Woofers3D\r\n*A 3D game API designed to be effortless and simple to use.*\r\n\r\nSupports modern features such as Ray Tracing, Chasing Camera, States and 3D Model Importing.\r\n\r\nBuilt with [[https://github.com/libgdx/libgdx][LibGDX]], [[https://github.com/bulletphysics/bullet3][Bullet Physics]] and [[https://github.com/erincatto/Box2D][Box2D]].\r\n\r\n** Screenshots\r\n\r\n#+CAPTION: Woofers3D\r\n#+NAME:    Woofers3D\r\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\r\n[[./screenshots/1.gif]]\r\n\r\n#+CAPTION: Woofers3D\r\n#+NAME:    Woofers3D\r\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\r\n[[./screenshots/2.gif]]\r\n\r\n#+CAPTION: Woofers3D\r\n#+NAME:    Woofers3D\r\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\r\n[[./screenshots/1.png]]\r\n\r\n#+CAPTION: Woofers3D\r\n#+NAME:    Woofers3D\r\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\r\n[[./screenshots/2.png]]\r\n\r\n#+CAPTION: Woofers3D\r\n#+NAME:    Woofers3D\r\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\r\n[[./screenshots/3.png]]\r\n"}}},{"node":{"name":"whale","description":"üêã Dodge eels and lobsters as they attempt to ruin your day in the sea","url":"https://github.com/woofers/whale","homepage":"https://jaxson.vandoorn.ca/projects/whale/play/","stars":{"totalCount":1},"license":null,"topics":{"nodes":[{"topic":{"name":"whale"}},{"topic":{"name":"flixel"}},{"topic":{"name":"haxe"}},{"topic":{"name":"haxeflixel"}},{"topic":{"name":"mobile"}},{"topic":{"name":"accelerometer"}},{"topic":{"name":"game"}}]},"readme":{"text":"\n\n# Whale\n\n**Dodge eels and lobsters as they attempt to ruin your day in the sea.**\n\n*Whale* is a 2D game I built in 9<sup>th</sup> grade that went unfinished.  Finally found the motivation to finish the score keeping and level generation.\n\nBuilt using [HaxeFlixel](http://haxeflixel.com/). In-game font is [Little Lord Fontleroy NF](http://www.1001fonts.com/littlelordfontleroy-font.html) by [Nick Curtis](https://www.1001fonts.com/users/nicksfonts/).\n\n**[Play Online](https://jaxson.vandoorn.ca/projects/whale/play/)**\n\n![img](./screenshots/wide.png)\n\n\n## Downloads\n\nLatest releases for Android can be found [here](https://github.com/woofers/whale/releases).\n\nThey can also be downloaded on [Google Play Store](https://play.google.com/store/apps/details?id=com.jaxson.whale).\n\n<a\n    href='https://play.google.com/store/apps/details?id=com.jaxson.whale&pcampaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1'>\n    <img alt='Get it on Google Play'\n        src='https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png'\n        height=\"125\" width=\"323\"\n    />\n</a>\n\n\n## Screenshots\n\n![img](./screenshots/1.png) ![img](./screenshots/2.png)\n\n![img](./screenshots/3.png) ![img](./screenshots/4.png)\n"},"readmeOrg":{"text":"\n#+TITLE:\tWhale\n#+AUTHOR:\tJaxson Van Doorn\n#+EMAIL:\tjaxson.vandoorn@gmail.com\n#+OPTIONS:  num:nil toc:nil\n\n* Whale\n*Dodge eels and lobsters as they attempt to ruin your day in the sea.*\n\n/Whale/ is a 2D game I built in 9^th grade that went unfinished.  Finally found the motivation to finish the score keeping and level generation.\n\nBuilt using [[http://haxeflixel.com/][HaxeFlixel]]. In-game font is [[http://www.1001fonts.com/littlelordfontleroy-font.html][Little Lord Fontleroy NF]] by [[https://www.1001fonts.com/users/nicksfonts/][Nick Curtis]].\n\n*[[https://jaxson.vandoorn.ca/projects/whale/play/][Play Online]]*\n\n[[./screenshots/wide.png]]\n\n** Downloads\nLatest releases for Android can be found [[https://github.com/woofers/whale/releases][here]].\n\nThey can also be downloaded on [[https://play.google.com/store/apps/details?id=com.jaxson.whale][Google Play Store]].\n\n#+BEGIN_export HTML\n<a\n    href='https://play.google.com/store/apps/details?id=com.jaxson.whale&pcampaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1'>\n    <img alt='Get it on Google Play'\n        src='https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png'\n        height=\"125\" width=\"323\"\n    />\n</a>\n#+END_EXPORT\n\n\n** Screenshots\n\n[[./screenshots/1.png]] [[./screenshots/2.png]]\n\n[[./screenshots/3.png]] [[./screenshots/4.png]]\n"}}},{"node":{"name":"k9-krew","description":"üêï Control two dogs with distinct powers and abilities to conquer complex labyrinths","url":"https://github.com/woofers/k9-krew","homepage":"","stars":{"totalCount":0},"license":null,"topics":{"nodes":[{"topic":{"name":"k9-krew"}},{"topic":{"name":"javascript"}},{"topic":{"name":"phaser"}},{"topic":{"name":"node-webkit"}}]},"readme":{"text":"\n\n# K9 Krew\n\n**Control two dogs with distinct powers and abilities to conquer complex labyrinths**\n\n*K9 Krew* is a 2D game built built in Javascript.  Game features two fully completed levels.  More levels can be easily added by using a Tile Map Editor.\n\n\n## Downloads\n\nLatest releases can be found [here](https://github.com/woofers/k9-krew/releases).\n\n\n## Screenshots\n\n![img](./screenshots/1.png \"Level 1\")\n"},"readmeOrg":{"text":"\n#+TITLE:\tK9 Krew\n#+AUTHOR:\tJaxson Van Doorn\n#+EMAIL:\tjaxson.vandoorn@gmail.com\n#+OPTIONS:  num:nil toc:nil\n\n* K9 Krew\n*Control two dogs with distinct powers and abilities to conquer complex labyrinths*\n\n/K9 Krew/ is a 2D game built built in Javascript.  Game features two fully completed levels.  More levels can be easily added by using a Tile Map Editor.\n\n** Downloads\n   Latest releases can be found [[https://github.com/woofers/k9-krew/releases][here]].\n** Screenshots\n\n#+CAPTION: Level 1\n#+NAME:    Level 1\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\n[[./screenshots/1.png]]\n"}}},{"node":{"name":"fox-hole","description":"ü¶ä Run through fox holes sneaking past robot crocodiles","url":"https://github.com/woofers/fox-hole","homepage":"https://jaxson.vandoorn.ca/projects/fox-hole/play/","stars":{"totalCount":0},"license":null,"topics":{"nodes":[{"topic":{"name":"fox-hole"}},{"topic":{"name":"javascript"}},{"topic":{"name":"node-webkit"}},{"topic":{"name":"phaser"}},{"topic":{"name":"game"}}]},"readme":{"text":"\n\n# Fox Hole\n\n**Run through fox holes sneaking past robot crocodiles**\n\n*Fox* is a 2D proof of concept game built in 2014.  You play as a fox sneaking past enemy crocodiles using underground tunnels in order to save your brother.\n\nBuilt using [Phaser](https://phaser.io/).\n\nArt by [Avery Suzuki](https://www.instagram.com/suzukiavery/) and Sound Design by [Ben Austin](https://github.com/austinben) (See [License](https://github.com/woofers/fox-hole/blob/master/assets/sfx/LICENSE)).\n\n**NOTE**: This repository is nearly 5 years old and is unmaintained.  Any updates are purely to facilitate packaging the game into a new site.\n\n\n## Building\n\nFirst pull all libraries using `yarn install`\n\nIn order to build a single Javascript file with `yarn build` can be used.\n\nThis will generate `dist/game.js` using [Babel](https://babeljs.io/) and [uglify-js](https://www.npmjs.com/package/uglify-js).\n\n\n## Downloads\n\nLatest releases for Windows can be found [here](https://github.com/woofers/fox-hole/releases).\n\n\n## Screenshots\n\n![img](./screenshots/1.png \"Screenshot 1\")\n\n![img](./screenshots/2.png \"Screenshot 2\")\n"},"readmeOrg":{"text":"\n#+TITLE:\tFox Hole\n#+AUTHOR:\tJaxson Van Doorn\n#+EMAIL:\tjaxson.vandoorn@gmail.com\n#+OPTIONS:  num:nil toc:nil\n\n* Fox Hole\n*Run through fox holes sneaking past robot crocodiles*\n\n/Fox/ is a 2D proof of concept game built in 2014.  You play as a fox sneaking past enemy crocodiles using underground tunnels in order to save your brother.\n\nBuilt using [[https://phaser.io/][Phaser]].\n\nArt by [[https://www.instagram.com/suzukiavery/][Avery Suzuki]] and Sound Design by [[https://github.com/austinben][Ben Austin]] (See [[https://github.com/woofers/fox-hole/blob/master/assets/sfx/LICENSE][License]]).\n\n*NOTE*: This repository is nearly 5 years old and is unmaintained.  Any updates are purely to facilitate packaging the game into a new site.\n\n\n** Building\nFirst pull all libraries using ~yarn install~\n\nIn order to build a single Javascript file with ~yarn build~ can be used.\n\nThis will generate ~dist/game.js~ using [[https://babeljs.io/][Babel]] and [[https://www.npmjs.com/package/uglify-js][uglify-js]].\n** Downloads\nLatest releases for Windows can be found [[https://github.com/woofers/fox-hole/releases][here]].\n** Screenshots\n\n#+CAPTION: Screenshot 1\n#+NAME:    Screenshot 1\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\n[[./screenshots/1.png]]\n\n#+CAPTION: Screenshot 2\n#+NAME:    Screenshot 2\n#+ATTR_HTML: :style margin-left: auto; margin-right: auto;\n[[./screenshots/2.png]]\n"}}}]}}}