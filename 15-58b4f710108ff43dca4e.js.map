{"version":3,"sources":["webpack:///./node_modules/react-rotating-text/lib/ReactRotatingText.js","webpack:///./node_modules/lodash.toarray/index.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_get","_x","_x2","_x3","_again","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","getter","get","parent","getPrototypeOf","React","__webpack_require__","PropTypes","toArray","ReactRotatingText","_React$Component","instance","TypeError","_classCallCheck","this","_props","items","random","state","index","Math","floor","output","substrLength","timeouts","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_inherits","Component","_animate","bind","map","x","clearTimeout","loopingFunc","pause","timeout","setTimeout","push","shift","text","callback","typingInterval","_type","word","setState","slice","join","_loop","deletingInterval","_erase","_state","_overwrite","out","concat","_this","_props2","emptyPause","eraseMode","type","erase","overwrite","nextIndex","nextWord","_props3","color","cursor","other","obj","keys","indexOf","_objectWithoutProperties","createElement","style","aria-label","className","propTypes","string","bool","number","array","defaultProps","module","global","MAX_SAFE_INTEGER","argsTag","funcTag","genTag","mapTag","setTag","stringTag","reIsHostCtor","reIsUint","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsSeq","rsSymbol","reUnicode","RegExp","reHasUnicode","freeGlobal","freeSelf","self","root","baseValues","iteratee","result","Array","arrayMap","mapToArray","size","forEach","setToArray","set","stringToArray","test","hasUnicode","match","unicodeToArray","split","asciiToArray","uid","func","transform","funcProto","objectProto","coreJsData","maskSrcKey","exec","IE_PROTO","funcToString","toString","objectToString","reIsNative","replace","Symbol","iteratorSymbol","iterator","propertyIsEnumerable","nativeKeys","arg","DataView","getNative","Map","Promise","Set","WeakMap","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","arrayLikeKeys","inherited","isArray","isObjectLike","isArrayLike","isArrayLikeObject","isArguments","n","baseTimes","String","skipIndexes","isIndex","baseIsNative","isObject","isFunction","e","isHostObject","baseKeys","Ctor","proto","getValue","getTag","ArrayBuffer","resolve","ctorString","isLength","tag","values","isString","copyArray","data","next","done","iteratorToArray"],"mappings":"4FAEAA,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAGA,IAAAC,EAAAJ,OAAAK,QAAA,SAAAC,GAAmD,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAI,KAAAD,EAA0BV,OAAAY,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDL,EAAAK,GAAAD,EAAAC,IAAiC,OAAAL,GAE/OS,EAAA,WAAiC,SAAAC,EAAAV,EAAAW,GAA2C,QAAAV,EAAA,EAAgBA,EAAAU,EAAAR,OAAkBF,IAAA,CAAO,IAAAW,EAAAD,EAAAV,GAA2BW,EAAAC,WAAAD,EAAAC,aAAA,EAAwDD,EAAAE,cAAA,EAAgC,UAAAF,MAAAG,UAAA,GAAuDrB,OAAAC,eAAAK,EAAAY,EAAAP,IAAAO,IAA+D,gBAAAI,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAAV,UAAAW,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAzhB,GAEAG,EAAA,SAAAC,EAAAC,EAAAC,GAA0D,IAAnB,IAAAC,GAAA,EAAmBA,GAAA,CAA4B,IAAAC,EAAAJ,EAAAK,EAAAJ,EAAAK,EAAAJ,EAAiDC,GAAA,EAAgB,OAAAC,MAAAG,SAAArB,WAAkD,IAAAsB,EAAAlC,OAAAmC,yBAAAL,EAAAC,GAA8D,QAAAK,IAAAF,EAAA,CAAuO,aAAAA,EAA4B,OAAAA,EAAA/B,MAA4B,IAAAkC,EAAAH,EAAAI,IAAuB,QAAAF,IAAAC,EAA4B,OAAoB,OAAAA,EAAAvB,KAAAkB,GAA5U,IAAAO,EAAAvC,OAAAwC,eAAAV,GAA4C,UAAAS,EAAuB,OAA2Bb,EAAAa,EAAaZ,EAAAI,EAAgBH,EAAAI,EAAgBH,GAAA,EAAeK,EAAAK,OAAAH,IAQ3b,IAAAK,EAAYC,EAAQ,GACpBC,EAAgBD,EAAQ,GACxBE,EAAcF,EAAQ,MAEtBG,EAAA,SAAAC,GAGA,SAAAD,EAAA5B,IAXA,SAAA8B,EAAAzB,GAAiD,KAAAyB,aAAAzB,GAA0C,UAAA0B,UAAA,qCAY3FC,CAAAC,KAAAL,GAEApB,EAAAzB,OAAAwC,eAAAK,EAAAjC,WAAA,cAAAsC,MAAApC,KAAAoC,KAAAjC,GACA,IAAAkC,EAAAD,KAAAjC,MACAmC,EAAAD,EAAAC,MACAC,EAAAF,EAAAE,OAEAH,KAAAI,MAAA,CACAC,MAAAF,EAAAG,KAAAC,MAAAD,KAAAH,SAAAG,KAAAC,MAAAL,EAAA3C,SAAA,EACAiD,OAAA,GACAC,aAAA,GAEAT,KAAAU,SAAA,GAiKA,OAvLA,SAAAC,EAAAC,GAA0C,sBAAAA,GAAA,OAAAA,EAA+D,UAAAd,UAAA,kEAAAc,GAAuGD,EAAAjD,UAAAZ,OAAA+D,OAAAD,KAAAlD,UAAA,CAAyEoD,YAAA,CAAe7D,MAAA0D,EAAA1C,YAAA,EAAAE,UAAA,EAAAD,cAAA,KAA6E0C,IAAA9D,OAAAiE,eAAAjE,OAAAiE,eAAAJ,EAAAC,GAAAD,EAAAK,UAAAJ,GAOrXK,CAAAtB,EAiLCJ,EAAA2B,WA/JDrD,EAAA8B,EAAA,EACAlC,IAAA,oBACAR,MAAA,WACA+C,KAAAmB,SAAAC,KAAApB,UAEG,CACHvC,IAAA,uBACAR,MAAA,WACA+C,KAAAU,SAAAW,IAAA,SAAAC,GACA,OAAAC,aAAAD,OAGG,CACH7D,IAAA,QACAR,MAAA,SAAAuE,EAAAC,GAEA,IAAAC,EAAAC,WAAAH,EAAAC,GACAzB,KAAAU,SAAAkB,KAAAF,GAIA1B,KAAAU,SAAAnD,OADA,MAEAgE,aAAAvB,KAAAU,SAAA,IACAV,KAAAU,SAAAmB,WAGG,CACHpE,IAAA,QACAR,MAAA,SAAA6E,EAAAC,GACA,IAAAvB,EAAAR,KAAAI,MAAAI,OACAwB,EAAAhC,KAAAjC,MAAAiE,eAEAR,EAAAxB,KAAAiC,MAAAb,KAAApB,KAAA8B,EAAAC,GACAG,EAAAxC,EAAAoC,GAGA9B,KAAAmC,SAAA,CAAqB3B,OAAA0B,EAAAE,MAAA,EAAA1C,EAAAc,GAAAjD,OAAA,GAAA8E,KAAA,MAGrB7B,EAAAjD,OAAA2E,EAAA3E,OACAyC,KAAAsC,MAAAd,EAAAQ,GAEAD,MAGG,CACHtE,IAAA,SACAR,MAAA,SAAA8E,GACA,IAAAvB,EAAAR,KAAAI,MAAAI,OACA+B,EAAAvC,KAAAjC,MAAAwE,iBAEAf,EAAAxB,KAAAwC,OAAApB,KAAApB,KAAA+B,GACAG,EAAAxC,EAAAc,GAGAR,KAAAmC,SAAA,CAAqB3B,OAAA0B,EAAAE,MAAA,EAAAF,EAAA3E,OAAA,GAAA8E,KAAA,MAGrB,IAAAH,EAAA3E,OACAyC,KAAAsC,MAAAd,EAAAe,GAEAR,MAGG,CACHtE,IAAA,aACAR,MAAA,SAAA6E,EAAAC,GACA,IAAAU,EAAAzC,KAAAI,MACAI,EAAAiC,EAAAjC,OACAC,EAAAgC,EAAAhC,aACA8B,EAAAvC,KAAAjC,MAAAwE,iBAEAf,EAAAxB,KAAA0C,WAAAtB,KAAApB,KAAA8B,EAAAC,GACAG,EAAAxC,EAAAoC,GACAa,EAAAjD,EAAAc,GAEAR,KAAAmC,SAAA,CACA3B,OAAA0B,EAAAE,MAAA,EAAA3B,GAAAmC,OAAAD,EAAAP,MAAA3B,IACAA,eAAA,IAGAyB,EAAA3E,SAAAkD,EACAT,KAAAsC,MAAAd,EAAAe,IAEAvC,KAAAmC,SAAA,CACA3B,OAAAsB,EACArB,aAAA,IAEAsB,OAGG,CACHtE,IAAA,WACAR,MAAA,WACA,IAAA4F,EAAA7C,KAEAK,EAAAL,KAAAI,MAAAC,MACAyC,EAAA9C,KAAAjC,MACAmC,EAAA4C,EAAA5C,MACAuB,EAAAqB,EAAArB,MACAsB,EAAAD,EAAAC,WACAC,EAAAF,EAAAE,UACA7C,EAAA2C,EAAA3C,OAEA8C,EAAAjD,KAAAiC,MACAiB,EAAAlD,KAAAwC,OACAW,EAAAnD,KAAA0C,WACAlB,EAAAxB,KAAAmB,SAAAC,KAAApB,MACAoD,OAAAlE,EAEAkE,EADAjD,EACAG,KAAAC,MAAAD,KAAAH,SAAAG,KAAAC,MAAAL,EAAA3C,SAEA8C,IAAAH,EAAA3C,OAAA,IAAA8C,EAAA,EAGA,IAAAgD,EAAA,WACAR,EAAAV,SAAA,CAAwB9B,MAAA+C,IACxBP,EAAAP,MAAAd,EAAAuB,IAGAE,EAAA7B,KAAApB,KAAAiD,CAAA/C,EAAAG,GAAA,WACA,cAAA2C,EACAH,EAAAP,MAAAa,EAAA/B,KAAAyB,EAAA3C,EAAAkD,GAAAC,GAAA5B,GAEAoB,EAAAP,MAAAY,EAAA9B,KAAAyB,EAAAQ,GAAA5B,OAIG,CACHhE,IAAA,SACAR,MAAA,WACA,IAAAqG,EAAAtD,KAAAjC,MACAwF,EAAAD,EAAAC,MACAC,EAAAF,EAAAE,OASAC,GARAH,EAAAf,iBACAe,EAAAP,WACAO,EAAApD,MACAoD,EAAA7B,MACA6B,EAAAN,UACAM,EAAAtB,eACAsB,EAAAnD,OAzKA,SAAAuD,EAAAC,GAA8C,IAAAvG,EAAA,GAAiB,QAAAC,KAAAqG,EAAqBC,EAAAC,QAAAvG,IAAA,GAAoCP,OAAAY,UAAAC,eAAAC,KAAA8F,EAAArG,KAA6DD,EAAAC,GAAAqG,EAAArG,IAAsB,OAAAD,EA2K3MyG,CAAAP,EAAA,2GAEA,OAAA/D,EAAAuE,cACA,OACA5G,EAAA,CAAkB6G,MAAA,CAASR,UAAiBE,EAAA,CAC5CO,aAAAhE,KAAAjC,MAAAmC,MAAAF,KAAAI,MAAAC,SACAL,KAAAI,MAAAI,OACAgD,EAAAjE,EAAAuE,cACA,OACA,CAAWG,UAAA,8BACX,KACA,UAKAtE,EAjLA,GAoLAA,EAAAuE,UAAA,CACAX,MAAA9D,EAAA0E,OACAX,OAAA/D,EAAA2E,KACA7B,iBAAA9C,EAAA4E,OACAtB,WAAAtD,EAAA4E,OACArB,UAAAvD,EAAA0E,OACAjE,MAAAT,EAAA6E,MACA7C,MAAAhC,EAAA4E,OACArC,eAAAvC,EAAA4E,OACAlE,OAAAV,EAAA2E,MAGAzE,EAAA4E,aAAA,CACAhB,MAAA,UACAC,QAAA,EACAjB,iBAAA,GACAQ,WAAA,IACAC,UAAA,QACA9C,MAAA,4CACAuB,MAAA,KACAO,eAAA,GACA7B,QAAA,GAGAnD,EAAA,QAAA2C,EACA6E,EAAAxH,UAAA,+BCnOA,SAAAyH,GAUA,IAAAC,EAAA,iBAGAC,EAAA,qBACAC,EAAA,oBACAC,EAAA,6BACAC,EAAA,eAGAC,EAAA,eACAC,EAAA,kBAYAC,EAAA,8BAGAC,EAAA,mBASAC,EAAA,oBACAC,EAAA,kDACAC,EAAA,2BAEAC,EAAA,qBACAC,EAAA,kCACAC,EAAA,qCAIAC,EAPA,MAAAL,EAAA,IAAAC,EAAA,IAOA,IAGAK,EAFA,oBAEAD,GADA,iBAAAH,EAAAC,EAAAC,GAAAnD,KAAA,0BAAAoD,EAAA,MAEAE,EAAA,OAAAL,EAAAF,EAAA,IAAAA,EAAAG,EAAAC,EAAAL,GAAA9C,KAAA,SAGAuD,EAAAC,OAAAR,EAAA,MAAAA,EAAA,KAAAM,EAAAD,EAAA,KAGAI,EAAAD,OAAA,uFAGAE,EAAA,iBAAAtB,QAAA3H,iBAAA2H,EAGAuB,EAAA,iBAAAC,iBAAAnJ,iBAAAmJ,KAGAC,EAAAH,GAAAC,GAAAjH,SAAA,cAAAA,GA8DA,SAAAoH,EAAAvH,EAAAb,GACA,OApDA,SAAAuG,EAAA8B,GAKA,IAJA,IAAA/F,GAAA,EACA9C,EAAA+G,IAAA/G,OAAA,EACA8I,EAAAC,MAAA/I,KAEA8C,EAAA9C,GACA8I,EAAAhG,GAAA+F,EAAA9B,EAAAjE,KAAAiE,GAEA,OAAA+B,EA4CAE,CAAAxI,EAAA,SAAAN,GACA,OAAAmB,EAAAnB,KAsEA,SAAA+I,EAAAnF,GACA,IAAAhB,GAAA,EACAgG,EAAAC,MAAAjF,EAAAoF,MAKA,OAHApF,EAAAqF,QAAA,SAAAzJ,EAAAQ,GACA4I,IAAAhG,GAAA,CAAA5C,EAAAR,KAEAoJ,EAwBA,SAAAM,EAAAC,GACA,IAAAvG,GAAA,EACAgG,EAAAC,MAAAM,EAAAH,MAKA,OAHAG,EAAAF,QAAA,SAAAzJ,GACAoJ,IAAAhG,GAAApD,IAEAoJ,EAUA,SAAAQ,EAAA1C,GACA,OAhGA,SAAAA,GACA,OAAA2B,EAAAgB,KAAA3C,GA+FA4C,CAAA5C,GAYA,SAAAA,GACA,OAAAA,EAAA6C,MAAApB,IAAA,GAZAqB,CAAA9C,GA3JA,SAAAA,GACA,OAAAA,EAAA+C,MAAA,IA2JAC,CAAAhD,GAeA,IAQAiD,EAxDAC,EAAAC,EAgDAC,EAAAxI,SAAArB,UACA8J,EAAA1K,OAAAY,UAGA+J,EAAAvB,EAAA,sBAGAwB,GACAN,EAAA,SAAAO,KAAAF,KAAA9D,MAAA8D,EAAA9D,KAAAiE,UAAA,KACA,iBAAAR,EAAA,GAIAS,EAAAN,EAAAO,SAGAnK,EAAA6J,EAAA7J,eAOAoK,EAAAP,EAAAM,SAGAE,EAAAnC,OAAA,IACAgC,EAAAjK,KAAAD,GAAAsK,QA/QA,sBA+QA,QACAA,QAAA,uEAIAC,EAAAhC,EAAAgC,OACAC,EAAAD,IAAAE,cAAAlJ,EACAmJ,EAAAb,EAAAa,qBAGAC,GArFAjB,EAqFAvK,OAAA6G,KArFA2D,EAqFAxK,OApFA,SAAAyL,GACA,OAAAlB,EAAAC,EAAAiB,MAsFAC,EAAAC,GAAAvC,EAAA,YACAwC,EAAAD,GAAAvC,EAAA,OACAyC,EAAAF,GAAAvC,EAAA,WACA0C,EAAAH,GAAAvC,EAAA,OACA2C,EAAAJ,GAAAvC,EAAA,WAGA4C,EAAAC,GAAAP,GACAQ,EAAAD,GAAAL,GACAO,EAAAF,GAAAJ,GACAO,EAAAH,GAAAH,GACAO,EAAAJ,GAAAF,GAUA,SAAAO,GAAAnM,EAAAoM,GAGA,IAAAhD,EAAAiD,GAAArM,IA8MA,SAAAA,GAEA,OAmFA,SAAAA,GACA,OAAAsM,GAAAtM,IAAAuM,GAAAvM,GApFAwM,CAAAxM,IAAAU,EAAAC,KAAAX,EAAA,aACAoL,EAAAzK,KAAAX,EAAA,WAAA8K,EAAAnK,KAAAX,IAAA0H,GAjNA+E,CAAAzM,GA9NA,SAAA0M,EAAAvD,GAIA,IAHA,IAAA/F,GAAA,EACAgG,EAAAC,MAAAqD,KAEAtJ,EAAAsJ,GACAtD,EAAAhG,GAAA+F,EAAA/F,GAEA,OAAAgG,EAwNAuD,CAAA3M,EAAAM,OAAAsM,QACA,GAEAtM,EAAA8I,EAAA9I,OACAuM,IAAAvM,EAEA,QAAAE,KAAAR,GACAoM,IAAA1L,EAAAC,KAAAX,EAAAQ,IACAqM,IAAA,UAAArM,GAAAsM,GAAAtM,EAAAF,KACA8I,EAAAzE,KAAAnE,GAGA,OAAA4I,EAsBA,SAAA2D,GAAA/M,GACA,SAAAgN,GAAAhN,KAmHAoK,EAnHApK,EAoHAyK,QAAAL,MAjHA6C,GAAAjN,IA7MA,SAAAA,GAGA,IAAAoJ,GAAA,EACA,SAAApJ,GAAA,mBAAAA,EAAA6K,SACA,IACAzB,KAAApJ,EAAA,IACK,MAAAkN,IAEL,OAAA9D,EAoMA+D,CAAAnN,GAAA+K,EAAA/C,GACA6B,KAAAiC,GAAA9L,IA+GA,IAAAoK,EArGA,SAAAgD,GAAAzL,GACA,GAgHA0L,GADArN,EA/GA2B,IAgHA3B,EAAA6D,YACAyJ,EAAA,mBAAAD,KAAA5M,WAAA8J,EAEAvK,IAAAsN,EAlHA,OAAAjC,EAAA1J,GA8GA,IAAA3B,EACAqN,EACAC,EA9GAlE,EAAA,GACA,QAAA5I,KAAAX,OAAA8B,GACAjB,EAAAC,KAAAgB,EAAAnB,IAAA,eAAAA,GACA4I,EAAAzE,KAAAnE,GAGA,OAAA4I,EA8BA,SAAAoC,GAAA7J,EAAAnB,GACA,IAAAR,EAvRA,SAAA2B,EAAAnB,GACA,aAAAmB,OAAAM,EAAAN,EAAAnB,GAsRA+M,CAAA5L,EAAAnB,GACA,OAAAuM,GAAA/M,UAAAiC,EAUA,IAAAuL,GA/EA,SAAAxN,GACA,OAAA8K,EAAAnK,KAAAX,IAiHA,SAAA8M,GAAA9M,EAAAM,GAEA,SADAA,EAAA,MAAAA,EAAAmH,EAAAnH,KAEA,iBAAAN,GAAAiI,EAAA4B,KAAA7J,KACAA,GAAA,GAAAA,EAAA,MAAAA,EAAAM,EAmCA,SAAAwL,GAAA1B,GACA,SAAAA,EAAA,CACA,IACA,OAAAQ,EAAAjK,KAAAyJ,GACK,MAAA8C,IACL,IACA,OAAA9C,EAAA,GACK,MAAA8C,KAEL,UA/EA3B,GApaA,qBAoaAiC,GAAA,IAAAjC,EAAA,IAAAkC,YAAA,MACAhC,GAAA+B,GAAA,IAAA/B,IAAA5D,GACA6D,GA3aA,oBA2aA8B,GAAA9B,EAAAgC,YACA/B,GAAA6B,GAAA,IAAA7B,IAAA7D,GACA8D,GA1aA,oBA0aA4B,GAAA,IAAA5B,MACA4B,GAAA,SAAAxN,GACA,IAAAoJ,EAAA0B,EAAAnK,KAAAX,GACAqN,EAjbA,mBAibAjE,EAAApJ,EAAA6D,iBAAA5B,EACA0L,EAAAN,EAAAvB,GAAAuB,QAAApL,EAEA,GAAA0L,EACA,OAAAA,GACA,KAAA9B,EAAA,MAhbA,oBAibA,KAAAE,EAAA,OAAAlE,EACA,KAAAmE,EAAA,MAvbA,mBAwbA,KAAAC,EAAA,OAAAnE,EACA,KAAAoE,EAAA,MAtbA,mBAybA,OAAA9C,IA8GA,IAAAiD,GAAAhD,MAAAgD,QA2BA,SAAAE,GAAAvM,GACA,aAAAA,GAkFA,SAAAA,GACA,uBAAAA,GACAA,GAAA,GAAAA,EAAA,MAAAA,GAAAyH,EApFAmG,CAAA5N,EAAAM,UAAA2M,GAAAjN,GAiDA,SAAAiN,GAAAjN,GAGA,IAAA6N,EAAAb,GAAAhN,GAAA8K,EAAAnK,KAAAX,GAAA,GACA,OAAA6N,GAAAlG,GAAAkG,GAAAjG,EA2DA,SAAAoF,GAAAhN,GACA,IAAAgG,SAAAhG,EACA,QAAAA,IAAA,UAAAgG,GAAA,YAAAA,GA2BA,SAAAsG,GAAAtM,GACA,QAAAA,GAAA,iBAAAA,EA0HA,SAAA8N,GAAAnM,GACA,OAAAA,EAAAuH,EAAAvH,EA/BA,SAAAA,GACA,OAAA4K,GAAA5K,GAAAwK,GAAAxK,GAAAyL,GAAAzL,GA8BA+E,CAAA/E,IAAA,GAGA4F,EAAAxH,QA9EA,SAAAC,GACA,IAAAA,EACA,SAEA,GAAAuM,GAAAvM,GACA,OAjCA,SAAAA,GACA,uBAAAA,IACAqM,GAAArM,IAAAsM,GAAAtM,IAAA8K,EAAAnK,KAAAX,IAAA+H,EA+BAgG,CAAA/N,GAAA4J,EAAA5J,GAnYA,SAAAO,EAAA8G,GACA,IAAAjE,GAAA,EACA9C,EAAAC,EAAAD,OAGA,IADA+G,MAAAgC,MAAA/I,MACA8C,EAAA9C,GACA+G,EAAAjE,GAAA7C,EAAA6C,GAEA,OAAAiE,EA2XA2G,CAAAhO,GAEA,GAAAkL,GAAAlL,EAAAkL,GACA,OAhmBA,SAAAC,GAIA,IAHA,IAAA8C,EACA7E,EAAA,KAEA6E,EAAA9C,EAAA+C,QAAAC,MACA/E,EAAAzE,KAAAsJ,EAAAjO,OAEA,OAAAoJ,EAylBAgF,CAAApO,EAAAkL,MAEA,IAAA2C,EAAAL,GAAAxN,GAGA,OAFA6N,GAAAhG,EAAA0B,EAAAsE,GAAA/F,EAAA4B,EAAAoE,IAEA9N","file":"15-58b4f710108ff43dca4e.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar React = require('react');\nvar PropTypes = require('prop-types');\nvar toArray = require('lodash.toarray');\n\nvar ReactRotatingText = (function (_React$Component) {\n  _inherits(ReactRotatingText, _React$Component);\n\n  function ReactRotatingText(props) {\n    _classCallCheck(this, ReactRotatingText);\n\n    _get(Object.getPrototypeOf(ReactRotatingText.prototype), 'constructor', this).call(this, props);\n    var _props = this.props;\n    var items = _props.items;\n    var random = _props.random;\n\n    this.state = {\n      index: random ? Math.floor(Math.random() * Math.floor(items.length)) : 0,\n      output: '',\n      substrLength: 0\n    };\n    this.timeouts = [];\n  }\n\n  _createClass(ReactRotatingText, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._animate.bind(this)(); // begin the animation loop\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.timeouts.map(function (x) {\n        return clearTimeout(x);\n      }); // stop all the loops\n    }\n  }, {\n    key: '_loop',\n    value: function _loop(loopingFunc, pause) {\n      // save the timeouts so we can stop on unmount\n      var timeout = setTimeout(loopingFunc, pause);\n      this.timeouts.push(timeout);\n\n      // prevent memory leak\n      var maxTimeouts = 100;\n      if (this.timeouts.length > maxTimeouts) {\n        clearTimeout(this.timeouts[0]);\n        this.timeouts.shift();\n      }\n    }\n  }, {\n    key: '_type',\n    value: function _type(text, callback) {\n      var output = this.state.output;\n      var typingInterval = this.props.typingInterval;\n\n      var loopingFunc = this._type.bind(this, text, callback);\n      var word = toArray(text);\n\n      // set the string one character longer\n      this.setState({ output: word.slice(0, toArray(output).length + 1).join('') });\n\n      // if we're still not done, recursively loop again\n      if (output.length < word.length) {\n        this._loop(loopingFunc, typingInterval);\n      } else {\n        callback();\n      }\n    }\n  }, {\n    key: '_erase',\n    value: function _erase(callback) {\n      var output = this.state.output;\n      var deletingInterval = this.props.deletingInterval;\n\n      var loopingFunc = this._erase.bind(this, callback);\n      var word = toArray(output);\n\n      // set the string one character shorter\n      this.setState({ output: word.slice(0, word.length - 1).join('') });\n\n      // if we're still not done, recursively loop again\n      if (word.length !== 0) {\n        this._loop(loopingFunc, deletingInterval);\n      } else {\n        callback();\n      }\n    }\n  }, {\n    key: '_overwrite',\n    value: function _overwrite(text, callback) {\n      var _state = this.state;\n      var output = _state.output;\n      var substrLength = _state.substrLength;\n      var deletingInterval = this.props.deletingInterval;\n\n      var loopingFunc = this._overwrite.bind(this, text, callback);\n      var word = toArray(text);\n      var out = toArray(output);\n\n      this.setState({\n        output: word.slice(0, substrLength).concat(out.slice(substrLength)),\n        substrLength: substrLength + 1\n      });\n\n      if (word.length !== substrLength) {\n        this._loop(loopingFunc, deletingInterval);\n      } else {\n        this.setState({\n          output: text,\n          substrLength: 0\n        });\n        callback();\n      }\n    }\n  }, {\n    key: '_animate',\n    value: function _animate() {\n      var _this = this;\n\n      var index = this.state.index;\n      var _props2 = this.props;\n      var items = _props2.items;\n      var pause = _props2.pause;\n      var emptyPause = _props2.emptyPause;\n      var eraseMode = _props2.eraseMode;\n      var random = _props2.random;\n\n      var type = this._type;\n      var erase = this._erase;\n      var overwrite = this._overwrite;\n      var loopingFunc = this._animate.bind(this);\n      var nextIndex = undefined;\n      if (random) {\n        nextIndex = Math.floor(Math.random() * Math.floor(items.length));\n      } else {\n        nextIndex = index === items.length - 1 ? 0 : index + 1;\n      }\n\n      var nextWord = function nextWord() {\n        _this.setState({ index: nextIndex });\n        _this._loop(loopingFunc, emptyPause);\n      };\n\n      type.bind(this)(items[index], function () {\n        if (eraseMode === 'overwrite') {\n          _this._loop(overwrite.bind(_this, items[nextIndex], nextWord), pause);\n        } else {\n          _this._loop(erase.bind(_this, nextWord), pause);\n        }\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props3 = this.props;\n      var color = _props3.color;\n      var cursor = _props3.cursor;\n      var deletingInterval = _props3.deletingInterval;\n      var emptyPause = _props3.emptyPause;\n      var items = _props3.items;\n      var pause = _props3.pause;\n      var eraseMode = _props3.eraseMode;\n      var typingInterval = _props3.typingInterval;\n      var random = _props3.random;\n\n      var other = _objectWithoutProperties(_props3, ['color', 'cursor', 'deletingInterval', 'emptyPause', 'items', 'pause', 'eraseMode', 'typingInterval', 'random']);\n\n      return React.createElement(\n        'span',\n        _extends({ style: { color: color } }, other, {\n          'aria-label': this.props.items[this.state.index] }),\n        this.state.output,\n        cursor ? React.createElement(\n          'span',\n          { className: 'react-rotating-text-cursor' },\n          '|'\n        ) : null\n      );\n    }\n  }]);\n\n  return ReactRotatingText;\n})(React.Component);\n\nReactRotatingText.propTypes = {\n  color: PropTypes.string,\n  cursor: PropTypes.bool,\n  deletingInterval: PropTypes.number,\n  emptyPause: PropTypes.number,\n  eraseMode: PropTypes.string,\n  items: PropTypes.array,\n  pause: PropTypes.number,\n  typingInterval: PropTypes.number,\n  random: PropTypes.bool\n};\n\nReactRotatingText.defaultProps = {\n  color: 'inherit',\n  cursor: true,\n  deletingInterval: 50,\n  emptyPause: 1000,\n  eraseMode: 'erase',\n  items: ['first', 'second', 'third', 'fourth', 'fifth'],\n  pause: 1500,\n  typingInterval: 50,\n  random: false\n};\n\nexports['default'] = ReactRotatingText;\nmodule.exports = exports['default'];","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `iterator` to an array.\n *\n * @private\n * @param {Object} iterator The iterator to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction iteratorToArray(iterator) {\n  var data,\n      result = [];\n\n  while (!(data = iterator.next()).done) {\n    result.push(data.value);\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    iteratorSymbol = Symbol ? Symbol.iterator : undefined,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\n/**\n * Converts `value` to an array.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Array} Returns the converted array.\n * @example\n *\n * _.toArray({ 'a': 1, 'b': 2 });\n * // => [1, 2]\n *\n * _.toArray('abc');\n * // => ['a', 'b', 'c']\n *\n * _.toArray(1);\n * // => []\n *\n * _.toArray(null);\n * // => []\n */\nfunction toArray(value) {\n  if (!value) {\n    return [];\n  }\n  if (isArrayLike(value)) {\n    return isString(value) ? stringToArray(value) : copyArray(value);\n  }\n  if (iteratorSymbol && value[iteratorSymbol]) {\n    return iteratorToArray(value[iteratorSymbol]());\n  }\n  var tag = getTag(value),\n      func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n  return func(value);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object ? baseValues(object, keys(object)) : [];\n}\n\nmodule.exports = toArray;\n"],"sourceRoot":""}