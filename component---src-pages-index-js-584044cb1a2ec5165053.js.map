{"version":3,"sources":["webpack:///./src/components/rotating-text.js","webpack:///./src/pages/index.js","webpack:///./src/components/page-link.js","webpack:///./src/components/profile.js"],"names":["withTheme","p","color","theme","colors","link","cursorColor","Object","core_browser_esm","css","transitions","cursor","ReactRotatingText_default","a","_extends","profile","name","styles","text","fonts","splash","nav","margins","large","small","flex","_ref","Splash","render","_this$props$data$site","this","props","data","site","siteMetadata","about","blog","projects","gatsby_browser_entry","to","rotating_text","items","typingInterval","deletingInterval","speed","emptyPause","pause","width","height","page_link","href","index_es","icon","faNewspaper","faPencilAlt","faUser","Component","pageQuery","style","extraSmall","Container","inline","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","children","_smart_link__WEBPACK_IMPORTED_MODULE_2__","GenericProfile","photo","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","src","img","alt","Profile","AboutProfile","shift"],"mappings":"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","file":"component---src-pages-index-js-584044cb1a2ec5165053.js","sourcesContent":["import React from 'react'\nimport { css } from '@emotion/core'\nimport ReactRotatingText from 'react-rotating-text'\nimport { withTheme } from 'emotion-theming'\n\nconst RotatingText = p => {\n  const color = p.color || p.theme.colors.link\n  const cursorColor = p.cursorColor || color\n  const blink = theme => css`\n    .react-rotating-text-cursor {\n      animation: blinking-cursor ${theme.transitions.cursor} 0s infinite;\n      margin-left: 5px;\n      color: ${cursorColor};\n    }\n\n    @keyframes blinking-cursor {\n      0% {\n        opacity: 0;\n      }\n      50% {\n        opacity: 1;\n      }\n      100% {\n        opacity: 0;\n      }\n    }\n  `\n  return (\n    <span css={blink}>\n      <ReactRotatingText {...p} color={color} />\n    </span>\n  )\n}\n\nexport default withTheme(RotatingText)\n","import React, { Component } from \"react\"\nimport { graphql } from 'gatsby'\nimport RotatingText from '../components/rotating-text'\nimport { Link } from 'gatsby'\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\nimport { faUser, faPencilAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faNewspaper } from '@fortawesome/free-regular-svg-icons'\nimport { css } from '@emotion/core'\nimport { Profile } from '../components/profile'\nimport Button from '../components/page-link'\n\nconst profile = css`\n  img {\n    border-radius: 125px !important;\n  }\n`\n\nconst text = theme => css`\n  h1:first-of-type {\n    font-size: ${theme.fonts.splash}\n  }\n  @media screen and (max-width: 814px) {\n    h1:first-of-type {\n      font-size: 2.5em;\n    }\n  }\n  @media screen and (max-width: 675px) {\n    h1:first-of-type {\n      font-size: 2em;\n    }\n    h1 {\n      font-size: 1.3rem;\n    }\n  }\n`\n\nconst nav = theme => css`\n  margin-top: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  div {\n    font-family: 'Raleway',sans-serif;\n    font-size: 1.25em;\n    text-align: left;\n    margin-right: ${theme.margins.large};\n  }\n  @media screen and (max-width: 502px) {\n    div {\n      margin-bottom: ${theme.margins.small};\n      font-size: 20px;\n    }\n    display: block !important;\n  }\n`\n\nconst flex = theme => css`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  text-align: center;\n  img {\n    margin-right: auto;\n    margin-left: auto;\n  }\n  @media screen and (max-width: 1066px) {\n    h1 {\n      margin-block-start: 2px !important;\n      margin-block-end: 30px !important;\n    }\n    div {\n      width: 100%;\n    }\n  }\n  @media screen and (max-width: 481px) {\n    h1 {\n      margin-block-start: 8px !important;\n      margin-block-end: 10px !important;\n    }\n  }\n`\n\nclass Splash extends Component {\n  render() {\n    const speed = 65\n    const deleteSpeed = speed - 10\n    const stop = 3000\n    const emptyStop = 500\n    const { about, blog, projects } = this.props.data.site.siteMetadata.nav\n    return (\n      <div>\n        <div css={flex}>\n          <div css={text}>\n            <h1>Hey I'm{' '}<Link to={about}>Jaxson Van Doorn</Link></h1>\n            <h1>\n              I{' '}\n              <RotatingText items={['build games ðŸŽ®', 'design apps ðŸ–Œ', 'craft tools ðŸ”§']}\n                typingInterval={speed}\n                deletingInterval={deleteSpeed}\n                emptyPause={emptyStop}\n                pause={stop}\n              />\n              {' '}for the modern world\n            </h1>\n          </div>\n          <div css={profile}><Profile width=\"250px\" height=\"250px\" /></div>\n        </div>\n        <div css={nav}>\n          <Button href={projects}><Icon icon={faNewspaper}/> Check out my Projects</Button>\n          <Button href={blog}><Icon icon={faPencilAlt}/> Read my Blog</Button>\n          <Button href={about}><Icon icon={faUser}/> Learn About me</Button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Splash\n\nexport const pageQuery = graphql`{ ...Nav }`\n","import React from 'react'\nimport { css } from '@emotion/core'\nimport Link from './smart-link'\nimport { withTheme } from 'emotion-theming'\n\nconst style = theme => css`\n  text-align: right;\n  margin-bottom: ${theme.margins.extraSmall};\n`\n\nconst Container = p => p.inline ? (<span css={style}>{p.children}</span>) : (<div css={style}>{p.children}</div>)\n\nconst PageLink = p => (\n  <Container inline={p.inline}>\n    <Link style={p.style} to={p.href}>{p.children}</Link>\n  </Container>\n)\n\nexport default withTheme(PageLink)\n","import React from 'react'\nimport { css } from '@emotion/core'\n\nconst GenericProfile = p => {\n  const photo = css`\n    max-width: ${p.width};\n    max-height: ${p.height};\n  `\n  return (\n    <img css={photo} src={p.img} alt={p.alt} />\n  )\n}\n\nexport const Profile = p => (\n  <GenericProfile img=\"https://avatars3.githubusercontent.com/u/7284672?s=460&v=4\"\n                  alt=\"Jaxson Van Doorn\"\n                  {...p} />\n)\n\nexport const AboutProfile = p => {\n  const shift = css`\n    float: right;\n    display: block;\n    @media screen and (max-width: 700px) {\n      float: none;\n      margin: 1em auto !important;\n      width: 50%;\n    }\n  `\n  return <span css={shift}><Profile {...p} /></span>\n}\n"],"sourceRoot":""}