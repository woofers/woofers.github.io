{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/og-image.js","webpack:///./src/components/title.js","webpack:///./src/components/page.js"],"names":["style","name","styles","inline","NotFound","render","page","_this$props$data$site","this","props","data","site","siteMetadata","title","home","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_page__WEBPACK_IMPORTED_MODULE_3__","css","fontSize","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_5__","icon","faExclamationTriangle","theme","margins","normal","extraSmall","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","Component","pageQuery","url","OgImage","p","api","core_browser_esm","Helmet_default","a","property","content","Title","og_image","children","Page","title_Title"],"mappings":"6LAOA,IAAMA,EAAK,CAAAC,KAAA,SAAAC,OAAA,sBAILC,EAAM,CAAAF,KAAA,SAAAC,OAAA,mKAYNE,kLACJC,OAAA,WACE,IAAMC,EAAO,iBADNC,EAEiBC,KAAKC,MAAMC,KAAKC,KAAKC,aAArCC,EAFDN,EAECM,MAAOC,EAFRP,EAEQO,KACf,OACEC,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMJ,MAAOP,EAAMK,KAAME,GACvBE,OAAAC,EAAA,IAAAD,CAAA,OAAKG,IAAKlB,GACRe,OAAAC,EAAA,IAAAD,CAAA,UAAKT,GACLS,OAAAC,EAAA,IAAAD,CAAA,KAAGf,MAAO,CAAEmB,SAAU,SACpBJ,OAAAC,EAAA,IAAAD,CAACK,EAAA,EAAD,CAAMC,KAAMC,OAEdP,OAAAC,EAAA,IAAAD,CAAA,MAAIG,IAAKf,GACPY,OAAAC,EAAA,IAAAD,CAAA,UACEA,OAAAC,EAAA,IAAAD,CAAA,MAAIG,IAAM,SAAAK,GAAK,OAAIL,aAAJ,eAAsBK,EAAMC,QAAQC,OAApC,kBAAf,mDAIFV,OAAAC,EAAA,IAAAD,CAAA,UACEA,OAAAC,EAAA,IAAAD,CAAA,MAAIG,IAAM,SAAAK,GAAK,OAAIL,aAAJ,gBAAuBK,EAAMC,QAAQE,WAArC,kBACbX,OAAAC,EAAA,IAAAD,CAACY,EAAA,KAAD,CAAMC,GAAId,GAAV,qBAnBOe,aA4BRzB,YAER,IAAM0B,EAAS,mFCjDhBC,EAAM,gCAYGC,EATC,SAAAC,GACd,IAAMC,EAASH,EAAN,MAAeE,EAAEpB,MAAjB,mFACT,OACEE,OAAAoB,EAAA,IAAApB,CAACqB,EAAAC,EAAD,KACEtB,OAAAoB,EAAA,IAAApB,CAAA,QAAMuB,SAAS,WAAWC,QAASL,MCD5BM,EAAQ,SAAAP,GAAC,OACpBlB,OAAAoB,EAAA,IAAApB,CAAA,WACEA,OAAAoB,EAAA,IAAApB,CAACqB,EAAAC,EAAD,KACEtB,OAAAoB,EAAA,IAAApB,CAAA,QAAMuB,SAAS,WAAWC,QAASN,EAAEpB,QACrCE,OAAAoB,EAAA,IAAApB,CAAA,cAVaF,EAUKoB,EAAEpB,MAVAF,EAUOsB,EAAEtB,KAT5BE,EACAF,EACKE,EAAV,MAAqBF,EADHE,EADCF,KAWjBI,OAAAoB,EAAA,IAAApB,CAAC0B,EAAD,CAAS5B,MAAOoB,EAAEpB,QACjBoB,EAAES,UAbW,IAAC7B,EAAOF,mCCDnB,IAAMgC,EAAO,SAAAV,GAAC,OACnBlB,OAAAoB,EAAA,IAAApB,CAAC6B,EAAD,CAAO/B,MAAOoB,EAAEpB,MAAOF,KAAMsB,EAAEtB,MAC7BI,OAAAoB,EAAA,IAAApB,CAAA,eACGkB,EAAES","file":"component---src-pages-404-js-3fa97ef60c7a4780034c.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link, graphql } from 'gatsby'\nimport { Page } from '../components/page'\nimport { css } from '@emotion/core'\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\n\nconst style = css`\n  text-align: center;\n`\n\nconst inline = css`\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 auto;\n  list-style: none;\n  justify-content: center;\n`\n\nclass NotFound extends Component {\n  render() {\n    const page = 'Page Not Found'\n    const { title, home } = this.props.data.site.siteMetadata\n    return (\n      <Page title={page} site={title}>\n        <div css={style}>\n          <h1>{page}</h1>\n          <p style={{ fontSize: '17em' }}>\n            <Icon icon={faExclamationTriangle} />\n          </p>\n          <ul css={inline}>\n            <li>\n              <h3 css={ theme => css`margin-top: ${theme.margins.normal} !important;` }>\n                You just hit a route that does not exist . . .\n              </h3>\n            </li>\n            <li>\n              <h2 css={ theme => css`margin-left: ${theme.margins.extraSmall} !important;` }>\n                <Link to={home}>Go home?</Link>\n              </h2>\n            </li>\n          </ul>\n        </div>\n      </Page>\n    )\n  }\n}\nexport default NotFound\n\nexport const pageQuery = graphql`\n  {\n    ...Template\n  }\n`\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\nconst size = 300\nconst url = 'https://opengraph.vandoorn.ca'\nconst image = `${url}/jvd.png`\n\nconst OgImage = p => {\n  const api = `${url}/**${p.title}**.png?&md=1&images=${image}&widths=${size}&heights=${size}`\n  return (\n    <Helmet>\n      <meta property=\"og:image\" content={api} />\n    </Helmet>\n  )\n}\n\nexport default OgImage\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport OgImage from './og-image'\n\nconst makeTitle = (title, site) => {\n  if (!title) return site\n  if (!site) return title\n  return `${title} - ${site}`\n}\n\nexport const Title = p => (\n  <div>\n    <Helmet>\n      <meta property=\"og:title\" content={p.title} />\n      <title>{makeTitle(p.title, p.site)}</title>\n    </Helmet>\n    <OgImage title={p.title} />\n    {p.children}\n  </div>\n)\n","import React from 'react'\nimport { Title } from '../components/title'\n\nexport const Page = p => (\n  <Title title={p.title} site={p.site}>\n    <article>\n      {p.children}\n    </article>\n  </Title>\n)\n"],"sourceRoot":""}