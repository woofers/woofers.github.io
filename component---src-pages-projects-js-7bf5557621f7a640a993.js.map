{"version":3,"sources":["webpack:///./node_modules/emoji-regex/index.js","webpack:///./node_modules/core-js/modules/es6.string.code-point-at.js","webpack:///./src/components/emoji.js","webpack:///./src/components/description.js","webpack:///./src/pages/projects.js","webpack:///./src/components/og-image.js","webpack:///./src/components/title.js","webpack:///./src/components/page.js","webpack:///./src/components/smart-link.js","webpack:///./src/components/button.js","webpack:///./src/utils/link.js","webpack:///./src/styles/center.js","webpack:///./src/utils/repo.js","webpack:///./src/components/project-button.js","webpack:///./src/components/code-block.js","webpack:///./src/components/markdown.js"],"names":["module","exports","$export","__webpack_require__","$at","P","codePointAt","pos","this","border","name","styles","Emoji","_ref","code","emoji","size","Object","core_browser_esm","alt","css","width","height","src","toString","toLowerCase","defaultProps","Description","match","lastMatch","text","desc","regexp","isEmoji","i","exec","index","length","segment","substring","push","key","components_emoji","last","theme","margins","small","container","start","end","Projects","render","exclude","props","data","site","siteMetadata","title","repos","allRepositories","edges","mutateRepoNames","Repos","map","repo","node","license","dlv","stars","totalCount","url","homepage","md","readme","fullName","smart_link","to","description","react_fontawesome_index_es","icon","faBalanceScale","faStar","project_button","href","type","components_button","inline","align","faInfoCircle","markdown","content","centerImages","filters","removeBadges","firstImage","page","Component","pageQuery","OgImage","p","api","Helmet_default","a","property","Title","og_image","children","Page","title_Title","Link","activeClassName","partiallyActive","other","_objectWithoutPropertiesLoose","_public_static_d_4117746482_json__WEBPACK_IMPORTED_MODULE_9__","link","siteUrl","paths","allSitePage","nodes","path","urlNoHttps","replace","urlHttp","includes","test","_emotion_core__WEBPACK_IMPORTED_MODULE_8__","gatsby__WEBPACK_IMPORTED_MODULE_11__","_extends","gatsby_plugin_google_analytics__WEBPACK_IMPORTED_MODULE_12__","Container","style","extraSmall","large","medium","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Button","_smart_link__WEBPACK_IMPORTED_MODULE_2__","withTheme","toGitHubLink","toAbsoluteLink","prefix","relativeLink","d","__webpack_exports__","image","excluded","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","next","done","value","_iterator2","_isArray2","_i2","_ref2","hasOwnProperty","camelCaseToPascalCase","labels","topics","label","topic","ProjectButton","_button__WEBPACK_IMPORTED_MODULE_4__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__","faPlayCircle","faScroll","CodeBlock","ref","useRef","useEffect","current","className","window","Prism","highlightElement","removeAttribute","schema","merge","github","attributes","*","tree","select","unist","filter","child","Markdown","centerImage","normal","remark","use","remark2react","remarkReactComponents","pre","sanitize","options","visitor","setAlt","visit","links","processSync","contents"],"mappings":"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","file":"component---src-pages-projects-js-7bf5557621f7a640a993.js","sourcesContent":["\"use strict\";\n\nmodule.exports = function () {\n  // https://mths.be/emoji\n  return /\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)\\uD83C\\uDFFB|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83D\\uDC69(?:\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620)\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF6\\uD83C\\uDDE6|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5\\uDEEB\\uDEEC\\uDEF4-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g;\n};","'use strict';\nvar $export = require('./_export');\nvar $at = require('./_string-at')(false);\n$export($export.P, 'String', {\n  // 21.1.3.3 String.prototype.codePointAt(pos)\n  codePointAt: function codePointAt(pos) {\n    return $at(this, pos);\n  }\n});\n","import React from 'react'\nimport { css } from '@emotion/core'\n\nconst img = code => `//github.githubassets.com/images/icons/emoji/unicode/${code}.png`\nconst border = css`\n  border-radius: 0 !important;\n`\n\nconst Emoji = ({ emoji, size }) =>\n  (<img alt=\"\" css={border} width={size} height={size} src={img(emoji.codePointAt(0).toString(16).toLowerCase())} />)\n\nEmoji.defaultProps = {\n  emoji: '👾',\n  size: '20px'\n}\n\nexport default Emoji\n","import React from 'react'\nimport isEmoji from 'emoji-regex'\nimport Emoji from './emoji'\n\nconst Description = ({ text }) => {\n  const desc = []\n  const regexp = isEmoji()\n  let match\n  let lastMatch\n  let i = 0;\n  // eslint-disable-next-line\n  while (match = regexp.exec(text)) {\n    if (lastMatch) {\n      i = lastMatch.index + lastMatch[0].length\n      const segment = text.substring(i + 1, match.index)\n      if (segment) desc.push(<span key={`${segment}-${i}-${lastMatch[0]}-text-${text}`}>{segment}</span>)\n    }\n    const emoji = match[0]\n    desc.push(<span key={`${text}-${match[0]}-${match.index}`} ><Emoji emoji={emoji} /> </span>)\n    i = match.index + emoji.length\n    lastMatch = match\n  }\n  const last = text.substring(i + 1, text.length)\n  if (last) desc.push(<span key={`${last}-last-${text}`}>{last}</span>)\n  return (<div>{desc}</div>)\n}\n\nexport default Description\n","import React, { Component } from 'react'\nimport { graphql } from 'gatsby'\nimport { css } from '@emotion/core'\nimport { Page } from '../components/page'\nimport Button from '../components/button'\nimport { faStar, faBalanceScale, faInfoCircle } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\nimport Link from '../components/smart-link'\nimport Description from '../components/description'\nimport ProjectButton from '../components/project-button'\nimport { firstImage, removeBadges, Markdown } from '../components/markdown'\nimport { type, mutateRepoNames } from '../utils/repo'\nimport dlv from 'dlv'\n\nconst push = theme => css`\n  padding-top: ${theme.margins.small};\n`\n\nconst container = css`\n  margin-bottom: 10px;\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n`\n\nconst start = css`\n  align-content: flex-start;\n  align-self: center;\n  max-width: 650px;\n`\n\nconst end = css`\n  align-content: flex-end;\n  align-self: center;\n  @media screen and (max-width: 1000px) {\n    margin-right: auto;\n    margin-left: auto;\n  }\n  img {\n    margin: 10px auto;\n    max-height: 600px;\n    display: block;\n    @media screen and (min-width: 1000px) {\n      max-width: 500px;\n      max-height: 405px;\n    }\n  }\n`\n\nclass Projects extends Component {\n  render() {\n    const { exclude } = this.props.data.site.siteMetadata\n    const { title } = this.props.data.site.siteMetadata\n    const repos = this.props.data.allRepositories.edges\n    mutateRepoNames(repos, exclude)\n    const Repos = repos.map(({ node }) => {\n      const repo = node\n      const license = dlv(repo.license, 'name')\n      const stars = repo.stars.totalCount\n      const url = repo.homepage\n      const md = dlv(repo.readme, 'text')\n      const name = repo.fullName\n      if (!name) return null\n      return (\n        <div key={name} css={container}>\n          <div key={`${name}-info`} css={start}>\n            <h2><Link to={`/projects/${repo.name}/`}>{name}</Link></h2>\n            <Description text={repo.description} />\n            {license && license !== 'Other' ? <h4><Icon icon={faBalanceScale}/> {license}</h4> : null}\n            {stars ? <h4><Icon icon={faStar}/> {stars}</h4> : null }\n            {url ? <ProjectButton href={url} type={type(repo)} /> : null}\n            <Button inline={true} align=\"left\" href={`/projects/${repo.name}/`}><Icon icon={faInfoCircle}/> More Info</Button>\n          </div>\n          <div key={`${name}-image`} css={end}>\n            <Markdown alt={name} content={md} repo={repo} centerImages={false} filters={[removeBadges, firstImage]} />\n          </div>\n        </div>\n      )\n    })\n    return (\n      <div css={push}>\n        <Page title='Projects' site={title}>\n          {Repos}\n        </Page>\n      </div>\n    )\n  }\n}\n\nexport default Projects\n\nexport const pageQuery = graphql`\n  {\n    ...Title\n    ...Nav\n    ...GitHub\n  }\n`\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\nconst size = 300\nconst url = 'https://opengraph.vandoorn.ca'\nconst image = `${url}/jvd.png`\n\nconst OgImage = p => {\n  const api = `${url}/**${p.title}**.png?&md=1&images=${image}&widths=${size}&heights=${size}`\n  return (\n    <Helmet>\n      <meta property=\"og:image\" content={api} />\n    </Helmet>\n  )\n}\n\nexport default OgImage\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport OgImage from './og-image'\n\nconst makeTitle = (title, site) => {\n  if (!title) return site\n  if (!site) return title\n  return `${title} - ${site}`\n}\n\nexport const Title = p => (\n  <div>\n    <Helmet>\n      <meta property=\"og:title\" content={p.title} />\n      <title>{makeTitle(p.title, p.site)}</title>\n    </Helmet>\n    <OgImage title={p.title} />\n    {p.children}\n  </div>\n)\n","import React from 'react'\nimport { Title } from '../components/title'\n\nexport const Page = p => (\n  <Title title={p.title} site={p.site}>\n    <article>\n      {p.children}\n    </article>\n  </Title>\n)\n","import React from 'react'\nimport { useStaticQuery, Link as GatsbyLink, graphql } from 'gatsby'\nimport { OutboundLink } from 'gatsby-plugin-google-analytics'\n\n// Since DOM elements <a> cannot receive activeClassName\n// and partiallyActive, destructure the prop here and\n// pass it only to GatsbyLink\n// Adapted from: https://www.gatsbyjs.org/docs/gatsby-link/\nconst Link = ({ children, to, activeClassName, partiallyActive, ...other }) => {\n  const data = useStaticQuery(graphql`{ ...Url, ...Pages }`)\n  let link = to\n\n  // Use relative links for jaxson.vandoorn.ca for local development\n  const { siteUrl } = data.site.siteMetadata\n  const paths = data.allSitePage.nodes.map(node => node.path)\n  const urlNoHttps = siteUrl.replace('https://', '')\n  const urlHttp = siteUrl.replace('https://', 'http://')\n\n  link = to.replace(siteUrl, '').replace(urlHttp, '').replace(urlNoHttps, '')\n  if (!link) link = '/'\n\n  if (!paths.includes(link)) {\n    return (\n      <OutboundLink href={to} {...other}>\n        {children}\n      </OutboundLink>\n    )\n  }\n\n  // Tailor the following test to your environment.\n  // This example assumes that any internal link (intended for Gatsby)\n  // will start with exactly one slash, and that anything else is external.\n  const internal = /^\\/(?!\\/)/.test(link)\n\n  // Use Gatsby Link for internal links, and <a> for others\n  if (internal) {\n    return (\n      <GatsbyLink\n        to={link}\n        activeClassName={activeClassName}\n        partiallyActive={partiallyActive}\n        {...other}\n      >\n        {children}\n      </GatsbyLink>\n    )\n  }\n  return (\n    <a href={link} {...other}>\n      {children}\n    </a>\n  )\n}\n\nexport default Link\n","import React from 'react'\nimport { css } from '@emotion/core'\nimport Link from './smart-link'\nimport { withTheme } from 'emotion-theming'\n\nconst Container = p => {\n  const style = theme => css`\n    text-align: ${p.align};\n    display: ${p.inline ? 'inline-block' : 'block'};\n    margin-bottom: ${theme.margins.extraSmall};\n    margin-right: ${p.inline ? theme.margins.large : 0};\n    margin-top: ${p.inline ? theme.margins.medium : 0};\n  `\n  if (p.inline) return (<span css={style}>{p.children}</span>)\n  return (<div css={style}>{p.children}</div>)\n}\n\nconst Button = p => (\n  <Container inline={p.inline} align={p.align}>\n    <Link style={p.style} to={p.href}>{p.children}</Link>\n  </Container>\n)\n\nButton.defaultProps = {\n  align: 'right'\n}\n\nexport default withTheme(Button)\n","\nexport const toGitHubLink = (link, repo) => {\n  return toAbsoluteLink(link, `//raw.githubusercontent.com/woofers/${repo}/master/` )\n}\n\nexport const toAbsoluteLink = (link, prefix) => {\n  const relativeLink = /^\\.\\//g\n  if (relativeLink.test(link)) {\n    link = link.replace(relativeLink, prefix)\n  }\n  return link\n}\n","import { css } from '@emotion/core'\n\nexport const image = css`\n  display: block;\n  margin-right: auto;\n  margin-left: auto;\n`\n","import { camelCaseToPascalCase } from './case'\n\nexport const mutateRepoNames = (repos, exclude) => {\n  const excluded = {}\n  for (const key of exclude) {\n    excluded[key[0]] = key[1]\n  }\n  const replace = name => {\n    if (excluded[name]) return excluded[name]\n    if (excluded.hasOwnProperty(name)) return ''\n    return camelCaseToPascalCase(name)\n  }\n  for (const edge of repos) {\n    const repo = edge.node\n    repo.fullName = replace(repo.name)\n  }\n}\n\n\nexport const type = repo => {\n  let labels = repo.topics\n  if (labels) {\n    labels = labels.nodes\n    labels = labels.map(label => label.topic.name)\n    if (labels.includes('game')) return 'game'\n    else if (labels.includes('react')) return 'react'\n    else if (labels.includes('resume')) return 'resume'\n  }\n  return 'no type'\n}\n","import React from 'react'\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\nimport { faPlayCircle, faScroll } from '@fortawesome/free-solid-svg-icons'\nimport Button from './button'\n\nconst ProjectButton = p => {\n  if (p.type === 'game') return (<Button {...p}><Icon icon={faPlayCircle}/> Play</Button>)\n  else if (p.type === 'react') return (<Button {...p}><Icon icon={faPlayCircle}/> View Demo</Button>)\n  else if (p.type === 'resume') return (<Button {...p}><Icon icon={faScroll}/> View Resume</Button>)\n  else return (<Button {...p}><Icon icon={faPlayCircle}/> View Site</Button>)\n}\n\nProjectButton.defaultProps = {\n  inline: true\n}\n\nexport default ProjectButton\n","import React, { useEffect, useRef } from 'react'\nimport 'prismjs'\nimport 'prismjs/components/prism-jsx'\n\nconst CodeBlock = p => {\n  const ref = useRef()\n  useEffect(() => {\n    const code = () => ref.current.children[0]\n    const lang = code().className\n    if (lang) window.Prism.highlightElement(code(), false)\n    ref.current.removeAttribute('class')\n  })\n  return (\n    <pre ref={ref}>{p.children}</pre>\n  )\n}\n\nexport default CodeBlock\n","import React from 'react'\nimport remark from 'remark'\nimport remark2react from 'remark-react'\nimport { css } from '@emotion/core'\nimport unist from 'unist-builder'\nimport visit from 'unist-util-visit'\nimport filter from 'unist-util-filter'\nimport { selectAll, select } from 'unist-util-select'\nimport { toGitHubLink } from '../utils/link'\nimport CodeBlock from './code-block'\nimport { image } from '../styles/center'\nimport github from 'hast-util-sanitize/lib/github'\nimport merge from 'lodash.merge'\nimport Link from './smart-link'\nconst schema = merge(github, { attributes: { '*': ['className', 'type'] } })\n\nexport const onlyImages = () => {\n  return (tree) => unist('paragraph', selectAll('image', tree))\n}\n\nexport const firstImage = () => {\n  return (tree) => {\n    const image = select('image', tree)\n    return image ? image : unist('paragraph', '')\n  }\n}\n\nexport const removeBadges = () => {\n  return (tree) => {\n    return filter(tree, node => {\n      const child = node.children ? node.children[0] : ''\n      return !(node.type === 'link' && child && child.type === 'image')\n    })\n  }\n}\n\nexport const Markdown = p => {\n  const links = options => {\n    options = options || {}\n    const visitor = node => {\n      const githubLink = /^\\.\\//g\n      const setAlt = alt => {\n        node.title = alt\n        node.alt = alt\n      }\n      if (githubLink.test(node.url)) {\n        node.url = toGitHubLink(node.url, p.repo.name)\n      }\n      if (options.alt) {\n        setAlt(options.alt)\n      }\n      else if (node.title && node.type === 'image') {\n        setAlt(`${p.repo.fullName} ${node.title}`)\n      }\n    }\n    return (tree) => visit(tree, ['image', 'link', 'linkReference'], visitor)\n  }\n  const content = () => {\n    let md = remark().use(remark2react, {\n      remarkReactComponents: {\n        pre: CodeBlock,\n        a: p => <Link to={p.href}>{p.children}</Link>\n      },\n      sanitize: schema\n    })\n    md = md.use(() => links({ alt: p.alt }))\n    for (const filter of p.filters) {\n      md = md.use(filter)\n    }\n    return md.processSync(p.content).contents\n  }\n\n  const centerImage = css`\n    img:last-child {\n      ${image};\n    }\n    img ~ img {\n      display: inline !important;\n    }\n  `\n\n  const style = theme => css`\n    h1:first-of-type {\n      display: none;\n    }\n    p img {\n      @media screen and (min-width: 1000px) {\n        margin-right: ${theme.margins.large};\n      }\n      margin-bottom: ${theme.margins.normal};\n    }\n    ${p.centerImages ? centerImage : ''}\n  `\n  return (\n    <div css={style}>\n      {content()}\n    </div>\n  )\n}\n\nMarkdown.defaultProps = {\n  filters: [],\n  centerImages: true\n}\n"],"sourceRoot":""}