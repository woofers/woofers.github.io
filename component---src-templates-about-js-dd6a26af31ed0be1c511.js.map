{"version":3,"sources":["webpack:///./src/templates/about.js","webpack:///./src/components/title.js","webpack:///./src/components/page.js","webpack:///./src/components/smart-link.js","webpack:///./src/components/content.js","webpack:///./src/components/button.js","webpack:///./src/components/profile.js"],"names":["AboutTemplate","render","post","this","props","data","orgContent","_this$props$data$site","site","siteMetadata","social","resume","github","twitter","margins","theme","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","_components_page__WEBPACK_IMPORTED_MODULE_5__","title","meta","_components_profile__WEBPACK_IMPORTED_MODULE_6__","width","profile","height","_components_button__WEBPACK_IMPORTED_MODULE_11__","href","link","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_8__","icon","faTwitter","handle","faGithub","name","faScroll","_components_content__WEBPACK_IMPORTED_MODULE_4__","html","hideTitle","Component","withTheme","pageQuery","Title","p","core_browser_esm","Helmet_default","a","property","content","children","Page","title_Title","Link","_ref","to","activeClassName","partiallyActive","other","_objectWithoutPropertiesLoose","_public_static_d_4117746482_json__WEBPACK_IMPORTED_MODULE_9__","siteUrl","paths","allSitePage","nodes","map","node","path","urlNoHttps","replace","urlHttp","includes","test","_emotion_core__WEBPACK_IMPORTED_MODULE_8__","gatsby__WEBPACK_IMPORTED_MODULE_11__","_extends","gatsby_plugin_google_analytics__WEBPACK_IMPORTED_MODULE_12__","Content","hide","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","css","small","dangerouslySetInnerHTML","__html","Container","style","align","inline","extraSmall","large","medium","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Button","_smart_link__WEBPACK_IMPORTED_MODULE_2__","defaultProps","GenericProfile","profileRadius","src","img","alt","Profile","AboutProfile","shift"],"mappings":"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","file":"component---src-templates-about-js-dd6a26af31ed0be1c511.js","sourcesContent":["import React, { Component } from \"react\"\nimport { Content } from '../components/content'\nimport { Page } from '../components/page'\nimport { AboutProfile as Profile } from '../components/profile'\nimport { graphql } from 'gatsby'\nimport { withTheme } from 'emotion-theming'\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\nimport { faScroll } from '@fortawesome/free-solid-svg-icons'\nimport { faGithub, faTwitter } from '@fortawesome/free-brands-svg-icons'\nimport Button from '../components/button'\n\nclass AboutTemplate extends Component {\n  render() {\n    const post = this.props.data.orgContent\n    const { social, resume } = this.props.data.site.siteMetadata\n    const { github, twitter } = social\n    const { margins } = this.props.theme\n    return (\n      <Page title={post.meta.title} site={this.props.data.site.siteMetadata.title}>\n        <Profile width={margins.profile} height={margins.profile} >\n          <Button href={twitter.link}><Icon icon={faTwitter}/> {twitter.handle}</Button>\n          <Button href={github.link}><Icon icon={faGithub}/> {github.name}</Button>\n          <Button href={resume}><Icon icon={faScroll}/> Resume</Button>\n        </Profile>\n        <Content html={post.html} hideTitle={true} />\n      </Page>\n    )\n  }\n}\n\nexport default withTheme(AboutTemplate)\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    ...Title\n    ...Social\n    orgContent(fields: {slug: {eq: $slug}}) {\n      ...Content\n    }\n  }\n`\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\nconst makeTitle = (title, site) => {\n  if (!title) return site\n  return `${title} - ${site}`\n}\n\nexport const Title = p => (\n  <div>\n    <Helmet>\n      <meta property=\"og:title\" content={p.title} />\n      <title>{makeTitle(p.title, p.site)}</title>\n    </Helmet>\n    {p.children}\n  </div>\n)\n","import React from 'react'\nimport { Title } from '../components/title'\n\nexport const Page = p => (\n  <Title title={p.title} site={p.site}>\n    <article>\n      {p.children}\n    </article>\n  </Title>\n)\n","import React from 'react'\nimport { useStaticQuery, Link as GatsbyLink, graphql } from 'gatsby'\nimport { OutboundLink } from 'gatsby-plugin-google-analytics'\n\n// Since DOM elements <a> cannot receive activeClassName\n// and partiallyActive, destructure the prop here and\n// pass it only to GatsbyLink\n// Adapted from: https://www.gatsbyjs.org/docs/gatsby-link/\nconst Link = ({ children, to, activeClassName, partiallyActive, ...other }) => {\n  const data = useStaticQuery(graphql`{ ...Url, ...Pages }`)\n  let link = to\n\n  // Use relative links for jaxson.vandoorn.ca for local development\n  const { siteUrl } = data.site.siteMetadata\n  const paths = data.allSitePage.nodes.map(node => node.path)\n  const urlNoHttps = siteUrl.replace('https://', '')\n  const urlHttp = siteUrl.replace('https://', 'http://')\n\n  link = to.replace(siteUrl, '').replace(urlHttp, '').replace(urlNoHttps, '')\n  if (!link) link = '/'\n\n  if (!paths.includes(link)) {\n    return (\n      <OutboundLink href={to} {...other}>\n        {children}\n      </OutboundLink>\n    )\n  }\n\n  // Tailor the following test to your environment.\n  // This example assumes that any internal link (intended for Gatsby)\n  // will start with exactly one slash, and that anything else is external.\n  const internal = /^\\/(?!\\/)/.test(link)\n\n  // Use Gatsby Link for internal links, and <a> for others\n  if (internal) {\n    return (\n      <GatsbyLink\n        to={link}\n        activeClassName={activeClassName}\n        partiallyActive={partiallyActive}\n        {...other}\n      >\n        {children}\n      </GatsbyLink>\n    )\n  }\n  return (\n    <a href={link} {...other}>\n      {children}\n    </a>\n  )\n}\n\nexport default Link\n","import React from 'react'\nimport { css } from '@emotion/core'\n\nexport const Content = p => {\n  const hide = css`\n    div:first-of-type h1 {\n      display: none;\n    }\n  `\n  const org = theme => css`\n    ${p.hideTitle ? hide : ''}\n    div {\n      margin-bottom: ${theme.margins.small};\n      text-align: 'left';\n    }\n  `\n  return (\n    <div css={org}\n       dangerouslySetInnerHTML={{ __html: p.html }} />\n  )\n}\n","import React from 'react'\nimport { css } from '@emotion/core'\nimport Link from './smart-link'\nimport { withTheme } from 'emotion-theming'\n\nconst Container = p => {\n  const style = theme => css`\n    text-align: ${p.align};\n    display: ${p.inline ? 'inline-block' : 'block'};\n    margin-bottom: ${theme.margins.extraSmall};\n    margin-right: ${p.inline ? theme.margins.large : 0};\n    margin-top: ${p.inline ? theme.margins.medium : 0};\n  `\n  if (p.inline) return (<span css={style}>{p.children}</span>)\n  return (<div css={style}>{p.children}</div>)\n}\n\nconst Button = p => (\n  <Container inline={p.inline} align={p.align}>\n    <Link style={p.style} to={p.href}>{p.children}</Link>\n  </Container>\n)\n\nButton.defaultProps = {\n  align: 'right'\n}\n\nexport default withTheme(Button)\n","import React from 'react'\nimport { css } from '@emotion/core'\n\nconst GenericProfile = p => {\n  const photo = theme => css`\n    border-radius: ${theme.margins.profileRadius} !important;\n    max-width: ${theme.margins.profile};\n    max-height: ${theme.margins.profile};\n  `\n  return (\n    <img css={photo} src={p.img} alt={p.alt} />\n  )\n}\n\nexport const Profile = p => (\n  <GenericProfile img=\"https://avatars3.githubusercontent.com/u/7284672?s=460&v=4\"\n                  alt=\"Jaxson Van Doorn\"\n                  {...p} />\n)\n\nexport const AboutProfile = p => {\n  const shift = css`\n    float: right;\n    display: block;\n    @media screen and (max-width: 700px) {\n      float: none;\n      margin: 1em auto !important;\n      text-align: center;\n    }\n  `\n  return <span css={shift}><Profile {...p} />{p.children}</span>\n}\n"],"sourceRoot":""}