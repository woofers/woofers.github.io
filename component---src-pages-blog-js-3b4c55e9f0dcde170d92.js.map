{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./src/components/title.js","webpack:///./src/components/page.js","webpack:///./src/components/content.js"],"names":["org","theme","css","margins","small","BlogIndex","sortedPosts","posts","this","props","data","allOrgContent","edges","date","node","meta","sort","a","b","func","safeCompare","Date","render","siteMeta","site","siteMetadata","title","nav","_posts","map","_ref","path","fields","include","blog","startsWith","preview","cheerio","load","html","find","remove","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_4__","marginBottom","medium","key","superSmall","gatsby__WEBPACK_IMPORTED_MODULE_6__","lineHeight","fonts","large","to","style","fontWeight","length","_components_content__WEBPACK_IMPORTED_MODULE_9__","color","colors","text","aria-label","continueReading","_components_page__WEBPACK_IMPORTED_MODULE_8__","React","Component","pageQuery","Title","p","core_browser_esm","Helmet_default","property","content","children","Page","title_Title","Content","hide","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","hideTitle","dangerouslySetInnerHTML","__html"],"mappings":"4SAOA,IAAMA,EAAM,SAAAC,GAAK,OAAIC,aAAJ,sBAEID,EAAME,QAAQC,MAFlB,OAMXC,0LACJC,YAAA,WACE,IAAIC,EAAQC,KAAKC,MAAMC,KAAKC,cAAcC,MACpCC,EAAO,SAACC,GAAD,OAAUA,EAAKC,KAAOD,EAAKC,KAAKF,KAAO,IAMpD,OAHAN,EAAMS,KAAK,SAASC,EAAGC,GACrB,OAHkB,SAACD,EAAGC,EAAGC,GAAP,OACjBF,GAAKC,EAAOD,EAASC,GAASC,EAAKF,EAAGC,GAAK,GAAjB,EAAV,EAAqC,EAE/CE,CAAYP,EAAKI,EAAEH,MAAOD,EAAKK,EAAEJ,MAAO,SAACG,EAAGC,GAAJ,OAAU,IAAIG,KAAKJ,GAAK,IAAII,KAAKH,OAE3EX,KAGTe,OAAA,WACE,IACMC,EAAWf,KAAKC,MAAMC,KAAKc,KAAKC,aAChCD,EAAOD,EAASG,MAChBC,EAAMJ,EAASI,IACfC,EAASpB,KAAKF,cAAcuB,IAAK,SAAAC,GAAc,IAAXhB,EAAWgB,EAAXhB,KAClCiB,EAAOjB,EAAKkB,OAAOD,KACnBhB,EAAOD,EAAKC,KACZW,EAAQX,EAAKW,OAASK,EACtBE,EAAUN,EAAIO,KACdrB,EAAOE,EAAKF,KAClB,IAAKkB,IAASA,EAAKI,WAAWF,GAAU,OAAO,KAC/C,IAAIG,EAAUC,IAAQC,KAAKxB,EAAKyB,KAAlBF,CAAwB,IAAK,QAE3C,OADAD,EAAQI,KAAK,MAAMC,SAEjBC,OAAAC,EAAA,IAAAD,CAAA,OAAKxC,IAAM,SAAAD,GAAK,MAAK,CAAE2C,aAAc3C,EAAME,QAAQ0C,SAAYC,IAAKf,GAClEW,OAAAC,EAAA,IAAAD,CAAA,MAAIxC,IAAM,SAAAD,GAAK,MAAK,CAAE2C,aAAc3C,EAAME,QAAQ4C,cAChDL,OAAAC,EAAA,IAAAD,CAACM,EAAA,KAAD,CAAM9C,IAAM,SAAAD,GAAK,MAAK,CAAEgD,WAAYhD,EAAMiD,MAAMC,QAAWC,GAAItC,EAAKkB,OAAOD,MAAOL,IAEnFb,EAAO6B,OAAAC,EAAA,IAAAD,CAAA,QAAMW,MAAO,CAAEC,WAAY,SAAWzC,GAAe,KAC3DuB,EAAQmB,OACRb,OAAAC,EAAA,IAAAD,CAAA,WACEA,OAAAC,EAAA,IAAAD,CAACc,EAAA,EAAD,CAASjB,KAAMH,EAAQG,SACvBG,OAAAC,EAAA,IAAAD,CAACM,EAAA,KAAD,CAAM9C,IAAM,SAAAD,GAAK,MAAK,CAAEwD,MAAUxD,EAAMyD,OAAOC,KAAlB,gBAAyCP,GAAItC,EAAKkB,OAAOD,KAChF6B,aAAeC,oBAAmBnC,GAvB1B,mBAsBd,WAIM,QAIhB,OACEgB,OAAAC,EAAA,IAAAD,CAACoB,EAAA,EAAD,CAAMpC,MAAM,QAAQF,KAAMA,GACxBkB,OAAAC,EAAA,IAAAD,CAAA,OAAKxC,IAAKF,GACP4B,QA9CamC,IAAMC,WAqDf3D,YAER,IAAM4D,EAAS,iFC5DTC,EAAQ,SAAAC,GAAC,OACpBzB,OAAA0B,EAAA,IAAA1B,CAAA,WACEA,OAAA0B,EAAA,IAAA1B,CAAC2B,EAAApD,EAAD,KACEyB,OAAA0B,EAAA,IAAA1B,CAAA,QAAM4B,SAAS,WAAWC,QAASJ,EAAEzC,QACrCgB,OAAA0B,EAAA,IAAA1B,CAAA,cATahB,EASKyC,EAAEzC,MATAF,EASO2C,EAAE3C,KAR5BE,EACKA,EAAV,MAAqBF,EADFA,KAUhB2C,EAAEK,UAXW,IAAC9C,EAAOF,mCCAnB,IAAMiD,EAAO,SAAAN,GAAC,OACnBzB,OAAA0B,EAAA,IAAA1B,CAACgC,EAAD,CAAOhD,MAAOyC,EAAEzC,MAAOF,KAAM2C,EAAE3C,MAC7BkB,OAAA0B,EAAA,IAAA1B,CAAA,eACGyB,EAAEK,qKCHIG,EAAU,SAAAR,GACrB,IAAMS,EAAI9C,EAYV,OACEY,OAAAmC,EAAA,IAAAnC,CAAA,OAAKxC,IARK,SAAAD,GAAK,OAAIC,aAAJ,CACbiE,EAAEW,UAAYF,EAAO,GADR,sBAGI3E,EAAME,QAAQC,MAHlB,yBASZ2E,wBAAyB,CAAEC,OAAQb,EAAE5B","file":"component---src-pages-blog-js-3b4c55e9f0dcde170d92.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport { css } from '@emotion/core'\nimport cheerio from 'cheerio'\nimport { Page } from '../components/page'\nimport { Content } from '../components/content'\n\nconst org = theme => css`\n  div {\n    margin-bottom: ${theme.margins.small};\n  }\n`\n\nclass BlogIndex extends React.Component {\n  sortedPosts() {\n    let posts = this.props.data.allOrgContent.edges\n    const date = (node) => node.meta ? node.meta.date : ''\n    const safeCompare = (a, b, func) =>\n      (a || b) ? (!a ? 1 : !b ? -1 : func(a, b) ? 1 : -1) : 0;\n    posts.sort(function(a, b) {\n      return safeCompare(date(a.node), date(b.node), (a, b) => new Date(a) < new Date(b));\n    });\n    return posts\n  }\n\n  render() {\n    const continueReading = 'Continue reading'\n    const siteMeta = this.props.data.site.siteMetadata\n    const site = siteMeta.title\n    const nav = siteMeta.nav\n    const _posts = this.sortedPosts().map (({ node }) => {\n      const path = node.fields.path\n      const meta = node.meta\n      const title = meta.title || path\n      const include = nav.blog\n      const date = meta.date\n      if (!path || !path.startsWith(include)) return null\n      let preview = cheerio.load(node.html)('p', 'body')\n      preview.find('h1').remove()\n      return (\n        <div css={ theme => ({ marginBottom: theme.margins.medium }) } key={path}>\n          <h1 css={ theme => ({ marginBottom: theme.margins.superSmall }) }>\n            <Link css={ theme => ({ lineHeight: theme.fonts.large }) } to={node.fields.path}>{title}</Link>\n          </h1>\n          {date ? <span style={{ fontWeight: 'bold' }}>{date}</span> : null }\n          { preview.length ?\n            <div>\n              <Content html={preview.html()} />\n              <Link css={ theme => ({ color: `${theme.colors.text} !important` }) } to={node.fields.path}\n                    aria-label={`${continueReading} ${title}`}>\n                  {continueReading} . . .\n              </Link>\n            </div>: null}\n        </div>\n      )\n    })\n    return (\n      <Page title='Posts' site={site}>\n        <div css={org}>\n          {_posts}\n        </div>\n      </Page>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  {\n    ...Title\n    ...Nav\n    allOrgContent {\n      edges {\n        node {\n          ...Content\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\nconst makeTitle = (title, site) => {\n  if (!title) return site\n  return `${title} - ${site}`\n}\n\nexport const Title = p => (\n  <div>\n    <Helmet>\n      <meta property=\"og:title\" content={p.title} />\n      <title>{makeTitle(p.title, p.site)}</title>\n    </Helmet>\n    {p.children}\n  </div>\n)\n","import React from 'react'\nimport { Title } from '../components/title'\n\nexport const Page = p => (\n  <Title title={p.title} site={p.site}>\n    <article>\n      {p.children}\n    </article>\n  </Title>\n)\n","import React from 'react'\nimport { css } from '@emotion/core'\n\nexport const Content = p => {\n  const hide = css`\n    div:first-of-type h1 {\n      display: none;\n    }\n  `\n  const org = theme => css`\n    ${p.hideTitle ? hide : ''}\n    div {\n      margin-bottom: ${theme.margins.small};\n      text-align: 'left';\n    }\n  `\n  return (\n    <div css={org}\n       dangerouslySetInnerHTML={{ __html: p.html }} />\n  )\n}\n"],"sourceRoot":""}